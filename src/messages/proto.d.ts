import * as $protobuf from "protobufjs";
/** Namespace cosmwasm. */
export namespace cosmwasm {

    /** Namespace wasm. */
    namespace wasm {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryContractInfoRequest. */
            interface IQueryContractInfoRequest {

                /** QueryContractInfoRequest address */
                address?: (string|null);
            }

            /** Represents a QueryContractInfoRequest. */
            class QueryContractInfoRequest implements IQueryContractInfoRequest {

                /**
                 * Constructs a new QueryContractInfoRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractInfoRequest);

                /** QueryContractInfoRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryContractInfoRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractInfoRequest.verify|verify} messages.
                 * @param m QueryContractInfoRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractInfoRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractInfoRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractInfoRequest;
            }

            /** Properties of a QueryContractInfoResponse. */
            interface IQueryContractInfoResponse {

                /** QueryContractInfoResponse address */
                address?: (string|null);

                /** QueryContractInfoResponse contract_info */
                contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);
            }

            /** Represents a QueryContractInfoResponse. */
            class QueryContractInfoResponse implements IQueryContractInfoResponse {

                /**
                 * Constructs a new QueryContractInfoResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractInfoResponse);

                /** QueryContractInfoResponse address. */
                public address: string;

                /** QueryContractInfoResponse contract_info. */
                public contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);

                /**
                 * Encodes the specified QueryContractInfoResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractInfoResponse.verify|verify} messages.
                 * @param m QueryContractInfoResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractInfoResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractInfoResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractInfoResponse;
            }

            /** Properties of a QueryContractHistoryRequest. */
            interface IQueryContractHistoryRequest {

                /** QueryContractHistoryRequest address */
                address?: (string|null);

                /** QueryContractHistoryRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryContractHistoryRequest. */
            class QueryContractHistoryRequest implements IQueryContractHistoryRequest {

                /**
                 * Constructs a new QueryContractHistoryRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractHistoryRequest);

                /** QueryContractHistoryRequest address. */
                public address: string;

                /** QueryContractHistoryRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryContractHistoryRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractHistoryRequest.verify|verify} messages.
                 * @param m QueryContractHistoryRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractHistoryRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractHistoryRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractHistoryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractHistoryRequest;
            }

            /** Properties of a QueryContractHistoryResponse. */
            interface IQueryContractHistoryResponse {

                /** QueryContractHistoryResponse entries */
                entries?: (cosmwasm.wasm.v1beta1.IContractCodeHistoryEntry[]|null);

                /** QueryContractHistoryResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryContractHistoryResponse. */
            class QueryContractHistoryResponse implements IQueryContractHistoryResponse {

                /**
                 * Constructs a new QueryContractHistoryResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractHistoryResponse);

                /** QueryContractHistoryResponse entries. */
                public entries: cosmwasm.wasm.v1beta1.IContractCodeHistoryEntry[];

                /** QueryContractHistoryResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryContractHistoryResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractHistoryResponse.verify|verify} messages.
                 * @param m QueryContractHistoryResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractHistoryResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractHistoryResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractHistoryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractHistoryResponse;
            }

            /** Properties of a QueryContractsByCodeRequest. */
            interface IQueryContractsByCodeRequest {

                /** QueryContractsByCodeRequest code_id */
                code_id?: (Long|null);

                /** QueryContractsByCodeRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryContractsByCodeRequest. */
            class QueryContractsByCodeRequest implements IQueryContractsByCodeRequest {

                /**
                 * Constructs a new QueryContractsByCodeRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractsByCodeRequest);

                /** QueryContractsByCodeRequest code_id. */
                public code_id: Long;

                /** QueryContractsByCodeRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryContractsByCodeRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractsByCodeRequest.verify|verify} messages.
                 * @param m QueryContractsByCodeRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractsByCodeRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractsByCodeRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractsByCodeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractsByCodeRequest;
            }

            /** Properties of a ContractInfoWithAddress. */
            interface IContractInfoWithAddress {

                /** ContractInfoWithAddress address */
                address?: (string|null);

                /** ContractInfoWithAddress contract_info */
                contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);
            }

            /** Represents a ContractInfoWithAddress. */
            class ContractInfoWithAddress implements IContractInfoWithAddress {

                /**
                 * Constructs a new ContractInfoWithAddress.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IContractInfoWithAddress);

                /** ContractInfoWithAddress address. */
                public address: string;

                /** ContractInfoWithAddress contract_info. */
                public contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);

                /**
                 * Encodes the specified ContractInfoWithAddress message. Does not implicitly {@link cosmwasm.wasm.v1beta1.ContractInfoWithAddress.verify|verify} messages.
                 * @param m ContractInfoWithAddress message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IContractInfoWithAddress, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractInfoWithAddress message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ContractInfoWithAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.ContractInfoWithAddress;
            }

            /** Properties of a QueryContractsByCodeResponse. */
            interface IQueryContractsByCodeResponse {

                /** QueryContractsByCodeResponse contract_infos */
                contract_infos?: (cosmwasm.wasm.v1beta1.IContractInfoWithAddress[]|null);

                /** QueryContractsByCodeResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryContractsByCodeResponse. */
            class QueryContractsByCodeResponse implements IQueryContractsByCodeResponse {

                /**
                 * Constructs a new QueryContractsByCodeResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryContractsByCodeResponse);

                /** QueryContractsByCodeResponse contract_infos. */
                public contract_infos: cosmwasm.wasm.v1beta1.IContractInfoWithAddress[];

                /** QueryContractsByCodeResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryContractsByCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryContractsByCodeResponse.verify|verify} messages.
                 * @param m QueryContractsByCodeResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryContractsByCodeResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractsByCodeResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryContractsByCodeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryContractsByCodeResponse;
            }

            /** Properties of a QueryAllContractStateRequest. */
            interface IQueryAllContractStateRequest {

                /** QueryAllContractStateRequest address */
                address?: (string|null);

                /** QueryAllContractStateRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryAllContractStateRequest. */
            class QueryAllContractStateRequest implements IQueryAllContractStateRequest {

                /**
                 * Constructs a new QueryAllContractStateRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryAllContractStateRequest);

                /** QueryAllContractStateRequest address. */
                public address: string;

                /** QueryAllContractStateRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryAllContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryAllContractStateRequest.verify|verify} messages.
                 * @param m QueryAllContractStateRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryAllContractStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllContractStateRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllContractStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryAllContractStateRequest;
            }

            /** Properties of a QueryAllContractStateResponse. */
            interface IQueryAllContractStateResponse {

                /** QueryAllContractStateResponse models */
                models?: (cosmwasm.wasm.v1beta1.IModel[]|null);

                /** QueryAllContractStateResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryAllContractStateResponse. */
            class QueryAllContractStateResponse implements IQueryAllContractStateResponse {

                /**
                 * Constructs a new QueryAllContractStateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryAllContractStateResponse);

                /** QueryAllContractStateResponse models. */
                public models: cosmwasm.wasm.v1beta1.IModel[];

                /** QueryAllContractStateResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryAllContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryAllContractStateResponse.verify|verify} messages.
                 * @param m QueryAllContractStateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryAllContractStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllContractStateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllContractStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryAllContractStateResponse;
            }

            /** Properties of a QueryRawContractStateRequest. */
            interface IQueryRawContractStateRequest {

                /** QueryRawContractStateRequest address */
                address?: (string|null);

                /** QueryRawContractStateRequest query_data */
                query_data?: (Uint8Array|null);
            }

            /** Represents a QueryRawContractStateRequest. */
            class QueryRawContractStateRequest implements IQueryRawContractStateRequest {

                /**
                 * Constructs a new QueryRawContractStateRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryRawContractStateRequest);

                /** QueryRawContractStateRequest address. */
                public address: string;

                /** QueryRawContractStateRequest query_data. */
                public query_data: Uint8Array;

                /**
                 * Encodes the specified QueryRawContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryRawContractStateRequest.verify|verify} messages.
                 * @param m QueryRawContractStateRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryRawContractStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRawContractStateRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRawContractStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryRawContractStateRequest;
            }

            /** Properties of a QueryRawContractStateResponse. */
            interface IQueryRawContractStateResponse {

                /** QueryRawContractStateResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a QueryRawContractStateResponse. */
            class QueryRawContractStateResponse implements IQueryRawContractStateResponse {

                /**
                 * Constructs a new QueryRawContractStateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryRawContractStateResponse);

                /** QueryRawContractStateResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified QueryRawContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryRawContractStateResponse.verify|verify} messages.
                 * @param m QueryRawContractStateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryRawContractStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRawContractStateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRawContractStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryRawContractStateResponse;
            }

            /** Properties of a QuerySmartContractStateRequest. */
            interface IQuerySmartContractStateRequest {

                /** QuerySmartContractStateRequest address */
                address?: (string|null);

                /** QuerySmartContractStateRequest query_data */
                query_data?: (Uint8Array|null);
            }

            /** Represents a QuerySmartContractStateRequest. */
            class QuerySmartContractStateRequest implements IQuerySmartContractStateRequest {

                /**
                 * Constructs a new QuerySmartContractStateRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQuerySmartContractStateRequest);

                /** QuerySmartContractStateRequest address. */
                public address: string;

                /** QuerySmartContractStateRequest query_data. */
                public query_data: Uint8Array;

                /**
                 * Encodes the specified QuerySmartContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QuerySmartContractStateRequest.verify|verify} messages.
                 * @param m QuerySmartContractStateRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQuerySmartContractStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySmartContractStateRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySmartContractStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QuerySmartContractStateRequest;
            }

            /** Properties of a QuerySmartContractStateResponse. */
            interface IQuerySmartContractStateResponse {

                /** QuerySmartContractStateResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a QuerySmartContractStateResponse. */
            class QuerySmartContractStateResponse implements IQuerySmartContractStateResponse {

                /**
                 * Constructs a new QuerySmartContractStateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQuerySmartContractStateResponse);

                /** QuerySmartContractStateResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified QuerySmartContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QuerySmartContractStateResponse.verify|verify} messages.
                 * @param m QuerySmartContractStateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQuerySmartContractStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySmartContractStateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySmartContractStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QuerySmartContractStateResponse;
            }

            /** Properties of a QueryCodeRequest. */
            interface IQueryCodeRequest {

                /** QueryCodeRequest code_id */
                code_id?: (Long|null);
            }

            /** Represents a QueryCodeRequest. */
            class QueryCodeRequest implements IQueryCodeRequest {

                /**
                 * Constructs a new QueryCodeRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryCodeRequest);

                /** QueryCodeRequest code_id. */
                public code_id: Long;

                /**
                 * Encodes the specified QueryCodeRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryCodeRequest.verify|verify} messages.
                 * @param m QueryCodeRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryCodeRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCodeRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCodeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryCodeRequest;
            }

            /** Properties of a CodeInfoResponse. */
            interface ICodeInfoResponse {

                /** CodeInfoResponse code_id */
                code_id?: (Long|null);

                /** CodeInfoResponse creator */
                creator?: (string|null);

                /** CodeInfoResponse data_hash */
                data_hash?: (Uint8Array|null);

                /** CodeInfoResponse source */
                source?: (string|null);

                /** CodeInfoResponse builder */
                builder?: (string|null);
            }

            /** Represents a CodeInfoResponse. */
            class CodeInfoResponse implements ICodeInfoResponse {

                /**
                 * Constructs a new CodeInfoResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.ICodeInfoResponse);

                /** CodeInfoResponse code_id. */
                public code_id: Long;

                /** CodeInfoResponse creator. */
                public creator: string;

                /** CodeInfoResponse data_hash. */
                public data_hash: Uint8Array;

                /** CodeInfoResponse source. */
                public source: string;

                /** CodeInfoResponse builder. */
                public builder: string;

                /**
                 * Encodes the specified CodeInfoResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.CodeInfoResponse.verify|verify} messages.
                 * @param m CodeInfoResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.ICodeInfoResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CodeInfoResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CodeInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.CodeInfoResponse;
            }

            /** Properties of a QueryCodeResponse. */
            interface IQueryCodeResponse {

                /** QueryCodeResponse code_info */
                code_info?: (cosmwasm.wasm.v1beta1.ICodeInfoResponse|null);

                /** QueryCodeResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a QueryCodeResponse. */
            class QueryCodeResponse implements IQueryCodeResponse {

                /**
                 * Constructs a new QueryCodeResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryCodeResponse);

                /** QueryCodeResponse code_info. */
                public code_info?: (cosmwasm.wasm.v1beta1.ICodeInfoResponse|null);

                /** QueryCodeResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified QueryCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryCodeResponse.verify|verify} messages.
                 * @param m QueryCodeResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryCodeResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCodeResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCodeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryCodeResponse;
            }

            /** Properties of a QueryCodesRequest. */
            interface IQueryCodesRequest {

                /** QueryCodesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryCodesRequest. */
            class QueryCodesRequest implements IQueryCodesRequest {

                /**
                 * Constructs a new QueryCodesRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryCodesRequest);

                /** QueryCodesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryCodesRequest message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryCodesRequest.verify|verify} messages.
                 * @param m QueryCodesRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryCodesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCodesRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCodesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryCodesRequest;
            }

            /** Properties of a QueryCodesResponse. */
            interface IQueryCodesResponse {

                /** QueryCodesResponse code_infos */
                code_infos?: (cosmwasm.wasm.v1beta1.ICodeInfoResponse[]|null);

                /** QueryCodesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryCodesResponse. */
            class QueryCodesResponse implements IQueryCodesResponse {

                /**
                 * Constructs a new QueryCodesResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IQueryCodesResponse);

                /** QueryCodesResponse code_infos. */
                public code_infos: cosmwasm.wasm.v1beta1.ICodeInfoResponse[];

                /** QueryCodesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryCodesResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.QueryCodesResponse.verify|verify} messages.
                 * @param m QueryCodesResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IQueryCodesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCodesResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCodesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.QueryCodesResponse;
            }

            /** Properties of a StoreCodeProposal. */
            interface IStoreCodeProposal {

                /** StoreCodeProposal title */
                title?: (string|null);

                /** StoreCodeProposal description */
                description?: (string|null);

                /** StoreCodeProposal run_as */
                run_as?: (string|null);

                /** StoreCodeProposal wasm_byte_code */
                wasm_byte_code?: (Uint8Array|null);

                /** StoreCodeProposal source */
                source?: (string|null);

                /** StoreCodeProposal builder */
                builder?: (string|null);

                /** StoreCodeProposal instantiate_permission */
                instantiate_permission?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);
            }

            /** Represents a StoreCodeProposal. */
            class StoreCodeProposal implements IStoreCodeProposal {

                /**
                 * Constructs a new StoreCodeProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IStoreCodeProposal);

                /** StoreCodeProposal title. */
                public title: string;

                /** StoreCodeProposal description. */
                public description: string;

                /** StoreCodeProposal run_as. */
                public run_as: string;

                /** StoreCodeProposal wasm_byte_code. */
                public wasm_byte_code: Uint8Array;

                /** StoreCodeProposal source. */
                public source: string;

                /** StoreCodeProposal builder. */
                public builder: string;

                /** StoreCodeProposal instantiate_permission. */
                public instantiate_permission?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);

                /**
                 * Encodes the specified StoreCodeProposal message. Does not implicitly {@link cosmwasm.wasm.v1beta1.StoreCodeProposal.verify|verify} messages.
                 * @param m StoreCodeProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IStoreCodeProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StoreCodeProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns StoreCodeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.StoreCodeProposal;
            }

            /** Properties of an InstantiateContractProposal. */
            interface IInstantiateContractProposal {

                /** InstantiateContractProposal title */
                title?: (string|null);

                /** InstantiateContractProposal description */
                description?: (string|null);

                /** InstantiateContractProposal run_as */
                run_as?: (string|null);

                /** InstantiateContractProposal admin */
                admin?: (string|null);

                /** InstantiateContractProposal code_id */
                code_id?: (Long|null);

                /** InstantiateContractProposal label */
                label?: (string|null);

                /** InstantiateContractProposal init_msg */
                init_msg?: (Uint8Array|null);

                /** InstantiateContractProposal init_funds */
                init_funds?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an InstantiateContractProposal. */
            class InstantiateContractProposal implements IInstantiateContractProposal {

                /**
                 * Constructs a new InstantiateContractProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IInstantiateContractProposal);

                /** InstantiateContractProposal title. */
                public title: string;

                /** InstantiateContractProposal description. */
                public description: string;

                /** InstantiateContractProposal run_as. */
                public run_as: string;

                /** InstantiateContractProposal admin. */
                public admin: string;

                /** InstantiateContractProposal code_id. */
                public code_id: Long;

                /** InstantiateContractProposal label. */
                public label: string;

                /** InstantiateContractProposal init_msg. */
                public init_msg: Uint8Array;

                /** InstantiateContractProposal init_funds. */
                public init_funds: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified InstantiateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1beta1.InstantiateContractProposal.verify|verify} messages.
                 * @param m InstantiateContractProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IInstantiateContractProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InstantiateContractProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns InstantiateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.InstantiateContractProposal;
            }

            /** Properties of a MigrateContractProposal. */
            interface IMigrateContractProposal {

                /** MigrateContractProposal title */
                title?: (string|null);

                /** MigrateContractProposal description */
                description?: (string|null);

                /** MigrateContractProposal run_as */
                run_as?: (string|null);

                /** MigrateContractProposal contract */
                contract?: (string|null);

                /** MigrateContractProposal code_id */
                code_id?: (Long|null);

                /** MigrateContractProposal migrate_msg */
                migrate_msg?: (Uint8Array|null);
            }

            /** Represents a MigrateContractProposal. */
            class MigrateContractProposal implements IMigrateContractProposal {

                /**
                 * Constructs a new MigrateContractProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMigrateContractProposal);

                /** MigrateContractProposal title. */
                public title: string;

                /** MigrateContractProposal description. */
                public description: string;

                /** MigrateContractProposal run_as. */
                public run_as: string;

                /** MigrateContractProposal contract. */
                public contract: string;

                /** MigrateContractProposal code_id. */
                public code_id: Long;

                /** MigrateContractProposal migrate_msg. */
                public migrate_msg: Uint8Array;

                /**
                 * Encodes the specified MigrateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MigrateContractProposal.verify|verify} messages.
                 * @param m MigrateContractProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMigrateContractProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MigrateContractProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MigrateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MigrateContractProposal;
            }

            /** Properties of an UpdateAdminProposal. */
            interface IUpdateAdminProposal {

                /** UpdateAdminProposal title */
                title?: (string|null);

                /** UpdateAdminProposal description */
                description?: (string|null);

                /** UpdateAdminProposal new_admin */
                new_admin?: (string|null);

                /** UpdateAdminProposal contract */
                contract?: (string|null);
            }

            /** Represents an UpdateAdminProposal. */
            class UpdateAdminProposal implements IUpdateAdminProposal {

                /**
                 * Constructs a new UpdateAdminProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IUpdateAdminProposal);

                /** UpdateAdminProposal title. */
                public title: string;

                /** UpdateAdminProposal description. */
                public description: string;

                /** UpdateAdminProposal new_admin. */
                public new_admin: string;

                /** UpdateAdminProposal contract. */
                public contract: string;

                /**
                 * Encodes the specified UpdateAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1beta1.UpdateAdminProposal.verify|verify} messages.
                 * @param m UpdateAdminProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IUpdateAdminProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateAdminProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns UpdateAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.UpdateAdminProposal;
            }

            /** Properties of a ClearAdminProposal. */
            interface IClearAdminProposal {

                /** ClearAdminProposal title */
                title?: (string|null);

                /** ClearAdminProposal description */
                description?: (string|null);

                /** ClearAdminProposal contract */
                contract?: (string|null);
            }

            /** Represents a ClearAdminProposal. */
            class ClearAdminProposal implements IClearAdminProposal {

                /**
                 * Constructs a new ClearAdminProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IClearAdminProposal);

                /** ClearAdminProposal title. */
                public title: string;

                /** ClearAdminProposal description. */
                public description: string;

                /** ClearAdminProposal contract. */
                public contract: string;

                /**
                 * Encodes the specified ClearAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1beta1.ClearAdminProposal.verify|verify} messages.
                 * @param m ClearAdminProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IClearAdminProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ClearAdminProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ClearAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.ClearAdminProposal;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmwasm.wasm.v1beta1.IParams|null);

                /** GenesisState codes */
                codes?: (cosmwasm.wasm.v1beta1.ICode[]|null);

                /** GenesisState contracts */
                contracts?: (cosmwasm.wasm.v1beta1.IContract[]|null);

                /** GenesisState sequences */
                sequences?: (cosmwasm.wasm.v1beta1.ISequence[]|null);

                /** GenesisState gen_msgs */
                gen_msgs?: (cosmwasm.wasm.v1beta1.GenesisState.IGenMsgs[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmwasm.wasm.v1beta1.IParams|null);

                /** GenesisState codes. */
                public codes: cosmwasm.wasm.v1beta1.ICode[];

                /** GenesisState contracts. */
                public contracts: cosmwasm.wasm.v1beta1.IContract[];

                /** GenesisState sequences. */
                public sequences: cosmwasm.wasm.v1beta1.ISequence[];

                /** GenesisState gen_msgs. */
                public gen_msgs: cosmwasm.wasm.v1beta1.GenesisState.IGenMsgs[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmwasm.wasm.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.GenesisState;
            }

            namespace GenesisState {

                /** Properties of a GenMsgs. */
                interface IGenMsgs {

                    /** GenMsgs store_code */
                    store_code?: (cosmwasm.wasm.v1beta1.IMsgStoreCode|null);

                    /** GenMsgs instantiate_contract */
                    instantiate_contract?: (cosmwasm.wasm.v1beta1.IMsgInstantiateContract|null);

                    /** GenMsgs execute_contract */
                    execute_contract?: (cosmwasm.wasm.v1beta1.IMsgExecuteContract|null);
                }

                /** Represents a GenMsgs. */
                class GenMsgs implements IGenMsgs {

                    /**
                     * Constructs a new GenMsgs.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmwasm.wasm.v1beta1.GenesisState.IGenMsgs);

                    /** GenMsgs store_code. */
                    public store_code?: (cosmwasm.wasm.v1beta1.IMsgStoreCode|null);

                    /** GenMsgs instantiate_contract. */
                    public instantiate_contract?: (cosmwasm.wasm.v1beta1.IMsgInstantiateContract|null);

                    /** GenMsgs execute_contract. */
                    public execute_contract?: (cosmwasm.wasm.v1beta1.IMsgExecuteContract|null);

                    /** GenMsgs sum. */
                    public sum?: ("store_code"|"instantiate_contract"|"execute_contract");

                    /**
                     * Encodes the specified GenMsgs message. Does not implicitly {@link cosmwasm.wasm.v1beta1.GenesisState.GenMsgs.verify|verify} messages.
                     * @param m GenMsgs message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmwasm.wasm.v1beta1.GenesisState.IGenMsgs, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenMsgs message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenMsgs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.GenesisState.GenMsgs;
                }
            }

            /** Properties of a Code. */
            interface ICode {

                /** Code code_id */
                code_id?: (Long|null);

                /** Code code_info */
                code_info?: (cosmwasm.wasm.v1beta1.ICodeInfo|null);

                /** Code code_bytes */
                code_bytes?: (Uint8Array|null);
            }

            /** Represents a Code. */
            class Code implements ICode {

                /**
                 * Constructs a new Code.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.ICode);

                /** Code code_id. */
                public code_id: Long;

                /** Code code_info. */
                public code_info?: (cosmwasm.wasm.v1beta1.ICodeInfo|null);

                /** Code code_bytes. */
                public code_bytes: Uint8Array;

                /**
                 * Encodes the specified Code message. Does not implicitly {@link cosmwasm.wasm.v1beta1.Code.verify|verify} messages.
                 * @param m Code message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.ICode, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Code message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Code
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.Code;
            }

            /** Properties of a Contract. */
            interface IContract {

                /** Contract contract_address */
                contract_address?: (string|null);

                /** Contract contract_info */
                contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);

                /** Contract contract_state */
                contract_state?: (cosmwasm.wasm.v1beta1.IModel[]|null);
            }

            /** Represents a Contract. */
            class Contract implements IContract {

                /**
                 * Constructs a new Contract.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IContract);

                /** Contract contract_address. */
                public contract_address: string;

                /** Contract contract_info. */
                public contract_info?: (cosmwasm.wasm.v1beta1.IContractInfo|null);

                /** Contract contract_state. */
                public contract_state: cosmwasm.wasm.v1beta1.IModel[];

                /**
                 * Encodes the specified Contract message. Does not implicitly {@link cosmwasm.wasm.v1beta1.Contract.verify|verify} messages.
                 * @param m Contract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Contract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Contract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.Contract;
            }

            /** Properties of a Sequence. */
            interface ISequence {

                /** Sequence id_key */
                id_key?: (Uint8Array|null);

                /** Sequence value */
                value?: (Long|null);
            }

            /** Represents a Sequence. */
            class Sequence implements ISequence {

                /**
                 * Constructs a new Sequence.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.ISequence);

                /** Sequence id_key. */
                public id_key: Uint8Array;

                /** Sequence value. */
                public value: Long;

                /**
                 * Encodes the specified Sequence message. Does not implicitly {@link cosmwasm.wasm.v1beta1.Sequence.verify|verify} messages.
                 * @param m Sequence message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.ISequence, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Sequence message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Sequence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.Sequence;
            }

            /** Properties of a MsgStoreCode. */
            interface IMsgStoreCode {

                /** MsgStoreCode sender */
                sender?: (string|null);

                /** MsgStoreCode wasm_byte_code */
                wasm_byte_code?: (Uint8Array|null);

                /** MsgStoreCode source */
                source?: (string|null);

                /** MsgStoreCode builder */
                builder?: (string|null);

                /** MsgStoreCode instantiate_permission */
                instantiate_permission?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);
            }

            /** Represents a MsgStoreCode. */
            class MsgStoreCode implements IMsgStoreCode {

                /**
                 * Constructs a new MsgStoreCode.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgStoreCode);

                /** MsgStoreCode sender. */
                public sender: string;

                /** MsgStoreCode wasm_byte_code. */
                public wasm_byte_code: Uint8Array;

                /** MsgStoreCode source. */
                public source: string;

                /** MsgStoreCode builder. */
                public builder: string;

                /** MsgStoreCode instantiate_permission. */
                public instantiate_permission?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);

                /**
                 * Encodes the specified MsgStoreCode message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgStoreCode.verify|verify} messages.
                 * @param m MsgStoreCode message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgStoreCode, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgStoreCode message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgStoreCode
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgStoreCode;
            }

            /** Properties of a MsgStoreCodeResponse. */
            interface IMsgStoreCodeResponse {

                /** MsgStoreCodeResponse code_id */
                code_id?: (Long|null);
            }

            /** Represents a MsgStoreCodeResponse. */
            class MsgStoreCodeResponse implements IMsgStoreCodeResponse {

                /**
                 * Constructs a new MsgStoreCodeResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgStoreCodeResponse);

                /** MsgStoreCodeResponse code_id. */
                public code_id: Long;

                /**
                 * Encodes the specified MsgStoreCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgStoreCodeResponse.verify|verify} messages.
                 * @param m MsgStoreCodeResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgStoreCodeResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgStoreCodeResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgStoreCodeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgStoreCodeResponse;
            }

            /** Properties of a MsgInstantiateContract. */
            interface IMsgInstantiateContract {

                /** MsgInstantiateContract sender */
                sender?: (string|null);

                /** MsgInstantiateContract admin */
                admin?: (string|null);

                /** MsgInstantiateContract code_id */
                code_id?: (Long|null);

                /** MsgInstantiateContract label */
                label?: (string|null);

                /** MsgInstantiateContract init_msg */
                init_msg?: (Uint8Array|null);

                /** MsgInstantiateContract init_funds */
                init_funds?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgInstantiateContract. */
            class MsgInstantiateContract implements IMsgInstantiateContract {

                /**
                 * Constructs a new MsgInstantiateContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgInstantiateContract);

                /** MsgInstantiateContract sender. */
                public sender: string;

                /** MsgInstantiateContract admin. */
                public admin: string;

                /** MsgInstantiateContract code_id. */
                public code_id: Long;

                /** MsgInstantiateContract label. */
                public label: string;

                /** MsgInstantiateContract init_msg. */
                public init_msg: Uint8Array;

                /** MsgInstantiateContract init_funds. */
                public init_funds: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgInstantiateContract message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgInstantiateContract.verify|verify} messages.
                 * @param m MsgInstantiateContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgInstantiateContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantiateContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgInstantiateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgInstantiateContract;
            }

            /** Properties of a MsgInstantiateContractResponse. */
            interface IMsgInstantiateContractResponse {

                /** MsgInstantiateContractResponse address */
                address?: (string|null);
            }

            /** Represents a MsgInstantiateContractResponse. */
            class MsgInstantiateContractResponse implements IMsgInstantiateContractResponse {

                /**
                 * Constructs a new MsgInstantiateContractResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgInstantiateContractResponse);

                /** MsgInstantiateContractResponse address. */
                public address: string;

                /**
                 * Encodes the specified MsgInstantiateContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgInstantiateContractResponse.verify|verify} messages.
                 * @param m MsgInstantiateContractResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgInstantiateContractResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantiateContractResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgInstantiateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgInstantiateContractResponse;
            }

            /** Properties of a MsgExecuteContract. */
            interface IMsgExecuteContract {

                /** MsgExecuteContract sender */
                sender?: (string|null);

                /** MsgExecuteContract contract */
                contract?: (string|null);

                /** MsgExecuteContract msg */
                msg?: (Uint8Array|null);

                /** MsgExecuteContract sent_funds */
                sent_funds?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgExecuteContract. */
            class MsgExecuteContract implements IMsgExecuteContract {

                /**
                 * Constructs a new MsgExecuteContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgExecuteContract);

                /** MsgExecuteContract sender. */
                public sender: string;

                /** MsgExecuteContract contract. */
                public contract: string;

                /** MsgExecuteContract msg. */
                public msg: Uint8Array;

                /** MsgExecuteContract sent_funds. */
                public sent_funds: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgExecuteContract message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgExecuteContract.verify|verify} messages.
                 * @param m MsgExecuteContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgExecuteContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExecuteContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgExecuteContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgExecuteContract;
            }

            /** Properties of a MsgExecuteContractResponse. */
            interface IMsgExecuteContractResponse {

                /** MsgExecuteContractResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a MsgExecuteContractResponse. */
            class MsgExecuteContractResponse implements IMsgExecuteContractResponse {

                /**
                 * Constructs a new MsgExecuteContractResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgExecuteContractResponse);

                /** MsgExecuteContractResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified MsgExecuteContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgExecuteContractResponse.verify|verify} messages.
                 * @param m MsgExecuteContractResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgExecuteContractResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExecuteContractResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgExecuteContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgExecuteContractResponse;
            }

            /** Properties of a MsgMigrateContract. */
            interface IMsgMigrateContract {

                /** MsgMigrateContract sender */
                sender?: (string|null);

                /** MsgMigrateContract contract */
                contract?: (string|null);

                /** MsgMigrateContract code_id */
                code_id?: (Long|null);

                /** MsgMigrateContract migrate_msg */
                migrate_msg?: (Uint8Array|null);
            }

            /** Represents a MsgMigrateContract. */
            class MsgMigrateContract implements IMsgMigrateContract {

                /**
                 * Constructs a new MsgMigrateContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgMigrateContract);

                /** MsgMigrateContract sender. */
                public sender: string;

                /** MsgMigrateContract contract. */
                public contract: string;

                /** MsgMigrateContract code_id. */
                public code_id: Long;

                /** MsgMigrateContract migrate_msg. */
                public migrate_msg: Uint8Array;

                /**
                 * Encodes the specified MsgMigrateContract message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgMigrateContract.verify|verify} messages.
                 * @param m MsgMigrateContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgMigrateContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMigrateContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgMigrateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgMigrateContract;
            }

            /** Properties of a MsgMigrateContractResponse. */
            interface IMsgMigrateContractResponse {

                /** MsgMigrateContractResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a MsgMigrateContractResponse. */
            class MsgMigrateContractResponse implements IMsgMigrateContractResponse {

                /**
                 * Constructs a new MsgMigrateContractResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgMigrateContractResponse);

                /** MsgMigrateContractResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified MsgMigrateContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgMigrateContractResponse.verify|verify} messages.
                 * @param m MsgMigrateContractResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgMigrateContractResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMigrateContractResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgMigrateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgMigrateContractResponse;
            }

            /** Properties of a MsgUpdateAdmin. */
            interface IMsgUpdateAdmin {

                /** MsgUpdateAdmin sender */
                sender?: (string|null);

                /** MsgUpdateAdmin new_admin */
                new_admin?: (string|null);

                /** MsgUpdateAdmin contract */
                contract?: (string|null);
            }

            /** Represents a MsgUpdateAdmin. */
            class MsgUpdateAdmin implements IMsgUpdateAdmin {

                /**
                 * Constructs a new MsgUpdateAdmin.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgUpdateAdmin);

                /** MsgUpdateAdmin sender. */
                public sender: string;

                /** MsgUpdateAdmin new_admin. */
                public new_admin: string;

                /** MsgUpdateAdmin contract. */
                public contract: string;

                /**
                 * Encodes the specified MsgUpdateAdmin message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgUpdateAdmin.verify|verify} messages.
                 * @param m MsgUpdateAdmin message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgUpdateAdmin, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateAdmin message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUpdateAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgUpdateAdmin;
            }

            /** Properties of a MsgUpdateAdminResponse. */
            interface IMsgUpdateAdminResponse {
            }

            /** Represents a MsgUpdateAdminResponse. */
            class MsgUpdateAdminResponse implements IMsgUpdateAdminResponse {

                /**
                 * Constructs a new MsgUpdateAdminResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgUpdateAdminResponse);

                /**
                 * Encodes the specified MsgUpdateAdminResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgUpdateAdminResponse.verify|verify} messages.
                 * @param m MsgUpdateAdminResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgUpdateAdminResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateAdminResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUpdateAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgUpdateAdminResponse;
            }

            /** Properties of a MsgClearAdmin. */
            interface IMsgClearAdmin {

                /** MsgClearAdmin sender */
                sender?: (string|null);

                /** MsgClearAdmin contract */
                contract?: (string|null);
            }

            /** Represents a MsgClearAdmin. */
            class MsgClearAdmin implements IMsgClearAdmin {

                /**
                 * Constructs a new MsgClearAdmin.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgClearAdmin);

                /** MsgClearAdmin sender. */
                public sender: string;

                /** MsgClearAdmin contract. */
                public contract: string;

                /**
                 * Encodes the specified MsgClearAdmin message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgClearAdmin.verify|verify} messages.
                 * @param m MsgClearAdmin message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgClearAdmin, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgClearAdmin message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgClearAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgClearAdmin;
            }

            /** Properties of a MsgClearAdminResponse. */
            interface IMsgClearAdminResponse {
            }

            /** Represents a MsgClearAdminResponse. */
            class MsgClearAdminResponse implements IMsgClearAdminResponse {

                /**
                 * Constructs a new MsgClearAdminResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IMsgClearAdminResponse);

                /**
                 * Encodes the specified MsgClearAdminResponse message. Does not implicitly {@link cosmwasm.wasm.v1beta1.MsgClearAdminResponse.verify|verify} messages.
                 * @param m MsgClearAdminResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IMsgClearAdminResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgClearAdminResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgClearAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.MsgClearAdminResponse;
            }

            /** AccessType enum. */
            enum AccessType {
                ACCESS_TYPE_UNSPECIFIED = 0,
                ACCESS_TYPE_NOBODY = 1,
                ACCESS_TYPE_ONLY_ADDRESS = 2,
                ACCESS_TYPE_EVERYBODY = 3
            }

            /** Properties of an AccessTypeParam. */
            interface IAccessTypeParam {

                /** AccessTypeParam value */
                value?: (cosmwasm.wasm.v1beta1.AccessType|null);
            }

            /** Represents an AccessTypeParam. */
            class AccessTypeParam implements IAccessTypeParam {

                /**
                 * Constructs a new AccessTypeParam.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IAccessTypeParam);

                /** AccessTypeParam value. */
                public value: cosmwasm.wasm.v1beta1.AccessType;

                /**
                 * Encodes the specified AccessTypeParam message. Does not implicitly {@link cosmwasm.wasm.v1beta1.AccessTypeParam.verify|verify} messages.
                 * @param m AccessTypeParam message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IAccessTypeParam, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessTypeParam message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AccessTypeParam
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.AccessTypeParam;
            }

            /** Properties of an AccessConfig. */
            interface IAccessConfig {

                /** AccessConfig permission */
                permission?: (cosmwasm.wasm.v1beta1.AccessType|null);

                /** AccessConfig address */
                address?: (string|null);
            }

            /** Represents an AccessConfig. */
            class AccessConfig implements IAccessConfig {

                /**
                 * Constructs a new AccessConfig.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IAccessConfig);

                /** AccessConfig permission. */
                public permission: cosmwasm.wasm.v1beta1.AccessType;

                /** AccessConfig address. */
                public address: string;

                /**
                 * Encodes the specified AccessConfig message. Does not implicitly {@link cosmwasm.wasm.v1beta1.AccessConfig.verify|verify} messages.
                 * @param m AccessConfig message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IAccessConfig, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessConfig message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AccessConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.AccessConfig;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params code_upload_access */
                code_upload_access?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);

                /** Params instantiate_default_permission */
                instantiate_default_permission?: (cosmwasm.wasm.v1beta1.AccessType|null);

                /** Params max_wasm_code_size */
                max_wasm_code_size?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IParams);

                /** Params code_upload_access. */
                public code_upload_access?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);

                /** Params instantiate_default_permission. */
                public instantiate_default_permission: cosmwasm.wasm.v1beta1.AccessType;

                /** Params max_wasm_code_size. */
                public max_wasm_code_size: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmwasm.wasm.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.Params;
            }

            /** Properties of a CodeInfo. */
            interface ICodeInfo {

                /** CodeInfo code_hash */
                code_hash?: (Uint8Array|null);

                /** CodeInfo creator */
                creator?: (string|null);

                /** CodeInfo source */
                source?: (string|null);

                /** CodeInfo builder */
                builder?: (string|null);

                /** CodeInfo instantiate_config */
                instantiate_config?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);
            }

            /** Represents a CodeInfo. */
            class CodeInfo implements ICodeInfo {

                /**
                 * Constructs a new CodeInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.ICodeInfo);

                /** CodeInfo code_hash. */
                public code_hash: Uint8Array;

                /** CodeInfo creator. */
                public creator: string;

                /** CodeInfo source. */
                public source: string;

                /** CodeInfo builder. */
                public builder: string;

                /** CodeInfo instantiate_config. */
                public instantiate_config?: (cosmwasm.wasm.v1beta1.IAccessConfig|null);

                /**
                 * Encodes the specified CodeInfo message. Does not implicitly {@link cosmwasm.wasm.v1beta1.CodeInfo.verify|verify} messages.
                 * @param m CodeInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.ICodeInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CodeInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.CodeInfo;
            }

            /** Properties of a ContractInfo. */
            interface IContractInfo {

                /** ContractInfo code_id */
                code_id?: (Long|null);

                /** ContractInfo creator */
                creator?: (string|null);

                /** ContractInfo admin */
                admin?: (string|null);

                /** ContractInfo label */
                label?: (string|null);

                /** ContractInfo created */
                created?: (cosmwasm.wasm.v1beta1.IAbsoluteTxPosition|null);
            }

            /** Represents a ContractInfo. */
            class ContractInfo implements IContractInfo {

                /**
                 * Constructs a new ContractInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IContractInfo);

                /** ContractInfo code_id. */
                public code_id: Long;

                /** ContractInfo creator. */
                public creator: string;

                /** ContractInfo admin. */
                public admin: string;

                /** ContractInfo label. */
                public label: string;

                /** ContractInfo created. */
                public created?: (cosmwasm.wasm.v1beta1.IAbsoluteTxPosition|null);

                /**
                 * Encodes the specified ContractInfo message. Does not implicitly {@link cosmwasm.wasm.v1beta1.ContractInfo.verify|verify} messages.
                 * @param m ContractInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IContractInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ContractInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.ContractInfo;
            }

            /** ContractCodeHistoryOperationType enum. */
            enum ContractCodeHistoryOperationType {
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED = 0,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT = 1,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE = 2,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS = 3
            }

            /** Properties of a ContractCodeHistoryEntry. */
            interface IContractCodeHistoryEntry {

                /** ContractCodeHistoryEntry operation */
                operation?: (cosmwasm.wasm.v1beta1.ContractCodeHistoryOperationType|null);

                /** ContractCodeHistoryEntry code_id */
                code_id?: (Long|null);

                /** ContractCodeHistoryEntry updated */
                updated?: (cosmwasm.wasm.v1beta1.IAbsoluteTxPosition|null);

                /** ContractCodeHistoryEntry msg */
                msg?: (Uint8Array|null);
            }

            /** Represents a ContractCodeHistoryEntry. */
            class ContractCodeHistoryEntry implements IContractCodeHistoryEntry {

                /**
                 * Constructs a new ContractCodeHistoryEntry.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IContractCodeHistoryEntry);

                /** ContractCodeHistoryEntry operation. */
                public operation: cosmwasm.wasm.v1beta1.ContractCodeHistoryOperationType;

                /** ContractCodeHistoryEntry code_id. */
                public code_id: Long;

                /** ContractCodeHistoryEntry updated. */
                public updated?: (cosmwasm.wasm.v1beta1.IAbsoluteTxPosition|null);

                /** ContractCodeHistoryEntry msg. */
                public msg: Uint8Array;

                /**
                 * Encodes the specified ContractCodeHistoryEntry message. Does not implicitly {@link cosmwasm.wasm.v1beta1.ContractCodeHistoryEntry.verify|verify} messages.
                 * @param m ContractCodeHistoryEntry message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IContractCodeHistoryEntry, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractCodeHistoryEntry message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ContractCodeHistoryEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.ContractCodeHistoryEntry;
            }

            /** Properties of an AbsoluteTxPosition. */
            interface IAbsoluteTxPosition {

                /** AbsoluteTxPosition block_height */
                block_height?: (Long|null);

                /** AbsoluteTxPosition tx_index */
                tx_index?: (Long|null);
            }

            /** Represents an AbsoluteTxPosition. */
            class AbsoluteTxPosition implements IAbsoluteTxPosition {

                /**
                 * Constructs a new AbsoluteTxPosition.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IAbsoluteTxPosition);

                /** AbsoluteTxPosition block_height. */
                public block_height: Long;

                /** AbsoluteTxPosition tx_index. */
                public tx_index: Long;

                /**
                 * Encodes the specified AbsoluteTxPosition message. Does not implicitly {@link cosmwasm.wasm.v1beta1.AbsoluteTxPosition.verify|verify} messages.
                 * @param m AbsoluteTxPosition message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IAbsoluteTxPosition, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AbsoluteTxPosition message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AbsoluteTxPosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.AbsoluteTxPosition;
            }

            /** Properties of a Model. */
            interface IModel {

                /** Model key */
                key?: (Uint8Array|null);

                /** Model value */
                value?: (Uint8Array|null);
            }

            /** Represents a Model. */
            class Model implements IModel {

                /**
                 * Constructs a new Model.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmwasm.wasm.v1beta1.IModel);

                /** Model key. */
                public key: Uint8Array;

                /** Model value. */
                public value: Uint8Array;

                /**
                 * Encodes the specified Model message. Does not implicitly {@link cosmwasm.wasm.v1beta1.Model.verify|verify} messages.
                 * @param m Model message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmwasm.wasm.v1beta1.IModel, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Model message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Model
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmwasm.wasm.v1beta1.Model;
            }
        }
    }
}

/** Namespace cosmos. */
export namespace cosmos {

    /** Namespace auth. */
    namespace auth {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryAccountRequest. */
            interface IQueryAccountRequest {

                /** QueryAccountRequest address */
                address?: (string|null);
            }

            /** Represents a QueryAccountRequest. */
            class QueryAccountRequest implements IQueryAccountRequest {

                /**
                 * Constructs a new QueryAccountRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IQueryAccountRequest);

                /** QueryAccountRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryAccountRequest message. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountRequest.verify|verify} messages.
                 * @param m QueryAccountRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IQueryAccountRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAccountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.QueryAccountRequest;
            }

            /** Properties of a QueryAccountResponse. */
            interface IQueryAccountResponse {

                /** QueryAccountResponse account */
                account?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryAccountResponse. */
            class QueryAccountResponse implements IQueryAccountResponse {

                /**
                 * Constructs a new QueryAccountResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IQueryAccountResponse);

                /** QueryAccountResponse account. */
                public account?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryAccountResponse message. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountResponse.verify|verify} messages.
                 * @param m QueryAccountResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IQueryAccountResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.QueryAccountResponse;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.auth.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.auth.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.QueryParamsResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.auth.v1beta1.IParams|null);

                /** GenesisState accounts */
                accounts?: (google.protobuf.IAny[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.auth.v1beta1.IParams|null);

                /** GenesisState accounts. */
                public accounts: google.protobuf.IAny[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.auth.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.GenesisState;
            }

            /** Properties of a BaseAccount. */
            interface IBaseAccount {

                /** BaseAccount address */
                address?: (string|null);

                /** BaseAccount pub_key */
                pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number */
                account_number?: (Long|null);

                /** BaseAccount sequence */
                sequence?: (Long|null);
            }

            /** Represents a BaseAccount. */
            class BaseAccount implements IBaseAccount {

                /**
                 * Constructs a new BaseAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IBaseAccount);

                /** BaseAccount address. */
                public address: string;

                /** BaseAccount pub_key. */
                public pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number. */
                public account_number: Long;

                /** BaseAccount sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified BaseAccount message. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param m BaseAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IBaseAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.BaseAccount;
            }

            /** Properties of a ModuleAccount. */
            interface IModuleAccount {

                /** ModuleAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name */
                name?: (string|null);

                /** ModuleAccount permissions */
                permissions?: (string[]|null);
            }

            /** Represents a ModuleAccount. */
            class ModuleAccount implements IModuleAccount {

                /**
                 * Constructs a new ModuleAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IModuleAccount);

                /** ModuleAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name. */
                public name: string;

                /** ModuleAccount permissions. */
                public permissions: string[];

                /**
                 * Encodes the specified ModuleAccount message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param m ModuleAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IModuleAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.ModuleAccount;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params max_memo_characters */
                max_memo_characters?: (Long|null);

                /** Params tx_sig_limit */
                tx_sig_limit?: (Long|null);

                /** Params tx_size_cost_per_byte */
                tx_size_cost_per_byte?: (Long|null);

                /** Params sig_verify_cost_ed25519 */
                sig_verify_cost_ed25519?: (Long|null);

                /** Params sig_verify_cost_secp256k1 */
                sig_verify_cost_secp256k1?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.auth.v1beta1.IParams);

                /** Params max_memo_characters. */
                public max_memo_characters: Long;

                /** Params tx_sig_limit. */
                public tx_sig_limit: Long;

                /** Params tx_size_cost_per_byte. */
                public tx_size_cost_per_byte: Long;

                /** Params sig_verify_cost_ed25519. */
                public sig_verify_cost_ed25519: Long;

                /** Params sig_verify_cost_secp256k1. */
                public sig_verify_cost_secp256k1: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.auth.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.auth.v1beta1.Params;
            }
        }
    }

    /** Namespace bank. */
    namespace bank {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryBalanceRequest. */
            interface IQueryBalanceRequest {

                /** QueryBalanceRequest address */
                address?: (string|null);

                /** QueryBalanceRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryBalanceRequest. */
            class QueryBalanceRequest implements IQueryBalanceRequest {

                /**
                 * Constructs a new QueryBalanceRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryBalanceRequest);

                /** QueryBalanceRequest address. */
                public address: string;

                /** QueryBalanceRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryBalanceRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceRequest.verify|verify} messages.
                 * @param m QueryBalanceRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryBalanceRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryBalanceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryBalanceRequest;
            }

            /** Properties of a QueryBalanceResponse. */
            interface IQueryBalanceResponse {

                /** QueryBalanceResponse balance */
                balance?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QueryBalanceResponse. */
            class QueryBalanceResponse implements IQueryBalanceResponse {

                /**
                 * Constructs a new QueryBalanceResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryBalanceResponse);

                /** QueryBalanceResponse balance. */
                public balance?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QueryBalanceResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceResponse.verify|verify} messages.
                 * @param m QueryBalanceResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryBalanceResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryBalanceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryBalanceResponse;
            }

            /** Properties of a QueryAllBalancesRequest. */
            interface IQueryAllBalancesRequest {

                /** QueryAllBalancesRequest address */
                address?: (string|null);

                /** QueryAllBalancesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryAllBalancesRequest. */
            class QueryAllBalancesRequest implements IQueryAllBalancesRequest {

                /**
                 * Constructs a new QueryAllBalancesRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryAllBalancesRequest);

                /** QueryAllBalancesRequest address. */
                public address: string;

                /** QueryAllBalancesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryAllBalancesRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesRequest.verify|verify} messages.
                 * @param m QueryAllBalancesRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryAllBalancesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllBalancesRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllBalancesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryAllBalancesRequest;
            }

            /** Properties of a QueryAllBalancesResponse. */
            interface IQueryAllBalancesResponse {

                /** QueryAllBalancesResponse balances */
                balances?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryAllBalancesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryAllBalancesResponse. */
            class QueryAllBalancesResponse implements IQueryAllBalancesResponse {

                /**
                 * Constructs a new QueryAllBalancesResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryAllBalancesResponse);

                /** QueryAllBalancesResponse balances. */
                public balances: cosmos.base.v1beta1.ICoin[];

                /** QueryAllBalancesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryAllBalancesResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesResponse.verify|verify} messages.
                 * @param m QueryAllBalancesResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryAllBalancesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllBalancesResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllBalancesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryAllBalancesResponse;
            }

            /** Properties of a QueryTotalSupplyRequest. */
            interface IQueryTotalSupplyRequest {
            }

            /** Represents a QueryTotalSupplyRequest. */
            class QueryTotalSupplyRequest implements IQueryTotalSupplyRequest {

                /**
                 * Constructs a new QueryTotalSupplyRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryTotalSupplyRequest);

                /**
                 * Encodes the specified QueryTotalSupplyRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyRequest.verify|verify} messages.
                 * @param m QueryTotalSupplyRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryTotalSupplyRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSupplyRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTotalSupplyRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryTotalSupplyRequest;
            }

            /** Properties of a QueryTotalSupplyResponse. */
            interface IQueryTotalSupplyResponse {

                /** QueryTotalSupplyResponse supply */
                supply?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryTotalSupplyResponse. */
            class QueryTotalSupplyResponse implements IQueryTotalSupplyResponse {

                /**
                 * Constructs a new QueryTotalSupplyResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryTotalSupplyResponse);

                /** QueryTotalSupplyResponse supply. */
                public supply: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryTotalSupplyResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyResponse.verify|verify} messages.
                 * @param m QueryTotalSupplyResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryTotalSupplyResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSupplyResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTotalSupplyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryTotalSupplyResponse;
            }

            /** Properties of a QuerySupplyOfRequest. */
            interface IQuerySupplyOfRequest {

                /** QuerySupplyOfRequest denom */
                denom?: (string|null);
            }

            /** Represents a QuerySupplyOfRequest. */
            class QuerySupplyOfRequest implements IQuerySupplyOfRequest {

                /**
                 * Constructs a new QuerySupplyOfRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQuerySupplyOfRequest);

                /** QuerySupplyOfRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QuerySupplyOfRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfRequest.verify|verify} messages.
                 * @param m QuerySupplyOfRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQuerySupplyOfRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySupplyOfRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySupplyOfRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QuerySupplyOfRequest;
            }

            /** Properties of a QuerySupplyOfResponse. */
            interface IQuerySupplyOfResponse {

                /** QuerySupplyOfResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QuerySupplyOfResponse. */
            class QuerySupplyOfResponse implements IQuerySupplyOfResponse {

                /**
                 * Constructs a new QuerySupplyOfResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQuerySupplyOfResponse);

                /** QuerySupplyOfResponse amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QuerySupplyOfResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfResponse.verify|verify} messages.
                 * @param m QuerySupplyOfResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQuerySupplyOfResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySupplyOfResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySupplyOfResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QuerySupplyOfResponse;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.bank.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.bank.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryParamsResponse;
            }

            /** Properties of a QueryDenomsMetadataRequest. */
            interface IQueryDenomsMetadataRequest {

                /** QueryDenomsMetadataRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDenomsMetadataRequest. */
            class QueryDenomsMetadataRequest implements IQueryDenomsMetadataRequest {

                /**
                 * Constructs a new QueryDenomsMetadataRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest);

                /** QueryDenomsMetadataRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDenomsMetadataRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataRequest.verify|verify} messages.
                 * @param m QueryDenomsMetadataRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsMetadataRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDenomsMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryDenomsMetadataRequest;
            }

            /** Properties of a QueryDenomsMetadataResponse. */
            interface IQueryDenomsMetadataResponse {

                /** QueryDenomsMetadataResponse metadatas */
                metadatas?: (cosmos.bank.v1beta1.IMetadata[]|null);

                /** QueryDenomsMetadataResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDenomsMetadataResponse. */
            class QueryDenomsMetadataResponse implements IQueryDenomsMetadataResponse {

                /**
                 * Constructs a new QueryDenomsMetadataResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryDenomsMetadataResponse);

                /** QueryDenomsMetadataResponse metadatas. */
                public metadatas: cosmos.bank.v1beta1.IMetadata[];

                /** QueryDenomsMetadataResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDenomsMetadataResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataResponse.verify|verify} messages.
                 * @param m QueryDenomsMetadataResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryDenomsMetadataResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsMetadataResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDenomsMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryDenomsMetadataResponse;
            }

            /** Properties of a QueryDenomMetadataRequest. */
            interface IQueryDenomMetadataRequest {

                /** QueryDenomMetadataRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomMetadataRequest. */
            class QueryDenomMetadataRequest implements IQueryDenomMetadataRequest {

                /**
                 * Constructs a new QueryDenomMetadataRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryDenomMetadataRequest);

                /** QueryDenomMetadataRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomMetadataRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataRequest.verify|verify} messages.
                 * @param m QueryDenomMetadataRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryDenomMetadataRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomMetadataRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDenomMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryDenomMetadataRequest;
            }

            /** Properties of a QueryDenomMetadataResponse. */
            interface IQueryDenomMetadataResponse {

                /** QueryDenomMetadataResponse metadata */
                metadata?: (cosmos.bank.v1beta1.IMetadata|null);
            }

            /** Represents a QueryDenomMetadataResponse. */
            class QueryDenomMetadataResponse implements IQueryDenomMetadataResponse {

                /**
                 * Constructs a new QueryDenomMetadataResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IQueryDenomMetadataResponse);

                /** QueryDenomMetadataResponse metadata. */
                public metadata?: (cosmos.bank.v1beta1.IMetadata|null);

                /**
                 * Encodes the specified QueryDenomMetadataResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataResponse.verify|verify} messages.
                 * @param m QueryDenomMetadataResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IQueryDenomMetadataResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomMetadataResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.QueryDenomMetadataResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.bank.v1beta1.IParams|null);

                /** GenesisState balances */
                balances?: (cosmos.bank.v1beta1.IBalance[]|null);

                /** GenesisState supply */
                supply?: (cosmos.base.v1beta1.ICoin[]|null);

                /** GenesisState denom_metadata */
                denom_metadata?: (cosmos.bank.v1beta1.IMetadata[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.bank.v1beta1.IParams|null);

                /** GenesisState balances. */
                public balances: cosmos.bank.v1beta1.IBalance[];

                /** GenesisState supply. */
                public supply: cosmos.base.v1beta1.ICoin[];

                /** GenesisState denom_metadata. */
                public denom_metadata: cosmos.bank.v1beta1.IMetadata[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.bank.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.GenesisState;
            }

            /** Properties of a Balance. */
            interface IBalance {

                /** Balance address */
                address?: (string|null);

                /** Balance coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Balance. */
            class Balance implements IBalance {

                /**
                 * Constructs a new Balance.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IBalance);

                /** Balance address. */
                public address: string;

                /** Balance coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Balance message. Does not implicitly {@link cosmos.bank.v1beta1.Balance.verify|verify} messages.
                 * @param m Balance message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IBalance, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Balance message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Balance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Balance;
            }

            /** Properties of a MsgSend. */
            interface IMsgSend {

                /** MsgSend from_address */
                from_address?: (string|null);

                /** MsgSend to_address */
                to_address?: (string|null);

                /** MsgSend amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgSend. */
            class MsgSend implements IMsgSend {

                /**
                 * Constructs a new MsgSend.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IMsgSend);

                /** MsgSend from_address. */
                public from_address: string;

                /** MsgSend to_address. */
                public to_address: string;

                /** MsgSend amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgSend message. Does not implicitly {@link cosmos.bank.v1beta1.MsgSend.verify|verify} messages.
                 * @param m MsgSend message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IMsgSend, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSend message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.MsgSend;
            }

            /** Properties of a MsgSendResponse. */
            interface IMsgSendResponse {
            }

            /** Represents a MsgSendResponse. */
            class MsgSendResponse implements IMsgSendResponse {

                /**
                 * Constructs a new MsgSendResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IMsgSendResponse);

                /**
                 * Encodes the specified MsgSendResponse message. Does not implicitly {@link cosmos.bank.v1beta1.MsgSendResponse.verify|verify} messages.
                 * @param m MsgSendResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IMsgSendResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSendResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.MsgSendResponse;
            }

            /** Properties of a MsgMultiSend. */
            interface IMsgMultiSend {

                /** MsgMultiSend inputs */
                inputs?: (cosmos.bank.v1beta1.IInput[]|null);

                /** MsgMultiSend outputs */
                outputs?: (cosmos.bank.v1beta1.IOutput[]|null);
            }

            /** Represents a MsgMultiSend. */
            class MsgMultiSend implements IMsgMultiSend {

                /**
                 * Constructs a new MsgMultiSend.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IMsgMultiSend);

                /** MsgMultiSend inputs. */
                public inputs: cosmos.bank.v1beta1.IInput[];

                /** MsgMultiSend outputs. */
                public outputs: cosmos.bank.v1beta1.IOutput[];

                /**
                 * Encodes the specified MsgMultiSend message. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSend.verify|verify} messages.
                 * @param m MsgMultiSend message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IMsgMultiSend, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMultiSend message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgMultiSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.MsgMultiSend;
            }

            /** Properties of a MsgMultiSendResponse. */
            interface IMsgMultiSendResponse {
            }

            /** Represents a MsgMultiSendResponse. */
            class MsgMultiSendResponse implements IMsgMultiSendResponse {

                /**
                 * Constructs a new MsgMultiSendResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IMsgMultiSendResponse);

                /**
                 * Encodes the specified MsgMultiSendResponse message. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSendResponse.verify|verify} messages.
                 * @param m MsgMultiSendResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IMsgMultiSendResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMultiSendResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgMultiSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.MsgMultiSendResponse;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params send_enabled */
                send_enabled?: (cosmos.bank.v1beta1.ISendEnabled[]|null);

                /** Params default_send_enabled */
                default_send_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IParams);

                /** Params send_enabled. */
                public send_enabled: cosmos.bank.v1beta1.ISendEnabled[];

                /** Params default_send_enabled. */
                public default_send_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Params;
            }

            /** Properties of a SendEnabled. */
            interface ISendEnabled {

                /** SendEnabled denom */
                denom?: (string|null);

                /** SendEnabled enabled */
                enabled?: (boolean|null);
            }

            /** Represents a SendEnabled. */
            class SendEnabled implements ISendEnabled {

                /**
                 * Constructs a new SendEnabled.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.ISendEnabled);

                /** SendEnabled denom. */
                public denom: string;

                /** SendEnabled enabled. */
                public enabled: boolean;

                /**
                 * Encodes the specified SendEnabled message. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param m SendEnabled message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.ISendEnabled, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.SendEnabled;
            }

            /** Properties of an Input. */
            interface IInput {

                /** Input address */
                address?: (string|null);

                /** Input coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Input. */
            class Input implements IInput {

                /**
                 * Constructs a new Input.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IInput);

                /** Input address. */
                public address: string;

                /** Input coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Input message. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param m Input message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IInput, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Input message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Input;
            }

            /** Properties of an Output. */
            interface IOutput {

                /** Output address */
                address?: (string|null);

                /** Output coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Output. */
            class Output implements IOutput {

                /**
                 * Constructs a new Output.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IOutput);

                /** Output address. */
                public address: string;

                /** Output coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Output message. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param m Output message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IOutput, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Output message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Output;
            }

            /** Properties of a Supply. */
            interface ISupply {

                /** Supply total */
                total?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Supply. */
            class Supply implements ISupply {

                /**
                 * Constructs a new Supply.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.ISupply);

                /** Supply total. */
                public total: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Supply message. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param m Supply message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.ISupply, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Supply message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Supply;
            }

            /** Properties of a DenomUnit. */
            interface IDenomUnit {

                /** DenomUnit denom */
                denom?: (string|null);

                /** DenomUnit exponent */
                exponent?: (number|null);

                /** DenomUnit aliases */
                aliases?: (string[]|null);
            }

            /** Represents a DenomUnit. */
            class DenomUnit implements IDenomUnit {

                /**
                 * Constructs a new DenomUnit.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IDenomUnit);

                /** DenomUnit denom. */
                public denom: string;

                /** DenomUnit exponent. */
                public exponent: number;

                /** DenomUnit aliases. */
                public aliases: string[];

                /**
                 * Encodes the specified DenomUnit message. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param m DenomUnit message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IDenomUnit, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.DenomUnit;
            }

            /** Properties of a Metadata. */
            interface IMetadata {

                /** Metadata description */
                description?: (string|null);

                /** Metadata denom_units */
                denom_units?: (cosmos.bank.v1beta1.IDenomUnit[]|null);

                /** Metadata base */
                base?: (string|null);

                /** Metadata display */
                display?: (string|null);
            }

            /** Represents a Metadata. */
            class Metadata implements IMetadata {

                /**
                 * Constructs a new Metadata.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.bank.v1beta1.IMetadata);

                /** Metadata description. */
                public description: string;

                /** Metadata denom_units. */
                public denom_units: cosmos.bank.v1beta1.IDenomUnit[];

                /** Metadata base. */
                public base: string;

                /** Metadata display. */
                public display: string;

                /**
                 * Encodes the specified Metadata message. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param m Metadata message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.bank.v1beta1.IMetadata, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Metadata message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.bank.v1beta1.Metadata;
            }
        }
    }

    /** Namespace base. */
    namespace base {

        /** Namespace abci. */
        namespace abci {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a TxResponse. */
                interface ITxResponse {

                    /** TxResponse height */
                    height?: (Long|null);

                    /** TxResponse txhash */
                    txhash?: (string|null);

                    /** TxResponse codespace */
                    codespace?: (string|null);

                    /** TxResponse code */
                    code?: (number|null);

                    /** TxResponse data */
                    data?: (string|null);

                    /** TxResponse raw_log */
                    raw_log?: (string|null);

                    /** TxResponse logs */
                    logs?: (cosmos.base.abci.v1beta1.IABCIMessageLog[]|null);

                    /** TxResponse info */
                    info?: (string|null);

                    /** TxResponse gas_wanted */
                    gas_wanted?: (Long|null);

                    /** TxResponse gas_used */
                    gas_used?: (Long|null);

                    /** TxResponse tx */
                    tx?: (google.protobuf.IAny|null);

                    /** TxResponse timestamp */
                    timestamp?: (string|null);
                }

                /** Represents a TxResponse. */
                class TxResponse implements ITxResponse {

                    /**
                     * Constructs a new TxResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.ITxResponse);

                    /** TxResponse height. */
                    public height: Long;

                    /** TxResponse txhash. */
                    public txhash: string;

                    /** TxResponse codespace. */
                    public codespace: string;

                    /** TxResponse code. */
                    public code: number;

                    /** TxResponse data. */
                    public data: string;

                    /** TxResponse raw_log. */
                    public raw_log: string;

                    /** TxResponse logs. */
                    public logs: cosmos.base.abci.v1beta1.IABCIMessageLog[];

                    /** TxResponse info. */
                    public info: string;

                    /** TxResponse gas_wanted. */
                    public gas_wanted: Long;

                    /** TxResponse gas_used. */
                    public gas_used: Long;

                    /** TxResponse tx. */
                    public tx?: (google.protobuf.IAny|null);

                    /** TxResponse timestamp. */
                    public timestamp: string;

                    /**
                     * Encodes the specified TxResponse message. Does not implicitly {@link cosmos.base.abci.v1beta1.TxResponse.verify|verify} messages.
                     * @param m TxResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.ITxResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TxResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns TxResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.TxResponse;
                }

                /** Properties of a ABCIMessageLog. */
                interface IABCIMessageLog {

                    /** ABCIMessageLog msg_index */
                    msg_index?: (number|null);

                    /** ABCIMessageLog log */
                    log?: (string|null);

                    /** ABCIMessageLog events */
                    events?: (cosmos.base.abci.v1beta1.IStringEvent[]|null);
                }

                /** Represents a ABCIMessageLog. */
                class ABCIMessageLog implements IABCIMessageLog {

                    /**
                     * Constructs a new ABCIMessageLog.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IABCIMessageLog);

                    /** ABCIMessageLog msg_index. */
                    public msg_index: number;

                    /** ABCIMessageLog log. */
                    public log: string;

                    /** ABCIMessageLog events. */
                    public events: cosmos.base.abci.v1beta1.IStringEvent[];

                    /**
                     * Encodes the specified ABCIMessageLog message. Does not implicitly {@link cosmos.base.abci.v1beta1.ABCIMessageLog.verify|verify} messages.
                     * @param m ABCIMessageLog message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IABCIMessageLog, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ABCIMessageLog message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ABCIMessageLog
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.ABCIMessageLog;
                }

                /** Properties of a StringEvent. */
                interface IStringEvent {

                    /** StringEvent type */
                    type?: (string|null);

                    /** StringEvent attributes */
                    attributes?: (cosmos.base.abci.v1beta1.IAttribute[]|null);
                }

                /** Represents a StringEvent. */
                class StringEvent implements IStringEvent {

                    /**
                     * Constructs a new StringEvent.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IStringEvent);

                    /** StringEvent type. */
                    public type: string;

                    /** StringEvent attributes. */
                    public attributes: cosmos.base.abci.v1beta1.IAttribute[];

                    /**
                     * Encodes the specified StringEvent message. Does not implicitly {@link cosmos.base.abci.v1beta1.StringEvent.verify|verify} messages.
                     * @param m StringEvent message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IStringEvent, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a StringEvent message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns StringEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.StringEvent;
                }

                /** Properties of an Attribute. */
                interface IAttribute {

                    /** Attribute key */
                    key?: (string|null);

                    /** Attribute value */
                    value?: (string|null);
                }

                /** Represents an Attribute. */
                class Attribute implements IAttribute {

                    /**
                     * Constructs a new Attribute.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IAttribute);

                    /** Attribute key. */
                    public key: string;

                    /** Attribute value. */
                    public value: string;

                    /**
                     * Encodes the specified Attribute message. Does not implicitly {@link cosmos.base.abci.v1beta1.Attribute.verify|verify} messages.
                     * @param m Attribute message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IAttribute, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Attribute message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Attribute
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.Attribute;
                }

                /** Properties of a GasInfo. */
                interface IGasInfo {

                    /** GasInfo gas_wanted */
                    gas_wanted?: (Long|null);

                    /** GasInfo gas_used */
                    gas_used?: (Long|null);
                }

                /** Represents a GasInfo. */
                class GasInfo implements IGasInfo {

                    /**
                     * Constructs a new GasInfo.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IGasInfo);

                    /** GasInfo gas_wanted. */
                    public gas_wanted: Long;

                    /** GasInfo gas_used. */
                    public gas_used: Long;

                    /**
                     * Encodes the specified GasInfo message. Does not implicitly {@link cosmos.base.abci.v1beta1.GasInfo.verify|verify} messages.
                     * @param m GasInfo message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IGasInfo, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GasInfo message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GasInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.GasInfo;
                }

                /** Properties of a Result. */
                interface IResult {

                    /** Result data */
                    data?: (Uint8Array|null);

                    /** Result log */
                    log?: (string|null);

                    /** Result events */
                    events?: (tendermint.abci.IEvent[]|null);
                }

                /** Represents a Result. */
                class Result implements IResult {

                    /**
                     * Constructs a new Result.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IResult);

                    /** Result data. */
                    public data: Uint8Array;

                    /** Result log. */
                    public log: string;

                    /** Result events. */
                    public events: tendermint.abci.IEvent[];

                    /**
                     * Encodes the specified Result message. Does not implicitly {@link cosmos.base.abci.v1beta1.Result.verify|verify} messages.
                     * @param m Result message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IResult, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Result message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Result
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.Result;
                }

                /** Properties of a SimulationResponse. */
                interface ISimulationResponse {

                    /** SimulationResponse gas_info */
                    gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                    /** SimulationResponse result */
                    result?: (cosmos.base.abci.v1beta1.IResult|null);
                }

                /** Represents a SimulationResponse. */
                class SimulationResponse implements ISimulationResponse {

                    /**
                     * Constructs a new SimulationResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.ISimulationResponse);

                    /** SimulationResponse gas_info. */
                    public gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                    /** SimulationResponse result. */
                    public result?: (cosmos.base.abci.v1beta1.IResult|null);

                    /**
                     * Encodes the specified SimulationResponse message. Does not implicitly {@link cosmos.base.abci.v1beta1.SimulationResponse.verify|verify} messages.
                     * @param m SimulationResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.ISimulationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SimulationResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SimulationResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.SimulationResponse;
                }

                /** Properties of a MsgData. */
                interface IMsgData {

                    /** MsgData msg_type */
                    msg_type?: (string|null);

                    /** MsgData data */
                    data?: (Uint8Array|null);
                }

                /** Represents a MsgData. */
                class MsgData implements IMsgData {

                    /**
                     * Constructs a new MsgData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.IMsgData);

                    /** MsgData msg_type. */
                    public msg_type: string;

                    /** MsgData data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified MsgData message. Does not implicitly {@link cosmos.base.abci.v1beta1.MsgData.verify|verify} messages.
                     * @param m MsgData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.IMsgData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.MsgData;
                }

                /** Properties of a TxMsgData. */
                interface ITxMsgData {

                    /** TxMsgData data */
                    data?: (cosmos.base.abci.v1beta1.IMsgData[]|null);
                }

                /** Represents a TxMsgData. */
                class TxMsgData implements ITxMsgData {

                    /**
                     * Constructs a new TxMsgData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.ITxMsgData);

                    /** TxMsgData data. */
                    public data: cosmos.base.abci.v1beta1.IMsgData[];

                    /**
                     * Encodes the specified TxMsgData message. Does not implicitly {@link cosmos.base.abci.v1beta1.TxMsgData.verify|verify} messages.
                     * @param m TxMsgData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.ITxMsgData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TxMsgData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns TxMsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.TxMsgData;
                }

                /** Properties of a SearchTxsResult. */
                interface ISearchTxsResult {

                    /** SearchTxsResult total_count */
                    total_count?: (Long|null);

                    /** SearchTxsResult count */
                    count?: (Long|null);

                    /** SearchTxsResult page_number */
                    page_number?: (Long|null);

                    /** SearchTxsResult page_total */
                    page_total?: (Long|null);

                    /** SearchTxsResult limit */
                    limit?: (Long|null);

                    /** SearchTxsResult txs */
                    txs?: (cosmos.base.abci.v1beta1.ITxResponse[]|null);
                }

                /** Represents a SearchTxsResult. */
                class SearchTxsResult implements ISearchTxsResult {

                    /**
                     * Constructs a new SearchTxsResult.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.abci.v1beta1.ISearchTxsResult);

                    /** SearchTxsResult total_count. */
                    public total_count: Long;

                    /** SearchTxsResult count. */
                    public count: Long;

                    /** SearchTxsResult page_number. */
                    public page_number: Long;

                    /** SearchTxsResult page_total. */
                    public page_total: Long;

                    /** SearchTxsResult limit. */
                    public limit: Long;

                    /** SearchTxsResult txs. */
                    public txs: cosmos.base.abci.v1beta1.ITxResponse[];

                    /**
                     * Encodes the specified SearchTxsResult message. Does not implicitly {@link cosmos.base.abci.v1beta1.SearchTxsResult.verify|verify} messages.
                     * @param m SearchTxsResult message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.abci.v1beta1.ISearchTxsResult, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SearchTxsResult message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SearchTxsResult
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.abci.v1beta1.SearchTxsResult;
                }
            }
        }

        /** Namespace kv. */
        namespace kv {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a Pairs. */
                interface IPairs {

                    /** Pairs pairs */
                    pairs?: (cosmos.base.kv.v1beta1.IPair[]|null);
                }

                /** Represents a Pairs. */
                class Pairs implements IPairs {

                    /**
                     * Constructs a new Pairs.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.kv.v1beta1.IPairs);

                    /** Pairs pairs. */
                    public pairs: cosmos.base.kv.v1beta1.IPair[];

                    /**
                     * Encodes the specified Pairs message. Does not implicitly {@link cosmos.base.kv.v1beta1.Pairs.verify|verify} messages.
                     * @param m Pairs message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.kv.v1beta1.IPairs, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Pairs message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Pairs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.kv.v1beta1.Pairs;
                }

                /** Properties of a Pair. */
                interface IPair {

                    /** Pair key */
                    key?: (Uint8Array|null);

                    /** Pair value */
                    value?: (Uint8Array|null);
                }

                /** Represents a Pair. */
                class Pair implements IPair {

                    /**
                     * Constructs a new Pair.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.kv.v1beta1.IPair);

                    /** Pair key. */
                    public key: Uint8Array;

                    /** Pair value. */
                    public value: Uint8Array;

                    /**
                     * Encodes the specified Pair message. Does not implicitly {@link cosmos.base.kv.v1beta1.Pair.verify|verify} messages.
                     * @param m Pair message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.kv.v1beta1.IPair, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Pair message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Pair
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.kv.v1beta1.Pair;
                }
            }
        }

        /** Namespace query. */
        namespace query {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a PageRequest. */
                interface IPageRequest {

                    /** PageRequest key */
                    key?: (Uint8Array|null);

                    /** PageRequest offset */
                    offset?: (Long|null);

                    /** PageRequest limit */
                    limit?: (Long|null);

                    /** PageRequest count_total */
                    count_total?: (boolean|null);
                }

                /** Represents a PageRequest. */
                class PageRequest implements IPageRequest {

                    /**
                     * Constructs a new PageRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.query.v1beta1.IPageRequest);

                    /** PageRequest key. */
                    public key: Uint8Array;

                    /** PageRequest offset. */
                    public offset: Long;

                    /** PageRequest limit. */
                    public limit: Long;

                    /** PageRequest count_total. */
                    public count_total: boolean;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param m PageRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.query.v1beta1.IPageRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.query.v1beta1.PageRequest;
                }

                /** Properties of a PageResponse. */
                interface IPageResponse {

                    /** PageResponse next_key */
                    next_key?: (Uint8Array|null);

                    /** PageResponse total */
                    total?: (Long|null);
                }

                /** Represents a PageResponse. */
                class PageResponse implements IPageResponse {

                    /**
                     * Constructs a new PageResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.query.v1beta1.IPageResponse);

                    /** PageResponse next_key. */
                    public next_key: Uint8Array;

                    /** PageResponse total. */
                    public total: Long;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param m PageResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.query.v1beta1.IPageResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.query.v1beta1.PageResponse;
                }
            }
        }

        /** Namespace reflection. */
        namespace reflection {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a ListAllInterfacesRequest. */
                interface IListAllInterfacesRequest {
                }

                /** Represents a ListAllInterfacesRequest. */
                class ListAllInterfacesRequest implements IListAllInterfacesRequest {

                    /**
                     * Constructs a new ListAllInterfacesRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest);

                    /**
                     * Encodes the specified ListAllInterfacesRequest message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesRequest.verify|verify} messages.
                     * @param m ListAllInterfacesRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListAllInterfacesRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ListAllInterfacesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.reflection.v1beta1.ListAllInterfacesRequest;
                }

                /** Properties of a ListAllInterfacesResponse. */
                interface IListAllInterfacesResponse {

                    /** ListAllInterfacesResponse interface_names */
                    interface_names?: (string[]|null);
                }

                /** Represents a ListAllInterfacesResponse. */
                class ListAllInterfacesResponse implements IListAllInterfacesResponse {

                    /**
                     * Constructs a new ListAllInterfacesResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.reflection.v1beta1.IListAllInterfacesResponse);

                    /** ListAllInterfacesResponse interface_names. */
                    public interface_names: string[];

                    /**
                     * Encodes the specified ListAllInterfacesResponse message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.verify|verify} messages.
                     * @param m ListAllInterfacesResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.reflection.v1beta1.IListAllInterfacesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListAllInterfacesResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ListAllInterfacesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.reflection.v1beta1.ListAllInterfacesResponse;
                }

                /** Properties of a ListImplementationsRequest. */
                interface IListImplementationsRequest {

                    /** ListImplementationsRequest interface_name */
                    interface_name?: (string|null);
                }

                /** Represents a ListImplementationsRequest. */
                class ListImplementationsRequest implements IListImplementationsRequest {

                    /**
                     * Constructs a new ListImplementationsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.reflection.v1beta1.IListImplementationsRequest);

                    /** ListImplementationsRequest interface_name. */
                    public interface_name: string;

                    /**
                     * Encodes the specified ListImplementationsRequest message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsRequest.verify|verify} messages.
                     * @param m ListImplementationsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.reflection.v1beta1.IListImplementationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListImplementationsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ListImplementationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.reflection.v1beta1.ListImplementationsRequest;
                }

                /** Properties of a ListImplementationsResponse. */
                interface IListImplementationsResponse {

                    /** ListImplementationsResponse implementation_message_names */
                    implementation_message_names?: (string[]|null);
                }

                /** Represents a ListImplementationsResponse. */
                class ListImplementationsResponse implements IListImplementationsResponse {

                    /**
                     * Constructs a new ListImplementationsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.reflection.v1beta1.IListImplementationsResponse);

                    /** ListImplementationsResponse implementation_message_names. */
                    public implementation_message_names: string[];

                    /**
                     * Encodes the specified ListImplementationsResponse message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsResponse.verify|verify} messages.
                     * @param m ListImplementationsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.reflection.v1beta1.IListImplementationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListImplementationsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ListImplementationsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.reflection.v1beta1.ListImplementationsResponse;
                }
            }
        }

        /** Namespace snapshots. */
        namespace snapshots {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a Snapshot. */
                interface ISnapshot {

                    /** Snapshot height */
                    height?: (Long|null);

                    /** Snapshot format */
                    format?: (number|null);

                    /** Snapshot chunks */
                    chunks?: (number|null);

                    /** Snapshot hash */
                    hash?: (Uint8Array|null);

                    /** Snapshot metadata */
                    metadata?: (cosmos.base.snapshots.v1beta1.IMetadata|null);
                }

                /** Represents a Snapshot. */
                class Snapshot implements ISnapshot {

                    /**
                     * Constructs a new Snapshot.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.snapshots.v1beta1.ISnapshot);

                    /** Snapshot height. */
                    public height: Long;

                    /** Snapshot format. */
                    public format: number;

                    /** Snapshot chunks. */
                    public chunks: number;

                    /** Snapshot hash. */
                    public hash: Uint8Array;

                    /** Snapshot metadata. */
                    public metadata?: (cosmos.base.snapshots.v1beta1.IMetadata|null);

                    /**
                     * Encodes the specified Snapshot message. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Snapshot.verify|verify} messages.
                     * @param m Snapshot message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.snapshots.v1beta1.ISnapshot, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Snapshot message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Snapshot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.snapshots.v1beta1.Snapshot;
                }

                /** Properties of a Metadata. */
                interface IMetadata {

                    /** Metadata chunk_hashes */
                    chunk_hashes?: (Uint8Array[]|null);
                }

                /** Represents a Metadata. */
                class Metadata implements IMetadata {

                    /**
                     * Constructs a new Metadata.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.snapshots.v1beta1.IMetadata);

                    /** Metadata chunk_hashes. */
                    public chunk_hashes: Uint8Array[];

                    /**
                     * Encodes the specified Metadata message. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Metadata.verify|verify} messages.
                     * @param m Metadata message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.snapshots.v1beta1.IMetadata, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.snapshots.v1beta1.Metadata;
                }
            }
        }

        /** Namespace store. */
        namespace store {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a CommitInfo. */
                interface ICommitInfo {

                    /** CommitInfo version */
                    version?: (Long|null);

                    /** CommitInfo store_infos */
                    store_infos?: (cosmos.base.store.v1beta1.IStoreInfo[]|null);
                }

                /** Represents a CommitInfo. */
                class CommitInfo implements ICommitInfo {

                    /**
                     * Constructs a new CommitInfo.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.ICommitInfo);

                    /** CommitInfo version. */
                    public version: Long;

                    /** CommitInfo store_infos. */
                    public store_infos: cosmos.base.store.v1beta1.IStoreInfo[];

                    /**
                     * Encodes the specified CommitInfo message. Does not implicitly {@link cosmos.base.store.v1beta1.CommitInfo.verify|verify} messages.
                     * @param m CommitInfo message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.ICommitInfo, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CommitInfo message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns CommitInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.CommitInfo;
                }

                /** Properties of a StoreInfo. */
                interface IStoreInfo {

                    /** StoreInfo name */
                    name?: (string|null);

                    /** StoreInfo commit_id */
                    commit_id?: (cosmos.base.store.v1beta1.ICommitID|null);
                }

                /** Represents a StoreInfo. */
                class StoreInfo implements IStoreInfo {

                    /**
                     * Constructs a new StoreInfo.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.IStoreInfo);

                    /** StoreInfo name. */
                    public name: string;

                    /** StoreInfo commit_id. */
                    public commit_id?: (cosmos.base.store.v1beta1.ICommitID|null);

                    /**
                     * Encodes the specified StoreInfo message. Does not implicitly {@link cosmos.base.store.v1beta1.StoreInfo.verify|verify} messages.
                     * @param m StoreInfo message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.IStoreInfo, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a StoreInfo message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns StoreInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.StoreInfo;
                }

                /** Properties of a CommitID. */
                interface ICommitID {

                    /** CommitID version */
                    version?: (Long|null);

                    /** CommitID hash */
                    hash?: (Uint8Array|null);
                }

                /** Represents a CommitID. */
                class CommitID implements ICommitID {

                    /**
                     * Constructs a new CommitID.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.ICommitID);

                    /** CommitID version. */
                    public version: Long;

                    /** CommitID hash. */
                    public hash: Uint8Array;

                    /**
                     * Encodes the specified CommitID message. Does not implicitly {@link cosmos.base.store.v1beta1.CommitID.verify|verify} messages.
                     * @param m CommitID message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.ICommitID, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CommitID message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns CommitID
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.CommitID;
                }

                /** Properties of a SnapshotItem. */
                interface ISnapshotItem {

                    /** SnapshotItem store */
                    store?: (cosmos.base.store.v1beta1.ISnapshotStoreItem|null);

                    /** SnapshotItem iavl */
                    iavl?: (cosmos.base.store.v1beta1.ISnapshotIAVLItem|null);
                }

                /** Represents a SnapshotItem. */
                class SnapshotItem implements ISnapshotItem {

                    /**
                     * Constructs a new SnapshotItem.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.ISnapshotItem);

                    /** SnapshotItem store. */
                    public store?: (cosmos.base.store.v1beta1.ISnapshotStoreItem|null);

                    /** SnapshotItem iavl. */
                    public iavl?: (cosmos.base.store.v1beta1.ISnapshotIAVLItem|null);

                    /** SnapshotItem item. */
                    public item?: ("store"|"iavl");

                    /**
                     * Encodes the specified SnapshotItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotItem.verify|verify} messages.
                     * @param m SnapshotItem message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.ISnapshotItem, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotItem message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SnapshotItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.SnapshotItem;
                }

                /** Properties of a SnapshotStoreItem. */
                interface ISnapshotStoreItem {

                    /** SnapshotStoreItem name */
                    name?: (string|null);
                }

                /** Represents a SnapshotStoreItem. */
                class SnapshotStoreItem implements ISnapshotStoreItem {

                    /**
                     * Constructs a new SnapshotStoreItem.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.ISnapshotStoreItem);

                    /** SnapshotStoreItem name. */
                    public name: string;

                    /**
                     * Encodes the specified SnapshotStoreItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotStoreItem.verify|verify} messages.
                     * @param m SnapshotStoreItem message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.ISnapshotStoreItem, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotStoreItem message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SnapshotStoreItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.SnapshotStoreItem;
                }

                /** Properties of a SnapshotIAVLItem. */
                interface ISnapshotIAVLItem {

                    /** SnapshotIAVLItem key */
                    key?: (Uint8Array|null);

                    /** SnapshotIAVLItem value */
                    value?: (Uint8Array|null);

                    /** SnapshotIAVLItem version */
                    version?: (Long|null);

                    /** SnapshotIAVLItem height */
                    height?: (number|null);
                }

                /** Represents a SnapshotIAVLItem. */
                class SnapshotIAVLItem implements ISnapshotIAVLItem {

                    /**
                     * Constructs a new SnapshotIAVLItem.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.store.v1beta1.ISnapshotIAVLItem);

                    /** SnapshotIAVLItem key. */
                    public key: Uint8Array;

                    /** SnapshotIAVLItem value. */
                    public value: Uint8Array;

                    /** SnapshotIAVLItem version. */
                    public version: Long;

                    /** SnapshotIAVLItem height. */
                    public height: number;

                    /**
                     * Encodes the specified SnapshotIAVLItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotIAVLItem.verify|verify} messages.
                     * @param m SnapshotIAVLItem message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.store.v1beta1.ISnapshotIAVLItem, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotIAVLItem message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SnapshotIAVLItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.store.v1beta1.SnapshotIAVLItem;
                }
            }
        }

        /** Namespace tendermint. */
        namespace tendermint {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a GetValidatorSetByHeightRequest. */
                interface IGetValidatorSetByHeightRequest {

                    /** GetValidatorSetByHeightRequest height */
                    height?: (Long|null);

                    /** GetValidatorSetByHeightRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a GetValidatorSetByHeightRequest. */
                class GetValidatorSetByHeightRequest implements IGetValidatorSetByHeightRequest {

                    /**
                     * Constructs a new GetValidatorSetByHeightRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest);

                    /** GetValidatorSetByHeightRequest height. */
                    public height: Long;

                    /** GetValidatorSetByHeightRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified GetValidatorSetByHeightRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.verify|verify} messages.
                     * @param m GetValidatorSetByHeightRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetValidatorSetByHeightRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetValidatorSetByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest;
                }

                /** Properties of a GetValidatorSetByHeightResponse. */
                interface IGetValidatorSetByHeightResponse {

                    /** GetValidatorSetByHeightResponse block_height */
                    block_height?: (Long|null);

                    /** GetValidatorSetByHeightResponse validators */
                    validators?: (cosmos.base.tendermint.v1beta1.IValidator[]|null);

                    /** GetValidatorSetByHeightResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a GetValidatorSetByHeightResponse. */
                class GetValidatorSetByHeightResponse implements IGetValidatorSetByHeightResponse {

                    /**
                     * Constructs a new GetValidatorSetByHeightResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightResponse);

                    /** GetValidatorSetByHeightResponse block_height. */
                    public block_height: Long;

                    /** GetValidatorSetByHeightResponse validators. */
                    public validators: cosmos.base.tendermint.v1beta1.IValidator[];

                    /** GetValidatorSetByHeightResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified GetValidatorSetByHeightResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.verify|verify} messages.
                     * @param m GetValidatorSetByHeightResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetValidatorSetByHeightResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetValidatorSetByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse;
                }

                /** Properties of a GetLatestValidatorSetRequest. */
                interface IGetLatestValidatorSetRequest {

                    /** GetLatestValidatorSetRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a GetLatestValidatorSetRequest. */
                class GetLatestValidatorSetRequest implements IGetLatestValidatorSetRequest {

                    /**
                     * Constructs a new GetLatestValidatorSetRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest);

                    /** GetLatestValidatorSetRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified GetLatestValidatorSetRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.verify|verify} messages.
                     * @param m GetLatestValidatorSetRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestValidatorSetRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetLatestValidatorSetRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest;
                }

                /** Properties of a GetLatestValidatorSetResponse. */
                interface IGetLatestValidatorSetResponse {

                    /** GetLatestValidatorSetResponse block_height */
                    block_height?: (Long|null);

                    /** GetLatestValidatorSetResponse validators */
                    validators?: (cosmos.base.tendermint.v1beta1.IValidator[]|null);

                    /** GetLatestValidatorSetResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a GetLatestValidatorSetResponse. */
                class GetLatestValidatorSetResponse implements IGetLatestValidatorSetResponse {

                    /**
                     * Constructs a new GetLatestValidatorSetResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetResponse);

                    /** GetLatestValidatorSetResponse block_height. */
                    public block_height: Long;

                    /** GetLatestValidatorSetResponse validators. */
                    public validators: cosmos.base.tendermint.v1beta1.IValidator[];

                    /** GetLatestValidatorSetResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified GetLatestValidatorSetResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.verify|verify} messages.
                     * @param m GetLatestValidatorSetResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestValidatorSetResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetLatestValidatorSetResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse;
                }

                /** Properties of a Validator. */
                interface IValidator {

                    /** Validator address */
                    address?: (string|null);

                    /** Validator pub_key */
                    pub_key?: (google.protobuf.IAny|null);

                    /** Validator voting_power */
                    voting_power?: (Long|null);

                    /** Validator proposer_priority */
                    proposer_priority?: (Long|null);
                }

                /** Represents a Validator. */
                class Validator implements IValidator {

                    /**
                     * Constructs a new Validator.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IValidator);

                    /** Validator address. */
                    public address: string;

                    /** Validator pub_key. */
                    public pub_key?: (google.protobuf.IAny|null);

                    /** Validator voting_power. */
                    public voting_power: Long;

                    /** Validator proposer_priority. */
                    public proposer_priority: Long;

                    /**
                     * Encodes the specified Validator message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Validator.verify|verify} messages.
                     * @param m Validator message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IValidator, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Validator message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Validator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.Validator;
                }

                /** Properties of a GetBlockByHeightRequest. */
                interface IGetBlockByHeightRequest {

                    /** GetBlockByHeightRequest height */
                    height?: (Long|null);
                }

                /** Represents a GetBlockByHeightRequest. */
                class GetBlockByHeightRequest implements IGetBlockByHeightRequest {

                    /**
                     * Constructs a new GetBlockByHeightRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest);

                    /** GetBlockByHeightRequest height. */
                    public height: Long;

                    /**
                     * Encodes the specified GetBlockByHeightRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest.verify|verify} messages.
                     * @param m GetBlockByHeightRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetBlockByHeightRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetBlockByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest;
                }

                /** Properties of a GetBlockByHeightResponse. */
                interface IGetBlockByHeightResponse {

                    /** GetBlockByHeightResponse block_id */
                    block_id?: (tendermint.types.IBlockID|null);

                    /** GetBlockByHeightResponse block */
                    block?: (tendermint.types.IBlock|null);
                }

                /** Represents a GetBlockByHeightResponse. */
                class GetBlockByHeightResponse implements IGetBlockByHeightResponse {

                    /**
                     * Constructs a new GetBlockByHeightResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetBlockByHeightResponse);

                    /** GetBlockByHeightResponse block_id. */
                    public block_id?: (tendermint.types.IBlockID|null);

                    /** GetBlockByHeightResponse block. */
                    public block?: (tendermint.types.IBlock|null);

                    /**
                     * Encodes the specified GetBlockByHeightResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.verify|verify} messages.
                     * @param m GetBlockByHeightResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetBlockByHeightResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetBlockByHeightResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetBlockByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse;
                }

                /** Properties of a GetLatestBlockRequest. */
                interface IGetLatestBlockRequest {
                }

                /** Represents a GetLatestBlockRequest. */
                class GetLatestBlockRequest implements IGetLatestBlockRequest {

                    /**
                     * Constructs a new GetLatestBlockRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest);

                    /**
                     * Encodes the specified GetLatestBlockRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockRequest.verify|verify} messages.
                     * @param m GetLatestBlockRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestBlockRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetLatestBlockRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetLatestBlockRequest;
                }

                /** Properties of a GetLatestBlockResponse. */
                interface IGetLatestBlockResponse {

                    /** GetLatestBlockResponse block_id */
                    block_id?: (tendermint.types.IBlockID|null);

                    /** GetLatestBlockResponse block */
                    block?: (tendermint.types.IBlock|null);
                }

                /** Represents a GetLatestBlockResponse. */
                class GetLatestBlockResponse implements IGetLatestBlockResponse {

                    /**
                     * Constructs a new GetLatestBlockResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetLatestBlockResponse);

                    /** GetLatestBlockResponse block_id. */
                    public block_id?: (tendermint.types.IBlockID|null);

                    /** GetLatestBlockResponse block. */
                    public block?: (tendermint.types.IBlock|null);

                    /**
                     * Encodes the specified GetLatestBlockResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.verify|verify} messages.
                     * @param m GetLatestBlockResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetLatestBlockResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestBlockResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetLatestBlockResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetLatestBlockResponse;
                }

                /** Properties of a GetSyncingRequest. */
                interface IGetSyncingRequest {
                }

                /** Represents a GetSyncingRequest. */
                class GetSyncingRequest implements IGetSyncingRequest {

                    /**
                     * Constructs a new GetSyncingRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetSyncingRequest);

                    /**
                     * Encodes the specified GetSyncingRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingRequest.verify|verify} messages.
                     * @param m GetSyncingRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetSyncingRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetSyncingRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetSyncingRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetSyncingRequest;
                }

                /** Properties of a GetSyncingResponse. */
                interface IGetSyncingResponse {

                    /** GetSyncingResponse syncing */
                    syncing?: (boolean|null);
                }

                /** Represents a GetSyncingResponse. */
                class GetSyncingResponse implements IGetSyncingResponse {

                    /**
                     * Constructs a new GetSyncingResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetSyncingResponse);

                    /** GetSyncingResponse syncing. */
                    public syncing: boolean;

                    /**
                     * Encodes the specified GetSyncingResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingResponse.verify|verify} messages.
                     * @param m GetSyncingResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetSyncingResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetSyncingResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetSyncingResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetSyncingResponse;
                }

                /** Properties of a GetNodeInfoRequest. */
                interface IGetNodeInfoRequest {
                }

                /** Represents a GetNodeInfoRequest. */
                class GetNodeInfoRequest implements IGetNodeInfoRequest {

                    /**
                     * Constructs a new GetNodeInfoRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest);

                    /**
                     * Encodes the specified GetNodeInfoRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoRequest.verify|verify} messages.
                     * @param m GetNodeInfoRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetNodeInfoRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetNodeInfoRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetNodeInfoRequest;
                }

                /** Properties of a GetNodeInfoResponse. */
                interface IGetNodeInfoResponse {

                    /** GetNodeInfoResponse default_node_info */
                    default_node_info?: (tendermint.p2p.IDefaultNodeInfo|null);

                    /** GetNodeInfoResponse application_version */
                    application_version?: (cosmos.base.tendermint.v1beta1.IVersionInfo|null);
                }

                /** Represents a GetNodeInfoResponse. */
                class GetNodeInfoResponse implements IGetNodeInfoResponse {

                    /**
                     * Constructs a new GetNodeInfoResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IGetNodeInfoResponse);

                    /** GetNodeInfoResponse default_node_info. */
                    public default_node_info?: (tendermint.p2p.IDefaultNodeInfo|null);

                    /** GetNodeInfoResponse application_version. */
                    public application_version?: (cosmos.base.tendermint.v1beta1.IVersionInfo|null);

                    /**
                     * Encodes the specified GetNodeInfoResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.verify|verify} messages.
                     * @param m GetNodeInfoResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IGetNodeInfoResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetNodeInfoResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GetNodeInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.GetNodeInfoResponse;
                }

                /** Properties of a VersionInfo. */
                interface IVersionInfo {

                    /** VersionInfo name */
                    name?: (string|null);

                    /** VersionInfo app_name */
                    app_name?: (string|null);

                    /** VersionInfo version */
                    version?: (string|null);

                    /** VersionInfo git_commit */
                    git_commit?: (string|null);

                    /** VersionInfo build_tags */
                    build_tags?: (string|null);

                    /** VersionInfo go_version */
                    go_version?: (string|null);

                    /** VersionInfo build_deps */
                    build_deps?: (cosmos.base.tendermint.v1beta1.IModule[]|null);
                }

                /** Represents a VersionInfo. */
                class VersionInfo implements IVersionInfo {

                    /**
                     * Constructs a new VersionInfo.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IVersionInfo);

                    /** VersionInfo name. */
                    public name: string;

                    /** VersionInfo app_name. */
                    public app_name: string;

                    /** VersionInfo version. */
                    public version: string;

                    /** VersionInfo git_commit. */
                    public git_commit: string;

                    /** VersionInfo build_tags. */
                    public build_tags: string;

                    /** VersionInfo go_version. */
                    public go_version: string;

                    /** VersionInfo build_deps. */
                    public build_deps: cosmos.base.tendermint.v1beta1.IModule[];

                    /**
                     * Encodes the specified VersionInfo message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.VersionInfo.verify|verify} messages.
                     * @param m VersionInfo message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IVersionInfo, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a VersionInfo message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns VersionInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.VersionInfo;
                }

                /** Properties of a Module. */
                interface IModule {

                    /** Module path */
                    path?: (string|null);

                    /** Module version */
                    version?: (string|null);

                    /** Module sum */
                    sum?: (string|null);
                }

                /** Represents a Module. */
                class Module implements IModule {

                    /**
                     * Constructs a new Module.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.base.tendermint.v1beta1.IModule);

                    /** Module path. */
                    public path: string;

                    /** Module version. */
                    public version: string;

                    /** Module sum. */
                    public sum: string;

                    /**
                     * Encodes the specified Module message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Module.verify|verify} messages.
                     * @param m Module message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.base.tendermint.v1beta1.IModule, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Module message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Module
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.tendermint.v1beta1.Module;
                }
            }
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Coin. */
            interface ICoin {

                /** Coin denom */
                denom?: (string|null);

                /** Coin amount */
                amount?: (string|null);
            }

            /** Represents a Coin. */
            class Coin implements ICoin {

                /**
                 * Constructs a new Coin.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.base.v1beta1.ICoin);

                /** Coin denom. */
                public denom: string;

                /** Coin amount. */
                public amount: string;

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param m Coin message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.base.v1beta1.ICoin, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.v1beta1.Coin;
            }

            /** Properties of a DecCoin. */
            interface IDecCoin {

                /** DecCoin denom */
                denom?: (string|null);

                /** DecCoin amount */
                amount?: (string|null);
            }

            /** Represents a DecCoin. */
            class DecCoin implements IDecCoin {

                /**
                 * Constructs a new DecCoin.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.base.v1beta1.IDecCoin);

                /** DecCoin denom. */
                public denom: string;

                /** DecCoin amount. */
                public amount: string;

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param m DecCoin message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.base.v1beta1.IDecCoin, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.v1beta1.DecCoin;
            }

            /** Properties of an IntProto. */
            interface IIntProto {

                /** IntProto int */
                int?: (string|null);
            }

            /** Represents an IntProto. */
            class IntProto implements IIntProto {

                /**
                 * Constructs a new IntProto.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.base.v1beta1.IIntProto);

                /** IntProto int. */
                public int: string;

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param m IntProto message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.base.v1beta1.IIntProto, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.v1beta1.IntProto;
            }

            /** Properties of a DecProto. */
            interface IDecProto {

                /** DecProto dec */
                dec?: (string|null);
            }

            /** Represents a DecProto. */
            class DecProto implements IDecProto {

                /**
                 * Constructs a new DecProto.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.base.v1beta1.IDecProto);

                /** DecProto dec. */
                public dec: string;

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param m DecProto message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.base.v1beta1.IDecProto, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.base.v1beta1.DecProto;
            }
        }
    }

    /** Namespace capability. */
    namespace capability {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisOwners. */
            interface IGenesisOwners {

                /** GenesisOwners index */
                index?: (Long|null);

                /** GenesisOwners index_owners */
                index_owners?: (cosmos.capability.v1beta1.ICapabilityOwners|null);
            }

            /** Represents a GenesisOwners. */
            class GenesisOwners implements IGenesisOwners {

                /**
                 * Constructs a new GenesisOwners.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.capability.v1beta1.IGenesisOwners);

                /** GenesisOwners index. */
                public index: Long;

                /** GenesisOwners index_owners. */
                public index_owners?: (cosmos.capability.v1beta1.ICapabilityOwners|null);

                /**
                 * Encodes the specified GenesisOwners message. Does not implicitly {@link cosmos.capability.v1beta1.GenesisOwners.verify|verify} messages.
                 * @param m GenesisOwners message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.capability.v1beta1.IGenesisOwners, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisOwners message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.capability.v1beta1.GenesisOwners;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState index */
                index?: (Long|null);

                /** GenesisState owners */
                owners?: (cosmos.capability.v1beta1.IGenesisOwners[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.capability.v1beta1.IGenesisState);

                /** GenesisState index. */
                public index: Long;

                /** GenesisState owners. */
                public owners: cosmos.capability.v1beta1.IGenesisOwners[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.capability.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.capability.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.capability.v1beta1.GenesisState;
            }

            /** Properties of a Capability. */
            interface ICapability {

                /** Capability index */
                index?: (Long|null);
            }

            /** Represents a Capability. */
            class Capability implements ICapability {

                /**
                 * Constructs a new Capability.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.capability.v1beta1.ICapability);

                /** Capability index. */
                public index: Long;

                /**
                 * Encodes the specified Capability message. Does not implicitly {@link cosmos.capability.v1beta1.Capability.verify|verify} messages.
                 * @param m Capability message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.capability.v1beta1.ICapability, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Capability message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Capability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.capability.v1beta1.Capability;
            }

            /** Properties of an Owner. */
            interface IOwner {

                /** Owner module */
                module?: (string|null);

                /** Owner name */
                name?: (string|null);
            }

            /** Represents an Owner. */
            class Owner implements IOwner {

                /**
                 * Constructs a new Owner.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.capability.v1beta1.IOwner);

                /** Owner module. */
                public module: string;

                /** Owner name. */
                public name: string;

                /**
                 * Encodes the specified Owner message. Does not implicitly {@link cosmos.capability.v1beta1.Owner.verify|verify} messages.
                 * @param m Owner message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.capability.v1beta1.IOwner, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Owner message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Owner
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.capability.v1beta1.Owner;
            }

            /** Properties of a CapabilityOwners. */
            interface ICapabilityOwners {

                /** CapabilityOwners owners */
                owners?: (cosmos.capability.v1beta1.IOwner[]|null);
            }

            /** Represents a CapabilityOwners. */
            class CapabilityOwners implements ICapabilityOwners {

                /**
                 * Constructs a new CapabilityOwners.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.capability.v1beta1.ICapabilityOwners);

                /** CapabilityOwners owners. */
                public owners: cosmos.capability.v1beta1.IOwner[];

                /**
                 * Encodes the specified CapabilityOwners message. Does not implicitly {@link cosmos.capability.v1beta1.CapabilityOwners.verify|verify} messages.
                 * @param m CapabilityOwners message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.capability.v1beta1.ICapabilityOwners, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CapabilityOwners message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CapabilityOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.capability.v1beta1.CapabilityOwners;
            }
        }
    }

    /** Namespace crisis. */
    namespace crisis {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState constant_fee */
                constant_fee?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crisis.v1beta1.IGenesisState);

                /** GenesisState constant_fee. */
                public constant_fee?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.crisis.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crisis.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crisis.v1beta1.GenesisState;
            }

            /** Properties of a MsgVerifyInvariant. */
            interface IMsgVerifyInvariant {

                /** MsgVerifyInvariant sender */
                sender?: (string|null);

                /** MsgVerifyInvariant invariant_module_name */
                invariant_module_name?: (string|null);

                /** MsgVerifyInvariant invariant_route */
                invariant_route?: (string|null);
            }

            /** Represents a MsgVerifyInvariant. */
            class MsgVerifyInvariant implements IMsgVerifyInvariant {

                /**
                 * Constructs a new MsgVerifyInvariant.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crisis.v1beta1.IMsgVerifyInvariant);

                /** MsgVerifyInvariant sender. */
                public sender: string;

                /** MsgVerifyInvariant invariant_module_name. */
                public invariant_module_name: string;

                /** MsgVerifyInvariant invariant_route. */
                public invariant_route: string;

                /**
                 * Encodes the specified MsgVerifyInvariant message. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariant.verify|verify} messages.
                 * @param m MsgVerifyInvariant message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crisis.v1beta1.IMsgVerifyInvariant, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVerifyInvariant message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgVerifyInvariant
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crisis.v1beta1.MsgVerifyInvariant;
            }

            /** Properties of a MsgVerifyInvariantResponse. */
            interface IMsgVerifyInvariantResponse {
            }

            /** Represents a MsgVerifyInvariantResponse. */
            class MsgVerifyInvariantResponse implements IMsgVerifyInvariantResponse {

                /**
                 * Constructs a new MsgVerifyInvariantResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crisis.v1beta1.IMsgVerifyInvariantResponse);

                /**
                 * Encodes the specified MsgVerifyInvariantResponse message. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariantResponse.verify|verify} messages.
                 * @param m MsgVerifyInvariantResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crisis.v1beta1.IMsgVerifyInvariantResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVerifyInvariantResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgVerifyInvariantResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crisis.v1beta1.MsgVerifyInvariantResponse;
            }
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Namespace ed25519. */
        namespace ed25519 {

            /** Properties of a PubKey. */
            interface IPubKey {

                /** PubKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PubKey. */
            class PubKey implements IPubKey {

                /**
                 * Constructs a new PubKey.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crypto.ed25519.IPubKey);

                /** PubKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PubKey message. Does not implicitly {@link cosmos.crypto.ed25519.PubKey.verify|verify} messages.
                 * @param m PubKey message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crypto.ed25519.IPubKey, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PubKey message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.ed25519.PubKey;
            }

            /** Properties of a PrivKey. */
            interface IPrivKey {

                /** PrivKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PrivKey. */
            class PrivKey implements IPrivKey {

                /**
                 * Constructs a new PrivKey.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crypto.ed25519.IPrivKey);

                /** PrivKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PrivKey message. Does not implicitly {@link cosmos.crypto.ed25519.PrivKey.verify|verify} messages.
                 * @param m PrivKey message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crypto.ed25519.IPrivKey, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.ed25519.PrivKey;
            }
        }

        /** Namespace multisig. */
        namespace multisig {

            /** Properties of a LegacyAminoPubKey. */
            interface ILegacyAminoPubKey {

                /** LegacyAminoPubKey threshold */
                threshold?: (number|null);

                /** LegacyAminoPubKey public_keys */
                public_keys?: (google.protobuf.IAny[]|null);
            }

            /** Represents a LegacyAminoPubKey. */
            class LegacyAminoPubKey implements ILegacyAminoPubKey {

                /**
                 * Constructs a new LegacyAminoPubKey.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crypto.multisig.ILegacyAminoPubKey);

                /** LegacyAminoPubKey threshold. */
                public threshold: number;

                /** LegacyAminoPubKey public_keys. */
                public public_keys: google.protobuf.IAny[];

                /**
                 * Encodes the specified LegacyAminoPubKey message. Does not implicitly {@link cosmos.crypto.multisig.LegacyAminoPubKey.verify|verify} messages.
                 * @param m LegacyAminoPubKey message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crypto.multisig.ILegacyAminoPubKey, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LegacyAminoPubKey message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns LegacyAminoPubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.multisig.LegacyAminoPubKey;
            }

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a MultiSignature. */
                interface IMultiSignature {

                    /** MultiSignature signatures */
                    signatures?: (Uint8Array[]|null);
                }

                /** Represents a MultiSignature. */
                class MultiSignature implements IMultiSignature {

                    /**
                     * Constructs a new MultiSignature.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.crypto.multisig.v1beta1.IMultiSignature);

                    /** MultiSignature signatures. */
                    public signatures: Uint8Array[];

                    /**
                     * Encodes the specified MultiSignature message. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.MultiSignature.verify|verify} messages.
                     * @param m MultiSignature message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.crypto.multisig.v1beta1.IMultiSignature, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MultiSignature message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MultiSignature
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.multisig.v1beta1.MultiSignature;
                }

                /** Properties of a CompactBitArray. */
                interface ICompactBitArray {

                    /** CompactBitArray extra_bits_stored */
                    extra_bits_stored?: (number|null);

                    /** CompactBitArray elems */
                    elems?: (Uint8Array|null);
                }

                /** Represents a CompactBitArray. */
                class CompactBitArray implements ICompactBitArray {

                    /**
                     * Constructs a new CompactBitArray.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.crypto.multisig.v1beta1.ICompactBitArray);

                    /** CompactBitArray extra_bits_stored. */
                    public extra_bits_stored: number;

                    /** CompactBitArray elems. */
                    public elems: Uint8Array;

                    /**
                     * Encodes the specified CompactBitArray message. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.CompactBitArray.verify|verify} messages.
                     * @param m CompactBitArray message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.crypto.multisig.v1beta1.ICompactBitArray, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CompactBitArray message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns CompactBitArray
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.multisig.v1beta1.CompactBitArray;
                }
            }
        }

        /** Namespace secp256k1. */
        namespace secp256k1 {

            /** Properties of a PubKey. */
            interface IPubKey {

                /** PubKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PubKey. */
            class PubKey implements IPubKey {

                /**
                 * Constructs a new PubKey.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crypto.secp256k1.IPubKey);

                /** PubKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PubKey message. Does not implicitly {@link cosmos.crypto.secp256k1.PubKey.verify|verify} messages.
                 * @param m PubKey message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crypto.secp256k1.IPubKey, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PubKey message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.secp256k1.PubKey;
            }

            /** Properties of a PrivKey. */
            interface IPrivKey {

                /** PrivKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PrivKey. */
            class PrivKey implements IPrivKey {

                /**
                 * Constructs a new PrivKey.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.crypto.secp256k1.IPrivKey);

                /** PrivKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PrivKey message. Does not implicitly {@link cosmos.crypto.secp256k1.PrivKey.verify|verify} messages.
                 * @param m PrivKey message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.crypto.secp256k1.IPrivKey, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.crypto.secp256k1.PrivKey;
            }
        }
    }

    /** Namespace distribution. */
    namespace distribution {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.distribution.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.distribution.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryParamsResponse;
            }

            /** Properties of a QueryValidatorOutstandingRewardsRequest. */
            interface IQueryValidatorOutstandingRewardsRequest {

                /** QueryValidatorOutstandingRewardsRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryValidatorOutstandingRewardsRequest. */
            class QueryValidatorOutstandingRewardsRequest implements IQueryValidatorOutstandingRewardsRequest {

                /**
                 * Constructs a new QueryValidatorOutstandingRewardsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest);

                /** QueryValidatorOutstandingRewardsRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.verify|verify} messages.
                 * @param m QueryValidatorOutstandingRewardsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorOutstandingRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest;
            }

            /** Properties of a QueryValidatorOutstandingRewardsResponse. */
            interface IQueryValidatorOutstandingRewardsResponse {

                /** QueryValidatorOutstandingRewardsResponse rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewards|null);
            }

            /** Represents a QueryValidatorOutstandingRewardsResponse. */
            class QueryValidatorOutstandingRewardsResponse implements IQueryValidatorOutstandingRewardsResponse {

                /**
                 * Constructs a new QueryValidatorOutstandingRewardsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsResponse);

                /** QueryValidatorOutstandingRewardsResponse rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewards|null);

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.verify|verify} messages.
                 * @param m QueryValidatorOutstandingRewardsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorOutstandingRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse;
            }

            /** Properties of a QueryValidatorCommissionRequest. */
            interface IQueryValidatorCommissionRequest {

                /** QueryValidatorCommissionRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryValidatorCommissionRequest. */
            class QueryValidatorCommissionRequest implements IQueryValidatorCommissionRequest {

                /**
                 * Constructs a new QueryValidatorCommissionRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest);

                /** QueryValidatorCommissionRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryValidatorCommissionRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.verify|verify} messages.
                 * @param m QueryValidatorCommissionRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorCommissionRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorCommissionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorCommissionRequest;
            }

            /** Properties of a QueryValidatorCommissionResponse. */
            interface IQueryValidatorCommissionResponse {

                /** QueryValidatorCommissionResponse commission */
                commission?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);
            }

            /** Represents a QueryValidatorCommissionResponse. */
            class QueryValidatorCommissionResponse implements IQueryValidatorCommissionResponse {

                /**
                 * Constructs a new QueryValidatorCommissionResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorCommissionResponse);

                /** QueryValidatorCommissionResponse commission. */
                public commission?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);

                /**
                 * Encodes the specified QueryValidatorCommissionResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.verify|verify} messages.
                 * @param m QueryValidatorCommissionResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorCommissionResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorCommissionResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorCommissionResponse;
            }

            /** Properties of a QueryValidatorSlashesRequest. */
            interface IQueryValidatorSlashesRequest {

                /** QueryValidatorSlashesRequest validator_address */
                validator_address?: (string|null);

                /** QueryValidatorSlashesRequest starting_height */
                starting_height?: (Long|null);

                /** QueryValidatorSlashesRequest ending_height */
                ending_height?: (Long|null);

                /** QueryValidatorSlashesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorSlashesRequest. */
            class QueryValidatorSlashesRequest implements IQueryValidatorSlashesRequest {

                /**
                 * Constructs a new QueryValidatorSlashesRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest);

                /** QueryValidatorSlashesRequest validator_address. */
                public validator_address: string;

                /** QueryValidatorSlashesRequest starting_height. */
                public starting_height: Long;

                /** QueryValidatorSlashesRequest ending_height. */
                public ending_height: Long;

                /** QueryValidatorSlashesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorSlashesRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.verify|verify} messages.
                 * @param m QueryValidatorSlashesRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorSlashesRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorSlashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorSlashesRequest;
            }

            /** Properties of a QueryValidatorSlashesResponse. */
            interface IQueryValidatorSlashesResponse {

                /** QueryValidatorSlashesResponse slashes */
                slashes?: (cosmos.distribution.v1beta1.IValidatorSlashEvent[]|null);

                /** QueryValidatorSlashesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorSlashesResponse. */
            class QueryValidatorSlashesResponse implements IQueryValidatorSlashesResponse {

                /**
                 * Constructs a new QueryValidatorSlashesResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryValidatorSlashesResponse);

                /** QueryValidatorSlashesResponse slashes. */
                public slashes: cosmos.distribution.v1beta1.IValidatorSlashEvent[];

                /** QueryValidatorSlashesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorSlashesResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.verify|verify} messages.
                 * @param m QueryValidatorSlashesResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryValidatorSlashesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorSlashesResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorSlashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryValidatorSlashesResponse;
            }

            /** Properties of a QueryDelegationRewardsRequest. */
            interface IQueryDelegationRewardsRequest {

                /** QueryDelegationRewardsRequest delegator_address */
                delegator_address?: (string|null);

                /** QueryDelegationRewardsRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryDelegationRewardsRequest. */
            class QueryDelegationRewardsRequest implements IQueryDelegationRewardsRequest {

                /**
                 * Constructs a new QueryDelegationRewardsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest);

                /** QueryDelegationRewardsRequest delegator_address. */
                public delegator_address: string;

                /** QueryDelegationRewardsRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryDelegationRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.verify|verify} messages.
                 * @param m QueryDelegationRewardsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRewardsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegationRewardsRequest;
            }

            /** Properties of a QueryDelegationRewardsResponse. */
            interface IQueryDelegationRewardsResponse {

                /** QueryDelegationRewardsResponse rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryDelegationRewardsResponse. */
            class QueryDelegationRewardsResponse implements IQueryDelegationRewardsResponse {

                /**
                 * Constructs a new QueryDelegationRewardsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegationRewardsResponse);

                /** QueryDelegationRewardsResponse rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryDelegationRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.verify|verify} messages.
                 * @param m QueryDelegationRewardsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegationRewardsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRewardsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegationRewardsResponse;
            }

            /** Properties of a QueryDelegationTotalRewardsRequest. */
            interface IQueryDelegationTotalRewardsRequest {

                /** QueryDelegationTotalRewardsRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegationTotalRewardsRequest. */
            class QueryDelegationTotalRewardsRequest implements IQueryDelegationTotalRewardsRequest {

                /**
                 * Constructs a new QueryDelegationTotalRewardsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest);

                /** QueryDelegationTotalRewardsRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegationTotalRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.verify|verify} messages.
                 * @param m QueryDelegationTotalRewardsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationTotalRewardsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationTotalRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest;
            }

            /** Properties of a QueryDelegationTotalRewardsResponse. */
            interface IQueryDelegationTotalRewardsResponse {

                /** QueryDelegationTotalRewardsResponse rewards */
                rewards?: (cosmos.distribution.v1beta1.IDelegationDelegatorReward[]|null);

                /** QueryDelegationTotalRewardsResponse total */
                total?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryDelegationTotalRewardsResponse. */
            class QueryDelegationTotalRewardsResponse implements IQueryDelegationTotalRewardsResponse {

                /**
                 * Constructs a new QueryDelegationTotalRewardsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsResponse);

                /** QueryDelegationTotalRewardsResponse rewards. */
                public rewards: cosmos.distribution.v1beta1.IDelegationDelegatorReward[];

                /** QueryDelegationTotalRewardsResponse total. */
                public total: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryDelegationTotalRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.verify|verify} messages.
                 * @param m QueryDelegationTotalRewardsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationTotalRewardsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationTotalRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse;
            }

            /** Properties of a QueryDelegatorValidatorsRequest. */
            interface IQueryDelegatorValidatorsRequest {

                /** QueryDelegatorValidatorsRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegatorValidatorsRequest. */
            class QueryDelegatorValidatorsRequest implements IQueryDelegatorValidatorsRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest);

                /** QueryDelegatorValidatorsRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param m QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest;
            }

            /** Properties of a QueryDelegatorValidatorsResponse. */
            interface IQueryDelegatorValidatorsResponse {

                /** QueryDelegatorValidatorsResponse validators */
                validators?: (string[]|null);
            }

            /** Represents a QueryDelegatorValidatorsResponse. */
            class QueryDelegatorValidatorsResponse implements IQueryDelegatorValidatorsResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsResponse);

                /** QueryDelegatorValidatorsResponse validators. */
                public validators: string[];

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param m QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse;
            }

            /** Properties of a QueryDelegatorWithdrawAddressRequest. */
            interface IQueryDelegatorWithdrawAddressRequest {

                /** QueryDelegatorWithdrawAddressRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegatorWithdrawAddressRequest. */
            class QueryDelegatorWithdrawAddressRequest implements IQueryDelegatorWithdrawAddressRequest {

                /**
                 * Constructs a new QueryDelegatorWithdrawAddressRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest);

                /** QueryDelegatorWithdrawAddressRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.verify|verify} messages.
                 * @param m QueryDelegatorWithdrawAddressRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorWithdrawAddressRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest;
            }

            /** Properties of a QueryDelegatorWithdrawAddressResponse. */
            interface IQueryDelegatorWithdrawAddressResponse {

                /** QueryDelegatorWithdrawAddressResponse withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a QueryDelegatorWithdrawAddressResponse. */
            class QueryDelegatorWithdrawAddressResponse implements IQueryDelegatorWithdrawAddressResponse {

                /**
                 * Constructs a new QueryDelegatorWithdrawAddressResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressResponse);

                /** QueryDelegatorWithdrawAddressResponse withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.verify|verify} messages.
                 * @param m QueryDelegatorWithdrawAddressResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse;
            }

            /** Properties of a QueryCommunityPoolRequest. */
            interface IQueryCommunityPoolRequest {
            }

            /** Represents a QueryCommunityPoolRequest. */
            class QueryCommunityPoolRequest implements IQueryCommunityPoolRequest {

                /**
                 * Constructs a new QueryCommunityPoolRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest);

                /**
                 * Encodes the specified QueryCommunityPoolRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolRequest.verify|verify} messages.
                 * @param m QueryCommunityPoolRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCommunityPoolRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCommunityPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryCommunityPoolRequest;
            }

            /** Properties of a QueryCommunityPoolResponse. */
            interface IQueryCommunityPoolResponse {

                /** QueryCommunityPoolResponse pool */
                pool?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryCommunityPoolResponse. */
            class QueryCommunityPoolResponse implements IQueryCommunityPoolResponse {

                /**
                 * Constructs a new QueryCommunityPoolResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IQueryCommunityPoolResponse);

                /** QueryCommunityPoolResponse pool. */
                public pool: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryCommunityPoolResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolResponse.verify|verify} messages.
                 * @param m QueryCommunityPoolResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IQueryCommunityPoolResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCommunityPoolResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.QueryCommunityPoolResponse;
            }

            /** Properties of a DelegatorWithdrawInfo. */
            interface IDelegatorWithdrawInfo {

                /** DelegatorWithdrawInfo delegator_address */
                delegator_address?: (string|null);

                /** DelegatorWithdrawInfo withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a DelegatorWithdrawInfo. */
            class DelegatorWithdrawInfo implements IDelegatorWithdrawInfo {

                /**
                 * Constructs a new DelegatorWithdrawInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo);

                /** DelegatorWithdrawInfo delegator_address. */
                public delegator_address: string;

                /** DelegatorWithdrawInfo withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified DelegatorWithdrawInfo message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorWithdrawInfo.verify|verify} messages.
                 * @param m DelegatorWithdrawInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorWithdrawInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelegatorWithdrawInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.DelegatorWithdrawInfo;
            }

            /** Properties of a ValidatorOutstandingRewardsRecord. */
            interface IValidatorOutstandingRewardsRecord {

                /** ValidatorOutstandingRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorOutstandingRewardsRecord outstanding_rewards */
                outstanding_rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorOutstandingRewardsRecord. */
            class ValidatorOutstandingRewardsRecord implements IValidatorOutstandingRewardsRecord {

                /**
                 * Constructs a new ValidatorOutstandingRewardsRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord);

                /** ValidatorOutstandingRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorOutstandingRewardsRecord outstanding_rewards. */
                public outstanding_rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorOutstandingRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.verify|verify} messages.
                 * @param m ValidatorOutstandingRewardsRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorOutstandingRewardsRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorOutstandingRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord;
            }

            /** Properties of a ValidatorAccumulatedCommissionRecord. */
            interface IValidatorAccumulatedCommissionRecord {

                /** ValidatorAccumulatedCommissionRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorAccumulatedCommissionRecord accumulated */
                accumulated?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);
            }

            /** Represents a ValidatorAccumulatedCommissionRecord. */
            class ValidatorAccumulatedCommissionRecord implements IValidatorAccumulatedCommissionRecord {

                /**
                 * Constructs a new ValidatorAccumulatedCommissionRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord);

                /** ValidatorAccumulatedCommissionRecord validator_address. */
                public validator_address: string;

                /** ValidatorAccumulatedCommissionRecord accumulated. */
                public accumulated?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);

                /**
                 * Encodes the specified ValidatorAccumulatedCommissionRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.verify|verify} messages.
                 * @param m ValidatorAccumulatedCommissionRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorAccumulatedCommissionRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorAccumulatedCommissionRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord;
            }

            /** Properties of a ValidatorHistoricalRewardsRecord. */
            interface IValidatorHistoricalRewardsRecord {

                /** ValidatorHistoricalRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorHistoricalRewardsRecord period */
                period?: (Long|null);

                /** ValidatorHistoricalRewardsRecord rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewards|null);
            }

            /** Represents a ValidatorHistoricalRewardsRecord. */
            class ValidatorHistoricalRewardsRecord implements IValidatorHistoricalRewardsRecord {

                /**
                 * Constructs a new ValidatorHistoricalRewardsRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord);

                /** ValidatorHistoricalRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorHistoricalRewardsRecord period. */
                public period: Long;

                /** ValidatorHistoricalRewardsRecord rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewards|null);

                /**
                 * Encodes the specified ValidatorHistoricalRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.verify|verify} messages.
                 * @param m ValidatorHistoricalRewardsRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorHistoricalRewardsRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorHistoricalRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord;
            }

            /** Properties of a ValidatorCurrentRewardsRecord. */
            interface IValidatorCurrentRewardsRecord {

                /** ValidatorCurrentRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorCurrentRewardsRecord rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewards|null);
            }

            /** Represents a ValidatorCurrentRewardsRecord. */
            class ValidatorCurrentRewardsRecord implements IValidatorCurrentRewardsRecord {

                /**
                 * Constructs a new ValidatorCurrentRewardsRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord);

                /** ValidatorCurrentRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorCurrentRewardsRecord rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewards|null);

                /**
                 * Encodes the specified ValidatorCurrentRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.verify|verify} messages.
                 * @param m ValidatorCurrentRewardsRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorCurrentRewardsRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorCurrentRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord;
            }

            /** Properties of a DelegatorStartingInfoRecord. */
            interface IDelegatorStartingInfoRecord {

                /** DelegatorStartingInfoRecord delegator_address */
                delegator_address?: (string|null);

                /** DelegatorStartingInfoRecord validator_address */
                validator_address?: (string|null);

                /** DelegatorStartingInfoRecord starting_info */
                starting_info?: (cosmos.distribution.v1beta1.IDelegatorStartingInfo|null);
            }

            /** Represents a DelegatorStartingInfoRecord. */
            class DelegatorStartingInfoRecord implements IDelegatorStartingInfoRecord {

                /**
                 * Constructs a new DelegatorStartingInfoRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord);

                /** DelegatorStartingInfoRecord delegator_address. */
                public delegator_address: string;

                /** DelegatorStartingInfoRecord validator_address. */
                public validator_address: string;

                /** DelegatorStartingInfoRecord starting_info. */
                public starting_info?: (cosmos.distribution.v1beta1.IDelegatorStartingInfo|null);

                /**
                 * Encodes the specified DelegatorStartingInfoRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.verify|verify} messages.
                 * @param m DelegatorStartingInfoRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorStartingInfoRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelegatorStartingInfoRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.DelegatorStartingInfoRecord;
            }

            /** Properties of a ValidatorSlashEventRecord. */
            interface IValidatorSlashEventRecord {

                /** ValidatorSlashEventRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorSlashEventRecord height */
                height?: (Long|null);

                /** ValidatorSlashEventRecord period */
                period?: (Long|null);

                /** ValidatorSlashEventRecord validator_slash_event */
                validator_slash_event?: (cosmos.distribution.v1beta1.IValidatorSlashEvent|null);
            }

            /** Represents a ValidatorSlashEventRecord. */
            class ValidatorSlashEventRecord implements IValidatorSlashEventRecord {

                /**
                 * Constructs a new ValidatorSlashEventRecord.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorSlashEventRecord);

                /** ValidatorSlashEventRecord validator_address. */
                public validator_address: string;

                /** ValidatorSlashEventRecord height. */
                public height: Long;

                /** ValidatorSlashEventRecord period. */
                public period: Long;

                /** ValidatorSlashEventRecord validator_slash_event. */
                public validator_slash_event?: (cosmos.distribution.v1beta1.IValidatorSlashEvent|null);

                /**
                 * Encodes the specified ValidatorSlashEventRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEventRecord.verify|verify} messages.
                 * @param m ValidatorSlashEventRecord message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorSlashEventRecord, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEventRecord message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorSlashEventRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorSlashEventRecord;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.distribution.v1beta1.IParams|null);

                /** GenesisState fee_pool */
                fee_pool?: (cosmos.distribution.v1beta1.IFeePool|null);

                /** GenesisState delegator_withdraw_infos */
                delegator_withdraw_infos?: (cosmos.distribution.v1beta1.IDelegatorWithdrawInfo[]|null);

                /** GenesisState previous_proposer */
                previous_proposer?: (string|null);

                /** GenesisState outstanding_rewards */
                outstanding_rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord[]|null);

                /** GenesisState validator_accumulated_commissions */
                validator_accumulated_commissions?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord[]|null);

                /** GenesisState validator_historical_rewards */
                validator_historical_rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord[]|null);

                /** GenesisState validator_current_rewards */
                validator_current_rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord[]|null);

                /** GenesisState delegator_starting_infos */
                delegator_starting_infos?: (cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord[]|null);

                /** GenesisState validator_slash_events */
                validator_slash_events?: (cosmos.distribution.v1beta1.IValidatorSlashEventRecord[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.distribution.v1beta1.IParams|null);

                /** GenesisState fee_pool. */
                public fee_pool?: (cosmos.distribution.v1beta1.IFeePool|null);

                /** GenesisState delegator_withdraw_infos. */
                public delegator_withdraw_infos: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo[];

                /** GenesisState previous_proposer. */
                public previous_proposer: string;

                /** GenesisState outstanding_rewards. */
                public outstanding_rewards: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord[];

                /** GenesisState validator_accumulated_commissions. */
                public validator_accumulated_commissions: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord[];

                /** GenesisState validator_historical_rewards. */
                public validator_historical_rewards: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord[];

                /** GenesisState validator_current_rewards. */
                public validator_current_rewards: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord[];

                /** GenesisState delegator_starting_infos. */
                public delegator_starting_infos: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord[];

                /** GenesisState validator_slash_events. */
                public validator_slash_events: cosmos.distribution.v1beta1.IValidatorSlashEventRecord[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.distribution.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.GenesisState;
            }

            /** Properties of a MsgSetWithdrawAddress. */
            interface IMsgSetWithdrawAddress {

                /** MsgSetWithdrawAddress delegator_address */
                delegator_address?: (string|null);

                /** MsgSetWithdrawAddress withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a MsgSetWithdrawAddress. */
            class MsgSetWithdrawAddress implements IMsgSetWithdrawAddress {

                /**
                 * Constructs a new MsgSetWithdrawAddress.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress);

                /** MsgSetWithdrawAddress delegator_address. */
                public delegator_address: string;

                /** MsgSetWithdrawAddress withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified MsgSetWithdrawAddress message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddress.verify|verify} messages.
                 * @param m MsgSetWithdrawAddress message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetWithdrawAddress message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSetWithdrawAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgSetWithdrawAddress;
            }

            /** Properties of a MsgSetWithdrawAddressResponse. */
            interface IMsgSetWithdrawAddressResponse {
            }

            /** Represents a MsgSetWithdrawAddressResponse. */
            class MsgSetWithdrawAddressResponse implements IMsgSetWithdrawAddressResponse {

                /**
                 * Constructs a new MsgSetWithdrawAddressResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgSetWithdrawAddressResponse);

                /**
                 * Encodes the specified MsgSetWithdrawAddressResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse.verify|verify} messages.
                 * @param m MsgSetWithdrawAddressResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgSetWithdrawAddressResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetWithdrawAddressResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSetWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse;
            }

            /** Properties of a MsgWithdrawDelegatorReward. */
            interface IMsgWithdrawDelegatorReward {

                /** MsgWithdrawDelegatorReward delegator_address */
                delegator_address?: (string|null);

                /** MsgWithdrawDelegatorReward validator_address */
                validator_address?: (string|null);
            }

            /** Represents a MsgWithdrawDelegatorReward. */
            class MsgWithdrawDelegatorReward implements IMsgWithdrawDelegatorReward {

                /**
                 * Constructs a new MsgWithdrawDelegatorReward.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward);

                /** MsgWithdrawDelegatorReward delegator_address. */
                public delegator_address: string;

                /** MsgWithdrawDelegatorReward validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified MsgWithdrawDelegatorReward message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.verify|verify} messages.
                 * @param m MsgWithdrawDelegatorReward message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawDelegatorReward message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgWithdrawDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward;
            }

            /** Properties of a MsgWithdrawDelegatorRewardResponse. */
            interface IMsgWithdrawDelegatorRewardResponse {
            }

            /** Represents a MsgWithdrawDelegatorRewardResponse. */
            class MsgWithdrawDelegatorRewardResponse implements IMsgWithdrawDelegatorRewardResponse {

                /**
                 * Constructs a new MsgWithdrawDelegatorRewardResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorRewardResponse);

                /**
                 * Encodes the specified MsgWithdrawDelegatorRewardResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.verify|verify} messages.
                 * @param m MsgWithdrawDelegatorRewardResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorRewardResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawDelegatorRewardResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgWithdrawDelegatorRewardResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse;
            }

            /** Properties of a MsgWithdrawValidatorCommission. */
            interface IMsgWithdrawValidatorCommission {

                /** MsgWithdrawValidatorCommission validator_address */
                validator_address?: (string|null);
            }

            /** Represents a MsgWithdrawValidatorCommission. */
            class MsgWithdrawValidatorCommission implements IMsgWithdrawValidatorCommission {

                /**
                 * Constructs a new MsgWithdrawValidatorCommission.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission);

                /** MsgWithdrawValidatorCommission validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified MsgWithdrawValidatorCommission message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.verify|verify} messages.
                 * @param m MsgWithdrawValidatorCommission message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawValidatorCommission message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgWithdrawValidatorCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission;
            }

            /** Properties of a MsgWithdrawValidatorCommissionResponse. */
            interface IMsgWithdrawValidatorCommissionResponse {
            }

            /** Represents a MsgWithdrawValidatorCommissionResponse. */
            class MsgWithdrawValidatorCommissionResponse implements IMsgWithdrawValidatorCommissionResponse {

                /**
                 * Constructs a new MsgWithdrawValidatorCommissionResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommissionResponse);

                /**
                 * Encodes the specified MsgWithdrawValidatorCommissionResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.verify|verify} messages.
                 * @param m MsgWithdrawValidatorCommissionResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommissionResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawValidatorCommissionResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgWithdrawValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse;
            }

            /** Properties of a MsgFundCommunityPool. */
            interface IMsgFundCommunityPool {

                /** MsgFundCommunityPool amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgFundCommunityPool depositor */
                depositor?: (string|null);
            }

            /** Represents a MsgFundCommunityPool. */
            class MsgFundCommunityPool implements IMsgFundCommunityPool {

                /**
                 * Constructs a new MsgFundCommunityPool.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgFundCommunityPool);

                /** MsgFundCommunityPool amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** MsgFundCommunityPool depositor. */
                public depositor: string;

                /**
                 * Encodes the specified MsgFundCommunityPool message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPool.verify|verify} messages.
                 * @param m MsgFundCommunityPool message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgFundCommunityPool, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundCommunityPool message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgFundCommunityPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgFundCommunityPool;
            }

            /** Properties of a MsgFundCommunityPoolResponse. */
            interface IMsgFundCommunityPoolResponse {
            }

            /** Represents a MsgFundCommunityPoolResponse. */
            class MsgFundCommunityPoolResponse implements IMsgFundCommunityPoolResponse {

                /**
                 * Constructs a new MsgFundCommunityPoolResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IMsgFundCommunityPoolResponse);

                /**
                 * Encodes the specified MsgFundCommunityPoolResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse.verify|verify} messages.
                 * @param m MsgFundCommunityPoolResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IMsgFundCommunityPoolResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundCommunityPoolResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgFundCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params community_tax */
                community_tax?: (string|null);

                /** Params base_proposer_reward */
                base_proposer_reward?: (string|null);

                /** Params bonus_proposer_reward */
                bonus_proposer_reward?: (string|null);

                /** Params withdraw_addr_enabled */
                withdraw_addr_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IParams);

                /** Params community_tax. */
                public community_tax: string;

                /** Params base_proposer_reward. */
                public base_proposer_reward: string;

                /** Params bonus_proposer_reward. */
                public bonus_proposer_reward: string;

                /** Params withdraw_addr_enabled. */
                public withdraw_addr_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.distribution.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.Params;
            }

            /** Properties of a ValidatorHistoricalRewards. */
            interface IValidatorHistoricalRewards {

                /** ValidatorHistoricalRewards cumulative_reward_ratio */
                cumulative_reward_ratio?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorHistoricalRewards reference_count */
                reference_count?: (number|null);
            }

            /** Represents a ValidatorHistoricalRewards. */
            class ValidatorHistoricalRewards implements IValidatorHistoricalRewards {

                /**
                 * Constructs a new ValidatorHistoricalRewards.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorHistoricalRewards);

                /** ValidatorHistoricalRewards cumulative_reward_ratio. */
                public cumulative_reward_ratio: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorHistoricalRewards reference_count. */
                public reference_count: number;

                /**
                 * Encodes the specified ValidatorHistoricalRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewards.verify|verify} messages.
                 * @param m ValidatorHistoricalRewards message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorHistoricalRewards, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorHistoricalRewards message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorHistoricalRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;
            }

            /** Properties of a ValidatorCurrentRewards. */
            interface IValidatorCurrentRewards {

                /** ValidatorCurrentRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorCurrentRewards period */
                period?: (Long|null);
            }

            /** Represents a ValidatorCurrentRewards. */
            class ValidatorCurrentRewards implements IValidatorCurrentRewards {

                /**
                 * Constructs a new ValidatorCurrentRewards.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorCurrentRewards);

                /** ValidatorCurrentRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorCurrentRewards period. */
                public period: Long;

                /**
                 * Encodes the specified ValidatorCurrentRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewards.verify|verify} messages.
                 * @param m ValidatorCurrentRewards message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorCurrentRewards, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorCurrentRewards message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorCurrentRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorCurrentRewards;
            }

            /** Properties of a ValidatorAccumulatedCommission. */
            interface IValidatorAccumulatedCommission {

                /** ValidatorAccumulatedCommission commission */
                commission?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorAccumulatedCommission. */
            class ValidatorAccumulatedCommission implements IValidatorAccumulatedCommission {

                /**
                 * Constructs a new ValidatorAccumulatedCommission.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission);

                /** ValidatorAccumulatedCommission commission. */
                public commission: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorAccumulatedCommission message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommission.verify|verify} messages.
                 * @param m ValidatorAccumulatedCommission message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorAccumulatedCommission message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorAccumulatedCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;
            }

            /** Properties of a ValidatorOutstandingRewards. */
            interface IValidatorOutstandingRewards {

                /** ValidatorOutstandingRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorOutstandingRewards. */
            class ValidatorOutstandingRewards implements IValidatorOutstandingRewards {

                /**
                 * Constructs a new ValidatorOutstandingRewards.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorOutstandingRewards);

                /** ValidatorOutstandingRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorOutstandingRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewards.verify|verify} messages.
                 * @param m ValidatorOutstandingRewards message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorOutstandingRewards, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorOutstandingRewards message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorOutstandingRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;
            }

            /** Properties of a ValidatorSlashEvent. */
            interface IValidatorSlashEvent {

                /** ValidatorSlashEvent validator_period */
                validator_period?: (Long|null);

                /** ValidatorSlashEvent fraction */
                fraction?: (string|null);
            }

            /** Represents a ValidatorSlashEvent. */
            class ValidatorSlashEvent implements IValidatorSlashEvent {

                /**
                 * Constructs a new ValidatorSlashEvent.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorSlashEvent);

                /** ValidatorSlashEvent validator_period. */
                public validator_period: Long;

                /** ValidatorSlashEvent fraction. */
                public fraction: string;

                /**
                 * Encodes the specified ValidatorSlashEvent message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvent.verify|verify} messages.
                 * @param m ValidatorSlashEvent message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorSlashEvent, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvent message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorSlashEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorSlashEvent;
            }

            /** Properties of a ValidatorSlashEvents. */
            interface IValidatorSlashEvents {

                /** ValidatorSlashEvents validator_slash_events */
                validator_slash_events?: (cosmos.distribution.v1beta1.IValidatorSlashEvent[]|null);
            }

            /** Represents a ValidatorSlashEvents. */
            class ValidatorSlashEvents implements IValidatorSlashEvents {

                /**
                 * Constructs a new ValidatorSlashEvents.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IValidatorSlashEvents);

                /** ValidatorSlashEvents validator_slash_events. */
                public validator_slash_events: cosmos.distribution.v1beta1.IValidatorSlashEvent[];

                /**
                 * Encodes the specified ValidatorSlashEvents message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvents.verify|verify} messages.
                 * @param m ValidatorSlashEvents message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IValidatorSlashEvents, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvents message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorSlashEvents
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.ValidatorSlashEvents;
            }

            /** Properties of a FeePool. */
            interface IFeePool {

                /** FeePool community_pool */
                community_pool?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a FeePool. */
            class FeePool implements IFeePool {

                /**
                 * Constructs a new FeePool.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IFeePool);

                /** FeePool community_pool. */
                public community_pool: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified FeePool message. Does not implicitly {@link cosmos.distribution.v1beta1.FeePool.verify|verify} messages.
                 * @param m FeePool message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IFeePool, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeePool message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns FeePool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.FeePool;
            }

            /** Properties of a CommunityPoolSpendProposal. */
            interface ICommunityPoolSpendProposal {

                /** CommunityPoolSpendProposal title */
                title?: (string|null);

                /** CommunityPoolSpendProposal description */
                description?: (string|null);

                /** CommunityPoolSpendProposal recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposal amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a CommunityPoolSpendProposal. */
            class CommunityPoolSpendProposal implements ICommunityPoolSpendProposal {

                /**
                 * Constructs a new CommunityPoolSpendProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal);

                /** CommunityPoolSpendProposal title. */
                public title: string;

                /** CommunityPoolSpendProposal description. */
                public description: string;

                /** CommunityPoolSpendProposal recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposal amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified CommunityPoolSpendProposal message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposal.verify|verify} messages.
                 * @param m CommunityPoolSpendProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;
            }

            /** Properties of a DelegatorStartingInfo. */
            interface IDelegatorStartingInfo {

                /** DelegatorStartingInfo previous_period */
                previous_period?: (Long|null);

                /** DelegatorStartingInfo stake */
                stake?: (string|null);

                /** DelegatorStartingInfo height */
                height?: (Long|null);
            }

            /** Represents a DelegatorStartingInfo. */
            class DelegatorStartingInfo implements IDelegatorStartingInfo {

                /**
                 * Constructs a new DelegatorStartingInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IDelegatorStartingInfo);

                /** DelegatorStartingInfo previous_period. */
                public previous_period: Long;

                /** DelegatorStartingInfo stake. */
                public stake: string;

                /** DelegatorStartingInfo height. */
                public height: Long;

                /**
                 * Encodes the specified DelegatorStartingInfo message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfo.verify|verify} messages.
                 * @param m DelegatorStartingInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IDelegatorStartingInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorStartingInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelegatorStartingInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.DelegatorStartingInfo;
            }

            /** Properties of a DelegationDelegatorReward. */
            interface IDelegationDelegatorReward {

                /** DelegationDelegatorReward validator_address */
                validator_address?: (string|null);

                /** DelegationDelegatorReward reward */
                reward?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a DelegationDelegatorReward. */
            class DelegationDelegatorReward implements IDelegationDelegatorReward {

                /**
                 * Constructs a new DelegationDelegatorReward.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.IDelegationDelegatorReward);

                /** DelegationDelegatorReward validator_address. */
                public validator_address: string;

                /** DelegationDelegatorReward reward. */
                public reward: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified DelegationDelegatorReward message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegationDelegatorReward.verify|verify} messages.
                 * @param m DelegationDelegatorReward message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.IDelegationDelegatorReward, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationDelegatorReward message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelegationDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.DelegationDelegatorReward;
            }

            /** Properties of a CommunityPoolSpendProposalWithDeposit. */
            interface ICommunityPoolSpendProposalWithDeposit {

                /** CommunityPoolSpendProposalWithDeposit title */
                title?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit description */
                description?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit amount */
                amount?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit deposit */
                deposit?: (string|null);
            }

            /** Represents a CommunityPoolSpendProposalWithDeposit. */
            class CommunityPoolSpendProposalWithDeposit implements ICommunityPoolSpendProposalWithDeposit {

                /**
                 * Constructs a new CommunityPoolSpendProposalWithDeposit.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit);

                /** CommunityPoolSpendProposalWithDeposit title. */
                public title: string;

                /** CommunityPoolSpendProposalWithDeposit description. */
                public description: string;

                /** CommunityPoolSpendProposalWithDeposit recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposalWithDeposit amount. */
                public amount: string;

                /** CommunityPoolSpendProposalWithDeposit deposit. */
                public deposit: string;

                /**
                 * Encodes the specified CommunityPoolSpendProposalWithDeposit message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.verify|verify} messages.
                 * @param m CommunityPoolSpendProposalWithDeposit message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposalWithDeposit message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CommunityPoolSpendProposalWithDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;
            }
        }
    }

    /** Namespace evidence. */
    namespace evidence {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryEvidenceRequest. */
            interface IQueryEvidenceRequest {

                /** QueryEvidenceRequest evidence_hash */
                evidence_hash?: (Uint8Array|null);
            }

            /** Represents a QueryEvidenceRequest. */
            class QueryEvidenceRequest implements IQueryEvidenceRequest {

                /**
                 * Constructs a new QueryEvidenceRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IQueryEvidenceRequest);

                /** QueryEvidenceRequest evidence_hash. */
                public evidence_hash: Uint8Array;

                /**
                 * Encodes the specified QueryEvidenceRequest message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceRequest.verify|verify} messages.
                 * @param m QueryEvidenceRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IQueryEvidenceRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEvidenceRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.QueryEvidenceRequest;
            }

            /** Properties of a QueryEvidenceResponse. */
            interface IQueryEvidenceResponse {

                /** QueryEvidenceResponse evidence */
                evidence?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryEvidenceResponse. */
            class QueryEvidenceResponse implements IQueryEvidenceResponse {

                /**
                 * Constructs a new QueryEvidenceResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IQueryEvidenceResponse);

                /** QueryEvidenceResponse evidence. */
                public evidence?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceResponse.verify|verify} messages.
                 * @param m QueryEvidenceResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IQueryEvidenceResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEvidenceResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.QueryEvidenceResponse;
            }

            /** Properties of a QueryAllEvidenceRequest. */
            interface IQueryAllEvidenceRequest {

                /** QueryAllEvidenceRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryAllEvidenceRequest. */
            class QueryAllEvidenceRequest implements IQueryAllEvidenceRequest {

                /**
                 * Constructs a new QueryAllEvidenceRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest);

                /** QueryAllEvidenceRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryAllEvidenceRequest message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceRequest.verify|verify} messages.
                 * @param m QueryAllEvidenceRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllEvidenceRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.QueryAllEvidenceRequest;
            }

            /** Properties of a QueryAllEvidenceResponse. */
            interface IQueryAllEvidenceResponse {

                /** QueryAllEvidenceResponse evidence */
                evidence?: (google.protobuf.IAny[]|null);

                /** QueryAllEvidenceResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryAllEvidenceResponse. */
            class QueryAllEvidenceResponse implements IQueryAllEvidenceResponse {

                /**
                 * Constructs a new QueryAllEvidenceResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IQueryAllEvidenceResponse);

                /** QueryAllEvidenceResponse evidence. */
                public evidence: google.protobuf.IAny[];

                /** QueryAllEvidenceResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryAllEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceResponse.verify|verify} messages.
                 * @param m QueryAllEvidenceResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IQueryAllEvidenceResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllEvidenceResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAllEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.QueryAllEvidenceResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState evidence */
                evidence?: (google.protobuf.IAny[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IGenesisState);

                /** GenesisState evidence. */
                public evidence: google.protobuf.IAny[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.evidence.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.GenesisState;
            }

            /** Properties of an Equivocation. */
            interface IEquivocation {

                /** Equivocation height */
                height?: (Long|null);

                /** Equivocation time */
                time?: (google.protobuf.ITimestamp|null);

                /** Equivocation power */
                power?: (Long|null);

                /** Equivocation consensus_address */
                consensus_address?: (string|null);
            }

            /** Represents an Equivocation. */
            class Equivocation implements IEquivocation {

                /**
                 * Constructs a new Equivocation.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IEquivocation);

                /** Equivocation height. */
                public height: Long;

                /** Equivocation time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** Equivocation power. */
                public power: Long;

                /** Equivocation consensus_address. */
                public consensus_address: string;

                /**
                 * Encodes the specified Equivocation message. Does not implicitly {@link cosmos.evidence.v1beta1.Equivocation.verify|verify} messages.
                 * @param m Equivocation message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IEquivocation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Equivocation message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Equivocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.Equivocation;
            }

            /** Properties of a MsgSubmitEvidence. */
            interface IMsgSubmitEvidence {

                /** MsgSubmitEvidence submitter */
                submitter?: (string|null);

                /** MsgSubmitEvidence evidence */
                evidence?: (google.protobuf.IAny|null);
            }

            /** Represents a MsgSubmitEvidence. */
            class MsgSubmitEvidence implements IMsgSubmitEvidence {

                /**
                 * Constructs a new MsgSubmitEvidence.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IMsgSubmitEvidence);

                /** MsgSubmitEvidence submitter. */
                public submitter: string;

                /** MsgSubmitEvidence evidence. */
                public evidence?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified MsgSubmitEvidence message. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidence.verify|verify} messages.
                 * @param m MsgSubmitEvidence message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IMsgSubmitEvidence, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitEvidence message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSubmitEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.MsgSubmitEvidence;
            }

            /** Properties of a MsgSubmitEvidenceResponse. */
            interface IMsgSubmitEvidenceResponse {

                /** MsgSubmitEvidenceResponse hash */
                hash?: (Uint8Array|null);
            }

            /** Represents a MsgSubmitEvidenceResponse. */
            class MsgSubmitEvidenceResponse implements IMsgSubmitEvidenceResponse {

                /**
                 * Constructs a new MsgSubmitEvidenceResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.evidence.v1beta1.IMsgSubmitEvidenceResponse);

                /** MsgSubmitEvidenceResponse hash. */
                public hash: Uint8Array;

                /**
                 * Encodes the specified MsgSubmitEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse.verify|verify} messages.
                 * @param m MsgSubmitEvidenceResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.evidence.v1beta1.IMsgSubmitEvidenceResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitEvidenceResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSubmitEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse;
            }
        }
    }

    /** Namespace genutil. */
    namespace genutil {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState gen_txs */
                gen_txs?: (Uint8Array[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.genutil.v1beta1.IGenesisState);

                /** GenesisState gen_txs. */
                public gen_txs: Uint8Array[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.genutil.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.genutil.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.genutil.v1beta1.GenesisState;
            }
        }
    }

    /** Namespace gov. */
    namespace gov {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryProposalRequest. */
            interface IQueryProposalRequest {

                /** QueryProposalRequest proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a QueryProposalRequest. */
            class QueryProposalRequest implements IQueryProposalRequest {

                /**
                 * Constructs a new QueryProposalRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryProposalRequest);

                /** QueryProposalRequest proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified QueryProposalRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalRequest.verify|verify} messages.
                 * @param m QueryProposalRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryProposalRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryProposalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryProposalRequest;
            }

            /** Properties of a QueryProposalResponse. */
            interface IQueryProposalResponse {

                /** QueryProposalResponse proposal */
                proposal?: (cosmos.gov.v1beta1.IProposal|null);
            }

            /** Represents a QueryProposalResponse. */
            class QueryProposalResponse implements IQueryProposalResponse {

                /**
                 * Constructs a new QueryProposalResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryProposalResponse);

                /** QueryProposalResponse proposal. */
                public proposal?: (cosmos.gov.v1beta1.IProposal|null);

                /**
                 * Encodes the specified QueryProposalResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalResponse.verify|verify} messages.
                 * @param m QueryProposalResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryProposalResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryProposalResponse;
            }

            /** Properties of a QueryProposalsRequest. */
            interface IQueryProposalsRequest {

                /** QueryProposalsRequest proposal_status */
                proposal_status?: (cosmos.gov.v1beta1.ProposalStatus|null);

                /** QueryProposalsRequest voter */
                voter?: (string|null);

                /** QueryProposalsRequest depositor */
                depositor?: (string|null);

                /** QueryProposalsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryProposalsRequest. */
            class QueryProposalsRequest implements IQueryProposalsRequest {

                /**
                 * Constructs a new QueryProposalsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryProposalsRequest);

                /** QueryProposalsRequest proposal_status. */
                public proposal_status: cosmos.gov.v1beta1.ProposalStatus;

                /** QueryProposalsRequest voter. */
                public voter: string;

                /** QueryProposalsRequest depositor. */
                public depositor: string;

                /** QueryProposalsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryProposalsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsRequest.verify|verify} messages.
                 * @param m QueryProposalsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryProposalsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryProposalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryProposalsRequest;
            }

            /** Properties of a QueryProposalsResponse. */
            interface IQueryProposalsResponse {

                /** QueryProposalsResponse proposals */
                proposals?: (cosmos.gov.v1beta1.IProposal[]|null);

                /** QueryProposalsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryProposalsResponse. */
            class QueryProposalsResponse implements IQueryProposalsResponse {

                /**
                 * Constructs a new QueryProposalsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryProposalsResponse);

                /** QueryProposalsResponse proposals. */
                public proposals: cosmos.gov.v1beta1.IProposal[];

                /** QueryProposalsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryProposalsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsResponse.verify|verify} messages.
                 * @param m QueryProposalsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryProposalsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryProposalsResponse;
            }

            /** Properties of a QueryVoteRequest. */
            interface IQueryVoteRequest {

                /** QueryVoteRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryVoteRequest voter */
                voter?: (string|null);
            }

            /** Represents a QueryVoteRequest. */
            class QueryVoteRequest implements IQueryVoteRequest {

                /**
                 * Constructs a new QueryVoteRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryVoteRequest);

                /** QueryVoteRequest proposal_id. */
                public proposal_id: Long;

                /** QueryVoteRequest voter. */
                public voter: string;

                /**
                 * Encodes the specified QueryVoteRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteRequest.verify|verify} messages.
                 * @param m QueryVoteRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryVoteRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVoteRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryVoteRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryVoteRequest;
            }

            /** Properties of a QueryVoteResponse. */
            interface IQueryVoteResponse {

                /** QueryVoteResponse vote */
                vote?: (cosmos.gov.v1beta1.IVote|null);
            }

            /** Represents a QueryVoteResponse. */
            class QueryVoteResponse implements IQueryVoteResponse {

                /**
                 * Constructs a new QueryVoteResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryVoteResponse);

                /** QueryVoteResponse vote. */
                public vote?: (cosmos.gov.v1beta1.IVote|null);

                /**
                 * Encodes the specified QueryVoteResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteResponse.verify|verify} messages.
                 * @param m QueryVoteResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryVoteResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVoteResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryVoteResponse;
            }

            /** Properties of a QueryVotesRequest. */
            interface IQueryVotesRequest {

                /** QueryVotesRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryVotesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryVotesRequest. */
            class QueryVotesRequest implements IQueryVotesRequest {

                /**
                 * Constructs a new QueryVotesRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryVotesRequest);

                /** QueryVotesRequest proposal_id. */
                public proposal_id: Long;

                /** QueryVotesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryVotesRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesRequest.verify|verify} messages.
                 * @param m QueryVotesRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryVotesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVotesRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryVotesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryVotesRequest;
            }

            /** Properties of a QueryVotesResponse. */
            interface IQueryVotesResponse {

                /** QueryVotesResponse votes */
                votes?: (cosmos.gov.v1beta1.IVote[]|null);

                /** QueryVotesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryVotesResponse. */
            class QueryVotesResponse implements IQueryVotesResponse {

                /**
                 * Constructs a new QueryVotesResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryVotesResponse);

                /** QueryVotesResponse votes. */
                public votes: cosmos.gov.v1beta1.IVote[];

                /** QueryVotesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryVotesResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesResponse.verify|verify} messages.
                 * @param m QueryVotesResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryVotesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVotesResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryVotesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryVotesResponse;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {

                /** QueryParamsRequest params_type */
                params_type?: (string|null);
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryParamsRequest);

                /** QueryParamsRequest params_type. */
                public params_type: string;

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse voting_params */
                voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** QueryParamsResponse deposit_params */
                deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** QueryParamsResponse tally_params */
                tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse voting_params. */
                public voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** QueryParamsResponse deposit_params. */
                public deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** QueryParamsResponse tally_params. */
                public tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryParamsResponse;
            }

            /** Properties of a QueryDepositRequest. */
            interface IQueryDepositRequest {

                /** QueryDepositRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryDepositRequest depositor */
                depositor?: (string|null);
            }

            /** Represents a QueryDepositRequest. */
            class QueryDepositRequest implements IQueryDepositRequest {

                /**
                 * Constructs a new QueryDepositRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryDepositRequest);

                /** QueryDepositRequest proposal_id. */
                public proposal_id: Long;

                /** QueryDepositRequest depositor. */
                public depositor: string;

                /**
                 * Encodes the specified QueryDepositRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositRequest.verify|verify} messages.
                 * @param m QueryDepositRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryDepositRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDepositRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryDepositRequest;
            }

            /** Properties of a QueryDepositResponse. */
            interface IQueryDepositResponse {

                /** QueryDepositResponse deposit */
                deposit?: (cosmos.gov.v1beta1.IDeposit|null);
            }

            /** Represents a QueryDepositResponse. */
            class QueryDepositResponse implements IQueryDepositResponse {

                /**
                 * Constructs a new QueryDepositResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryDepositResponse);

                /** QueryDepositResponse deposit. */
                public deposit?: (cosmos.gov.v1beta1.IDeposit|null);

                /**
                 * Encodes the specified QueryDepositResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositResponse.verify|verify} messages.
                 * @param m QueryDepositResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryDepositResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryDepositResponse;
            }

            /** Properties of a QueryDepositsRequest. */
            interface IQueryDepositsRequest {

                /** QueryDepositsRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryDepositsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDepositsRequest. */
            class QueryDepositsRequest implements IQueryDepositsRequest {

                /**
                 * Constructs a new QueryDepositsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryDepositsRequest);

                /** QueryDepositsRequest proposal_id. */
                public proposal_id: Long;

                /** QueryDepositsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDepositsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsRequest.verify|verify} messages.
                 * @param m QueryDepositsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryDepositsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDepositsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryDepositsRequest;
            }

            /** Properties of a QueryDepositsResponse. */
            interface IQueryDepositsResponse {

                /** QueryDepositsResponse deposits */
                deposits?: (cosmos.gov.v1beta1.IDeposit[]|null);

                /** QueryDepositsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDepositsResponse. */
            class QueryDepositsResponse implements IQueryDepositsResponse {

                /**
                 * Constructs a new QueryDepositsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryDepositsResponse);

                /** QueryDepositsResponse deposits. */
                public deposits: cosmos.gov.v1beta1.IDeposit[];

                /** QueryDepositsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDepositsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsResponse.verify|verify} messages.
                 * @param m QueryDepositsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryDepositsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDepositsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryDepositsResponse;
            }

            /** Properties of a QueryTallyResultRequest. */
            interface IQueryTallyResultRequest {

                /** QueryTallyResultRequest proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a QueryTallyResultRequest. */
            class QueryTallyResultRequest implements IQueryTallyResultRequest {

                /**
                 * Constructs a new QueryTallyResultRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryTallyResultRequest);

                /** QueryTallyResultRequest proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified QueryTallyResultRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultRequest.verify|verify} messages.
                 * @param m QueryTallyResultRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryTallyResultRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTallyResultRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTallyResultRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryTallyResultRequest;
            }

            /** Properties of a QueryTallyResultResponse. */
            interface IQueryTallyResultResponse {

                /** QueryTallyResultResponse tally */
                tally?: (cosmos.gov.v1beta1.ITallyResult|null);
            }

            /** Represents a QueryTallyResultResponse. */
            class QueryTallyResultResponse implements IQueryTallyResultResponse {

                /**
                 * Constructs a new QueryTallyResultResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IQueryTallyResultResponse);

                /** QueryTallyResultResponse tally. */
                public tally?: (cosmos.gov.v1beta1.ITallyResult|null);

                /**
                 * Encodes the specified QueryTallyResultResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultResponse.verify|verify} messages.
                 * @param m QueryTallyResultResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IQueryTallyResultResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTallyResultResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTallyResultResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.QueryTallyResultResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState starting_proposal_id */
                starting_proposal_id?: (Long|null);

                /** GenesisState deposits */
                deposits?: (cosmos.gov.v1beta1.IDeposit[]|null);

                /** GenesisState votes */
                votes?: (cosmos.gov.v1beta1.IVote[]|null);

                /** GenesisState proposals */
                proposals?: (cosmos.gov.v1beta1.IProposal[]|null);

                /** GenesisState deposit_params */
                deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** GenesisState voting_params */
                voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** GenesisState tally_params */
                tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IGenesisState);

                /** GenesisState starting_proposal_id. */
                public starting_proposal_id: Long;

                /** GenesisState deposits. */
                public deposits: cosmos.gov.v1beta1.IDeposit[];

                /** GenesisState votes. */
                public votes: cosmos.gov.v1beta1.IVote[];

                /** GenesisState proposals. */
                public proposals: cosmos.gov.v1beta1.IProposal[];

                /** GenesisState deposit_params. */
                public deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** GenesisState voting_params. */
                public voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** GenesisState tally_params. */
                public tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.gov.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.GenesisState;
            }

            /** VoteOption enum. */
            enum VoteOption {
                VOTE_OPTION_UNSPECIFIED = 0,
                VOTE_OPTION_YES = 1,
                VOTE_OPTION_ABSTAIN = 2,
                VOTE_OPTION_NO = 3,
                VOTE_OPTION_NO_WITH_VETO = 4
            }

            /** Properties of a TextProposal. */
            interface ITextProposal {

                /** TextProposal title */
                title?: (string|null);

                /** TextProposal description */
                description?: (string|null);
            }

            /** Represents a TextProposal. */
            class TextProposal implements ITextProposal {

                /**
                 * Constructs a new TextProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.ITextProposal);

                /** TextProposal title. */
                public title: string;

                /** TextProposal description. */
                public description: string;

                /**
                 * Encodes the specified TextProposal message. Does not implicitly {@link cosmos.gov.v1beta1.TextProposal.verify|verify} messages.
                 * @param m TextProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.ITextProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TextProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TextProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.TextProposal;
            }

            /** Properties of a Deposit. */
            interface IDeposit {

                /** Deposit proposal_id */
                proposal_id?: (Long|null);

                /** Deposit depositor */
                depositor?: (string|null);

                /** Deposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Deposit. */
            class Deposit implements IDeposit {

                /**
                 * Constructs a new Deposit.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IDeposit);

                /** Deposit proposal_id. */
                public proposal_id: Long;

                /** Deposit depositor. */
                public depositor: string;

                /** Deposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Deposit message. Does not implicitly {@link cosmos.gov.v1beta1.Deposit.verify|verify} messages.
                 * @param m Deposit message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IDeposit, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Deposit message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.Deposit;
            }

            /** Properties of a Proposal. */
            interface IProposal {

                /** Proposal proposal_id */
                proposal_id?: (Long|null);

                /** Proposal content */
                content?: (google.protobuf.IAny|null);

                /** Proposal status */
                status?: (cosmos.gov.v1beta1.ProposalStatus|null);

                /** Proposal final_tally_result */
                final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time */
                submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time */
                deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit */
                total_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Proposal voting_start_time */
                voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time */
                voting_end_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Proposal. */
            class Proposal implements IProposal {

                /**
                 * Constructs a new Proposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IProposal);

                /** Proposal proposal_id. */
                public proposal_id: Long;

                /** Proposal content. */
                public content?: (google.protobuf.IAny|null);

                /** Proposal status. */
                public status: cosmos.gov.v1beta1.ProposalStatus;

                /** Proposal final_tally_result. */
                public final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time. */
                public submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time. */
                public deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit. */
                public total_deposit: cosmos.base.v1beta1.ICoin[];

                /** Proposal voting_start_time. */
                public voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time. */
                public voting_end_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Proposal message. Does not implicitly {@link cosmos.gov.v1beta1.Proposal.verify|verify} messages.
                 * @param m Proposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Proposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.Proposal;
            }

            /** ProposalStatus enum. */
            enum ProposalStatus {
                PROPOSAL_STATUS_UNSPECIFIED = 0,
                PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,
                PROPOSAL_STATUS_VOTING_PERIOD = 2,
                PROPOSAL_STATUS_PASSED = 3,
                PROPOSAL_STATUS_REJECTED = 4,
                PROPOSAL_STATUS_FAILED = 5
            }

            /** Properties of a TallyResult. */
            interface ITallyResult {

                /** TallyResult yes */
                yes?: (string|null);

                /** TallyResult abstain */
                abstain?: (string|null);

                /** TallyResult no */
                no?: (string|null);

                /** TallyResult no_with_veto */
                no_with_veto?: (string|null);
            }

            /** Represents a TallyResult. */
            class TallyResult implements ITallyResult {

                /**
                 * Constructs a new TallyResult.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.ITallyResult);

                /** TallyResult yes. */
                public yes: string;

                /** TallyResult abstain. */
                public abstain: string;

                /** TallyResult no. */
                public no: string;

                /** TallyResult no_with_veto. */
                public no_with_veto: string;

                /**
                 * Encodes the specified TallyResult message. Does not implicitly {@link cosmos.gov.v1beta1.TallyResult.verify|verify} messages.
                 * @param m TallyResult message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.ITallyResult, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.TallyResult;
            }

            /** Properties of a Vote. */
            interface IVote {

                /** Vote proposal_id */
                proposal_id?: (Long|null);

                /** Vote voter */
                voter?: (string|null);

                /** Vote option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);
            }

            /** Represents a Vote. */
            class Vote implements IVote {

                /**
                 * Constructs a new Vote.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IVote);

                /** Vote proposal_id. */
                public proposal_id: Long;

                /** Vote voter. */
                public voter: string;

                /** Vote option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /**
                 * Encodes the specified Vote message. Does not implicitly {@link cosmos.gov.v1beta1.Vote.verify|verify} messages.
                 * @param m Vote message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IVote, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Vote message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.Vote;
            }

            /** Properties of a DepositParams. */
            interface IDepositParams {

                /** DepositParams min_deposit */
                min_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** DepositParams max_deposit_period */
                max_deposit_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a DepositParams. */
            class DepositParams implements IDepositParams {

                /**
                 * Constructs a new DepositParams.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IDepositParams);

                /** DepositParams min_deposit. */
                public min_deposit: cosmos.base.v1beta1.ICoin[];

                /** DepositParams max_deposit_period. */
                public max_deposit_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified DepositParams message. Does not implicitly {@link cosmos.gov.v1beta1.DepositParams.verify|verify} messages.
                 * @param m DepositParams message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IDepositParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.DepositParams;
            }

            /** Properties of a VotingParams. */
            interface IVotingParams {

                /** VotingParams voting_period */
                voting_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a VotingParams. */
            class VotingParams implements IVotingParams {

                /**
                 * Constructs a new VotingParams.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IVotingParams);

                /** VotingParams voting_period. */
                public voting_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified VotingParams message. Does not implicitly {@link cosmos.gov.v1beta1.VotingParams.verify|verify} messages.
                 * @param m VotingParams message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IVotingParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.VotingParams;
            }

            /** Properties of a TallyParams. */
            interface ITallyParams {

                /** TallyParams quorum */
                quorum?: (Uint8Array|null);

                /** TallyParams threshold */
                threshold?: (Uint8Array|null);

                /** TallyParams veto_threshold */
                veto_threshold?: (Uint8Array|null);
            }

            /** Represents a TallyParams. */
            class TallyParams implements ITallyParams {

                /**
                 * Constructs a new TallyParams.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.ITallyParams);

                /** TallyParams quorum. */
                public quorum: Uint8Array;

                /** TallyParams threshold. */
                public threshold: Uint8Array;

                /** TallyParams veto_threshold. */
                public veto_threshold: Uint8Array;

                /**
                 * Encodes the specified TallyParams message. Does not implicitly {@link cosmos.gov.v1beta1.TallyParams.verify|verify} messages.
                 * @param m TallyParams message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.ITallyParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.TallyParams;
            }

            /** Properties of a MsgSubmitProposal. */
            interface IMsgSubmitProposal {

                /** MsgSubmitProposal content */
                content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposal initial_deposit */
                initial_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgSubmitProposal proposer */
                proposer?: (string|null);
            }

            /** Represents a MsgSubmitProposal. */
            class MsgSubmitProposal implements IMsgSubmitProposal {

                /**
                 * Constructs a new MsgSubmitProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgSubmitProposal);

                /** MsgSubmitProposal content. */
                public content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposal initial_deposit. */
                public initial_deposit: cosmos.base.v1beta1.ICoin[];

                /** MsgSubmitProposal proposer. */
                public proposer: string;

                /**
                 * Encodes the specified MsgSubmitProposal message. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposal.verify|verify} messages.
                 * @param m MsgSubmitProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgSubmitProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSubmitProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgSubmitProposal;
            }

            /** Properties of a MsgSubmitProposalResponse. */
            interface IMsgSubmitProposalResponse {

                /** MsgSubmitProposalResponse proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a MsgSubmitProposalResponse. */
            class MsgSubmitProposalResponse implements IMsgSubmitProposalResponse {

                /**
                 * Constructs a new MsgSubmitProposalResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgSubmitProposalResponse);

                /** MsgSubmitProposalResponse proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified MsgSubmitProposalResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposalResponse.verify|verify} messages.
                 * @param m MsgSubmitProposalResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgSubmitProposalResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposalResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSubmitProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgSubmitProposalResponse;
            }

            /** Properties of a MsgVote. */
            interface IMsgVote {

                /** MsgVote proposal_id */
                proposal_id?: (Long|null);

                /** MsgVote voter */
                voter?: (string|null);

                /** MsgVote option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);
            }

            /** Represents a MsgVote. */
            class MsgVote implements IMsgVote {

                /**
                 * Constructs a new MsgVote.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgVote);

                /** MsgVote proposal_id. */
                public proposal_id: Long;

                /** MsgVote voter. */
                public voter: string;

                /** MsgVote option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /**
                 * Encodes the specified MsgVote message. Does not implicitly {@link cosmos.gov.v1beta1.MsgVote.verify|verify} messages.
                 * @param m MsgVote message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgVote, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVote message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgVote;
            }

            /** Properties of a MsgVoteResponse. */
            interface IMsgVoteResponse {
            }

            /** Represents a MsgVoteResponse. */
            class MsgVoteResponse implements IMsgVoteResponse {

                /**
                 * Constructs a new MsgVoteResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgVoteResponse);

                /**
                 * Encodes the specified MsgVoteResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgVoteResponse.verify|verify} messages.
                 * @param m MsgVoteResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgVoteResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVoteResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgVoteResponse;
            }

            /** Properties of a MsgDeposit. */
            interface IMsgDeposit {

                /** MsgDeposit proposal_id */
                proposal_id?: (Long|null);

                /** MsgDeposit depositor */
                depositor?: (string|null);

                /** MsgDeposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgDeposit. */
            class MsgDeposit implements IMsgDeposit {

                /**
                 * Constructs a new MsgDeposit.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgDeposit);

                /** MsgDeposit proposal_id. */
                public proposal_id: Long;

                /** MsgDeposit depositor. */
                public depositor: string;

                /** MsgDeposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgDeposit message. Does not implicitly {@link cosmos.gov.v1beta1.MsgDeposit.verify|verify} messages.
                 * @param m MsgDeposit message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgDeposit, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeposit message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgDeposit;
            }

            /** Properties of a MsgDepositResponse. */
            interface IMsgDepositResponse {
            }

            /** Represents a MsgDepositResponse. */
            class MsgDepositResponse implements IMsgDepositResponse {

                /**
                 * Constructs a new MsgDepositResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.gov.v1beta1.IMsgDepositResponse);

                /**
                 * Encodes the specified MsgDepositResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgDepositResponse.verify|verify} messages.
                 * @param m MsgDepositResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.gov.v1beta1.IMsgDepositResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDepositResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.gov.v1beta1.MsgDepositResponse;
            }
        }
    }

    /** Namespace mint. */
    namespace mint {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.mint.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.mint.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryParamsResponse;
            }

            /** Properties of a QueryInflationRequest. */
            interface IQueryInflationRequest {
            }

            /** Represents a QueryInflationRequest. */
            class QueryInflationRequest implements IQueryInflationRequest {

                /**
                 * Constructs a new QueryInflationRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryInflationRequest);

                /**
                 * Encodes the specified QueryInflationRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationRequest.verify|verify} messages.
                 * @param m QueryInflationRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryInflationRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInflationRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryInflationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryInflationRequest;
            }

            /** Properties of a QueryInflationResponse. */
            interface IQueryInflationResponse {

                /** QueryInflationResponse inflation */
                inflation?: (Uint8Array|null);
            }

            /** Represents a QueryInflationResponse. */
            class QueryInflationResponse implements IQueryInflationResponse {

                /**
                 * Constructs a new QueryInflationResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryInflationResponse);

                /** QueryInflationResponse inflation. */
                public inflation: Uint8Array;

                /**
                 * Encodes the specified QueryInflationResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationResponse.verify|verify} messages.
                 * @param m QueryInflationResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryInflationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInflationResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryInflationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryInflationResponse;
            }

            /** Properties of a QueryAnnualProvisionsRequest. */
            interface IQueryAnnualProvisionsRequest {
            }

            /** Represents a QueryAnnualProvisionsRequest. */
            class QueryAnnualProvisionsRequest implements IQueryAnnualProvisionsRequest {

                /**
                 * Constructs a new QueryAnnualProvisionsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest);

                /**
                 * Encodes the specified QueryAnnualProvisionsRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsRequest.verify|verify} messages.
                 * @param m QueryAnnualProvisionsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAnnualProvisionsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAnnualProvisionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryAnnualProvisionsRequest;
            }

            /** Properties of a QueryAnnualProvisionsResponse. */
            interface IQueryAnnualProvisionsResponse {

                /** QueryAnnualProvisionsResponse annual_provisions */
                annual_provisions?: (Uint8Array|null);
            }

            /** Represents a QueryAnnualProvisionsResponse. */
            class QueryAnnualProvisionsResponse implements IQueryAnnualProvisionsResponse {

                /**
                 * Constructs a new QueryAnnualProvisionsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IQueryAnnualProvisionsResponse);

                /** QueryAnnualProvisionsResponse annual_provisions. */
                public annual_provisions: Uint8Array;

                /**
                 * Encodes the specified QueryAnnualProvisionsResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.verify|verify} messages.
                 * @param m QueryAnnualProvisionsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IQueryAnnualProvisionsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAnnualProvisionsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAnnualProvisionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.QueryAnnualProvisionsResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState minter */
                minter?: (cosmos.mint.v1beta1.IMinter|null);

                /** GenesisState params */
                params?: (cosmos.mint.v1beta1.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IGenesisState);

                /** GenesisState minter. */
                public minter?: (cosmos.mint.v1beta1.IMinter|null);

                /** GenesisState params. */
                public params?: (cosmos.mint.v1beta1.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.mint.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.GenesisState;
            }

            /** Properties of a Minter. */
            interface IMinter {

                /** Minter inflation */
                inflation?: (string|null);

                /** Minter annual_provisions */
                annual_provisions?: (string|null);
            }

            /** Represents a Minter. */
            class Minter implements IMinter {

                /**
                 * Constructs a new Minter.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IMinter);

                /** Minter inflation. */
                public inflation: string;

                /** Minter annual_provisions. */
                public annual_provisions: string;

                /**
                 * Encodes the specified Minter message. Does not implicitly {@link cosmos.mint.v1beta1.Minter.verify|verify} messages.
                 * @param m Minter message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IMinter, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Minter message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Minter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.Minter;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params mint_denom */
                mint_denom?: (string|null);

                /** Params inflation_rate_change */
                inflation_rate_change?: (string|null);

                /** Params inflation_max */
                inflation_max?: (string|null);

                /** Params inflation_min */
                inflation_min?: (string|null);

                /** Params goal_bonded */
                goal_bonded?: (string|null);

                /** Params blocks_per_year */
                blocks_per_year?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.mint.v1beta1.IParams);

                /** Params mint_denom. */
                public mint_denom: string;

                /** Params inflation_rate_change. */
                public inflation_rate_change: string;

                /** Params inflation_max. */
                public inflation_max: string;

                /** Params inflation_min. */
                public inflation_min: string;

                /** Params goal_bonded. */
                public goal_bonded: string;

                /** Params blocks_per_year. */
                public blocks_per_year: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.mint.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.mint.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.mint.v1beta1.Params;
            }
        }
    }

    /** Namespace params. */
    namespace params {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a ParameterChangeProposal. */
            interface IParameterChangeProposal {

                /** ParameterChangeProposal title */
                title?: (string|null);

                /** ParameterChangeProposal description */
                description?: (string|null);

                /** ParameterChangeProposal changes */
                changes?: (cosmos.params.v1beta1.IParamChange[]|null);
            }

            /** Represents a ParameterChangeProposal. */
            class ParameterChangeProposal implements IParameterChangeProposal {

                /**
                 * Constructs a new ParameterChangeProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.params.v1beta1.IParameterChangeProposal);

                /** ParameterChangeProposal title. */
                public title: string;

                /** ParameterChangeProposal description. */
                public description: string;

                /** ParameterChangeProposal changes. */
                public changes: cosmos.params.v1beta1.IParamChange[];

                /**
                 * Encodes the specified ParameterChangeProposal message. Does not implicitly {@link cosmos.params.v1beta1.ParameterChangeProposal.verify|verify} messages.
                 * @param m ParameterChangeProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.params.v1beta1.IParameterChangeProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParameterChangeProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ParameterChangeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.params.v1beta1.ParameterChangeProposal;
            }

            /** Properties of a ParamChange. */
            interface IParamChange {

                /** ParamChange subspace */
                subspace?: (string|null);

                /** ParamChange key */
                key?: (string|null);

                /** ParamChange value */
                value?: (string|null);
            }

            /** Represents a ParamChange. */
            class ParamChange implements IParamChange {

                /**
                 * Constructs a new ParamChange.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.params.v1beta1.IParamChange);

                /** ParamChange subspace. */
                public subspace: string;

                /** ParamChange key. */
                public key: string;

                /** ParamChange value. */
                public value: string;

                /**
                 * Encodes the specified ParamChange message. Does not implicitly {@link cosmos.params.v1beta1.ParamChange.verify|verify} messages.
                 * @param m ParamChange message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.params.v1beta1.IParamChange, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParamChange message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ParamChange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.params.v1beta1.ParamChange;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {

                /** QueryParamsRequest subspace */
                subspace?: (string|null);

                /** QueryParamsRequest key */
                key?: (string|null);
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.params.v1beta1.IQueryParamsRequest);

                /** QueryParamsRequest subspace. */
                public subspace: string;

                /** QueryParamsRequest key. */
                public key: string;

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.params.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.params.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse param */
                param?: (cosmos.params.v1beta1.IParamChange|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.params.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse param. */
                public param?: (cosmos.params.v1beta1.IParamChange|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.params.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.params.v1beta1.QueryParamsResponse;
            }
        }
    }

    /** Namespace slashing. */
    namespace slashing {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.slashing.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.slashing.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QueryParamsResponse;
            }

            /** Properties of a QuerySigningInfoRequest. */
            interface IQuerySigningInfoRequest {

                /** QuerySigningInfoRequest cons_address */
                cons_address?: (string|null);
            }

            /** Represents a QuerySigningInfoRequest. */
            class QuerySigningInfoRequest implements IQuerySigningInfoRequest {

                /**
                 * Constructs a new QuerySigningInfoRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQuerySigningInfoRequest);

                /** QuerySigningInfoRequest cons_address. */
                public cons_address: string;

                /**
                 * Encodes the specified QuerySigningInfoRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoRequest.verify|verify} messages.
                 * @param m QuerySigningInfoRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQuerySigningInfoRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfoRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySigningInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QuerySigningInfoRequest;
            }

            /** Properties of a QuerySigningInfoResponse. */
            interface IQuerySigningInfoResponse {

                /** QuerySigningInfoResponse val_signing_info */
                val_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);
            }

            /** Represents a QuerySigningInfoResponse. */
            class QuerySigningInfoResponse implements IQuerySigningInfoResponse {

                /**
                 * Constructs a new QuerySigningInfoResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQuerySigningInfoResponse);

                /** QuerySigningInfoResponse val_signing_info. */
                public val_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);

                /**
                 * Encodes the specified QuerySigningInfoResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoResponse.verify|verify} messages.
                 * @param m QuerySigningInfoResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQuerySigningInfoResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfoResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySigningInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QuerySigningInfoResponse;
            }

            /** Properties of a QuerySigningInfosRequest. */
            interface IQuerySigningInfosRequest {

                /** QuerySigningInfosRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QuerySigningInfosRequest. */
            class QuerySigningInfosRequest implements IQuerySigningInfosRequest {

                /**
                 * Constructs a new QuerySigningInfosRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQuerySigningInfosRequest);

                /** QuerySigningInfosRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QuerySigningInfosRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosRequest.verify|verify} messages.
                 * @param m QuerySigningInfosRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQuerySigningInfosRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfosRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySigningInfosRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QuerySigningInfosRequest;
            }

            /** Properties of a QuerySigningInfosResponse. */
            interface IQuerySigningInfosResponse {

                /** QuerySigningInfosResponse info */
                info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo[]|null);

                /** QuerySigningInfosResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QuerySigningInfosResponse. */
            class QuerySigningInfosResponse implements IQuerySigningInfosResponse {

                /**
                 * Constructs a new QuerySigningInfosResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IQuerySigningInfosResponse);

                /** QuerySigningInfosResponse info. */
                public info: cosmos.slashing.v1beta1.IValidatorSigningInfo[];

                /** QuerySigningInfosResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QuerySigningInfosResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosResponse.verify|verify} messages.
                 * @param m QuerySigningInfosResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IQuerySigningInfosResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfosResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QuerySigningInfosResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.QuerySigningInfosResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.slashing.v1beta1.IParams|null);

                /** GenesisState signing_infos */
                signing_infos?: (cosmos.slashing.v1beta1.ISigningInfo[]|null);

                /** GenesisState missed_blocks */
                missed_blocks?: (cosmos.slashing.v1beta1.IValidatorMissedBlocks[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.slashing.v1beta1.IParams|null);

                /** GenesisState signing_infos. */
                public signing_infos: cosmos.slashing.v1beta1.ISigningInfo[];

                /** GenesisState missed_blocks. */
                public missed_blocks: cosmos.slashing.v1beta1.IValidatorMissedBlocks[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.slashing.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.GenesisState;
            }

            /** Properties of a SigningInfo. */
            interface ISigningInfo {

                /** SigningInfo address */
                address?: (string|null);

                /** SigningInfo validator_signing_info */
                validator_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);
            }

            /** Represents a SigningInfo. */
            class SigningInfo implements ISigningInfo {

                /**
                 * Constructs a new SigningInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.ISigningInfo);

                /** SigningInfo address. */
                public address: string;

                /** SigningInfo validator_signing_info. */
                public validator_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);

                /**
                 * Encodes the specified SigningInfo message. Does not implicitly {@link cosmos.slashing.v1beta1.SigningInfo.verify|verify} messages.
                 * @param m SigningInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.ISigningInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SigningInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.SigningInfo;
            }

            /** Properties of a ValidatorMissedBlocks. */
            interface IValidatorMissedBlocks {

                /** ValidatorMissedBlocks address */
                address?: (string|null);

                /** ValidatorMissedBlocks missed_blocks */
                missed_blocks?: (cosmos.slashing.v1beta1.IMissedBlock[]|null);
            }

            /** Represents a ValidatorMissedBlocks. */
            class ValidatorMissedBlocks implements IValidatorMissedBlocks {

                /**
                 * Constructs a new ValidatorMissedBlocks.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IValidatorMissedBlocks);

                /** ValidatorMissedBlocks address. */
                public address: string;

                /** ValidatorMissedBlocks missed_blocks. */
                public missed_blocks: cosmos.slashing.v1beta1.IMissedBlock[];

                /**
                 * Encodes the specified ValidatorMissedBlocks message. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorMissedBlocks.verify|verify} messages.
                 * @param m ValidatorMissedBlocks message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IValidatorMissedBlocks, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorMissedBlocks message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorMissedBlocks
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.ValidatorMissedBlocks;
            }

            /** Properties of a MissedBlock. */
            interface IMissedBlock {

                /** MissedBlock index */
                index?: (Long|null);

                /** MissedBlock missed */
                missed?: (boolean|null);
            }

            /** Represents a MissedBlock. */
            class MissedBlock implements IMissedBlock {

                /**
                 * Constructs a new MissedBlock.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IMissedBlock);

                /** MissedBlock index. */
                public index: Long;

                /** MissedBlock missed. */
                public missed: boolean;

                /**
                 * Encodes the specified MissedBlock message. Does not implicitly {@link cosmos.slashing.v1beta1.MissedBlock.verify|verify} messages.
                 * @param m MissedBlock message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IMissedBlock, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MissedBlock message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MissedBlock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.MissedBlock;
            }

            /** Properties of a ValidatorSigningInfo. */
            interface IValidatorSigningInfo {

                /** ValidatorSigningInfo address */
                address?: (string|null);

                /** ValidatorSigningInfo start_height */
                start_height?: (Long|null);

                /** ValidatorSigningInfo index_offset */
                index_offset?: (Long|null);

                /** ValidatorSigningInfo jailed_until */
                jailed_until?: (google.protobuf.ITimestamp|null);

                /** ValidatorSigningInfo tombstoned */
                tombstoned?: (boolean|null);

                /** ValidatorSigningInfo missed_blocks_counter */
                missed_blocks_counter?: (Long|null);
            }

            /** Represents a ValidatorSigningInfo. */
            class ValidatorSigningInfo implements IValidatorSigningInfo {

                /**
                 * Constructs a new ValidatorSigningInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IValidatorSigningInfo);

                /** ValidatorSigningInfo address. */
                public address: string;

                /** ValidatorSigningInfo start_height. */
                public start_height: Long;

                /** ValidatorSigningInfo index_offset. */
                public index_offset: Long;

                /** ValidatorSigningInfo jailed_until. */
                public jailed_until?: (google.protobuf.ITimestamp|null);

                /** ValidatorSigningInfo tombstoned. */
                public tombstoned: boolean;

                /** ValidatorSigningInfo missed_blocks_counter. */
                public missed_blocks_counter: Long;

                /**
                 * Encodes the specified ValidatorSigningInfo message. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorSigningInfo.verify|verify} messages.
                 * @param m ValidatorSigningInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IValidatorSigningInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSigningInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValidatorSigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.ValidatorSigningInfo;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params signed_blocks_window */
                signed_blocks_window?: (Long|null);

                /** Params min_signed_per_window */
                min_signed_per_window?: (Uint8Array|null);

                /** Params downtime_jail_duration */
                downtime_jail_duration?: (google.protobuf.IDuration|null);

                /** Params slash_fraction_double_sign */
                slash_fraction_double_sign?: (Uint8Array|null);

                /** Params slash_fraction_downtime */
                slash_fraction_downtime?: (Uint8Array|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IParams);

                /** Params signed_blocks_window. */
                public signed_blocks_window: Long;

                /** Params min_signed_per_window. */
                public min_signed_per_window: Uint8Array;

                /** Params downtime_jail_duration. */
                public downtime_jail_duration?: (google.protobuf.IDuration|null);

                /** Params slash_fraction_double_sign. */
                public slash_fraction_double_sign: Uint8Array;

                /** Params slash_fraction_downtime. */
                public slash_fraction_downtime: Uint8Array;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.slashing.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.Params;
            }

            /** Properties of a MsgUnjail. */
            interface IMsgUnjail {

                /** MsgUnjail validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a MsgUnjail. */
            class MsgUnjail implements IMsgUnjail {

                /**
                 * Constructs a new MsgUnjail.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IMsgUnjail);

                /** MsgUnjail validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified MsgUnjail message. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjail.verify|verify} messages.
                 * @param m MsgUnjail message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IMsgUnjail, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnjail message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUnjail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.MsgUnjail;
            }

            /** Properties of a MsgUnjailResponse. */
            interface IMsgUnjailResponse {
            }

            /** Represents a MsgUnjailResponse. */
            class MsgUnjailResponse implements IMsgUnjailResponse {

                /**
                 * Constructs a new MsgUnjailResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.slashing.v1beta1.IMsgUnjailResponse);

                /**
                 * Encodes the specified MsgUnjailResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjailResponse.verify|verify} messages.
                 * @param m MsgUnjailResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.slashing.v1beta1.IMsgUnjailResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnjailResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUnjailResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.slashing.v1beta1.MsgUnjailResponse;
            }
        }
    }

    /** Namespace staking. */
    namespace staking {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a QueryValidatorsRequest. */
            interface IQueryValidatorsRequest {

                /** QueryValidatorsRequest status */
                status?: (string|null);

                /** QueryValidatorsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorsRequest. */
            class QueryValidatorsRequest implements IQueryValidatorsRequest {

                /**
                 * Constructs a new QueryValidatorsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorsRequest);

                /** QueryValidatorsRequest status. */
                public status: string;

                /** QueryValidatorsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsRequest.verify|verify} messages.
                 * @param m QueryValidatorsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorsRequest;
            }

            /** Properties of a QueryValidatorsResponse. */
            interface IQueryValidatorsResponse {

                /** QueryValidatorsResponse validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** QueryValidatorsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorsResponse. */
            class QueryValidatorsResponse implements IQueryValidatorsResponse {

                /**
                 * Constructs a new QueryValidatorsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorsResponse);

                /** QueryValidatorsResponse validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** QueryValidatorsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsResponse.verify|verify} messages.
                 * @param m QueryValidatorsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorsResponse;
            }

            /** Properties of a QueryValidatorRequest. */
            interface IQueryValidatorRequest {

                /** QueryValidatorRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryValidatorRequest. */
            class QueryValidatorRequest implements IQueryValidatorRequest {

                /**
                 * Constructs a new QueryValidatorRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorRequest);

                /** QueryValidatorRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryValidatorRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorRequest.verify|verify} messages.
                 * @param m QueryValidatorRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorRequest;
            }

            /** Properties of a QueryValidatorResponse. */
            interface IQueryValidatorResponse {

                /** QueryValidatorResponse validator */
                validator?: (cosmos.staking.v1beta1.IValidator|null);
            }

            /** Represents a QueryValidatorResponse. */
            class QueryValidatorResponse implements IQueryValidatorResponse {

                /**
                 * Constructs a new QueryValidatorResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorResponse);

                /** QueryValidatorResponse validator. */
                public validator?: (cosmos.staking.v1beta1.IValidator|null);

                /**
                 * Encodes the specified QueryValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorResponse.verify|verify} messages.
                 * @param m QueryValidatorResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorResponse;
            }

            /** Properties of a QueryValidatorDelegationsRequest. */
            interface IQueryValidatorDelegationsRequest {

                /** QueryValidatorDelegationsRequest validator_addr */
                validator_addr?: (string|null);

                /** QueryValidatorDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorDelegationsRequest. */
            class QueryValidatorDelegationsRequest implements IQueryValidatorDelegationsRequest {

                /**
                 * Constructs a new QueryValidatorDelegationsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest);

                /** QueryValidatorDelegationsRequest validator_addr. */
                public validator_addr: string;

                /** QueryValidatorDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.verify|verify} messages.
                 * @param m QueryValidatorDelegationsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorDelegationsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorDelegationsRequest;
            }

            /** Properties of a QueryValidatorDelegationsResponse. */
            interface IQueryValidatorDelegationsResponse {

                /** QueryValidatorDelegationsResponse delegation_responses */
                delegation_responses?: (cosmos.staking.v1beta1.IDelegationResponse[]|null);

                /** QueryValidatorDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorDelegationsResponse. */
            class QueryValidatorDelegationsResponse implements IQueryValidatorDelegationsResponse {

                /**
                 * Constructs a new QueryValidatorDelegationsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorDelegationsResponse);

                /** QueryValidatorDelegationsResponse delegation_responses. */
                public delegation_responses: cosmos.staking.v1beta1.IDelegationResponse[];

                /** QueryValidatorDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.verify|verify} messages.
                 * @param m QueryValidatorDelegationsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorDelegationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorDelegationsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorDelegationsResponse;
            }

            /** Properties of a QueryValidatorUnbondingDelegationsRequest. */
            interface IQueryValidatorUnbondingDelegationsRequest {

                /** QueryValidatorUnbondingDelegationsRequest validator_addr */
                validator_addr?: (string|null);

                /** QueryValidatorUnbondingDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorUnbondingDelegationsRequest. */
            class QueryValidatorUnbondingDelegationsRequest implements IQueryValidatorUnbondingDelegationsRequest {

                /**
                 * Constructs a new QueryValidatorUnbondingDelegationsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest);

                /** QueryValidatorUnbondingDelegationsRequest validator_addr. */
                public validator_addr: string;

                /** QueryValidatorUnbondingDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param m QueryValidatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest;
            }

            /** Properties of a QueryValidatorUnbondingDelegationsResponse. */
            interface IQueryValidatorUnbondingDelegationsResponse {

                /** QueryValidatorUnbondingDelegationsResponse unbonding_responses */
                unbonding_responses?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** QueryValidatorUnbondingDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorUnbondingDelegationsResponse. */
            class QueryValidatorUnbondingDelegationsResponse implements IQueryValidatorUnbondingDelegationsResponse {

                /**
                 * Constructs a new QueryValidatorUnbondingDelegationsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsResponse);

                /** QueryValidatorUnbondingDelegationsResponse unbonding_responses. */
                public unbonding_responses: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** QueryValidatorUnbondingDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param m QueryValidatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryValidatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse;
            }

            /** Properties of a QueryDelegationRequest. */
            interface IQueryDelegationRequest {

                /** QueryDelegationRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegationRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryDelegationRequest. */
            class QueryDelegationRequest implements IQueryDelegationRequest {

                /**
                 * Constructs a new QueryDelegationRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegationRequest);

                /** QueryDelegationRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegationRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryDelegationRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationRequest.verify|verify} messages.
                 * @param m QueryDelegationRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegationRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegationRequest;
            }

            /** Properties of a QueryDelegationResponse. */
            interface IQueryDelegationResponse {

                /** QueryDelegationResponse delegation_response */
                delegation_response?: (cosmos.staking.v1beta1.IDelegationResponse|null);
            }

            /** Represents a QueryDelegationResponse. */
            class QueryDelegationResponse implements IQueryDelegationResponse {

                /**
                 * Constructs a new QueryDelegationResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegationResponse);

                /** QueryDelegationResponse delegation_response. */
                public delegation_response?: (cosmos.staking.v1beta1.IDelegationResponse|null);

                /**
                 * Encodes the specified QueryDelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationResponse.verify|verify} messages.
                 * @param m QueryDelegationResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegationResponse;
            }

            /** Properties of a QueryUnbondingDelegationRequest. */
            interface IQueryUnbondingDelegationRequest {

                /** QueryUnbondingDelegationRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryUnbondingDelegationRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryUnbondingDelegationRequest. */
            class QueryUnbondingDelegationRequest implements IQueryUnbondingDelegationRequest {

                /**
                 * Constructs a new QueryUnbondingDelegationRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest);

                /** QueryUnbondingDelegationRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryUnbondingDelegationRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryUnbondingDelegationRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.verify|verify} messages.
                 * @param m QueryUnbondingDelegationRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUnbondingDelegationRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryUnbondingDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryUnbondingDelegationRequest;
            }

            /** Properties of a QueryUnbondingDelegationResponse. */
            interface IQueryUnbondingDelegationResponse {

                /** QueryUnbondingDelegationResponse unbond */
                unbond?: (cosmos.staking.v1beta1.IUnbondingDelegation|null);
            }

            /** Represents a QueryUnbondingDelegationResponse. */
            class QueryUnbondingDelegationResponse implements IQueryUnbondingDelegationResponse {

                /**
                 * Constructs a new QueryUnbondingDelegationResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryUnbondingDelegationResponse);

                /** QueryUnbondingDelegationResponse unbond. */
                public unbond?: (cosmos.staking.v1beta1.IUnbondingDelegation|null);

                /**
                 * Encodes the specified QueryUnbondingDelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.verify|verify} messages.
                 * @param m QueryUnbondingDelegationResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryUnbondingDelegationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUnbondingDelegationResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryUnbondingDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryUnbondingDelegationResponse;
            }

            /** Properties of a QueryDelegatorDelegationsRequest. */
            interface IQueryDelegatorDelegationsRequest {

                /** QueryDelegatorDelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorDelegationsRequest. */
            class QueryDelegatorDelegationsRequest implements IQueryDelegatorDelegationsRequest {

                /**
                 * Constructs a new QueryDelegatorDelegationsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest);

                /** QueryDelegatorDelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.verify|verify} messages.
                 * @param m QueryDelegatorDelegationsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorDelegationsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest;
            }

            /** Properties of a QueryDelegatorDelegationsResponse. */
            interface IQueryDelegatorDelegationsResponse {

                /** QueryDelegatorDelegationsResponse delegation_responses */
                delegation_responses?: (cosmos.staking.v1beta1.IDelegationResponse[]|null);

                /** QueryDelegatorDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorDelegationsResponse. */
            class QueryDelegatorDelegationsResponse implements IQueryDelegatorDelegationsResponse {

                /**
                 * Constructs a new QueryDelegatorDelegationsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorDelegationsResponse);

                /** QueryDelegatorDelegationsResponse delegation_responses. */
                public delegation_responses: cosmos.staking.v1beta1.IDelegationResponse[];

                /** QueryDelegatorDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.verify|verify} messages.
                 * @param m QueryDelegatorDelegationsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorDelegationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorDelegationsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse;
            }

            /** Properties of a QueryDelegatorUnbondingDelegationsRequest. */
            interface IQueryDelegatorUnbondingDelegationsRequest {

                /** QueryDelegatorUnbondingDelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorUnbondingDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorUnbondingDelegationsRequest. */
            class QueryDelegatorUnbondingDelegationsRequest implements IQueryDelegatorUnbondingDelegationsRequest {

                /**
                 * Constructs a new QueryDelegatorUnbondingDelegationsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest);

                /** QueryDelegatorUnbondingDelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorUnbondingDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param m QueryDelegatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest;
            }

            /** Properties of a QueryDelegatorUnbondingDelegationsResponse. */
            interface IQueryDelegatorUnbondingDelegationsResponse {

                /** QueryDelegatorUnbondingDelegationsResponse unbonding_responses */
                unbonding_responses?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** QueryDelegatorUnbondingDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorUnbondingDelegationsResponse. */
            class QueryDelegatorUnbondingDelegationsResponse implements IQueryDelegatorUnbondingDelegationsResponse {

                /**
                 * Constructs a new QueryDelegatorUnbondingDelegationsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsResponse);

                /** QueryDelegatorUnbondingDelegationsResponse unbonding_responses. */
                public unbonding_responses: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** QueryDelegatorUnbondingDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param m QueryDelegatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse;
            }

            /** Properties of a QueryRedelegationsRequest. */
            interface IQueryRedelegationsRequest {

                /** QueryRedelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryRedelegationsRequest src_validator_addr */
                src_validator_addr?: (string|null);

                /** QueryRedelegationsRequest dst_validator_addr */
                dst_validator_addr?: (string|null);

                /** QueryRedelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryRedelegationsRequest. */
            class QueryRedelegationsRequest implements IQueryRedelegationsRequest {

                /**
                 * Constructs a new QueryRedelegationsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryRedelegationsRequest);

                /** QueryRedelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryRedelegationsRequest src_validator_addr. */
                public src_validator_addr: string;

                /** QueryRedelegationsRequest dst_validator_addr. */
                public dst_validator_addr: string;

                /** QueryRedelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryRedelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsRequest.verify|verify} messages.
                 * @param m QueryRedelegationsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryRedelegationsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRedelegationsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRedelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryRedelegationsRequest;
            }

            /** Properties of a QueryRedelegationsResponse. */
            interface IQueryRedelegationsResponse {

                /** QueryRedelegationsResponse redelegation_responses */
                redelegation_responses?: (cosmos.staking.v1beta1.IRedelegationResponse[]|null);

                /** QueryRedelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryRedelegationsResponse. */
            class QueryRedelegationsResponse implements IQueryRedelegationsResponse {

                /**
                 * Constructs a new QueryRedelegationsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryRedelegationsResponse);

                /** QueryRedelegationsResponse redelegation_responses. */
                public redelegation_responses: cosmos.staking.v1beta1.IRedelegationResponse[];

                /** QueryRedelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryRedelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsResponse.verify|verify} messages.
                 * @param m QueryRedelegationsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryRedelegationsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRedelegationsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRedelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryRedelegationsResponse;
            }

            /** Properties of a QueryDelegatorValidatorsRequest. */
            interface IQueryDelegatorValidatorsRequest {

                /** QueryDelegatorValidatorsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorValidatorsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorValidatorsRequest. */
            class QueryDelegatorValidatorsRequest implements IQueryDelegatorValidatorsRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest);

                /** QueryDelegatorValidatorsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorValidatorsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param m QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest;
            }

            /** Properties of a QueryDelegatorValidatorsResponse. */
            interface IQueryDelegatorValidatorsResponse {

                /** QueryDelegatorValidatorsResponse validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** QueryDelegatorValidatorsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorValidatorsResponse. */
            class QueryDelegatorValidatorsResponse implements IQueryDelegatorValidatorsResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorValidatorsResponse);

                /** QueryDelegatorValidatorsResponse validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** QueryDelegatorValidatorsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param m QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorValidatorsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse;
            }

            /** Properties of a QueryDelegatorValidatorRequest. */
            interface IQueryDelegatorValidatorRequest {

                /** QueryDelegatorValidatorRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorValidatorRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryDelegatorValidatorRequest. */
            class QueryDelegatorValidatorRequest implements IQueryDelegatorValidatorRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest);

                /** QueryDelegatorValidatorRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorValidatorRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryDelegatorValidatorRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.verify|verify} messages.
                 * @param m QueryDelegatorValidatorRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorRequest;
            }

            /** Properties of a QueryDelegatorValidatorResponse. */
            interface IQueryDelegatorValidatorResponse {

                /** QueryDelegatorValidatorResponse validator */
                validator?: (cosmos.staking.v1beta1.IValidator|null);
            }

            /** Represents a QueryDelegatorValidatorResponse. */
            class QueryDelegatorValidatorResponse implements IQueryDelegatorValidatorResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryDelegatorValidatorResponse);

                /** QueryDelegatorValidatorResponse validator. */
                public validator?: (cosmos.staking.v1beta1.IValidator|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.verify|verify} messages.
                 * @param m QueryDelegatorValidatorResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryDelegatorValidatorResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDelegatorValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorResponse;
            }

            /** Properties of a QueryHistoricalInfoRequest. */
            interface IQueryHistoricalInfoRequest {

                /** QueryHistoricalInfoRequest height */
                height?: (Long|null);
            }

            /** Represents a QueryHistoricalInfoRequest. */
            class QueryHistoricalInfoRequest implements IQueryHistoricalInfoRequest {

                /**
                 * Constructs a new QueryHistoricalInfoRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest);

                /** QueryHistoricalInfoRequest height. */
                public height: Long;

                /**
                 * Encodes the specified QueryHistoricalInfoRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoRequest.verify|verify} messages.
                 * @param m QueryHistoricalInfoRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalInfoRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryHistoricalInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryHistoricalInfoRequest;
            }

            /** Properties of a QueryHistoricalInfoResponse. */
            interface IQueryHistoricalInfoResponse {

                /** QueryHistoricalInfoResponse hist */
                hist?: (cosmos.staking.v1beta1.IHistoricalInfo|null);
            }

            /** Represents a QueryHistoricalInfoResponse. */
            class QueryHistoricalInfoResponse implements IQueryHistoricalInfoResponse {

                /**
                 * Constructs a new QueryHistoricalInfoResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryHistoricalInfoResponse);

                /** QueryHistoricalInfoResponse hist. */
                public hist?: (cosmos.staking.v1beta1.IHistoricalInfo|null);

                /**
                 * Encodes the specified QueryHistoricalInfoResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoResponse.verify|verify} messages.
                 * @param m QueryHistoricalInfoResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryHistoricalInfoResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalInfoResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryHistoricalInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryHistoricalInfoResponse;
            }

            /** Properties of a QueryPoolRequest. */
            interface IQueryPoolRequest {
            }

            /** Represents a QueryPoolRequest. */
            class QueryPoolRequest implements IQueryPoolRequest {

                /**
                 * Constructs a new QueryPoolRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryPoolRequest);

                /**
                 * Encodes the specified QueryPoolRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolRequest.verify|verify} messages.
                 * @param m QueryPoolRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryPoolRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryPoolRequest;
            }

            /** Properties of a QueryPoolResponse. */
            interface IQueryPoolResponse {

                /** QueryPoolResponse pool */
                pool?: (cosmos.staking.v1beta1.IPool|null);
            }

            /** Represents a QueryPoolResponse. */
            class QueryPoolResponse implements IQueryPoolResponse {

                /**
                 * Constructs a new QueryPoolResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryPoolResponse);

                /** QueryPoolResponse pool. */
                public pool?: (cosmos.staking.v1beta1.IPool|null);

                /**
                 * Encodes the specified QueryPoolResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolResponse.verify|verify} messages.
                 * @param m QueryPoolResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryPoolResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryPoolResponse;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.staking.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.staking.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.QueryParamsResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.staking.v1beta1.IParams|null);

                /** GenesisState last_total_power */
                last_total_power?: (Uint8Array|null);

                /** GenesisState last_validator_powers */
                last_validator_powers?: (cosmos.staking.v1beta1.ILastValidatorPower[]|null);

                /** GenesisState validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** GenesisState delegations */
                delegations?: (cosmos.staking.v1beta1.IDelegation[]|null);

                /** GenesisState unbonding_delegations */
                unbonding_delegations?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** GenesisState redelegations */
                redelegations?: (cosmos.staking.v1beta1.IRedelegation[]|null);

                /** GenesisState exported */
                exported?: (boolean|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.staking.v1beta1.IParams|null);

                /** GenesisState last_total_power. */
                public last_total_power: Uint8Array;

                /** GenesisState last_validator_powers. */
                public last_validator_powers: cosmos.staking.v1beta1.ILastValidatorPower[];

                /** GenesisState validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** GenesisState delegations. */
                public delegations: cosmos.staking.v1beta1.IDelegation[];

                /** GenesisState unbonding_delegations. */
                public unbonding_delegations: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** GenesisState redelegations. */
                public redelegations: cosmos.staking.v1beta1.IRedelegation[];

                /** GenesisState exported. */
                public exported: boolean;

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.staking.v1beta1.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.GenesisState;
            }

            /** Properties of a LastValidatorPower. */
            interface ILastValidatorPower {

                /** LastValidatorPower address */
                address?: (string|null);

                /** LastValidatorPower power */
                power?: (Long|null);
            }

            /** Represents a LastValidatorPower. */
            class LastValidatorPower implements ILastValidatorPower {

                /**
                 * Constructs a new LastValidatorPower.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.ILastValidatorPower);

                /** LastValidatorPower address. */
                public address: string;

                /** LastValidatorPower power. */
                public power: Long;

                /**
                 * Encodes the specified LastValidatorPower message. Does not implicitly {@link cosmos.staking.v1beta1.LastValidatorPower.verify|verify} messages.
                 * @param m LastValidatorPower message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.ILastValidatorPower, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LastValidatorPower message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns LastValidatorPower
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.LastValidatorPower;
            }

            /** Properties of a HistoricalInfo. */
            interface IHistoricalInfo {

                /** HistoricalInfo header */
                header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset */
                valset?: (cosmos.staking.v1beta1.IValidator[]|null);
            }

            /** Represents a HistoricalInfo. */
            class HistoricalInfo implements IHistoricalInfo {

                /**
                 * Constructs a new HistoricalInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IHistoricalInfo);

                /** HistoricalInfo header. */
                public header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset. */
                public valset: cosmos.staking.v1beta1.IValidator[];

                /**
                 * Encodes the specified HistoricalInfo message. Does not implicitly {@link cosmos.staking.v1beta1.HistoricalInfo.verify|verify} messages.
                 * @param m HistoricalInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IHistoricalInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HistoricalInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns HistoricalInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.HistoricalInfo;
            }

            /** Properties of a CommissionRates. */
            interface ICommissionRates {

                /** CommissionRates rate */
                rate?: (string|null);

                /** CommissionRates max_rate */
                max_rate?: (string|null);

                /** CommissionRates max_change_rate */
                max_change_rate?: (string|null);
            }

            /** Represents a CommissionRates. */
            class CommissionRates implements ICommissionRates {

                /**
                 * Constructs a new CommissionRates.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.ICommissionRates);

                /** CommissionRates rate. */
                public rate: string;

                /** CommissionRates max_rate. */
                public max_rate: string;

                /** CommissionRates max_change_rate. */
                public max_change_rate: string;

                /**
                 * Encodes the specified CommissionRates message. Does not implicitly {@link cosmos.staking.v1beta1.CommissionRates.verify|verify} messages.
                 * @param m CommissionRates message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.ICommissionRates, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommissionRates message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CommissionRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.CommissionRates;
            }

            /** Properties of a Commission. */
            interface ICommission {

                /** Commission commission_rates */
                commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time */
                update_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Commission. */
            class Commission implements ICommission {

                /**
                 * Constructs a new Commission.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.ICommission);

                /** Commission commission_rates. */
                public commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time. */
                public update_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Commission message. Does not implicitly {@link cosmos.staking.v1beta1.Commission.verify|verify} messages.
                 * @param m Commission message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.ICommission, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Commission message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Commission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Commission;
            }

            /** Properties of a Description. */
            interface IDescription {

                /** Description moniker */
                moniker?: (string|null);

                /** Description identity */
                identity?: (string|null);

                /** Description website */
                website?: (string|null);

                /** Description security_contact */
                security_contact?: (string|null);

                /** Description details */
                details?: (string|null);
            }

            /** Represents a Description. */
            class Description implements IDescription {

                /**
                 * Constructs a new Description.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDescription);

                /** Description moniker. */
                public moniker: string;

                /** Description identity. */
                public identity: string;

                /** Description website. */
                public website: string;

                /** Description security_contact. */
                public security_contact: string;

                /** Description details. */
                public details: string;

                /**
                 * Encodes the specified Description message. Does not implicitly {@link cosmos.staking.v1beta1.Description.verify|verify} messages.
                 * @param m Description message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDescription, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Description message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Description
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Description;
            }

            /** Properties of a Validator. */
            interface IValidator {

                /** Validator operator_address */
                operator_address?: (string|null);

                /** Validator consensus_pubkey */
                consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed */
                jailed?: (boolean|null);

                /** Validator status */
                status?: (cosmos.staking.v1beta1.BondStatus|null);

                /** Validator tokens */
                tokens?: (string|null);

                /** Validator delegator_shares */
                delegator_shares?: (string|null);

                /** Validator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height */
                unbonding_height?: (Long|null);

                /** Validator unbonding_time */
                unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission */
                commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation */
                min_self_delegation?: (string|null);
            }

            /** Represents a Validator. */
            class Validator implements IValidator {

                /**
                 * Constructs a new Validator.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IValidator);

                /** Validator operator_address. */
                public operator_address: string;

                /** Validator consensus_pubkey. */
                public consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed. */
                public jailed: boolean;

                /** Validator status. */
                public status: cosmos.staking.v1beta1.BondStatus;

                /** Validator tokens. */
                public tokens: string;

                /** Validator delegator_shares. */
                public delegator_shares: string;

                /** Validator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height. */
                public unbonding_height: Long;

                /** Validator unbonding_time. */
                public unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission. */
                public commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation. */
                public min_self_delegation: string;

                /**
                 * Encodes the specified Validator message. Does not implicitly {@link cosmos.staking.v1beta1.Validator.verify|verify} messages.
                 * @param m Validator message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IValidator, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Validator message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Validator;
            }

            /** BondStatus enum. */
            enum BondStatus {
                BOND_STATUS_UNSPECIFIED = 0,
                BOND_STATUS_UNBONDED = 1,
                BOND_STATUS_UNBONDING = 2,
                BOND_STATUS_BONDED = 3
            }

            /** Properties of a ValAddresses. */
            interface IValAddresses {

                /** ValAddresses addresses */
                addresses?: (string[]|null);
            }

            /** Represents a ValAddresses. */
            class ValAddresses implements IValAddresses {

                /**
                 * Constructs a new ValAddresses.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IValAddresses);

                /** ValAddresses addresses. */
                public addresses: string[];

                /**
                 * Encodes the specified ValAddresses message. Does not implicitly {@link cosmos.staking.v1beta1.ValAddresses.verify|verify} messages.
                 * @param m ValAddresses message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IValAddresses, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValAddresses message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.ValAddresses;
            }

            /** Properties of a DVPair. */
            interface IDVPair {

                /** DVPair delegator_address */
                delegator_address?: (string|null);

                /** DVPair validator_address */
                validator_address?: (string|null);
            }

            /** Represents a DVPair. */
            class DVPair implements IDVPair {

                /**
                 * Constructs a new DVPair.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDVPair);

                /** DVPair delegator_address. */
                public delegator_address: string;

                /** DVPair validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified DVPair message. Does not implicitly {@link cosmos.staking.v1beta1.DVPair.verify|verify} messages.
                 * @param m DVPair message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDVPair, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPair message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DVPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.DVPair;
            }

            /** Properties of a DVPairs. */
            interface IDVPairs {

                /** DVPairs pairs */
                pairs?: (cosmos.staking.v1beta1.IDVPair[]|null);
            }

            /** Represents a DVPairs. */
            class DVPairs implements IDVPairs {

                /**
                 * Constructs a new DVPairs.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDVPairs);

                /** DVPairs pairs. */
                public pairs: cosmos.staking.v1beta1.IDVPair[];

                /**
                 * Encodes the specified DVPairs message. Does not implicitly {@link cosmos.staking.v1beta1.DVPairs.verify|verify} messages.
                 * @param m DVPairs message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDVPairs, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPairs message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DVPairs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.DVPairs;
            }

            /** Properties of a DVVTriplet. */
            interface IDVVTriplet {

                /** DVVTriplet delegator_address */
                delegator_address?: (string|null);

                /** DVVTriplet validator_src_address */
                validator_src_address?: (string|null);

                /** DVVTriplet validator_dst_address */
                validator_dst_address?: (string|null);
            }

            /** Represents a DVVTriplet. */
            class DVVTriplet implements IDVVTriplet {

                /**
                 * Constructs a new DVVTriplet.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDVVTriplet);

                /** DVVTriplet delegator_address. */
                public delegator_address: string;

                /** DVVTriplet validator_src_address. */
                public validator_src_address: string;

                /** DVVTriplet validator_dst_address. */
                public validator_dst_address: string;

                /**
                 * Encodes the specified DVVTriplet message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplet.verify|verify} messages.
                 * @param m DVVTriplet message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDVVTriplet, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplet message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DVVTriplet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.DVVTriplet;
            }

            /** Properties of a DVVTriplets. */
            interface IDVVTriplets {

                /** DVVTriplets triplets */
                triplets?: (cosmos.staking.v1beta1.IDVVTriplet[]|null);
            }

            /** Represents a DVVTriplets. */
            class DVVTriplets implements IDVVTriplets {

                /**
                 * Constructs a new DVVTriplets.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDVVTriplets);

                /** DVVTriplets triplets. */
                public triplets: cosmos.staking.v1beta1.IDVVTriplet[];

                /**
                 * Encodes the specified DVVTriplets message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplets.verify|verify} messages.
                 * @param m DVVTriplets message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDVVTriplets, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplets message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DVVTriplets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.DVVTriplets;
            }

            /** Properties of a Delegation. */
            interface IDelegation {

                /** Delegation delegator_address */
                delegator_address?: (string|null);

                /** Delegation validator_address */
                validator_address?: (string|null);

                /** Delegation shares */
                shares?: (string|null);
            }

            /** Represents a Delegation. */
            class Delegation implements IDelegation {

                /**
                 * Constructs a new Delegation.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDelegation);

                /** Delegation delegator_address. */
                public delegator_address: string;

                /** Delegation validator_address. */
                public validator_address: string;

                /** Delegation shares. */
                public shares: string;

                /**
                 * Encodes the specified Delegation message. Does not implicitly {@link cosmos.staking.v1beta1.Delegation.verify|verify} messages.
                 * @param m Delegation message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDelegation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Delegation message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Delegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Delegation;
            }

            /** Properties of an UnbondingDelegation. */
            interface IUnbondingDelegation {

                /** UnbondingDelegation delegator_address */
                delegator_address?: (string|null);

                /** UnbondingDelegation validator_address */
                validator_address?: (string|null);

                /** UnbondingDelegation entries */
                entries?: (cosmos.staking.v1beta1.IUnbondingDelegationEntry[]|null);
            }

            /** Represents an UnbondingDelegation. */
            class UnbondingDelegation implements IUnbondingDelegation {

                /**
                 * Constructs a new UnbondingDelegation.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IUnbondingDelegation);

                /** UnbondingDelegation delegator_address. */
                public delegator_address: string;

                /** UnbondingDelegation validator_address. */
                public validator_address: string;

                /** UnbondingDelegation entries. */
                public entries: cosmos.staking.v1beta1.IUnbondingDelegationEntry[];

                /**
                 * Encodes the specified UnbondingDelegation message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegation.verify|verify} messages.
                 * @param m UnbondingDelegation message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IUnbondingDelegation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegation message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns UnbondingDelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.UnbondingDelegation;
            }

            /** Properties of an UnbondingDelegationEntry. */
            interface IUnbondingDelegationEntry {

                /** UnbondingDelegationEntry creation_height */
                creation_height?: (Long|null);

                /** UnbondingDelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** UnbondingDelegationEntry balance */
                balance?: (string|null);
            }

            /** Represents an UnbondingDelegationEntry. */
            class UnbondingDelegationEntry implements IUnbondingDelegationEntry {

                /**
                 * Constructs a new UnbondingDelegationEntry.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IUnbondingDelegationEntry);

                /** UnbondingDelegationEntry creation_height. */
                public creation_height: Long;

                /** UnbondingDelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance. */
                public initial_balance: string;

                /** UnbondingDelegationEntry balance. */
                public balance: string;

                /**
                 * Encodes the specified UnbondingDelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegationEntry.verify|verify} messages.
                 * @param m UnbondingDelegationEntry message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IUnbondingDelegationEntry, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegationEntry message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns UnbondingDelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.UnbondingDelegationEntry;
            }

            /** Properties of a RedelegationEntry. */
            interface IRedelegationEntry {

                /** RedelegationEntry creation_height */
                creation_height?: (Long|null);

                /** RedelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** RedelegationEntry shares_dst */
                shares_dst?: (string|null);
            }

            /** Represents a RedelegationEntry. */
            class RedelegationEntry implements IRedelegationEntry {

                /**
                 * Constructs a new RedelegationEntry.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IRedelegationEntry);

                /** RedelegationEntry creation_height. */
                public creation_height: Long;

                /** RedelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance. */
                public initial_balance: string;

                /** RedelegationEntry shares_dst. */
                public shares_dst: string;

                /**
                 * Encodes the specified RedelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntry.verify|verify} messages.
                 * @param m RedelegationEntry message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IRedelegationEntry, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntry message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RedelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.RedelegationEntry;
            }

            /** Properties of a Redelegation. */
            interface IRedelegation {

                /** Redelegation delegator_address */
                delegator_address?: (string|null);

                /** Redelegation validator_src_address */
                validator_src_address?: (string|null);

                /** Redelegation validator_dst_address */
                validator_dst_address?: (string|null);

                /** Redelegation entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntry[]|null);
            }

            /** Represents a Redelegation. */
            class Redelegation implements IRedelegation {

                /**
                 * Constructs a new Redelegation.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IRedelegation);

                /** Redelegation delegator_address. */
                public delegator_address: string;

                /** Redelegation validator_src_address. */
                public validator_src_address: string;

                /** Redelegation validator_dst_address. */
                public validator_dst_address: string;

                /** Redelegation entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntry[];

                /**
                 * Encodes the specified Redelegation message. Does not implicitly {@link cosmos.staking.v1beta1.Redelegation.verify|verify} messages.
                 * @param m Redelegation message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IRedelegation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Redelegation message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Redelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Redelegation;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params unbonding_time */
                unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators */
                max_validators?: (number|null);

                /** Params max_entries */
                max_entries?: (number|null);

                /** Params historical_entries */
                historical_entries?: (number|null);

                /** Params bond_denom */
                bond_denom?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IParams);

                /** Params unbonding_time. */
                public unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators. */
                public max_validators: number;

                /** Params max_entries. */
                public max_entries: number;

                /** Params historical_entries. */
                public historical_entries: number;

                /** Params bond_denom. */
                public bond_denom: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.staking.v1beta1.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Params;
            }

            /** Properties of a DelegationResponse. */
            interface IDelegationResponse {

                /** DelegationResponse delegation */
                delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance */
                balance?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a DelegationResponse. */
            class DelegationResponse implements IDelegationResponse {

                /**
                 * Constructs a new DelegationResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IDelegationResponse);

                /** DelegationResponse delegation. */
                public delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance. */
                public balance?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified DelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.DelegationResponse.verify|verify} messages.
                 * @param m DelegationResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IDelegationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.DelegationResponse;
            }

            /** Properties of a RedelegationEntryResponse. */
            interface IRedelegationEntryResponse {

                /** RedelegationEntryResponse redelegation_entry */
                redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance */
                balance?: (string|null);
            }

            /** Represents a RedelegationEntryResponse. */
            class RedelegationEntryResponse implements IRedelegationEntryResponse {

                /**
                 * Constructs a new RedelegationEntryResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IRedelegationEntryResponse);

                /** RedelegationEntryResponse redelegation_entry. */
                public redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance. */
                public balance: string;

                /**
                 * Encodes the specified RedelegationEntryResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntryResponse.verify|verify} messages.
                 * @param m RedelegationEntryResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IRedelegationEntryResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntryResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RedelegationEntryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.RedelegationEntryResponse;
            }

            /** Properties of a RedelegationResponse. */
            interface IRedelegationResponse {

                /** RedelegationResponse redelegation */
                redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntryResponse[]|null);
            }

            /** Represents a RedelegationResponse. */
            class RedelegationResponse implements IRedelegationResponse {

                /**
                 * Constructs a new RedelegationResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IRedelegationResponse);

                /** RedelegationResponse redelegation. */
                public redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntryResponse[];

                /**
                 * Encodes the specified RedelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationResponse.verify|verify} messages.
                 * @param m RedelegationResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IRedelegationResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RedelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.RedelegationResponse;
            }

            /** Properties of a Pool. */
            interface IPool {

                /** Pool not_bonded_tokens */
                not_bonded_tokens?: (string|null);

                /** Pool bonded_tokens */
                bonded_tokens?: (string|null);
            }

            /** Represents a Pool. */
            class Pool implements IPool {

                /**
                 * Constructs a new Pool.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IPool);

                /** Pool not_bonded_tokens. */
                public not_bonded_tokens: string;

                /** Pool bonded_tokens. */
                public bonded_tokens: string;

                /**
                 * Encodes the specified Pool message. Does not implicitly {@link cosmos.staking.v1beta1.Pool.verify|verify} messages.
                 * @param m Pool message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IPool, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pool message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.Pool;
            }

            /** Properties of a MsgCreateValidator. */
            interface IMsgCreateValidator {

                /** MsgCreateValidator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgCreateValidator commission */
                commission?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** MsgCreateValidator min_self_delegation */
                min_self_delegation?: (string|null);

                /** MsgCreateValidator delegator_address */
                delegator_address?: (string|null);

                /** MsgCreateValidator validator_address */
                validator_address?: (string|null);

                /** MsgCreateValidator pubkey */
                pubkey?: (google.protobuf.IAny|null);

                /** MsgCreateValidator value */
                value?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgCreateValidator. */
            class MsgCreateValidator implements IMsgCreateValidator {

                /**
                 * Constructs a new MsgCreateValidator.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgCreateValidator);

                /** MsgCreateValidator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgCreateValidator commission. */
                public commission?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** MsgCreateValidator min_self_delegation. */
                public min_self_delegation: string;

                /** MsgCreateValidator delegator_address. */
                public delegator_address: string;

                /** MsgCreateValidator validator_address. */
                public validator_address: string;

                /** MsgCreateValidator pubkey. */
                public pubkey?: (google.protobuf.IAny|null);

                /** MsgCreateValidator value. */
                public value?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgCreateValidator message. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidator.verify|verify} messages.
                 * @param m MsgCreateValidator message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgCreateValidator, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateValidator message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgCreateValidator;
            }

            /** Properties of a MsgCreateValidatorResponse. */
            interface IMsgCreateValidatorResponse {
            }

            /** Represents a MsgCreateValidatorResponse. */
            class MsgCreateValidatorResponse implements IMsgCreateValidatorResponse {

                /**
                 * Constructs a new MsgCreateValidatorResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgCreateValidatorResponse);

                /**
                 * Encodes the specified MsgCreateValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidatorResponse.verify|verify} messages.
                 * @param m MsgCreateValidatorResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgCreateValidatorResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateValidatorResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgCreateValidatorResponse;
            }

            /** Properties of a MsgEditValidator. */
            interface IMsgEditValidator {

                /** MsgEditValidator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgEditValidator validator_address */
                validator_address?: (string|null);

                /** MsgEditValidator commission_rate */
                commission_rate?: (string|null);

                /** MsgEditValidator min_self_delegation */
                min_self_delegation?: (string|null);
            }

            /** Represents a MsgEditValidator. */
            class MsgEditValidator implements IMsgEditValidator {

                /**
                 * Constructs a new MsgEditValidator.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgEditValidator);

                /** MsgEditValidator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgEditValidator validator_address. */
                public validator_address: string;

                /** MsgEditValidator commission_rate. */
                public commission_rate: string;

                /** MsgEditValidator min_self_delegation. */
                public min_self_delegation: string;

                /**
                 * Encodes the specified MsgEditValidator message. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidator.verify|verify} messages.
                 * @param m MsgEditValidator message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgEditValidator, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditValidator message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgEditValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgEditValidator;
            }

            /** Properties of a MsgEditValidatorResponse. */
            interface IMsgEditValidatorResponse {
            }

            /** Represents a MsgEditValidatorResponse. */
            class MsgEditValidatorResponse implements IMsgEditValidatorResponse {

                /**
                 * Constructs a new MsgEditValidatorResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgEditValidatorResponse);

                /**
                 * Encodes the specified MsgEditValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidatorResponse.verify|verify} messages.
                 * @param m MsgEditValidatorResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgEditValidatorResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditValidatorResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgEditValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgEditValidatorResponse;
            }

            /** Properties of a MsgDelegate. */
            interface IMsgDelegate {

                /** MsgDelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgDelegate validator_address */
                validator_address?: (string|null);

                /** MsgDelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgDelegate. */
            class MsgDelegate implements IMsgDelegate {

                /**
                 * Constructs a new MsgDelegate.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgDelegate);

                /** MsgDelegate delegator_address. */
                public delegator_address: string;

                /** MsgDelegate validator_address. */
                public validator_address: string;

                /** MsgDelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgDelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegate.verify|verify} messages.
                 * @param m MsgDelegate message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgDelegate, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDelegate message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgDelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgDelegate;
            }

            /** Properties of a MsgDelegateResponse. */
            interface IMsgDelegateResponse {
            }

            /** Represents a MsgDelegateResponse. */
            class MsgDelegateResponse implements IMsgDelegateResponse {

                /**
                 * Constructs a new MsgDelegateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgDelegateResponse);

                /**
                 * Encodes the specified MsgDelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegateResponse.verify|verify} messages.
                 * @param m MsgDelegateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgDelegateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDelegateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgDelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgDelegateResponse;
            }

            /** Properties of a MsgBeginRedelegate. */
            interface IMsgBeginRedelegate {

                /** MsgBeginRedelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgBeginRedelegate validator_src_address */
                validator_src_address?: (string|null);

                /** MsgBeginRedelegate validator_dst_address */
                validator_dst_address?: (string|null);

                /** MsgBeginRedelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgBeginRedelegate. */
            class MsgBeginRedelegate implements IMsgBeginRedelegate {

                /**
                 * Constructs a new MsgBeginRedelegate.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgBeginRedelegate);

                /** MsgBeginRedelegate delegator_address. */
                public delegator_address: string;

                /** MsgBeginRedelegate validator_src_address. */
                public validator_src_address: string;

                /** MsgBeginRedelegate validator_dst_address. */
                public validator_dst_address: string;

                /** MsgBeginRedelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgBeginRedelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegate.verify|verify} messages.
                 * @param m MsgBeginRedelegate message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgBeginRedelegate, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBeginRedelegate message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgBeginRedelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgBeginRedelegate;
            }

            /** Properties of a MsgBeginRedelegateResponse. */
            interface IMsgBeginRedelegateResponse {

                /** MsgBeginRedelegateResponse completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a MsgBeginRedelegateResponse. */
            class MsgBeginRedelegateResponse implements IMsgBeginRedelegateResponse {

                /**
                 * Constructs a new MsgBeginRedelegateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgBeginRedelegateResponse);

                /** MsgBeginRedelegateResponse completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified MsgBeginRedelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegateResponse.verify|verify} messages.
                 * @param m MsgBeginRedelegateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgBeginRedelegateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBeginRedelegateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgBeginRedelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgBeginRedelegateResponse;
            }

            /** Properties of a MsgUndelegate. */
            interface IMsgUndelegate {

                /** MsgUndelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgUndelegate validator_address */
                validator_address?: (string|null);

                /** MsgUndelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgUndelegate. */
            class MsgUndelegate implements IMsgUndelegate {

                /**
                 * Constructs a new MsgUndelegate.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgUndelegate);

                /** MsgUndelegate delegator_address. */
                public delegator_address: string;

                /** MsgUndelegate validator_address. */
                public validator_address: string;

                /** MsgUndelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgUndelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegate.verify|verify} messages.
                 * @param m MsgUndelegate message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgUndelegate, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUndelegate message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUndelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgUndelegate;
            }

            /** Properties of a MsgUndelegateResponse. */
            interface IMsgUndelegateResponse {

                /** MsgUndelegateResponse completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a MsgUndelegateResponse. */
            class MsgUndelegateResponse implements IMsgUndelegateResponse {

                /**
                 * Constructs a new MsgUndelegateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.staking.v1beta1.IMsgUndelegateResponse);

                /** MsgUndelegateResponse completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified MsgUndelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegateResponse.verify|verify} messages.
                 * @param m MsgUndelegateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.staking.v1beta1.IMsgUndelegateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUndelegateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgUndelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.staking.v1beta1.MsgUndelegateResponse;
            }
        }
    }

    /** Namespace tx. */
    namespace tx {

        /** Namespace signing. */
        namespace signing {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** SignMode enum. */
                enum SignMode {
                    SIGN_MODE_UNSPECIFIED = 0,
                    SIGN_MODE_DIRECT = 1,
                    SIGN_MODE_TEXTUAL = 2,
                    SIGN_MODE_LEGACY_AMINO_JSON = 127
                }

                /** Properties of a SignatureDescriptors. */
                interface ISignatureDescriptors {

                    /** SignatureDescriptors signatures */
                    signatures?: (cosmos.tx.signing.v1beta1.ISignatureDescriptor[]|null);
                }

                /** Represents a SignatureDescriptors. */
                class SignatureDescriptors implements ISignatureDescriptors {

                    /**
                     * Constructs a new SignatureDescriptors.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.tx.signing.v1beta1.ISignatureDescriptors);

                    /** SignatureDescriptors signatures. */
                    public signatures: cosmos.tx.signing.v1beta1.ISignatureDescriptor[];

                    /**
                     * Encodes the specified SignatureDescriptors message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptors.verify|verify} messages.
                     * @param m SignatureDescriptors message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.tx.signing.v1beta1.ISignatureDescriptors, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureDescriptors message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SignatureDescriptors
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.signing.v1beta1.SignatureDescriptors;
                }

                /** Properties of a SignatureDescriptor. */
                interface ISignatureDescriptor {

                    /** SignatureDescriptor public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** SignatureDescriptor data */
                    data?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData|null);

                    /** SignatureDescriptor sequence */
                    sequence?: (Long|null);
                }

                /** Represents a SignatureDescriptor. */
                class SignatureDescriptor implements ISignatureDescriptor {

                    /**
                     * Constructs a new SignatureDescriptor.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.tx.signing.v1beta1.ISignatureDescriptor);

                    /** SignatureDescriptor public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** SignatureDescriptor data. */
                    public data?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData|null);

                    /** SignatureDescriptor sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified SignatureDescriptor message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.verify|verify} messages.
                     * @param m SignatureDescriptor message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.tx.signing.v1beta1.ISignatureDescriptor, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureDescriptor message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SignatureDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor;
                }

                namespace SignatureDescriptor {

                    /** Properties of a Data. */
                    interface IData {

                        /** Data single */
                        single?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle|null);

                        /** Data multi */
                        multi?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti|null);
                    }

                    /** Represents a Data. */
                    class Data implements IData {

                        /**
                         * Constructs a new Data.
                         * @param [p] Properties to set
                         */
                        constructor(p?: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData);

                        /** Data single. */
                        public single?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle|null);

                        /** Data multi. */
                        public multi?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti|null);

                        /** Data sum. */
                        public sum?: ("single"|"multi");

                        /**
                         * Encodes the specified Data message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.verify|verify} messages.
                         * @param m Data message or plain object to encode
                         * @param [w] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(m: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData, w?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a Data message from the specified reader or buffer.
                         * @param r Reader or buffer to decode from
                         * @param [l] Message length if known beforehand
                         * @returns Data
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;
                    }

                    namespace Data {

                        /** Properties of a Single. */
                        interface ISingle {

                            /** Single mode */
                            mode?: (cosmos.tx.signing.v1beta1.SignMode|null);

                            /** Single signature */
                            signature?: (Uint8Array|null);
                        }

                        /** Represents a Single. */
                        class Single implements ISingle {

                            /**
                             * Constructs a new Single.
                             * @param [p] Properties to set
                             */
                            constructor(p?: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle);

                            /** Single mode. */
                            public mode: cosmos.tx.signing.v1beta1.SignMode;

                            /** Single signature. */
                            public signature: Uint8Array;

                            /**
                             * Encodes the specified Single message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.verify|verify} messages.
                             * @param m Single message or plain object to encode
                             * @param [w] Writer to encode to
                             * @returns Writer
                             */
                            public static encode(m: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle, w?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Decodes a Single message from the specified reader or buffer.
                             * @param r Reader or buffer to decode from
                             * @param [l] Message length if known beforehand
                             * @returns Single
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;
                        }

                        /** Properties of a Multi. */
                        interface IMulti {

                            /** Multi bitarray */
                            bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                            /** Multi signatures */
                            signatures?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData[]|null);
                        }

                        /** Represents a Multi. */
                        class Multi implements IMulti {

                            /**
                             * Constructs a new Multi.
                             * @param [p] Properties to set
                             */
                            constructor(p?: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti);

                            /** Multi bitarray. */
                            public bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                            /** Multi signatures. */
                            public signatures: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData[];

                            /**
                             * Encodes the specified Multi message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.verify|verify} messages.
                             * @param m Multi message or plain object to encode
                             * @param [w] Writer to encode to
                             * @returns Writer
                             */
                            public static encode(m: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti, w?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Decodes a Multi message from the specified reader or buffer.
                             * @param r Reader or buffer to decode from
                             * @param [l] Message length if known beforehand
                             * @returns Multi
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;
                        }
                    }
                }
            }
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Tx. */
            interface ITx {

                /** Tx body */
                body?: (cosmos.tx.v1beta1.ITxBody|null);

                /** Tx auth_info */
                auth_info?: (cosmos.tx.v1beta1.IAuthInfo|null);

                /** Tx signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a Tx. */
            class Tx implements ITx {

                /**
                 * Constructs a new Tx.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ITx);

                /** Tx body. */
                public body?: (cosmos.tx.v1beta1.ITxBody|null);

                /** Tx auth_info. */
                public auth_info?: (cosmos.tx.v1beta1.IAuthInfo|null);

                /** Tx signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified Tx message. Does not implicitly {@link cosmos.tx.v1beta1.Tx.verify|verify} messages.
                 * @param m Tx message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ITx, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Tx message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Tx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.Tx;
            }

            /** Properties of a TxRaw. */
            interface ITxRaw {

                /** TxRaw body_bytes */
                body_bytes?: (Uint8Array|null);

                /** TxRaw auth_info_bytes */
                auth_info_bytes?: (Uint8Array|null);

                /** TxRaw signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a TxRaw. */
            class TxRaw implements ITxRaw {

                /**
                 * Constructs a new TxRaw.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ITxRaw);

                /** TxRaw body_bytes. */
                public body_bytes: Uint8Array;

                /** TxRaw auth_info_bytes. */
                public auth_info_bytes: Uint8Array;

                /** TxRaw signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified TxRaw message. Does not implicitly {@link cosmos.tx.v1beta1.TxRaw.verify|verify} messages.
                 * @param m TxRaw message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ITxRaw, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxRaw message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TxRaw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.TxRaw;
            }

            /** Properties of a SignDoc. */
            interface ISignDoc {

                /** SignDoc body_bytes */
                body_bytes?: (Uint8Array|null);

                /** SignDoc auth_info_bytes */
                auth_info_bytes?: (Uint8Array|null);

                /** SignDoc chain_id */
                chain_id?: (string|null);

                /** SignDoc account_number */
                account_number?: (Long|null);
            }

            /** Represents a SignDoc. */
            class SignDoc implements ISignDoc {

                /**
                 * Constructs a new SignDoc.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ISignDoc);

                /** SignDoc body_bytes. */
                public body_bytes: Uint8Array;

                /** SignDoc auth_info_bytes. */
                public auth_info_bytes: Uint8Array;

                /** SignDoc chain_id. */
                public chain_id: string;

                /** SignDoc account_number. */
                public account_number: Long;

                /**
                 * Encodes the specified SignDoc message. Does not implicitly {@link cosmos.tx.v1beta1.SignDoc.verify|verify} messages.
                 * @param m SignDoc message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ISignDoc, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SignDoc message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SignDoc
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.SignDoc;
            }

            /** Properties of a TxBody. */
            interface ITxBody {

                /** TxBody messages */
                messages?: (google.protobuf.IAny[]|null);

                /** TxBody memo */
                memo?: (string|null);

                /** TxBody timeout_height */
                timeout_height?: (Long|null);

                /** TxBody extension_options */
                extension_options?: (google.protobuf.IAny[]|null);

                /** TxBody non_critical_extension_options */
                non_critical_extension_options?: (google.protobuf.IAny[]|null);
            }

            /** Represents a TxBody. */
            class TxBody implements ITxBody {

                /**
                 * Constructs a new TxBody.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ITxBody);

                /** TxBody messages. */
                public messages: google.protobuf.IAny[];

                /** TxBody memo. */
                public memo: string;

                /** TxBody timeout_height. */
                public timeout_height: Long;

                /** TxBody extension_options. */
                public extension_options: google.protobuf.IAny[];

                /** TxBody non_critical_extension_options. */
                public non_critical_extension_options: google.protobuf.IAny[];

                /**
                 * Encodes the specified TxBody message. Does not implicitly {@link cosmos.tx.v1beta1.TxBody.verify|verify} messages.
                 * @param m TxBody message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ITxBody, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxBody message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TxBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.TxBody;
            }

            /** Properties of an AuthInfo. */
            interface IAuthInfo {

                /** AuthInfo signer_infos */
                signer_infos?: (cosmos.tx.v1beta1.ISignerInfo[]|null);

                /** AuthInfo fee */
                fee?: (cosmos.tx.v1beta1.IFee|null);
            }

            /** Represents an AuthInfo. */
            class AuthInfo implements IAuthInfo {

                /**
                 * Constructs a new AuthInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IAuthInfo);

                /** AuthInfo signer_infos. */
                public signer_infos: cosmos.tx.v1beta1.ISignerInfo[];

                /** AuthInfo fee. */
                public fee?: (cosmos.tx.v1beta1.IFee|null);

                /**
                 * Encodes the specified AuthInfo message. Does not implicitly {@link cosmos.tx.v1beta1.AuthInfo.verify|verify} messages.
                 * @param m AuthInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IAuthInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AuthInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AuthInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.AuthInfo;
            }

            /** Properties of a SignerInfo. */
            interface ISignerInfo {

                /** SignerInfo public_key */
                public_key?: (google.protobuf.IAny|null);

                /** SignerInfo mode_info */
                mode_info?: (cosmos.tx.v1beta1.IModeInfo|null);

                /** SignerInfo sequence */
                sequence?: (Long|null);
            }

            /** Represents a SignerInfo. */
            class SignerInfo implements ISignerInfo {

                /**
                 * Constructs a new SignerInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ISignerInfo);

                /** SignerInfo public_key. */
                public public_key?: (google.protobuf.IAny|null);

                /** SignerInfo mode_info. */
                public mode_info?: (cosmos.tx.v1beta1.IModeInfo|null);

                /** SignerInfo sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified SignerInfo message. Does not implicitly {@link cosmos.tx.v1beta1.SignerInfo.verify|verify} messages.
                 * @param m SignerInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ISignerInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SignerInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SignerInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.SignerInfo;
            }

            /** Properties of a ModeInfo. */
            interface IModeInfo {

                /** ModeInfo single */
                single?: (cosmos.tx.v1beta1.ModeInfo.ISingle|null);

                /** ModeInfo multi */
                multi?: (cosmos.tx.v1beta1.ModeInfo.IMulti|null);
            }

            /** Represents a ModeInfo. */
            class ModeInfo implements IModeInfo {

                /**
                 * Constructs a new ModeInfo.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IModeInfo);

                /** ModeInfo single. */
                public single?: (cosmos.tx.v1beta1.ModeInfo.ISingle|null);

                /** ModeInfo multi. */
                public multi?: (cosmos.tx.v1beta1.ModeInfo.IMulti|null);

                /** ModeInfo sum. */
                public sum?: ("single"|"multi");

                /**
                 * Encodes the specified ModeInfo message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.verify|verify} messages.
                 * @param m ModeInfo message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IModeInfo, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModeInfo message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ModeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.ModeInfo;
            }

            namespace ModeInfo {

                /** Properties of a Single. */
                interface ISingle {

                    /** Single mode */
                    mode?: (cosmos.tx.signing.v1beta1.SignMode|null);
                }

                /** Represents a Single. */
                class Single implements ISingle {

                    /**
                     * Constructs a new Single.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.tx.v1beta1.ModeInfo.ISingle);

                    /** Single mode. */
                    public mode: cosmos.tx.signing.v1beta1.SignMode;

                    /**
                     * Encodes the specified Single message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Single.verify|verify} messages.
                     * @param m Single message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.tx.v1beta1.ModeInfo.ISingle, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Single message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Single
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.ModeInfo.Single;
                }

                /** Properties of a Multi. */
                interface IMulti {

                    /** Multi bitarray */
                    bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                    /** Multi mode_infos */
                    mode_infos?: (cosmos.tx.v1beta1.IModeInfo[]|null);
                }

                /** Represents a Multi. */
                class Multi implements IMulti {

                    /**
                     * Constructs a new Multi.
                     * @param [p] Properties to set
                     */
                    constructor(p?: cosmos.tx.v1beta1.ModeInfo.IMulti);

                    /** Multi bitarray. */
                    public bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                    /** Multi mode_infos. */
                    public mode_infos: cosmos.tx.v1beta1.IModeInfo[];

                    /**
                     * Encodes the specified Multi message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Multi.verify|verify} messages.
                     * @param m Multi message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: cosmos.tx.v1beta1.ModeInfo.IMulti, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Multi message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Multi
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.ModeInfo.Multi;
                }
            }

            /** Properties of a Fee. */
            interface IFee {

                /** Fee amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Fee gas_limit */
                gas_limit?: (Long|null);

                /** Fee payer */
                payer?: (string|null);

                /** Fee granter */
                granter?: (string|null);
            }

            /** Represents a Fee. */
            class Fee implements IFee {

                /**
                 * Constructs a new Fee.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IFee);

                /** Fee amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** Fee gas_limit. */
                public gas_limit: Long;

                /** Fee payer. */
                public payer: string;

                /** Fee granter. */
                public granter: string;

                /**
                 * Encodes the specified Fee message. Does not implicitly {@link cosmos.tx.v1beta1.Fee.verify|verify} messages.
                 * @param m Fee message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IFee, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Fee message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Fee
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.Fee;
            }

            /** Properties of a GetTxsEventRequest. */
            interface IGetTxsEventRequest {

                /** GetTxsEventRequest events */
                events?: (string[]|null);

                /** GetTxsEventRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /** GetTxsEventRequest order_by */
                order_by?: (cosmos.tx.v1beta1.OrderBy|null);
            }

            /** Represents a GetTxsEventRequest. */
            class GetTxsEventRequest implements IGetTxsEventRequest {

                /**
                 * Constructs a new GetTxsEventRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IGetTxsEventRequest);

                /** GetTxsEventRequest events. */
                public events: string[];

                /** GetTxsEventRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /** GetTxsEventRequest order_by. */
                public order_by: cosmos.tx.v1beta1.OrderBy;

                /**
                 * Encodes the specified GetTxsEventRequest message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventRequest.verify|verify} messages.
                 * @param m GetTxsEventRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IGetTxsEventRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxsEventRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GetTxsEventRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.GetTxsEventRequest;
            }

            /** OrderBy enum. */
            enum OrderBy {
                ORDER_BY_UNSPECIFIED = 0,
                ORDER_BY_ASC = 1,
                ORDER_BY_DESC = 2
            }

            /** Properties of a GetTxsEventResponse. */
            interface IGetTxsEventResponse {

                /** GetTxsEventResponse txs */
                txs?: (cosmos.tx.v1beta1.ITx[]|null);

                /** GetTxsEventResponse tx_responses */
                tx_responses?: (cosmos.base.abci.v1beta1.ITxResponse[]|null);

                /** GetTxsEventResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a GetTxsEventResponse. */
            class GetTxsEventResponse implements IGetTxsEventResponse {

                /**
                 * Constructs a new GetTxsEventResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IGetTxsEventResponse);

                /** GetTxsEventResponse txs. */
                public txs: cosmos.tx.v1beta1.ITx[];

                /** GetTxsEventResponse tx_responses. */
                public tx_responses: cosmos.base.abci.v1beta1.ITxResponse[];

                /** GetTxsEventResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified GetTxsEventResponse message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventResponse.verify|verify} messages.
                 * @param m GetTxsEventResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IGetTxsEventResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxsEventResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GetTxsEventResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.GetTxsEventResponse;
            }

            /** Properties of a BroadcastTxRequest. */
            interface IBroadcastTxRequest {

                /** BroadcastTxRequest tx_bytes */
                tx_bytes?: (Uint8Array|null);

                /** BroadcastTxRequest mode */
                mode?: (cosmos.tx.v1beta1.BroadcastMode|null);
            }

            /** Represents a BroadcastTxRequest. */
            class BroadcastTxRequest implements IBroadcastTxRequest {

                /**
                 * Constructs a new BroadcastTxRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IBroadcastTxRequest);

                /** BroadcastTxRequest tx_bytes. */
                public tx_bytes: Uint8Array;

                /** BroadcastTxRequest mode. */
                public mode: cosmos.tx.v1beta1.BroadcastMode;

                /**
                 * Encodes the specified BroadcastTxRequest message. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxRequest.verify|verify} messages.
                 * @param m BroadcastTxRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IBroadcastTxRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BroadcastTxRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BroadcastTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.BroadcastTxRequest;
            }

            /** BroadcastMode enum. */
            enum BroadcastMode {
                BROADCAST_MODE_UNSPECIFIED = 0,
                BROADCAST_MODE_BLOCK = 1,
                BROADCAST_MODE_SYNC = 2,
                BROADCAST_MODE_ASYNC = 3
            }

            /** Properties of a BroadcastTxResponse. */
            interface IBroadcastTxResponse {

                /** BroadcastTxResponse tx_response */
                tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);
            }

            /** Represents a BroadcastTxResponse. */
            class BroadcastTxResponse implements IBroadcastTxResponse {

                /**
                 * Constructs a new BroadcastTxResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IBroadcastTxResponse);

                /** BroadcastTxResponse tx_response. */
                public tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);

                /**
                 * Encodes the specified BroadcastTxResponse message. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxResponse.verify|verify} messages.
                 * @param m BroadcastTxResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IBroadcastTxResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BroadcastTxResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BroadcastTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.BroadcastTxResponse;
            }

            /** Properties of a SimulateRequest. */
            interface ISimulateRequest {

                /** SimulateRequest tx */
                tx?: (cosmos.tx.v1beta1.ITx|null);
            }

            /** Represents a SimulateRequest. */
            class SimulateRequest implements ISimulateRequest {

                /**
                 * Constructs a new SimulateRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ISimulateRequest);

                /** SimulateRequest tx. */
                public tx?: (cosmos.tx.v1beta1.ITx|null);

                /**
                 * Encodes the specified SimulateRequest message. Does not implicitly {@link cosmos.tx.v1beta1.SimulateRequest.verify|verify} messages.
                 * @param m SimulateRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ISimulateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SimulateRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SimulateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.SimulateRequest;
            }

            /** Properties of a SimulateResponse. */
            interface ISimulateResponse {

                /** SimulateResponse gas_info */
                gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                /** SimulateResponse result */
                result?: (cosmos.base.abci.v1beta1.IResult|null);
            }

            /** Represents a SimulateResponse. */
            class SimulateResponse implements ISimulateResponse {

                /**
                 * Constructs a new SimulateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.ISimulateResponse);

                /** SimulateResponse gas_info. */
                public gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                /** SimulateResponse result. */
                public result?: (cosmos.base.abci.v1beta1.IResult|null);

                /**
                 * Encodes the specified SimulateResponse message. Does not implicitly {@link cosmos.tx.v1beta1.SimulateResponse.verify|verify} messages.
                 * @param m SimulateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.ISimulateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SimulateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SimulateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.SimulateResponse;
            }

            /** Properties of a GetTxRequest. */
            interface IGetTxRequest {

                /** GetTxRequest hash */
                hash?: (string|null);
            }

            /** Represents a GetTxRequest. */
            class GetTxRequest implements IGetTxRequest {

                /**
                 * Constructs a new GetTxRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IGetTxRequest);

                /** GetTxRequest hash. */
                public hash: string;

                /**
                 * Encodes the specified GetTxRequest message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxRequest.verify|verify} messages.
                 * @param m GetTxRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IGetTxRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GetTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.GetTxRequest;
            }

            /** Properties of a GetTxResponse. */
            interface IGetTxResponse {

                /** GetTxResponse tx */
                tx?: (cosmos.tx.v1beta1.ITx|null);

                /** GetTxResponse tx_response */
                tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);
            }

            /** Represents a GetTxResponse. */
            class GetTxResponse implements IGetTxResponse {

                /**
                 * Constructs a new GetTxResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.tx.v1beta1.IGetTxResponse);

                /** GetTxResponse tx. */
                public tx?: (cosmos.tx.v1beta1.ITx|null);

                /** GetTxResponse tx_response. */
                public tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);

                /**
                 * Encodes the specified GetTxResponse message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxResponse.verify|verify} messages.
                 * @param m GetTxResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.tx.v1beta1.IGetTxResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GetTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.tx.v1beta1.GetTxResponse;
            }
        }
    }

    /** Namespace upgrade. */
    namespace upgrade {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Plan. */
            interface IPlan {

                /** Plan name */
                name?: (string|null);

                /** Plan time */
                time?: (google.protobuf.ITimestamp|null);

                /** Plan height */
                height?: (Long|null);

                /** Plan info */
                info?: (string|null);

                /** Plan upgraded_client_state */
                upgraded_client_state?: (google.protobuf.IAny|null);
            }

            /** Represents a Plan. */
            class Plan implements IPlan {

                /**
                 * Constructs a new Plan.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IPlan);

                /** Plan name. */
                public name: string;

                /** Plan time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** Plan height. */
                public height: Long;

                /** Plan info. */
                public info: string;

                /** Plan upgraded_client_state. */
                public upgraded_client_state?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified Plan message. Does not implicitly {@link cosmos.upgrade.v1beta1.Plan.verify|verify} messages.
                 * @param m Plan message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IPlan, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Plan message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Plan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.Plan;
            }

            /** Properties of a SoftwareUpgradeProposal. */
            interface ISoftwareUpgradeProposal {

                /** SoftwareUpgradeProposal title */
                title?: (string|null);

                /** SoftwareUpgradeProposal description */
                description?: (string|null);

                /** SoftwareUpgradeProposal plan */
                plan?: (cosmos.upgrade.v1beta1.IPlan|null);
            }

            /** Represents a SoftwareUpgradeProposal. */
            class SoftwareUpgradeProposal implements ISoftwareUpgradeProposal {

                /**
                 * Constructs a new SoftwareUpgradeProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal);

                /** SoftwareUpgradeProposal title. */
                public title: string;

                /** SoftwareUpgradeProposal description. */
                public description: string;

                /** SoftwareUpgradeProposal plan. */
                public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                /**
                 * Encodes the specified SoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.verify|verify} messages.
                 * @param m SoftwareUpgradeProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns SoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;
            }

            /** Properties of a CancelSoftwareUpgradeProposal. */
            interface ICancelSoftwareUpgradeProposal {

                /** CancelSoftwareUpgradeProposal title */
                title?: (string|null);

                /** CancelSoftwareUpgradeProposal description */
                description?: (string|null);
            }

            /** Represents a CancelSoftwareUpgradeProposal. */
            class CancelSoftwareUpgradeProposal implements ICancelSoftwareUpgradeProposal {

                /**
                 * Constructs a new CancelSoftwareUpgradeProposal.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal);

                /** CancelSoftwareUpgradeProposal title. */
                public title: string;

                /** CancelSoftwareUpgradeProposal description. */
                public description: string;

                /**
                 * Encodes the specified CancelSoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.verify|verify} messages.
                 * @param m CancelSoftwareUpgradeProposal message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CancelSoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns CancelSoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;
            }

            /** Properties of a QueryCurrentPlanRequest. */
            interface IQueryCurrentPlanRequest {
            }

            /** Represents a QueryCurrentPlanRequest. */
            class QueryCurrentPlanRequest implements IQueryCurrentPlanRequest {

                /**
                 * Constructs a new QueryCurrentPlanRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest);

                /**
                 * Encodes the specified QueryCurrentPlanRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.verify|verify} messages.
                 * @param m QueryCurrentPlanRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentPlanRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCurrentPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryCurrentPlanRequest;
            }

            /** Properties of a QueryCurrentPlanResponse. */
            interface IQueryCurrentPlanResponse {

                /** QueryCurrentPlanResponse plan */
                plan?: (cosmos.upgrade.v1beta1.IPlan|null);
            }

            /** Represents a QueryCurrentPlanResponse. */
            class QueryCurrentPlanResponse implements IQueryCurrentPlanResponse {

                /**
                 * Constructs a new QueryCurrentPlanResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryCurrentPlanResponse);

                /** QueryCurrentPlanResponse plan. */
                public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                /**
                 * Encodes the specified QueryCurrentPlanResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.verify|verify} messages.
                 * @param m QueryCurrentPlanResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryCurrentPlanResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentPlanResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryCurrentPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryCurrentPlanResponse;
            }

            /** Properties of a QueryAppliedPlanRequest. */
            interface IQueryAppliedPlanRequest {

                /** QueryAppliedPlanRequest name */
                name?: (string|null);
            }

            /** Represents a QueryAppliedPlanRequest. */
            class QueryAppliedPlanRequest implements IQueryAppliedPlanRequest {

                /**
                 * Constructs a new QueryAppliedPlanRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest);

                /** QueryAppliedPlanRequest name. */
                public name: string;

                /**
                 * Encodes the specified QueryAppliedPlanRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.verify|verify} messages.
                 * @param m QueryAppliedPlanRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAppliedPlanRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAppliedPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryAppliedPlanRequest;
            }

            /** Properties of a QueryAppliedPlanResponse. */
            interface IQueryAppliedPlanResponse {

                /** QueryAppliedPlanResponse height */
                height?: (Long|null);
            }

            /** Represents a QueryAppliedPlanResponse. */
            class QueryAppliedPlanResponse implements IQueryAppliedPlanResponse {

                /**
                 * Constructs a new QueryAppliedPlanResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryAppliedPlanResponse);

                /** QueryAppliedPlanResponse height. */
                public height: Long;

                /**
                 * Encodes the specified QueryAppliedPlanResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.verify|verify} messages.
                 * @param m QueryAppliedPlanResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryAppliedPlanResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAppliedPlanResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAppliedPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryAppliedPlanResponse;
            }

            /** Properties of a QueryUpgradedConsensusStateRequest. */
            interface IQueryUpgradedConsensusStateRequest {

                /** QueryUpgradedConsensusStateRequest last_height */
                last_height?: (Long|null);
            }

            /** Represents a QueryUpgradedConsensusStateRequest. */
            class QueryUpgradedConsensusStateRequest implements IQueryUpgradedConsensusStateRequest {

                /**
                 * Constructs a new QueryUpgradedConsensusStateRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest);

                /** QueryUpgradedConsensusStateRequest last_height. */
                public last_height: Long;

                /**
                 * Encodes the specified QueryUpgradedConsensusStateRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.verify|verify} messages.
                 * @param m QueryUpgradedConsensusStateRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUpgradedConsensusStateRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryUpgradedConsensusStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest;
            }

            /** Properties of a QueryUpgradedConsensusStateResponse. */
            interface IQueryUpgradedConsensusStateResponse {

                /** QueryUpgradedConsensusStateResponse upgraded_consensus_state */
                upgraded_consensus_state?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryUpgradedConsensusStateResponse. */
            class QueryUpgradedConsensusStateResponse implements IQueryUpgradedConsensusStateResponse {

                /**
                 * Constructs a new QueryUpgradedConsensusStateResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateResponse);

                /** QueryUpgradedConsensusStateResponse upgraded_consensus_state. */
                public upgraded_consensus_state?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryUpgradedConsensusStateResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.verify|verify} messages.
                 * @param m QueryUpgradedConsensusStateResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUpgradedConsensusStateResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryUpgradedConsensusStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse;
            }
        }
    }

    /** Namespace vesting. */
    namespace vesting {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a BaseVestingAccount. */
            interface IBaseVestingAccount {

                /** BaseVestingAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** BaseVestingAccount original_vesting */
                original_vesting?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount delegated_free */
                delegated_free?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount delegated_vesting */
                delegated_vesting?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount end_time */
                end_time?: (Long|null);
            }

            /** Represents a BaseVestingAccount. */
            class BaseVestingAccount implements IBaseVestingAccount {

                /**
                 * Constructs a new BaseVestingAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IBaseVestingAccount);

                /** BaseVestingAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** BaseVestingAccount original_vesting. */
                public original_vesting: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount delegated_free. */
                public delegated_free: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount delegated_vesting. */
                public delegated_vesting: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount end_time. */
                public end_time: Long;

                /**
                 * Encodes the specified BaseVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.BaseVestingAccount.verify|verify} messages.
                 * @param m BaseVestingAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IBaseVestingAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseVestingAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BaseVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.BaseVestingAccount;
            }

            /** Properties of a ContinuousVestingAccount. */
            interface IContinuousVestingAccount {

                /** ContinuousVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** ContinuousVestingAccount start_time */
                start_time?: (Long|null);
            }

            /** Represents a ContinuousVestingAccount. */
            class ContinuousVestingAccount implements IContinuousVestingAccount {

                /**
                 * Constructs a new ContinuousVestingAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IContinuousVestingAccount);

                /** ContinuousVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** ContinuousVestingAccount start_time. */
                public start_time: Long;

                /**
                 * Encodes the specified ContinuousVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.ContinuousVestingAccount.verify|verify} messages.
                 * @param m ContinuousVestingAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IContinuousVestingAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContinuousVestingAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ContinuousVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.ContinuousVestingAccount;
            }

            /** Properties of a DelayedVestingAccount. */
            interface IDelayedVestingAccount {

                /** DelayedVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);
            }

            /** Represents a DelayedVestingAccount. */
            class DelayedVestingAccount implements IDelayedVestingAccount {

                /**
                 * Constructs a new DelayedVestingAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IDelayedVestingAccount);

                /** DelayedVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /**
                 * Encodes the specified DelayedVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.DelayedVestingAccount.verify|verify} messages.
                 * @param m DelayedVestingAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IDelayedVestingAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelayedVestingAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns DelayedVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.DelayedVestingAccount;
            }

            /** Properties of a Period. */
            interface IPeriod {

                /** Period length */
                length?: (Long|null);

                /** Period amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Period. */
            class Period implements IPeriod {

                /**
                 * Constructs a new Period.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IPeriod);

                /** Period length. */
                public length: Long;

                /** Period amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Period message. Does not implicitly {@link cosmos.vesting.v1beta1.Period.verify|verify} messages.
                 * @param m Period message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IPeriod, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Period message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Period
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.Period;
            }

            /** Properties of a PeriodicVestingAccount. */
            interface IPeriodicVestingAccount {

                /** PeriodicVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** PeriodicVestingAccount start_time */
                start_time?: (Long|null);

                /** PeriodicVestingAccount vesting_periods */
                vesting_periods?: (cosmos.vesting.v1beta1.IPeriod[]|null);
            }

            /** Represents a PeriodicVestingAccount. */
            class PeriodicVestingAccount implements IPeriodicVestingAccount {

                /**
                 * Constructs a new PeriodicVestingAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IPeriodicVestingAccount);

                /** PeriodicVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** PeriodicVestingAccount start_time. */
                public start_time: Long;

                /** PeriodicVestingAccount vesting_periods. */
                public vesting_periods: cosmos.vesting.v1beta1.IPeriod[];

                /**
                 * Encodes the specified PeriodicVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.PeriodicVestingAccount.verify|verify} messages.
                 * @param m PeriodicVestingAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IPeriodicVestingAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PeriodicVestingAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns PeriodicVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.PeriodicVestingAccount;
            }

            /** Properties of a MsgCreateVestingAccount. */
            interface IMsgCreateVestingAccount {

                /** MsgCreateVestingAccount from_address */
                from_address?: (string|null);

                /** MsgCreateVestingAccount to_address */
                to_address?: (string|null);

                /** MsgCreateVestingAccount amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgCreateVestingAccount end_time */
                end_time?: (Long|null);

                /** MsgCreateVestingAccount delayed */
                delayed?: (boolean|null);
            }

            /** Represents a MsgCreateVestingAccount. */
            class MsgCreateVestingAccount implements IMsgCreateVestingAccount {

                /**
                 * Constructs a new MsgCreateVestingAccount.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IMsgCreateVestingAccount);

                /** MsgCreateVestingAccount from_address. */
                public from_address: string;

                /** MsgCreateVestingAccount to_address. */
                public to_address: string;

                /** MsgCreateVestingAccount amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** MsgCreateVestingAccount end_time. */
                public end_time: Long;

                /** MsgCreateVestingAccount delayed. */
                public delayed: boolean;

                /**
                 * Encodes the specified MsgCreateVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccount.verify|verify} messages.
                 * @param m MsgCreateVestingAccount message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IMsgCreateVestingAccount, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateVestingAccount message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.MsgCreateVestingAccount;
            }

            /** Properties of a MsgCreateVestingAccountResponse. */
            interface IMsgCreateVestingAccountResponse {
            }

            /** Represents a MsgCreateVestingAccountResponse. */
            class MsgCreateVestingAccountResponse implements IMsgCreateVestingAccountResponse {

                /**
                 * Constructs a new MsgCreateVestingAccountResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: cosmos.vesting.v1beta1.IMsgCreateVestingAccountResponse);

                /**
                 * Encodes the specified MsgCreateVestingAccountResponse message. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.verify|verify} messages.
                 * @param m MsgCreateVestingAccountResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: cosmos.vesting.v1beta1.IMsgCreateVestingAccountResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateVestingAccountResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateVestingAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse;
            }
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param m Any message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IAny, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.Any;
        }

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param m FileDescriptorSet message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IFileDescriptorSet, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.FileDescriptorSet;
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param m FileDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IFileDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.FileDescriptorProto;
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param m DescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.DescriptorProto;
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [p] Properties to set
                 */
                constructor(p?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param m ExtensionRange message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: google.protobuf.DescriptorProto.IExtensionRange, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.DescriptorProto.ExtensionRange;
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [p] Properties to set
                 */
                constructor(p?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param m ReservedRange message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: google.protobuf.DescriptorProto.IReservedRange, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.DescriptorProto.ReservedRange;
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param m FieldDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IFieldDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.FieldDescriptorProto;
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param m OneofDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IOneofDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.OneofDescriptorProto;
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param m EnumDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IEnumDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.EnumDescriptorProto;
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param m EnumValueDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IEnumValueDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.EnumValueDescriptorProto;
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param m ServiceDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IServiceDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.ServiceDescriptorProto;
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param m MethodDescriptorProto message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IMethodDescriptorProto, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.MethodDescriptorProto;
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FileOptions .gogoproto.goproto_getters_all */
            ".gogoproto.goproto_getters_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_prefix_all */
            ".gogoproto.goproto_enum_prefix_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_stringer_all */
            ".gogoproto.goproto_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.verbose_equal_all */
            ".gogoproto.verbose_equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.face_all */
            ".gogoproto.face_all"?: (boolean|null);

            /** FileOptions .gogoproto.gostring_all */
            ".gogoproto.gostring_all"?: (boolean|null);

            /** FileOptions .gogoproto.populate_all */
            ".gogoproto.populate_all"?: (boolean|null);

            /** FileOptions .gogoproto.stringer_all */
            ".gogoproto.stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.onlyone_all */
            ".gogoproto.onlyone_all"?: (boolean|null);

            /** FileOptions .gogoproto.equal_all */
            ".gogoproto.equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.description_all */
            ".gogoproto.description_all"?: (boolean|null);

            /** FileOptions .gogoproto.testgen_all */
            ".gogoproto.testgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.benchgen_all */
            ".gogoproto.benchgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.marshaler_all */
            ".gogoproto.marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unmarshaler_all */
            ".gogoproto.unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.stable_marshaler_all */
            ".gogoproto.stable_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.sizer_all */
            ".gogoproto.sizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_stringer_all */
            ".gogoproto.goproto_enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.enum_stringer_all */
            ".gogoproto.enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_marshaler_all */
            ".gogoproto.unsafe_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_unmarshaler_all */
            ".gogoproto.unsafe_unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_extensions_map_all */
            ".gogoproto.goproto_extensions_map_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unrecognized_all */
            ".gogoproto.goproto_unrecognized_all"?: (boolean|null);

            /** FileOptions .gogoproto.gogoproto_import */
            ".gogoproto.gogoproto_import"?: (boolean|null);

            /** FileOptions .gogoproto.protosizer_all */
            ".gogoproto.protosizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.compare_all */
            ".gogoproto.compare_all"?: (boolean|null);

            /** FileOptions .gogoproto.typedecl_all */
            ".gogoproto.typedecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.enumdecl_all */
            ".gogoproto.enumdecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_registration */
            ".gogoproto.goproto_registration"?: (boolean|null);

            /** FileOptions .gogoproto.messagename_all */
            ".gogoproto.messagename_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_sizecache_all */
            ".gogoproto.goproto_sizecache_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unkeyed_all */
            ".gogoproto.goproto_unkeyed_all"?: (boolean|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param m FileOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IFileOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.FileOptions;
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .cosmos_proto.interface_type */
            ".cosmos_proto.interface_type"?: (string|null);

            /** MessageOptions .cosmos_proto.implements_interface */
            ".cosmos_proto.implements_interface"?: (string|null);

            /** MessageOptions .gogoproto.goproto_getters */
            ".gogoproto.goproto_getters"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_stringer */
            ".gogoproto.goproto_stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.verbose_equal */
            ".gogoproto.verbose_equal"?: (boolean|null);

            /** MessageOptions .gogoproto.face */
            ".gogoproto.face"?: (boolean|null);

            /** MessageOptions .gogoproto.gostring */
            ".gogoproto.gostring"?: (boolean|null);

            /** MessageOptions .gogoproto.populate */
            ".gogoproto.populate"?: (boolean|null);

            /** MessageOptions .gogoproto.stringer */
            ".gogoproto.stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.onlyone */
            ".gogoproto.onlyone"?: (boolean|null);

            /** MessageOptions .gogoproto.equal */
            ".gogoproto.equal"?: (boolean|null);

            /** MessageOptions .gogoproto.description */
            ".gogoproto.description"?: (boolean|null);

            /** MessageOptions .gogoproto.testgen */
            ".gogoproto.testgen"?: (boolean|null);

            /** MessageOptions .gogoproto.benchgen */
            ".gogoproto.benchgen"?: (boolean|null);

            /** MessageOptions .gogoproto.marshaler */
            ".gogoproto.marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unmarshaler */
            ".gogoproto.unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.stable_marshaler */
            ".gogoproto.stable_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.sizer */
            ".gogoproto.sizer"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_marshaler */
            ".gogoproto.unsafe_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_unmarshaler */
            ".gogoproto.unsafe_unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_extensions_map */
            ".gogoproto.goproto_extensions_map"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unrecognized */
            ".gogoproto.goproto_unrecognized"?: (boolean|null);

            /** MessageOptions .gogoproto.protosizer */
            ".gogoproto.protosizer"?: (boolean|null);

            /** MessageOptions .gogoproto.compare */
            ".gogoproto.compare"?: (boolean|null);

            /** MessageOptions .gogoproto.typedecl */
            ".gogoproto.typedecl"?: (boolean|null);

            /** MessageOptions .gogoproto.messagename */
            ".gogoproto.messagename"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_sizecache */
            ".gogoproto.goproto_sizecache"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unkeyed */
            ".gogoproto.goproto_unkeyed"?: (boolean|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param m MessageOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IMessageOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.MessageOptions;
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .cosmos_proto.accepts_interface */
            ".cosmos_proto.accepts_interface"?: (string|null);

            /** FieldOptions .gogoproto.nullable */
            ".gogoproto.nullable"?: (boolean|null);

            /** FieldOptions .gogoproto.embed */
            ".gogoproto.embed"?: (boolean|null);

            /** FieldOptions .gogoproto.customtype */
            ".gogoproto.customtype"?: (string|null);

            /** FieldOptions .gogoproto.customname */
            ".gogoproto.customname"?: (string|null);

            /** FieldOptions .gogoproto.jsontag */
            ".gogoproto.jsontag"?: (string|null);

            /** FieldOptions .gogoproto.moretags */
            ".gogoproto.moretags"?: (string|null);

            /** FieldOptions .gogoproto.casttype */
            ".gogoproto.casttype"?: (string|null);

            /** FieldOptions .gogoproto.castkey */
            ".gogoproto.castkey"?: (string|null);

            /** FieldOptions .gogoproto.castvalue */
            ".gogoproto.castvalue"?: (string|null);

            /** FieldOptions .gogoproto.stdtime */
            ".gogoproto.stdtime"?: (boolean|null);

            /** FieldOptions .gogoproto.stdduration */
            ".gogoproto.stdduration"?: (boolean|null);

            /** FieldOptions .gogoproto.wktpointer */
            ".gogoproto.wktpointer"?: (boolean|null);

            /** FieldOptions .gogoproto.castrepeated */
            ".gogoproto.castrepeated"?: (string|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param m FieldOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IFieldOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.FieldOptions;
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param m OneofOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IOneofOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.OneofOptions;
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumOptions .gogoproto.goproto_enum_prefix */
            ".gogoproto.goproto_enum_prefix"?: (boolean|null);

            /** EnumOptions .gogoproto.goproto_enum_stringer */
            ".gogoproto.goproto_enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_stringer */
            ".gogoproto.enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_customname */
            ".gogoproto.enum_customname"?: (string|null);

            /** EnumOptions .gogoproto.enumdecl */
            ".gogoproto.enumdecl"?: (boolean|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param m EnumOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IEnumOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.EnumOptions;
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumValueOptions .gogoproto.enumvalue_customname */
            ".gogoproto.enumvalue_customname"?: (string|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param m EnumValueOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IEnumValueOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.EnumValueOptions;
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param m ServiceOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IServiceOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.ServiceOptions;
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param m MethodOptions message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IMethodOptions, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.MethodOptions;
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (Long|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (Long|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: Long;

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: Long;

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param m UninterpretedOption message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IUninterpretedOption, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.UninterpretedOption;
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [p] Properties to set
                 */
                constructor(p?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param m NamePart message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: google.protobuf.UninterpretedOption.INamePart, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.UninterpretedOption.NamePart;
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param m SourceCodeInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.ISourceCodeInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.SourceCodeInfo;
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [p] Properties to set
                 */
                constructor(p?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param m Location message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: google.protobuf.SourceCodeInfo.ILocation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.SourceCodeInfo.Location;
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param m GeneratedCodeInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IGeneratedCodeInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.GeneratedCodeInfo;
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [p] Properties to set
                 */
                constructor(p?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param m Annotation message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: google.protobuf.GeneratedCodeInfo.IAnnotation, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.GeneratedCodeInfo.Annotation;
            }
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: Long;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param m Timestamp message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.ITimestamp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.Timestamp;
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (Long|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [p] Properties to set
             */
            constructor(p?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: Long;

            /** Duration nanos. */
            public nanos: number;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param m Duration message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.protobuf.IDuration, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.Duration;
        }
    }

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [p] Properties to set
             */
            constructor(p?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param m Http message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.api.IHttp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.api.Http;
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [p] Properties to set
             */
            constructor(p?: google.api.IHttpRule);

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule body. */
            public body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param m HttpRule message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.api.IHttpRule, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.api.HttpRule;
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [p] Properties to set
             */
            constructor(p?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param m CustomHttpPattern message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.api.ICustomHttpPattern, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.api.CustomHttpPattern;
        }

        /** Properties of a HttpBody. */
        interface IHttpBody {

            /** HttpBody content_type */
            content_type?: (string|null);

            /** HttpBody data */
            data?: (Uint8Array|null);

            /** HttpBody extensions */
            extensions?: (google.protobuf.IAny[]|null);
        }

        /** Represents a HttpBody. */
        class HttpBody implements IHttpBody {

            /**
             * Constructs a new HttpBody.
             * @param [p] Properties to set
             */
            constructor(p?: google.api.IHttpBody);

            /** HttpBody content_type. */
            public content_type: string;

            /** HttpBody data. */
            public data: Uint8Array;

            /** HttpBody extensions. */
            public extensions: google.protobuf.IAny[];

            /**
             * Encodes the specified HttpBody message. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
             * @param m HttpBody message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: google.api.IHttpBody, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpBody message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns HttpBody
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.api.HttpBody;
        }
    }
}

/** Namespace ibc. */
export namespace ibc {

    /** Namespace applications. */
    namespace applications {

        /** Namespace transfer. */
        namespace transfer {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a QueryDenomTraceRequest. */
                interface IQueryDenomTraceRequest {

                    /** QueryDenomTraceRequest hash */
                    hash?: (string|null);
                }

                /** Represents a QueryDenomTraceRequest. */
                class QueryDenomTraceRequest implements IQueryDenomTraceRequest {

                    /**
                     * Constructs a new QueryDenomTraceRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryDenomTraceRequest);

                    /** QueryDenomTraceRequest hash. */
                    public hash: string;

                    /**
                     * Encodes the specified QueryDenomTraceRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceRequest.verify|verify} messages.
                     * @param m QueryDenomTraceRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryDenomTraceRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryDenomTraceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryDenomTraceRequest;
                }

                /** Properties of a QueryDenomTraceResponse. */
                interface IQueryDenomTraceResponse {

                    /** QueryDenomTraceResponse denom_trace */
                    denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);
                }

                /** Represents a QueryDenomTraceResponse. */
                class QueryDenomTraceResponse implements IQueryDenomTraceResponse {

                    /**
                     * Constructs a new QueryDenomTraceResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryDenomTraceResponse);

                    /** QueryDenomTraceResponse denom_trace. */
                    public denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);

                    /**
                     * Encodes the specified QueryDenomTraceResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceResponse.verify|verify} messages.
                     * @param m QueryDenomTraceResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryDenomTraceResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryDenomTraceResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryDenomTraceResponse;
                }

                /** Properties of a QueryDenomTracesRequest. */
                interface IQueryDenomTracesRequest {

                    /** QueryDenomTracesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryDenomTracesRequest. */
                class QueryDenomTracesRequest implements IQueryDenomTracesRequest {

                    /**
                     * Constructs a new QueryDenomTracesRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryDenomTracesRequest);

                    /** QueryDenomTracesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryDenomTracesRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesRequest.verify|verify} messages.
                     * @param m QueryDenomTracesRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryDenomTracesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryDenomTracesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryDenomTracesRequest;
                }

                /** Properties of a QueryDenomTracesResponse. */
                interface IQueryDenomTracesResponse {

                    /** QueryDenomTracesResponse denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** QueryDenomTracesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryDenomTracesResponse. */
                class QueryDenomTracesResponse implements IQueryDenomTracesResponse {

                    /**
                     * Constructs a new QueryDenomTracesResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryDenomTracesResponse);

                    /** QueryDenomTracesResponse denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** QueryDenomTracesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryDenomTracesResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesResponse.verify|verify} messages.
                     * @param m QueryDenomTracesResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryDenomTracesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryDenomTracesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryDenomTracesResponse;
                }

                /** Properties of a QueryParamsRequest. */
                interface IQueryParamsRequest {
                }

                /** Represents a QueryParamsRequest. */
                class QueryParamsRequest implements IQueryParamsRequest {

                    /**
                     * Constructs a new QueryParamsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryParamsRequest);

                    /**
                     * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsRequest.verify|verify} messages.
                     * @param m QueryParamsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryParamsRequest;
                }

                /** Properties of a QueryParamsResponse. */
                interface IQueryParamsResponse {

                    /** QueryParamsResponse params */
                    params?: (ibc.applications.transfer.v1.IParams|null);
                }

                /** Represents a QueryParamsResponse. */
                class QueryParamsResponse implements IQueryParamsResponse {

                    /**
                     * Constructs a new QueryParamsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IQueryParamsResponse);

                    /** QueryParamsResponse params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /**
                     * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsResponse.verify|verify} messages.
                     * @param m QueryParamsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.QueryParamsResponse;
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState port_id */
                    port_id?: (string|null);

                    /** GenesisState denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** GenesisState params */
                    params?: (ibc.applications.transfer.v1.IParams|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IGenesisState);

                    /** GenesisState port_id. */
                    public port_id: string;

                    /** GenesisState denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** GenesisState params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.applications.transfer.v1.GenesisState.verify|verify} messages.
                     * @param m GenesisState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.GenesisState;
                }

                /** Properties of a FungibleTokenPacketData. */
                interface IFungibleTokenPacketData {

                    /** FungibleTokenPacketData denom */
                    denom?: (string|null);

                    /** FungibleTokenPacketData amount */
                    amount?: (Long|null);

                    /** FungibleTokenPacketData sender */
                    sender?: (string|null);

                    /** FungibleTokenPacketData receiver */
                    receiver?: (string|null);
                }

                /** Represents a FungibleTokenPacketData. */
                class FungibleTokenPacketData implements IFungibleTokenPacketData {

                    /**
                     * Constructs a new FungibleTokenPacketData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IFungibleTokenPacketData);

                    /** FungibleTokenPacketData denom. */
                    public denom: string;

                    /** FungibleTokenPacketData amount. */
                    public amount: Long;

                    /** FungibleTokenPacketData sender. */
                    public sender: string;

                    /** FungibleTokenPacketData receiver. */
                    public receiver: string;

                    /**
                     * Encodes the specified FungibleTokenPacketData message. Does not implicitly {@link ibc.applications.transfer.v1.FungibleTokenPacketData.verify|verify} messages.
                     * @param m FungibleTokenPacketData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IFungibleTokenPacketData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a FungibleTokenPacketData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns FungibleTokenPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.FungibleTokenPacketData;
                }

                /** Properties of a DenomTrace. */
                interface IDenomTrace {

                    /** DenomTrace path */
                    path?: (string|null);

                    /** DenomTrace base_denom */
                    base_denom?: (string|null);
                }

                /** Represents a DenomTrace. */
                class DenomTrace implements IDenomTrace {

                    /**
                     * Constructs a new DenomTrace.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IDenomTrace);

                    /** DenomTrace path. */
                    public path: string;

                    /** DenomTrace base_denom. */
                    public base_denom: string;

                    /**
                     * Encodes the specified DenomTrace message. Does not implicitly {@link ibc.applications.transfer.v1.DenomTrace.verify|verify} messages.
                     * @param m DenomTrace message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IDenomTrace, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a DenomTrace message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns DenomTrace
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.DenomTrace;
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params send_enabled */
                    send_enabled?: (boolean|null);

                    /** Params receive_enabled */
                    receive_enabled?: (boolean|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IParams);

                    /** Params send_enabled. */
                    public send_enabled: boolean;

                    /** Params receive_enabled. */
                    public receive_enabled: boolean;

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.applications.transfer.v1.Params.verify|verify} messages.
                     * @param m Params message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.Params;
                }

                /** Properties of a MsgTransfer. */
                interface IMsgTransfer {

                    /** MsgTransfer source_port */
                    source_port?: (string|null);

                    /** MsgTransfer source_channel */
                    source_channel?: (string|null);

                    /** MsgTransfer token */
                    token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender */
                    sender?: (string|null);

                    /** MsgTransfer receiver */
                    receiver?: (string|null);

                    /** MsgTransfer timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp */
                    timeout_timestamp?: (Long|null);
                }

                /** Represents a MsgTransfer. */
                class MsgTransfer implements IMsgTransfer {

                    /**
                     * Constructs a new MsgTransfer.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IMsgTransfer);

                    /** MsgTransfer source_port. */
                    public source_port: string;

                    /** MsgTransfer source_channel. */
                    public source_channel: string;

                    /** MsgTransfer token. */
                    public token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender. */
                    public sender: string;

                    /** MsgTransfer receiver. */
                    public receiver: string;

                    /** MsgTransfer timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /**
                     * Encodes the specified MsgTransfer message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransfer.verify|verify} messages.
                     * @param m MsgTransfer message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IMsgTransfer, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransfer message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTransfer
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.MsgTransfer;
                }

                /** Properties of a MsgTransferResponse. */
                interface IMsgTransferResponse {
                }

                /** Represents a MsgTransferResponse. */
                class MsgTransferResponse implements IMsgTransferResponse {

                    /**
                     * Constructs a new MsgTransferResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.applications.transfer.v1.IMsgTransferResponse);

                    /**
                     * Encodes the specified MsgTransferResponse message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransferResponse.verify|verify} messages.
                     * @param m MsgTransferResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.applications.transfer.v1.IMsgTransferResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransferResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTransferResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.applications.transfer.v1.MsgTransferResponse;
                }
            }
        }
    }

    /** Namespace core. */
    namespace core {

        /** Namespace channel. */
        namespace channel {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a QueryChannelRequest. */
                interface IQueryChannelRequest {

                    /** QueryChannelRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelRequest. */
                class QueryChannelRequest implements IQueryChannelRequest {

                    /**
                     * Constructs a new QueryChannelRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelRequest);

                    /** QueryChannelRequest port_id. */
                    public port_id: string;

                    /** QueryChannelRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelRequest.verify|verify} messages.
                     * @param m QueryChannelRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelRequest;
                }

                /** Properties of a QueryChannelResponse. */
                interface IQueryChannelResponse {

                    /** QueryChannelResponse channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelResponse. */
                class QueryChannelResponse implements IQueryChannelResponse {

                    /**
                     * Constructs a new QueryChannelResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelResponse);

                    /** QueryChannelResponse channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelResponse.verify|verify} messages.
                     * @param m QueryChannelResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelResponse;
                }

                /** Properties of a QueryChannelsRequest. */
                interface IQueryChannelsRequest {

                    /** QueryChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryChannelsRequest. */
                class QueryChannelsRequest implements IQueryChannelsRequest {

                    /**
                     * Constructs a new QueryChannelsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelsRequest);

                    /** QueryChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsRequest.verify|verify} messages.
                     * @param m QueryChannelsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelsRequest;
                }

                /** Properties of a QueryChannelsResponse. */
                interface IQueryChannelsResponse {

                    /** QueryChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelsResponse. */
                class QueryChannelsResponse implements IQueryChannelsResponse {

                    /**
                     * Constructs a new QueryChannelsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelsResponse);

                    /** QueryChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsResponse.verify|verify} messages.
                     * @param m QueryChannelsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelsResponse;
                }

                /** Properties of a QueryConnectionChannelsRequest. */
                interface IQueryConnectionChannelsRequest {

                    /** QueryConnectionChannelsRequest connection */
                    connection?: (string|null);

                    /** QueryConnectionChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionChannelsRequest. */
                class QueryConnectionChannelsRequest implements IQueryConnectionChannelsRequest {

                    /**
                     * Constructs a new QueryConnectionChannelsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryConnectionChannelsRequest);

                    /** QueryConnectionChannelsRequest connection. */
                    public connection: string;

                    /** QueryConnectionChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsRequest.verify|verify} messages.
                     * @param m QueryConnectionChannelsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryConnectionChannelsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryConnectionChannelsRequest;
                }

                /** Properties of a QueryConnectionChannelsResponse. */
                interface IQueryConnectionChannelsResponse {

                    /** QueryConnectionChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryConnectionChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionChannelsResponse. */
                class QueryConnectionChannelsResponse implements IQueryConnectionChannelsResponse {

                    /**
                     * Constructs a new QueryConnectionChannelsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryConnectionChannelsResponse);

                    /** QueryConnectionChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryConnectionChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsResponse.verify|verify} messages.
                     * @param m QueryConnectionChannelsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryConnectionChannelsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryConnectionChannelsResponse;
                }

                /** Properties of a QueryChannelClientStateRequest. */
                interface IQueryChannelClientStateRequest {

                    /** QueryChannelClientStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelClientStateRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelClientStateRequest. */
                class QueryChannelClientStateRequest implements IQueryChannelClientStateRequest {

                    /**
                     * Constructs a new QueryChannelClientStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelClientStateRequest);

                    /** QueryChannelClientStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelClientStateRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelClientStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateRequest.verify|verify} messages.
                     * @param m QueryChannelClientStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelClientStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelClientStateRequest;
                }

                /** Properties of a QueryChannelClientStateResponse. */
                interface IQueryChannelClientStateResponse {

                    /** QueryChannelClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelClientStateResponse. */
                class QueryChannelClientStateResponse implements IQueryChannelClientStateResponse {

                    /**
                     * Constructs a new QueryChannelClientStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelClientStateResponse);

                    /** QueryChannelClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelClientStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateResponse.verify|verify} messages.
                     * @param m QueryChannelClientStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelClientStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelClientStateResponse;
                }

                /** Properties of a QueryChannelConsensusStateRequest. */
                interface IQueryChannelConsensusStateRequest {

                    /** QueryChannelConsensusStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelConsensusStateRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryChannelConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryChannelConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryChannelConsensusStateRequest. */
                class QueryChannelConsensusStateRequest implements IQueryChannelConsensusStateRequest {

                    /**
                     * Constructs a new QueryChannelConsensusStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelConsensusStateRequest);

                    /** QueryChannelConsensusStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelConsensusStateRequest channel_id. */
                    public channel_id: string;

                    /** QueryChannelConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryChannelConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryChannelConsensusStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateRequest.verify|verify} messages.
                     * @param m QueryChannelConsensusStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelConsensusStateRequest;
                }

                /** Properties of a QueryChannelConsensusStateResponse. */
                interface IQueryChannelConsensusStateResponse {

                    /** QueryChannelConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryChannelConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelConsensusStateResponse. */
                class QueryChannelConsensusStateResponse implements IQueryChannelConsensusStateResponse {

                    /**
                     * Constructs a new QueryChannelConsensusStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryChannelConsensusStateResponse);

                    /** QueryChannelConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryChannelConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelConsensusStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateResponse.verify|verify} messages.
                     * @param m QueryChannelConsensusStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryChannelConsensusStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryChannelConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryChannelConsensusStateResponse;
                }

                /** Properties of a QueryPacketCommitmentRequest. */
                interface IQueryPacketCommitmentRequest {

                    /** QueryPacketCommitmentRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketCommitmentRequest. */
                class QueryPacketCommitmentRequest implements IQueryPacketCommitmentRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketCommitmentRequest);

                    /** QueryPacketCommitmentRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketCommitmentRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentRequest.verify|verify} messages.
                     * @param m QueryPacketCommitmentRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketCommitmentRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketCommitmentRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketCommitmentRequest;
                }

                /** Properties of a QueryPacketCommitmentResponse. */
                interface IQueryPacketCommitmentResponse {

                    /** QueryPacketCommitmentResponse commitment */
                    commitment?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentResponse. */
                class QueryPacketCommitmentResponse implements IQueryPacketCommitmentResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketCommitmentResponse);

                    /** QueryPacketCommitmentResponse commitment. */
                    public commitment: Uint8Array;

                    /** QueryPacketCommitmentResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketCommitmentResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentResponse.verify|verify} messages.
                     * @param m QueryPacketCommitmentResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketCommitmentResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketCommitmentResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketCommitmentResponse;
                }

                /** Properties of a QueryPacketCommitmentsRequest. */
                interface IQueryPacketCommitmentsRequest {

                    /** QueryPacketCommitmentsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryPacketCommitmentsRequest. */
                class QueryPacketCommitmentsRequest implements IQueryPacketCommitmentsRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketCommitmentsRequest);

                    /** QueryPacketCommitmentsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsRequest.verify|verify} messages.
                     * @param m QueryPacketCommitmentsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketCommitmentsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketCommitmentsRequest;
                }

                /** Properties of a QueryPacketCommitmentsResponse. */
                interface IQueryPacketCommitmentsResponse {

                    /** QueryPacketCommitmentsResponse commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketCommitmentsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentsResponse. */
                class QueryPacketCommitmentsResponse implements IQueryPacketCommitmentsResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketCommitmentsResponse);

                    /** QueryPacketCommitmentsResponse commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketCommitmentsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsResponse.verify|verify} messages.
                     * @param m QueryPacketCommitmentsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketCommitmentsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketCommitmentsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketCommitmentsResponse;
                }

                /** Properties of a QueryPacketReceiptRequest. */
                interface IQueryPacketReceiptRequest {

                    /** QueryPacketReceiptRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketReceiptRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketReceiptRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketReceiptRequest. */
                class QueryPacketReceiptRequest implements IQueryPacketReceiptRequest {

                    /**
                     * Constructs a new QueryPacketReceiptRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketReceiptRequest);

                    /** QueryPacketReceiptRequest port_id. */
                    public port_id: string;

                    /** QueryPacketReceiptRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketReceiptRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketReceiptRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptRequest.verify|verify} messages.
                     * @param m QueryPacketReceiptRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketReceiptRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketReceiptRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketReceiptRequest;
                }

                /** Properties of a QueryPacketReceiptResponse. */
                interface IQueryPacketReceiptResponse {

                    /** QueryPacketReceiptResponse received */
                    received?: (boolean|null);

                    /** QueryPacketReceiptResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketReceiptResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketReceiptResponse. */
                class QueryPacketReceiptResponse implements IQueryPacketReceiptResponse {

                    /**
                     * Constructs a new QueryPacketReceiptResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketReceiptResponse);

                    /** QueryPacketReceiptResponse received. */
                    public received: boolean;

                    /** QueryPacketReceiptResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketReceiptResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketReceiptResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptResponse.verify|verify} messages.
                     * @param m QueryPacketReceiptResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketReceiptResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketReceiptResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketReceiptResponse;
                }

                /** Properties of a QueryPacketAcknowledgementRequest. */
                interface IQueryPacketAcknowledgementRequest {

                    /** QueryPacketAcknowledgementRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketAcknowledgementRequest. */
                class QueryPacketAcknowledgementRequest implements IQueryPacketAcknowledgementRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest);

                    /** QueryPacketAcknowledgementRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementRequest.verify|verify} messages.
                     * @param m QueryPacketAcknowledgementRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;
                }

                /** Properties of a QueryPacketAcknowledgementResponse. */
                interface IQueryPacketAcknowledgementResponse {

                    /** QueryPacketAcknowledgementResponse acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementResponse. */
                class QueryPacketAcknowledgementResponse implements IQueryPacketAcknowledgementResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse);

                    /** QueryPacketAcknowledgementResponse acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementResponse.verify|verify} messages.
                     * @param m QueryPacketAcknowledgementResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;
                }

                /** Properties of a QueryPacketAcknowledgementsRequest. */
                interface IQueryPacketAcknowledgementsRequest {

                    /** QueryPacketAcknowledgementsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryPacketAcknowledgementsRequest. */
                class QueryPacketAcknowledgementsRequest implements IQueryPacketAcknowledgementsRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest);

                    /** QueryPacketAcknowledgementsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsRequest.verify|verify} messages.
                     * @param m QueryPacketAcknowledgementsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;
                }

                /** Properties of a QueryPacketAcknowledgementsResponse. */
                interface IQueryPacketAcknowledgementsResponse {

                    /** QueryPacketAcknowledgementsResponse acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketAcknowledgementsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementsResponse. */
                class QueryPacketAcknowledgementsResponse implements IQueryPacketAcknowledgementsResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse);

                    /** QueryPacketAcknowledgementsResponse acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketAcknowledgementsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsResponse.verify|verify} messages.
                     * @param m QueryPacketAcknowledgementsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;
                }

                /** Properties of a QueryUnreceivedPacketsRequest. */
                interface IQueryUnreceivedPacketsRequest {

                    /** QueryUnreceivedPacketsRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences */
                    packet_commitment_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedPacketsRequest. */
                class QueryUnreceivedPacketsRequest implements IQueryUnreceivedPacketsRequest {

                    /**
                     * Constructs a new QueryUnreceivedPacketsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest);

                    /** QueryUnreceivedPacketsRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedPacketsRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences. */
                    public packet_commitment_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedPacketsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsRequest.verify|verify} messages.
                     * @param m QueryUnreceivedPacketsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;
                }

                /** Properties of a QueryUnreceivedPacketsResponse. */
                interface IQueryUnreceivedPacketsResponse {

                    /** QueryUnreceivedPacketsResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedPacketsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedPacketsResponse. */
                class QueryUnreceivedPacketsResponse implements IQueryUnreceivedPacketsResponse {

                    /**
                     * Constructs a new QueryUnreceivedPacketsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse);

                    /** QueryUnreceivedPacketsResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedPacketsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedPacketsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsResponse.verify|verify} messages.
                     * @param m QueryUnreceivedPacketsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;
                }

                /** Properties of a QueryUnreceivedAcksRequest. */
                interface IQueryUnreceivedAcksRequest {

                    /** QueryUnreceivedAcksRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedAcksRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedAcksRequest packet_ack_sequences */
                    packet_ack_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedAcksRequest. */
                class QueryUnreceivedAcksRequest implements IQueryUnreceivedAcksRequest {

                    /**
                     * Constructs a new QueryUnreceivedAcksRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryUnreceivedAcksRequest);

                    /** QueryUnreceivedAcksRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedAcksRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedAcksRequest packet_ack_sequences. */
                    public packet_ack_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedAcksRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksRequest.verify|verify} messages.
                     * @param m QueryUnreceivedAcksRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryUnreceivedAcksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryUnreceivedAcksRequest;
                }

                /** Properties of a QueryUnreceivedAcksResponse. */
                interface IQueryUnreceivedAcksResponse {

                    /** QueryUnreceivedAcksResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedAcksResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedAcksResponse. */
                class QueryUnreceivedAcksResponse implements IQueryUnreceivedAcksResponse {

                    /**
                     * Constructs a new QueryUnreceivedAcksResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryUnreceivedAcksResponse);

                    /** QueryUnreceivedAcksResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedAcksResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedAcksResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksResponse.verify|verify} messages.
                     * @param m QueryUnreceivedAcksResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryUnreceivedAcksResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryUnreceivedAcksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryUnreceivedAcksResponse;
                }

                /** Properties of a QueryNextSequenceReceiveRequest. */
                interface IQueryNextSequenceReceiveRequest {

                    /** QueryNextSequenceReceiveRequest port_id */
                    port_id?: (string|null);

                    /** QueryNextSequenceReceiveRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryNextSequenceReceiveRequest. */
                class QueryNextSequenceReceiveRequest implements IQueryNextSequenceReceiveRequest {

                    /**
                     * Constructs a new QueryNextSequenceReceiveRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest);

                    /** QueryNextSequenceReceiveRequest port_id. */
                    public port_id: string;

                    /** QueryNextSequenceReceiveRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveRequest.verify|verify} messages.
                     * @param m QueryNextSequenceReceiveRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;
                }

                /** Properties of a QueryNextSequenceReceiveResponse. */
                interface IQueryNextSequenceReceiveResponse {

                    /** QueryNextSequenceReceiveResponse next_sequence_receive */
                    next_sequence_receive?: (Long|null);

                    /** QueryNextSequenceReceiveResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryNextSequenceReceiveResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryNextSequenceReceiveResponse. */
                class QueryNextSequenceReceiveResponse implements IQueryNextSequenceReceiveResponse {

                    /**
                     * Constructs a new QueryNextSequenceReceiveResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse);

                    /** QueryNextSequenceReceiveResponse next_sequence_receive. */
                    public next_sequence_receive: Long;

                    /** QueryNextSequenceReceiveResponse proof. */
                    public proof: Uint8Array;

                    /** QueryNextSequenceReceiveResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryNextSequenceReceiveResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveResponse.verify|verify} messages.
                     * @param m QueryNextSequenceReceiveResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;
                }

                /** Properties of a Channel. */
                interface IChannel {

                    /** Channel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** Channel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** Channel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops */
                    connection_hops?: (string[]|null);

                    /** Channel version */
                    version?: (string|null);
                }

                /** Represents a Channel. */
                class Channel implements IChannel {

                    /**
                     * Constructs a new Channel.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IChannel);

                    /** Channel state. */
                    public state: ibc.core.channel.v1.State;

                    /** Channel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** Channel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops. */
                    public connection_hops: string[];

                    /** Channel version. */
                    public version: string;

                    /**
                     * Encodes the specified Channel message. Does not implicitly {@link ibc.core.channel.v1.Channel.verify|verify} messages.
                     * @param m Channel message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IChannel, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Channel message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Channel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.Channel;
                }

                /** Properties of an IdentifiedChannel. */
                interface IIdentifiedChannel {

                    /** IdentifiedChannel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** IdentifiedChannel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** IdentifiedChannel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops */
                    connection_hops?: (string[]|null);

                    /** IdentifiedChannel version */
                    version?: (string|null);

                    /** IdentifiedChannel port_id */
                    port_id?: (string|null);

                    /** IdentifiedChannel channel_id */
                    channel_id?: (string|null);
                }

                /** Represents an IdentifiedChannel. */
                class IdentifiedChannel implements IIdentifiedChannel {

                    /**
                     * Constructs a new IdentifiedChannel.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IIdentifiedChannel);

                    /** IdentifiedChannel state. */
                    public state: ibc.core.channel.v1.State;

                    /** IdentifiedChannel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** IdentifiedChannel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops. */
                    public connection_hops: string[];

                    /** IdentifiedChannel version. */
                    public version: string;

                    /** IdentifiedChannel port_id. */
                    public port_id: string;

                    /** IdentifiedChannel channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified IdentifiedChannel message. Does not implicitly {@link ibc.core.channel.v1.IdentifiedChannel.verify|verify} messages.
                     * @param m IdentifiedChannel message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IIdentifiedChannel, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedChannel message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns IdentifiedChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.IdentifiedChannel;
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3,
                    STATE_CLOSED = 4
                }

                /** Order enum. */
                enum Order {
                    ORDER_NONE_UNSPECIFIED = 0,
                    ORDER_UNORDERED = 1,
                    ORDER_ORDERED = 2
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty port_id */
                    port_id?: (string|null);

                    /** Counterparty channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.ICounterparty);

                    /** Counterparty port_id. */
                    public port_id: string;

                    /** Counterparty channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.channel.v1.Counterparty.verify|verify} messages.
                     * @param m Counterparty message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.ICounterparty, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.Counterparty;
                }

                /** Properties of a Packet. */
                interface IPacket {

                    /** Packet sequence */
                    sequence?: (Long|null);

                    /** Packet source_port */
                    source_port?: (string|null);

                    /** Packet source_channel */
                    source_channel?: (string|null);

                    /** Packet destination_port */
                    destination_port?: (string|null);

                    /** Packet destination_channel */
                    destination_channel?: (string|null);

                    /** Packet data */
                    data?: (Uint8Array|null);

                    /** Packet timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp */
                    timeout_timestamp?: (Long|null);
                }

                /** Represents a Packet. */
                class Packet implements IPacket {

                    /**
                     * Constructs a new Packet.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IPacket);

                    /** Packet sequence. */
                    public sequence: Long;

                    /** Packet source_port. */
                    public source_port: string;

                    /** Packet source_channel. */
                    public source_channel: string;

                    /** Packet destination_port. */
                    public destination_port: string;

                    /** Packet destination_channel. */
                    public destination_channel: string;

                    /** Packet data. */
                    public data: Uint8Array;

                    /** Packet timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /**
                     * Encodes the specified Packet message. Does not implicitly {@link ibc.core.channel.v1.Packet.verify|verify} messages.
                     * @param m Packet message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IPacket, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Packet message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Packet
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.Packet;
                }

                /** Properties of a PacketState. */
                interface IPacketState {

                    /** PacketState port_id */
                    port_id?: (string|null);

                    /** PacketState channel_id */
                    channel_id?: (string|null);

                    /** PacketState sequence */
                    sequence?: (Long|null);

                    /** PacketState data */
                    data?: (Uint8Array|null);
                }

                /** Represents a PacketState. */
                class PacketState implements IPacketState {

                    /**
                     * Constructs a new PacketState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IPacketState);

                    /** PacketState port_id. */
                    public port_id: string;

                    /** PacketState channel_id. */
                    public channel_id: string;

                    /** PacketState sequence. */
                    public sequence: Long;

                    /** PacketState data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified PacketState message. Does not implicitly {@link ibc.core.channel.v1.PacketState.verify|verify} messages.
                     * @param m PacketState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IPacketState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PacketState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.PacketState;
                }

                /** Properties of an Acknowledgement. */
                interface IAcknowledgement {

                    /** Acknowledgement result */
                    result?: (Uint8Array|null);

                    /** Acknowledgement error */
                    error?: (string|null);
                }

                /** Represents an Acknowledgement. */
                class Acknowledgement implements IAcknowledgement {

                    /**
                     * Constructs a new Acknowledgement.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IAcknowledgement);

                    /** Acknowledgement result. */
                    public result?: (Uint8Array|null);

                    /** Acknowledgement error. */
                    public error?: (string|null);

                    /** Acknowledgement response. */
                    public response?: ("result"|"error");

                    /**
                     * Encodes the specified Acknowledgement message. Does not implicitly {@link ibc.core.channel.v1.Acknowledgement.verify|verify} messages.
                     * @param m Acknowledgement message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IAcknowledgement, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Acknowledgement message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Acknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.Acknowledgement;
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** GenesisState acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState receipts */
                    receipts?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState send_sequences */
                    send_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState recv_sequences */
                    recv_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState ack_sequences */
                    ack_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState next_channel_sequence */
                    next_channel_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IGenesisState);

                    /** GenesisState channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** GenesisState acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState receipts. */
                    public receipts: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState send_sequences. */
                    public send_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState recv_sequences. */
                    public recv_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState ack_sequences. */
                    public ack_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState next_channel_sequence. */
                    public next_channel_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.channel.v1.GenesisState.verify|verify} messages.
                     * @param m GenesisState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.GenesisState;
                }

                /** Properties of a PacketSequence. */
                interface IPacketSequence {

                    /** PacketSequence port_id */
                    port_id?: (string|null);

                    /** PacketSequence channel_id */
                    channel_id?: (string|null);

                    /** PacketSequence sequence */
                    sequence?: (Long|null);
                }

                /** Represents a PacketSequence. */
                class PacketSequence implements IPacketSequence {

                    /**
                     * Constructs a new PacketSequence.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IPacketSequence);

                    /** PacketSequence port_id. */
                    public port_id: string;

                    /** PacketSequence channel_id. */
                    public channel_id: string;

                    /** PacketSequence sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified PacketSequence message. Does not implicitly {@link ibc.core.channel.v1.PacketSequence.verify|verify} messages.
                     * @param m PacketSequence message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IPacketSequence, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketSequence message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PacketSequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.PacketSequence;
                }

                /** Properties of a MsgChannelOpenInit. */
                interface IMsgChannelOpenInit {

                    /** MsgChannelOpenInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenInit channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenInit. */
                class MsgChannelOpenInit implements IMsgChannelOpenInit {

                    /**
                     * Constructs a new MsgChannelOpenInit.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenInit);

                    /** MsgChannelOpenInit port_id. */
                    public port_id: string;

                    /** MsgChannelOpenInit channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInit.verify|verify} messages.
                     * @param m MsgChannelOpenInit message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenInit, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInit message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenInit;
                }

                /** Properties of a MsgChannelOpenInitResponse. */
                interface IMsgChannelOpenInitResponse {
                }

                /** Represents a MsgChannelOpenInitResponse. */
                class MsgChannelOpenInitResponse implements IMsgChannelOpenInitResponse {

                    /**
                     * Constructs a new MsgChannelOpenInitResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenInitResponse);

                    /**
                     * Encodes the specified MsgChannelOpenInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInitResponse.verify|verify} messages.
                     * @param m MsgChannelOpenInitResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenInitResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInitResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenInitResponse;
                }

                /** Properties of a MsgChannelOpenTry. */
                interface IMsgChannelOpenTry {

                    /** MsgChannelOpenTry port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenTry previous_channel_id */
                    previous_channel_id?: (string|null);

                    /** MsgChannelOpenTry channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenTry. */
                class MsgChannelOpenTry implements IMsgChannelOpenTry {

                    /**
                     * Constructs a new MsgChannelOpenTry.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenTry);

                    /** MsgChannelOpenTry port_id. */
                    public port_id: string;

                    /** MsgChannelOpenTry previous_channel_id. */
                    public previous_channel_id: string;

                    /** MsgChannelOpenTry channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenTry message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTry.verify|verify} messages.
                     * @param m MsgChannelOpenTry message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenTry, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTry message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenTry;
                }

                /** Properties of a MsgChannelOpenTryResponse. */
                interface IMsgChannelOpenTryResponse {
                }

                /** Represents a MsgChannelOpenTryResponse. */
                class MsgChannelOpenTryResponse implements IMsgChannelOpenTryResponse {

                    /**
                     * Constructs a new MsgChannelOpenTryResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenTryResponse);

                    /**
                     * Encodes the specified MsgChannelOpenTryResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTryResponse.verify|verify} messages.
                     * @param m MsgChannelOpenTryResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenTryResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTryResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenTryResponse;
                }

                /** Properties of a MsgChannelOpenAck. */
                interface IMsgChannelOpenAck {

                    /** MsgChannelOpenAck port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenAck channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_channel_id */
                    counterparty_channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgChannelOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenAck. */
                class MsgChannelOpenAck implements IMsgChannelOpenAck {

                    /**
                     * Constructs a new MsgChannelOpenAck.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenAck);

                    /** MsgChannelOpenAck port_id. */
                    public port_id: string;

                    /** MsgChannelOpenAck channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenAck counterparty_channel_id. */
                    public counterparty_channel_id: string;

                    /** MsgChannelOpenAck counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgChannelOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenAck message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAck.verify|verify} messages.
                     * @param m MsgChannelOpenAck message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenAck, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAck message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenAck;
                }

                /** Properties of a MsgChannelOpenAckResponse. */
                interface IMsgChannelOpenAckResponse {
                }

                /** Represents a MsgChannelOpenAckResponse. */
                class MsgChannelOpenAckResponse implements IMsgChannelOpenAckResponse {

                    /**
                     * Constructs a new MsgChannelOpenAckResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenAckResponse);

                    /**
                     * Encodes the specified MsgChannelOpenAckResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAckResponse.verify|verify} messages.
                     * @param m MsgChannelOpenAckResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenAckResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAckResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenAckResponse;
                }

                /** Properties of a MsgChannelOpenConfirm. */
                interface IMsgChannelOpenConfirm {

                    /** MsgChannelOpenConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgChannelOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenConfirm. */
                class MsgChannelOpenConfirm implements IMsgChannelOpenConfirm {

                    /**
                     * Constructs a new MsgChannelOpenConfirm.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenConfirm);

                    /** MsgChannelOpenConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelOpenConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgChannelOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirm.verify|verify} messages.
                     * @param m MsgChannelOpenConfirm message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenConfirm, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirm message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenConfirm;
                }

                /** Properties of a MsgChannelOpenConfirmResponse. */
                interface IMsgChannelOpenConfirmResponse {
                }

                /** Represents a MsgChannelOpenConfirmResponse. */
                class MsgChannelOpenConfirmResponse implements IMsgChannelOpenConfirmResponse {

                    /**
                     * Constructs a new MsgChannelOpenConfirmResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelOpenConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirmResponse.verify|verify} messages.
                     * @param m MsgChannelOpenConfirmResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirmResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;
                }

                /** Properties of a MsgChannelCloseInit. */
                interface IMsgChannelCloseInit {

                    /** MsgChannelCloseInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseInit channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseInit. */
                class MsgChannelCloseInit implements IMsgChannelCloseInit {

                    /**
                     * Constructs a new MsgChannelCloseInit.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelCloseInit);

                    /** MsgChannelCloseInit port_id. */
                    public port_id: string;

                    /** MsgChannelCloseInit channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInit.verify|verify} messages.
                     * @param m MsgChannelCloseInit message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelCloseInit, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInit message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelCloseInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelCloseInit;
                }

                /** Properties of a MsgChannelCloseInitResponse. */
                interface IMsgChannelCloseInitResponse {
                }

                /** Represents a MsgChannelCloseInitResponse. */
                class MsgChannelCloseInitResponse implements IMsgChannelCloseInitResponse {

                    /**
                     * Constructs a new MsgChannelCloseInitResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelCloseInitResponse);

                    /**
                     * Encodes the specified MsgChannelCloseInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInitResponse.verify|verify} messages.
                     * @param m MsgChannelCloseInitResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelCloseInitResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInitResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelCloseInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelCloseInitResponse;
                }

                /** Properties of a MsgChannelCloseConfirm. */
                interface IMsgChannelCloseConfirm {

                    /** MsgChannelCloseConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseConfirm proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelCloseConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseConfirm. */
                class MsgChannelCloseConfirm implements IMsgChannelCloseConfirm {

                    /**
                     * Constructs a new MsgChannelCloseConfirm.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelCloseConfirm);

                    /** MsgChannelCloseConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelCloseConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseConfirm proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelCloseConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirm.verify|verify} messages.
                     * @param m MsgChannelCloseConfirm message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelCloseConfirm, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirm message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelCloseConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelCloseConfirm;
                }

                /** Properties of a MsgChannelCloseConfirmResponse. */
                interface IMsgChannelCloseConfirmResponse {
                }

                /** Represents a MsgChannelCloseConfirmResponse. */
                class MsgChannelCloseConfirmResponse implements IMsgChannelCloseConfirmResponse {

                    /**
                     * Constructs a new MsgChannelCloseConfirmResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelCloseConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirmResponse.verify|verify} messages.
                     * @param m MsgChannelCloseConfirmResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirmResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgChannelCloseConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;
                }

                /** Properties of a MsgRecvPacket. */
                interface IMsgRecvPacket {

                    /** MsgRecvPacket packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment */
                    proof_commitment?: (Uint8Array|null);

                    /** MsgRecvPacket proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer */
                    signer?: (string|null);
                }

                /** Represents a MsgRecvPacket. */
                class MsgRecvPacket implements IMsgRecvPacket {

                    /**
                     * Constructs a new MsgRecvPacket.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgRecvPacket);

                    /** MsgRecvPacket packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment. */
                    public proof_commitment: Uint8Array;

                    /** MsgRecvPacket proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgRecvPacket message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacket.verify|verify} messages.
                     * @param m MsgRecvPacket message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgRecvPacket, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacket message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgRecvPacket
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgRecvPacket;
                }

                /** Properties of a MsgRecvPacketResponse. */
                interface IMsgRecvPacketResponse {
                }

                /** Represents a MsgRecvPacketResponse. */
                class MsgRecvPacketResponse implements IMsgRecvPacketResponse {

                    /**
                     * Constructs a new MsgRecvPacketResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgRecvPacketResponse);

                    /**
                     * Encodes the specified MsgRecvPacketResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacketResponse.verify|verify} messages.
                     * @param m MsgRecvPacketResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgRecvPacketResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacketResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgRecvPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgRecvPacketResponse;
                }

                /** Properties of a MsgTimeout. */
                interface IMsgTimeout {

                    /** MsgTimeout packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeout proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeout signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeout. */
                class MsgTimeout implements IMsgTimeout {

                    /**
                     * Constructs a new MsgTimeout.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgTimeout);

                    /** MsgTimeout packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeout proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeout signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeout message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeout.verify|verify} messages.
                     * @param m MsgTimeout message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgTimeout, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeout message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTimeout
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgTimeout;
                }

                /** Properties of a MsgTimeoutResponse. */
                interface IMsgTimeoutResponse {
                }

                /** Represents a MsgTimeoutResponse. */
                class MsgTimeoutResponse implements IMsgTimeoutResponse {

                    /**
                     * Constructs a new MsgTimeoutResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgTimeoutResponse);

                    /**
                     * Encodes the specified MsgTimeoutResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutResponse.verify|verify} messages.
                     * @param m MsgTimeoutResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgTimeoutResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTimeoutResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgTimeoutResponse;
                }

                /** Properties of a MsgTimeoutOnClose. */
                interface IMsgTimeoutOnClose {

                    /** MsgTimeoutOnClose packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_close */
                    proof_close?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeoutOnClose signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeoutOnClose. */
                class MsgTimeoutOnClose implements IMsgTimeoutOnClose {

                    /**
                     * Constructs a new MsgTimeoutOnClose.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgTimeoutOnClose);

                    /** MsgTimeoutOnClose packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeoutOnClose proof_close. */
                    public proof_close: Uint8Array;

                    /** MsgTimeoutOnClose proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeoutOnClose signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeoutOnClose message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnClose.verify|verify} messages.
                     * @param m MsgTimeoutOnClose message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgTimeoutOnClose, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnClose message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTimeoutOnClose
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgTimeoutOnClose;
                }

                /** Properties of a MsgTimeoutOnCloseResponse. */
                interface IMsgTimeoutOnCloseResponse {
                }

                /** Represents a MsgTimeoutOnCloseResponse. */
                class MsgTimeoutOnCloseResponse implements IMsgTimeoutOnCloseResponse {

                    /**
                     * Constructs a new MsgTimeoutOnCloseResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse);

                    /**
                     * Encodes the specified MsgTimeoutOnCloseResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnCloseResponse.verify|verify} messages.
                     * @param m MsgTimeoutOnCloseResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnCloseResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgTimeoutOnCloseResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;
                }

                /** Properties of a MsgAcknowledgement. */
                interface IMsgAcknowledgement {

                    /** MsgAcknowledgement packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_acked */
                    proof_acked?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer */
                    signer?: (string|null);
                }

                /** Represents a MsgAcknowledgement. */
                class MsgAcknowledgement implements IMsgAcknowledgement {

                    /**
                     * Constructs a new MsgAcknowledgement.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgAcknowledgement);

                    /** MsgAcknowledgement packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** MsgAcknowledgement proof_acked. */
                    public proof_acked: Uint8Array;

                    /** MsgAcknowledgement proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgAcknowledgement message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgement.verify|verify} messages.
                     * @param m MsgAcknowledgement message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgAcknowledgement, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgement message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgAcknowledgement;
                }

                /** Properties of a MsgAcknowledgementResponse. */
                interface IMsgAcknowledgementResponse {
                }

                /** Represents a MsgAcknowledgementResponse. */
                class MsgAcknowledgementResponse implements IMsgAcknowledgementResponse {

                    /**
                     * Constructs a new MsgAcknowledgementResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.channel.v1.IMsgAcknowledgementResponse);

                    /**
                     * Encodes the specified MsgAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgementResponse.verify|verify} messages.
                     * @param m MsgAcknowledgementResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.channel.v1.IMsgAcknowledgementResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgementResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.channel.v1.MsgAcknowledgementResponse;
                }
            }
        }

        /** Namespace client. */
        namespace client {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a QueryClientStateRequest. */
                interface IQueryClientStateRequest {

                    /** QueryClientStateRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientStateRequest. */
                class QueryClientStateRequest implements IQueryClientStateRequest {

                    /**
                     * Constructs a new QueryClientStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientStateRequest);

                    /** QueryClientStateRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateRequest.verify|verify} messages.
                     * @param m QueryClientStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientStateRequest;
                }

                /** Properties of a QueryClientStateResponse. */
                interface IQueryClientStateResponse {

                    /** QueryClientStateResponse client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientStateResponse. */
                class QueryClientStateResponse implements IQueryClientStateResponse {

                    /**
                     * Constructs a new QueryClientStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientStateResponse);

                    /** QueryClientStateResponse client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateResponse.verify|verify} messages.
                     * @param m QueryClientStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientStateResponse;
                }

                /** Properties of a QueryClientStatesRequest. */
                interface IQueryClientStatesRequest {

                    /** QueryClientStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryClientStatesRequest. */
                class QueryClientStatesRequest implements IQueryClientStatesRequest {

                    /**
                     * Constructs a new QueryClientStatesRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientStatesRequest);

                    /** QueryClientStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryClientStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesRequest.verify|verify} messages.
                     * @param m QueryClientStatesRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientStatesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientStatesRequest;
                }

                /** Properties of a QueryClientStatesResponse. */
                interface IQueryClientStatesResponse {

                    /** QueryClientStatesResponse client_states */
                    client_states?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** QueryClientStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryClientStatesResponse. */
                class QueryClientStatesResponse implements IQueryClientStatesResponse {

                    /**
                     * Constructs a new QueryClientStatesResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientStatesResponse);

                    /** QueryClientStatesResponse client_states. */
                    public client_states: ibc.core.client.v1.IIdentifiedClientState[];

                    /** QueryClientStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryClientStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesResponse.verify|verify} messages.
                     * @param m QueryClientStatesResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientStatesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientStatesResponse;
                }

                /** Properties of a QueryConsensusStateRequest. */
                interface IQueryConsensusStateRequest {

                    /** QueryConsensusStateRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConsensusStateRequest revision_height */
                    revision_height?: (Long|null);

                    /** QueryConsensusStateRequest latest_height */
                    latest_height?: (boolean|null);
                }

                /** Represents a QueryConsensusStateRequest. */
                class QueryConsensusStateRequest implements IQueryConsensusStateRequest {

                    /**
                     * Constructs a new QueryConsensusStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryConsensusStateRequest);

                    /** QueryConsensusStateRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /** QueryConsensusStateRequest latest_height. */
                    public latest_height: boolean;

                    /**
                     * Encodes the specified QueryConsensusStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateRequest.verify|verify} messages.
                     * @param m QueryConsensusStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryConsensusStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryConsensusStateRequest;
                }

                /** Properties of a QueryConsensusStateResponse. */
                interface IQueryConsensusStateResponse {

                    /** QueryConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConsensusStateResponse. */
                class QueryConsensusStateResponse implements IQueryConsensusStateResponse {

                    /**
                     * Constructs a new QueryConsensusStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryConsensusStateResponse);

                    /** QueryConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConsensusStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateResponse.verify|verify} messages.
                     * @param m QueryConsensusStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryConsensusStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryConsensusStateResponse;
                }

                /** Properties of a QueryConsensusStatesRequest. */
                interface IQueryConsensusStatesRequest {

                    /** QueryConsensusStatesRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConsensusStatesRequest. */
                class QueryConsensusStatesRequest implements IQueryConsensusStatesRequest {

                    /**
                     * Constructs a new QueryConsensusStatesRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryConsensusStatesRequest);

                    /** QueryConsensusStatesRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConsensusStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesRequest.verify|verify} messages.
                     * @param m QueryConsensusStatesRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryConsensusStatesRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConsensusStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryConsensusStatesRequest;
                }

                /** Properties of a QueryConsensusStatesResponse. */
                interface IQueryConsensusStatesResponse {

                    /** QueryConsensusStatesResponse consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);

                    /** QueryConsensusStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryConsensusStatesResponse. */
                class QueryConsensusStatesResponse implements IQueryConsensusStatesResponse {

                    /**
                     * Constructs a new QueryConsensusStatesResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryConsensusStatesResponse);

                    /** QueryConsensusStatesResponse consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /** QueryConsensusStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryConsensusStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesResponse.verify|verify} messages.
                     * @param m QueryConsensusStatesResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryConsensusStatesResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConsensusStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryConsensusStatesResponse;
                }

                /** Properties of a QueryClientParamsRequest. */
                interface IQueryClientParamsRequest {
                }

                /** Represents a QueryClientParamsRequest. */
                class QueryClientParamsRequest implements IQueryClientParamsRequest {

                    /**
                     * Constructs a new QueryClientParamsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientParamsRequest);

                    /**
                     * Encodes the specified QueryClientParamsRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsRequest.verify|verify} messages.
                     * @param m QueryClientParamsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientParamsRequest;
                }

                /** Properties of a QueryClientParamsResponse. */
                interface IQueryClientParamsResponse {

                    /** QueryClientParamsResponse params */
                    params?: (ibc.core.client.v1.IParams|null);
                }

                /** Represents a QueryClientParamsResponse. */
                class QueryClientParamsResponse implements IQueryClientParamsResponse {

                    /**
                     * Constructs a new QueryClientParamsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IQueryClientParamsResponse);

                    /** QueryClientParamsResponse params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /**
                     * Encodes the specified QueryClientParamsResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsResponse.verify|verify} messages.
                     * @param m QueryClientParamsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IQueryClientParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.QueryClientParamsResponse;
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState clients */
                    clients?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** GenesisState clients_consensus */
                    clients_consensus?: (ibc.core.client.v1.IClientConsensusStates[]|null);

                    /** GenesisState clients_metadata */
                    clients_metadata?: (ibc.core.client.v1.IIdentifiedGenesisMetadata[]|null);

                    /** GenesisState params */
                    params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost */
                    create_localhost?: (boolean|null);

                    /** GenesisState next_client_sequence */
                    next_client_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IGenesisState);

                    /** GenesisState clients. */
                    public clients: ibc.core.client.v1.IIdentifiedClientState[];

                    /** GenesisState clients_consensus. */
                    public clients_consensus: ibc.core.client.v1.IClientConsensusStates[];

                    /** GenesisState clients_metadata. */
                    public clients_metadata: ibc.core.client.v1.IIdentifiedGenesisMetadata[];

                    /** GenesisState params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost. */
                    public create_localhost: boolean;

                    /** GenesisState next_client_sequence. */
                    public next_client_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.client.v1.GenesisState.verify|verify} messages.
                     * @param m GenesisState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.GenesisState;
                }

                /** Properties of a GenesisMetadata. */
                interface IGenesisMetadata {

                    /** GenesisMetadata key */
                    key?: (Uint8Array|null);

                    /** GenesisMetadata value */
                    value?: (Uint8Array|null);
                }

                /** Represents a GenesisMetadata. */
                class GenesisMetadata implements IGenesisMetadata {

                    /**
                     * Constructs a new GenesisMetadata.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IGenesisMetadata);

                    /** GenesisMetadata key. */
                    public key: Uint8Array;

                    /** GenesisMetadata value. */
                    public value: Uint8Array;

                    /**
                     * Encodes the specified GenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.GenesisMetadata.verify|verify} messages.
                     * @param m GenesisMetadata message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IGenesisMetadata, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisMetadata message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.GenesisMetadata;
                }

                /** Properties of an IdentifiedGenesisMetadata. */
                interface IIdentifiedGenesisMetadata {

                    /** IdentifiedGenesisMetadata client_id */
                    client_id?: (string|null);

                    /** IdentifiedGenesisMetadata client_metadata */
                    client_metadata?: (ibc.core.client.v1.IGenesisMetadata[]|null);
                }

                /** Represents an IdentifiedGenesisMetadata. */
                class IdentifiedGenesisMetadata implements IIdentifiedGenesisMetadata {

                    /**
                     * Constructs a new IdentifiedGenesisMetadata.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IIdentifiedGenesisMetadata);

                    /** IdentifiedGenesisMetadata client_id. */
                    public client_id: string;

                    /** IdentifiedGenesisMetadata client_metadata. */
                    public client_metadata: ibc.core.client.v1.IGenesisMetadata[];

                    /**
                     * Encodes the specified IdentifiedGenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.IdentifiedGenesisMetadata.verify|verify} messages.
                     * @param m IdentifiedGenesisMetadata message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IIdentifiedGenesisMetadata, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedGenesisMetadata message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns IdentifiedGenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.IdentifiedGenesisMetadata;
                }

                /** Properties of a MsgCreateClient. */
                interface IMsgCreateClient {

                    /** MsgCreateClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgCreateClient. */
                class MsgCreateClient implements IMsgCreateClient {

                    /**
                     * Constructs a new MsgCreateClient.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgCreateClient);

                    /** MsgCreateClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgCreateClient message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClient.verify|verify} messages.
                     * @param m MsgCreateClient message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgCreateClient, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClient message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgCreateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgCreateClient;
                }

                /** Properties of a MsgCreateClientResponse. */
                interface IMsgCreateClientResponse {
                }

                /** Represents a MsgCreateClientResponse. */
                class MsgCreateClientResponse implements IMsgCreateClientResponse {

                    /**
                     * Constructs a new MsgCreateClientResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgCreateClientResponse);

                    /**
                     * Encodes the specified MsgCreateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClientResponse.verify|verify} messages.
                     * @param m MsgCreateClientResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgCreateClientResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClientResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgCreateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgCreateClientResponse;
                }

                /** Properties of a MsgUpdateClient. */
                interface IMsgUpdateClient {

                    /** MsgUpdateClient client_id */
                    client_id?: (string|null);

                    /** MsgUpdateClient header */
                    header?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpdateClient. */
                class MsgUpdateClient implements IMsgUpdateClient {

                    /**
                     * Constructs a new MsgUpdateClient.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgUpdateClient);

                    /** MsgUpdateClient client_id. */
                    public client_id: string;

                    /** MsgUpdateClient header. */
                    public header?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpdateClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClient.verify|verify} messages.
                     * @param m MsgUpdateClient message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgUpdateClient, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClient message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgUpdateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgUpdateClient;
                }

                /** Properties of a MsgUpdateClientResponse. */
                interface IMsgUpdateClientResponse {
                }

                /** Represents a MsgUpdateClientResponse. */
                class MsgUpdateClientResponse implements IMsgUpdateClientResponse {

                    /**
                     * Constructs a new MsgUpdateClientResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgUpdateClientResponse);

                    /**
                     * Encodes the specified MsgUpdateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClientResponse.verify|verify} messages.
                     * @param m MsgUpdateClientResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgUpdateClientResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClientResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgUpdateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgUpdateClientResponse;
                }

                /** Properties of a MsgUpgradeClient. */
                interface IMsgUpgradeClient {

                    /** MsgUpgradeClient client_id */
                    client_id?: (string|null);

                    /** MsgUpgradeClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client */
                    proof_upgrade_client?: (Uint8Array|null);

                    /** MsgUpgradeClient proof_upgrade_consensus_state */
                    proof_upgrade_consensus_state?: (Uint8Array|null);

                    /** MsgUpgradeClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpgradeClient. */
                class MsgUpgradeClient implements IMsgUpgradeClient {

                    /**
                     * Constructs a new MsgUpgradeClient.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgUpgradeClient);

                    /** MsgUpgradeClient client_id. */
                    public client_id: string;

                    /** MsgUpgradeClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client. */
                    public proof_upgrade_client: Uint8Array;

                    /** MsgUpgradeClient proof_upgrade_consensus_state. */
                    public proof_upgrade_consensus_state: Uint8Array;

                    /** MsgUpgradeClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpgradeClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClient.verify|verify} messages.
                     * @param m MsgUpgradeClient message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgUpgradeClient, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClient message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgUpgradeClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgUpgradeClient;
                }

                /** Properties of a MsgUpgradeClientResponse. */
                interface IMsgUpgradeClientResponse {
                }

                /** Represents a MsgUpgradeClientResponse. */
                class MsgUpgradeClientResponse implements IMsgUpgradeClientResponse {

                    /**
                     * Constructs a new MsgUpgradeClientResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgUpgradeClientResponse);

                    /**
                     * Encodes the specified MsgUpgradeClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClientResponse.verify|verify} messages.
                     * @param m MsgUpgradeClientResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgUpgradeClientResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClientResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgUpgradeClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgUpgradeClientResponse;
                }

                /** Properties of a MsgSubmitMisbehaviour. */
                interface IMsgSubmitMisbehaviour {

                    /** MsgSubmitMisbehaviour client_id */
                    client_id?: (string|null);

                    /** MsgSubmitMisbehaviour misbehaviour */
                    misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer */
                    signer?: (string|null);
                }

                /** Represents a MsgSubmitMisbehaviour. */
                class MsgSubmitMisbehaviour implements IMsgSubmitMisbehaviour {

                    /**
                     * Constructs a new MsgSubmitMisbehaviour.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgSubmitMisbehaviour);

                    /** MsgSubmitMisbehaviour client_id. */
                    public client_id: string;

                    /** MsgSubmitMisbehaviour misbehaviour. */
                    public misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviour message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviour.verify|verify} messages.
                     * @param m MsgSubmitMisbehaviour message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgSubmitMisbehaviour, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviour message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgSubmitMisbehaviour;
                }

                /** Properties of a MsgSubmitMisbehaviourResponse. */
                interface IMsgSubmitMisbehaviourResponse {
                }

                /** Represents a MsgSubmitMisbehaviourResponse. */
                class MsgSubmitMisbehaviourResponse implements IMsgSubmitMisbehaviourResponse {

                    /**
                     * Constructs a new MsgSubmitMisbehaviourResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse);

                    /**
                     * Encodes the specified MsgSubmitMisbehaviourResponse message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviourResponse.verify|verify} messages.
                     * @param m MsgSubmitMisbehaviourResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviourResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviourResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;
                }

                /** Properties of an IdentifiedClientState. */
                interface IIdentifiedClientState {

                    /** IdentifiedClientState client_id */
                    client_id?: (string|null);

                    /** IdentifiedClientState client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents an IdentifiedClientState. */
                class IdentifiedClientState implements IIdentifiedClientState {

                    /**
                     * Constructs a new IdentifiedClientState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IIdentifiedClientState);

                    /** IdentifiedClientState client_id. */
                    public client_id: string;

                    /** IdentifiedClientState client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified IdentifiedClientState message. Does not implicitly {@link ibc.core.client.v1.IdentifiedClientState.verify|verify} messages.
                     * @param m IdentifiedClientState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IIdentifiedClientState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedClientState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns IdentifiedClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.IdentifiedClientState;
                }

                /** Properties of a ConsensusStateWithHeight. */
                interface IConsensusStateWithHeight {

                    /** ConsensusStateWithHeight height */
                    height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateWithHeight. */
                class ConsensusStateWithHeight implements IConsensusStateWithHeight {

                    /**
                     * Constructs a new ConsensusStateWithHeight.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IConsensusStateWithHeight);

                    /** ConsensusStateWithHeight height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateWithHeight message. Does not implicitly {@link ibc.core.client.v1.ConsensusStateWithHeight.verify|verify} messages.
                     * @param m ConsensusStateWithHeight message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IConsensusStateWithHeight, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateWithHeight message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConsensusStateWithHeight
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.ConsensusStateWithHeight;
                }

                /** Properties of a ClientConsensusStates. */
                interface IClientConsensusStates {

                    /** ClientConsensusStates client_id */
                    client_id?: (string|null);

                    /** ClientConsensusStates consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);
                }

                /** Represents a ClientConsensusStates. */
                class ClientConsensusStates implements IClientConsensusStates {

                    /**
                     * Constructs a new ClientConsensusStates.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IClientConsensusStates);

                    /** ClientConsensusStates client_id. */
                    public client_id: string;

                    /** ClientConsensusStates consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /**
                     * Encodes the specified ClientConsensusStates message. Does not implicitly {@link ibc.core.client.v1.ClientConsensusStates.verify|verify} messages.
                     * @param m ClientConsensusStates message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IClientConsensusStates, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientConsensusStates message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientConsensusStates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.ClientConsensusStates;
                }

                /** Properties of a ClientUpdateProposal. */
                interface IClientUpdateProposal {

                    /** ClientUpdateProposal title */
                    title?: (string|null);

                    /** ClientUpdateProposal description */
                    description?: (string|null);

                    /** ClientUpdateProposal client_id */
                    client_id?: (string|null);

                    /** ClientUpdateProposal header */
                    header?: (google.protobuf.IAny|null);
                }

                /** Represents a ClientUpdateProposal. */
                class ClientUpdateProposal implements IClientUpdateProposal {

                    /**
                     * Constructs a new ClientUpdateProposal.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IClientUpdateProposal);

                    /** ClientUpdateProposal title. */
                    public title: string;

                    /** ClientUpdateProposal description. */
                    public description: string;

                    /** ClientUpdateProposal client_id. */
                    public client_id: string;

                    /** ClientUpdateProposal header. */
                    public header?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ClientUpdateProposal message. Does not implicitly {@link ibc.core.client.v1.ClientUpdateProposal.verify|verify} messages.
                     * @param m ClientUpdateProposal message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IClientUpdateProposal, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientUpdateProposal message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientUpdateProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.ClientUpdateProposal;
                }

                /** Properties of an Height. */
                interface IHeight {

                    /** Height revision_number */
                    revision_number?: (Long|null);

                    /** Height revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents an Height. */
                class Height implements IHeight {

                    /**
                     * Constructs a new Height.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IHeight);

                    /** Height revision_number. */
                    public revision_number: Long;

                    /** Height revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified Height message. Does not implicitly {@link ibc.core.client.v1.Height.verify|verify} messages.
                     * @param m Height message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IHeight, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Height message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Height
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.Height;
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params allowed_clients */
                    allowed_clients?: (string[]|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.client.v1.IParams);

                    /** Params allowed_clients. */
                    public allowed_clients: string[];

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.core.client.v1.Params.verify|verify} messages.
                     * @param m Params message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.client.v1.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.client.v1.Params;
                }
            }
        }

        /** Namespace commitment. */
        namespace commitment {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a MerkleRoot. */
                interface IMerkleRoot {

                    /** MerkleRoot hash */
                    hash?: (Uint8Array|null);
                }

                /** Represents a MerkleRoot. */
                class MerkleRoot implements IMerkleRoot {

                    /**
                     * Constructs a new MerkleRoot.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.commitment.v1.IMerkleRoot);

                    /** MerkleRoot hash. */
                    public hash: Uint8Array;

                    /**
                     * Encodes the specified MerkleRoot message. Does not implicitly {@link ibc.core.commitment.v1.MerkleRoot.verify|verify} messages.
                     * @param m MerkleRoot message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.commitment.v1.IMerkleRoot, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleRoot message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MerkleRoot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.commitment.v1.MerkleRoot;
                }

                /** Properties of a MerklePrefix. */
                interface IMerklePrefix {

                    /** MerklePrefix key_prefix */
                    key_prefix?: (Uint8Array|null);
                }

                /** Represents a MerklePrefix. */
                class MerklePrefix implements IMerklePrefix {

                    /**
                     * Constructs a new MerklePrefix.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.commitment.v1.IMerklePrefix);

                    /** MerklePrefix key_prefix. */
                    public key_prefix: Uint8Array;

                    /**
                     * Encodes the specified MerklePrefix message. Does not implicitly {@link ibc.core.commitment.v1.MerklePrefix.verify|verify} messages.
                     * @param m MerklePrefix message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.commitment.v1.IMerklePrefix, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePrefix message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MerklePrefix
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.commitment.v1.MerklePrefix;
                }

                /** Properties of a MerklePath. */
                interface IMerklePath {

                    /** MerklePath key_path */
                    key_path?: (string[]|null);
                }

                /** Represents a MerklePath. */
                class MerklePath implements IMerklePath {

                    /**
                     * Constructs a new MerklePath.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.commitment.v1.IMerklePath);

                    /** MerklePath key_path. */
                    public key_path: string[];

                    /**
                     * Encodes the specified MerklePath message. Does not implicitly {@link ibc.core.commitment.v1.MerklePath.verify|verify} messages.
                     * @param m MerklePath message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.commitment.v1.IMerklePath, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePath message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MerklePath
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.commitment.v1.MerklePath;
                }

                /** Properties of a MerkleProof. */
                interface IMerkleProof {

                    /** MerkleProof proofs */
                    proofs?: (ics23.ICommitmentProof[]|null);
                }

                /** Represents a MerkleProof. */
                class MerkleProof implements IMerkleProof {

                    /**
                     * Constructs a new MerkleProof.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.commitment.v1.IMerkleProof);

                    /** MerkleProof proofs. */
                    public proofs: ics23.ICommitmentProof[];

                    /**
                     * Encodes the specified MerkleProof message. Does not implicitly {@link ibc.core.commitment.v1.MerkleProof.verify|verify} messages.
                     * @param m MerkleProof message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.commitment.v1.IMerkleProof, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleProof message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MerkleProof
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.commitment.v1.MerkleProof;
                }
            }
        }

        /** Namespace connection. */
        namespace connection {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a QueryConnectionRequest. */
                interface IQueryConnectionRequest {

                    /** QueryConnectionRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionRequest. */
                class QueryConnectionRequest implements IQueryConnectionRequest {

                    /**
                     * Constructs a new QueryConnectionRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionRequest);

                    /** QueryConnectionRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionRequest.verify|verify} messages.
                     * @param m QueryConnectionRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionRequest;
                }

                /** Properties of a QueryConnectionResponse. */
                interface IQueryConnectionResponse {

                    /** QueryConnectionResponse connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionResponse. */
                class QueryConnectionResponse implements IQueryConnectionResponse {

                    /**
                     * Constructs a new QueryConnectionResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionResponse);

                    /** QueryConnectionResponse connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionResponse.verify|verify} messages.
                     * @param m QueryConnectionResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionResponse;
                }

                /** Properties of a QueryConnectionsRequest. */
                interface IQueryConnectionsRequest {

                    /** QueryConnectionsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionsRequest. */
                class QueryConnectionsRequest implements IQueryConnectionsRequest {

                    /**
                     * Constructs a new QueryConnectionsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionsRequest);

                    /** QueryConnectionsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsRequest.verify|verify} messages.
                     * @param m QueryConnectionsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionsRequest;
                }

                /** Properties of a QueryConnectionsResponse. */
                interface IQueryConnectionsResponse {

                    /** QueryConnectionsResponse connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** QueryConnectionsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionsResponse. */
                class QueryConnectionsResponse implements IQueryConnectionsResponse {

                    /**
                     * Constructs a new QueryConnectionsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionsResponse);

                    /** QueryConnectionsResponse connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** QueryConnectionsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsResponse.verify|verify} messages.
                     * @param m QueryConnectionsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionsResponse;
                }

                /** Properties of a QueryClientConnectionsRequest. */
                interface IQueryClientConnectionsRequest {

                    /** QueryClientConnectionsRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientConnectionsRequest. */
                class QueryClientConnectionsRequest implements IQueryClientConnectionsRequest {

                    /**
                     * Constructs a new QueryClientConnectionsRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryClientConnectionsRequest);

                    /** QueryClientConnectionsRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsRequest.verify|verify} messages.
                     * @param m QueryClientConnectionsRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryClientConnectionsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryClientConnectionsRequest;
                }

                /** Properties of a QueryClientConnectionsResponse. */
                interface IQueryClientConnectionsResponse {

                    /** QueryClientConnectionsResponse connection_paths */
                    connection_paths?: (string[]|null);

                    /** QueryClientConnectionsResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientConnectionsResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientConnectionsResponse. */
                class QueryClientConnectionsResponse implements IQueryClientConnectionsResponse {

                    /**
                     * Constructs a new QueryClientConnectionsResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryClientConnectionsResponse);

                    /** QueryClientConnectionsResponse connection_paths. */
                    public connection_paths: string[];

                    /** QueryClientConnectionsResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientConnectionsResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsResponse.verify|verify} messages.
                     * @param m QueryClientConnectionsResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryClientConnectionsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryClientConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryClientConnectionsResponse;
                }

                /** Properties of a QueryConnectionClientStateRequest. */
                interface IQueryConnectionClientStateRequest {

                    /** QueryConnectionClientStateRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionClientStateRequest. */
                class QueryConnectionClientStateRequest implements IQueryConnectionClientStateRequest {

                    /**
                     * Constructs a new QueryConnectionClientStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionClientStateRequest);

                    /** QueryConnectionClientStateRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionClientStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateRequest.verify|verify} messages.
                     * @param m QueryConnectionClientStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionClientStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionClientStateRequest;
                }

                /** Properties of a QueryConnectionClientStateResponse. */
                interface IQueryConnectionClientStateResponse {

                    /** QueryConnectionClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionClientStateResponse. */
                class QueryConnectionClientStateResponse implements IQueryConnectionClientStateResponse {

                    /**
                     * Constructs a new QueryConnectionClientStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionClientStateResponse);

                    /** QueryConnectionClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionClientStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateResponse.verify|verify} messages.
                     * @param m QueryConnectionClientStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionClientStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionClientStateResponse;
                }

                /** Properties of a QueryConnectionConsensusStateRequest. */
                interface IQueryConnectionConsensusStateRequest {

                    /** QueryConnectionConsensusStateRequest connection_id */
                    connection_id?: (string|null);

                    /** QueryConnectionConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConnectionConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryConnectionConsensusStateRequest. */
                class QueryConnectionConsensusStateRequest implements IQueryConnectionConsensusStateRequest {

                    /**
                     * Constructs a new QueryConnectionConsensusStateRequest.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest);

                    /** QueryConnectionConsensusStateRequest connection_id. */
                    public connection_id: string;

                    /** QueryConnectionConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConnectionConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateRequest.verify|verify} messages.
                     * @param m QueryConnectionConsensusStateRequest message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateRequest message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;
                }

                /** Properties of a QueryConnectionConsensusStateResponse. */
                interface IQueryConnectionConsensusStateResponse {

                    /** QueryConnectionConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryConnectionConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionConsensusStateResponse. */
                class QueryConnectionConsensusStateResponse implements IQueryConnectionConsensusStateResponse {

                    /**
                     * Constructs a new QueryConnectionConsensusStateResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse);

                    /** QueryConnectionConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryConnectionConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionConsensusStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateResponse.verify|verify} messages.
                     * @param m QueryConnectionConsensusStateResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** GenesisState client_connection_paths */
                    client_connection_paths?: (ibc.core.connection.v1.IConnectionPaths[]|null);

                    /** GenesisState next_connection_sequence */
                    next_connection_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IGenesisState);

                    /** GenesisState connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** GenesisState client_connection_paths. */
                    public client_connection_paths: ibc.core.connection.v1.IConnectionPaths[];

                    /** GenesisState next_connection_sequence. */
                    public next_connection_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.connection.v1.GenesisState.verify|verify} messages.
                     * @param m GenesisState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.GenesisState;
                }

                /** Properties of a ConnectionEnd. */
                interface IConnectionEnd {

                    /** ConnectionEnd client_id */
                    client_id?: (string|null);

                    /** ConnectionEnd versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** ConnectionEnd state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** ConnectionEnd counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents a ConnectionEnd. */
                class ConnectionEnd implements IConnectionEnd {

                    /**
                     * Constructs a new ConnectionEnd.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IConnectionEnd);

                    /** ConnectionEnd client_id. */
                    public client_id: string;

                    /** ConnectionEnd versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** ConnectionEnd state. */
                    public state: ibc.core.connection.v1.State;

                    /** ConnectionEnd counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified ConnectionEnd message. Does not implicitly {@link ibc.core.connection.v1.ConnectionEnd.verify|verify} messages.
                     * @param m ConnectionEnd message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IConnectionEnd, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionEnd message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConnectionEnd
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.ConnectionEnd;
                }

                /** Properties of an IdentifiedConnection. */
                interface IIdentifiedConnection {

                    /** IdentifiedConnection id */
                    id?: (string|null);

                    /** IdentifiedConnection client_id */
                    client_id?: (string|null);

                    /** IdentifiedConnection versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** IdentifiedConnection state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** IdentifiedConnection counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents an IdentifiedConnection. */
                class IdentifiedConnection implements IIdentifiedConnection {

                    /**
                     * Constructs a new IdentifiedConnection.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IIdentifiedConnection);

                    /** IdentifiedConnection id. */
                    public id: string;

                    /** IdentifiedConnection client_id. */
                    public client_id: string;

                    /** IdentifiedConnection versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** IdentifiedConnection state. */
                    public state: ibc.core.connection.v1.State;

                    /** IdentifiedConnection counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified IdentifiedConnection message. Does not implicitly {@link ibc.core.connection.v1.IdentifiedConnection.verify|verify} messages.
                     * @param m IdentifiedConnection message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IIdentifiedConnection, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedConnection message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns IdentifiedConnection
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.IdentifiedConnection;
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty client_id */
                    client_id?: (string|null);

                    /** Counterparty connection_id */
                    connection_id?: (string|null);

                    /** Counterparty prefix */
                    prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.ICounterparty);

                    /** Counterparty client_id. */
                    public client_id: string;

                    /** Counterparty connection_id. */
                    public connection_id: string;

                    /** Counterparty prefix. */
                    public prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.connection.v1.Counterparty.verify|verify} messages.
                     * @param m Counterparty message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.ICounterparty, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.Counterparty;
                }

                /** Properties of a ClientPaths. */
                interface IClientPaths {

                    /** ClientPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ClientPaths. */
                class ClientPaths implements IClientPaths {

                    /**
                     * Constructs a new ClientPaths.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IClientPaths);

                    /** ClientPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ClientPaths message. Does not implicitly {@link ibc.core.connection.v1.ClientPaths.verify|verify} messages.
                     * @param m ClientPaths message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IClientPaths, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientPaths message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.ClientPaths;
                }

                /** Properties of a ConnectionPaths. */
                interface IConnectionPaths {

                    /** ConnectionPaths client_id */
                    client_id?: (string|null);

                    /** ConnectionPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ConnectionPaths. */
                class ConnectionPaths implements IConnectionPaths {

                    /**
                     * Constructs a new ConnectionPaths.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IConnectionPaths);

                    /** ConnectionPaths client_id. */
                    public client_id: string;

                    /** ConnectionPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ConnectionPaths message. Does not implicitly {@link ibc.core.connection.v1.ConnectionPaths.verify|verify} messages.
                     * @param m ConnectionPaths message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IConnectionPaths, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionPaths message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConnectionPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.ConnectionPaths;
                }

                /** Properties of a Version. */
                interface IVersion {

                    /** Version identifier */
                    identifier?: (string|null);

                    /** Version features */
                    features?: (string[]|null);
                }

                /** Represents a Version. */
                class Version implements IVersion {

                    /**
                     * Constructs a new Version.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IVersion);

                    /** Version identifier. */
                    public identifier: string;

                    /** Version features. */
                    public features: string[];

                    /**
                     * Encodes the specified Version message. Does not implicitly {@link ibc.core.connection.v1.Version.verify|verify} messages.
                     * @param m Version message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IVersion, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Version message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Version
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.Version;
                }

                /** Properties of a MsgConnectionOpenInit. */
                interface IMsgConnectionOpenInit {

                    /** MsgConnectionOpenInit client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenInit counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenInit. */
                class MsgConnectionOpenInit implements IMsgConnectionOpenInit {

                    /**
                     * Constructs a new MsgConnectionOpenInit.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenInit);

                    /** MsgConnectionOpenInit client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenInit counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenInit message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInit.verify|verify} messages.
                     * @param m MsgConnectionOpenInit message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenInit, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInit message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenInit;
                }

                /** Properties of a MsgConnectionOpenInitResponse. */
                interface IMsgConnectionOpenInitResponse {
                }

                /** Represents a MsgConnectionOpenInitResponse. */
                class MsgConnectionOpenInitResponse implements IMsgConnectionOpenInitResponse {

                    /**
                     * Constructs a new MsgConnectionOpenInitResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenInitResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenInitResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInitResponse.verify|verify} messages.
                     * @param m MsgConnectionOpenInitResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenInitResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInitResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenInitResponse;
                }

                /** Properties of a MsgConnectionOpenTry. */
                interface IMsgConnectionOpenTry {

                    /** MsgConnectionOpenTry client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenTry previous_connection_id */
                    previous_connection_id?: (string|null);

                    /** MsgConnectionOpenTry client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenTry counterparty_versions */
                    counterparty_versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** MsgConnectionOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenTry consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenTry. */
                class MsgConnectionOpenTry implements IMsgConnectionOpenTry {

                    /**
                     * Constructs a new MsgConnectionOpenTry.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenTry);

                    /** MsgConnectionOpenTry client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenTry previous_connection_id. */
                    public previous_connection_id: string;

                    /** MsgConnectionOpenTry client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenTry counterparty_versions. */
                    public counterparty_versions: ibc.core.connection.v1.IVersion[];

                    /** MsgConnectionOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgConnectionOpenTry proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenTry proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenTry consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenTry message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTry.verify|verify} messages.
                     * @param m MsgConnectionOpenTry message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenTry, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTry message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenTry;
                }

                /** Properties of a MsgConnectionOpenTryResponse. */
                interface IMsgConnectionOpenTryResponse {
                }

                /** Represents a MsgConnectionOpenTryResponse. */
                class MsgConnectionOpenTryResponse implements IMsgConnectionOpenTryResponse {

                    /**
                     * Constructs a new MsgConnectionOpenTryResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenTryResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenTryResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTryResponse.verify|verify} messages.
                     * @param m MsgConnectionOpenTryResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenTryResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTryResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenTryResponse;
                }

                /** Properties of a MsgConnectionOpenAck. */
                interface IMsgConnectionOpenAck {

                    /** MsgConnectionOpenAck connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenAck counterparty_connection_id */
                    counterparty_connection_id?: (string|null);

                    /** MsgConnectionOpenAck version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenAck consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenAck. */
                class MsgConnectionOpenAck implements IMsgConnectionOpenAck {

                    /**
                     * Constructs a new MsgConnectionOpenAck.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenAck);

                    /** MsgConnectionOpenAck connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenAck counterparty_connection_id. */
                    public counterparty_connection_id: string;

                    /** MsgConnectionOpenAck version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgConnectionOpenAck proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenAck proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenAck consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenAck message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAck.verify|verify} messages.
                     * @param m MsgConnectionOpenAck message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenAck, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAck message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenAck;
                }

                /** Properties of a MsgConnectionOpenAckResponse. */
                interface IMsgConnectionOpenAckResponse {
                }

                /** Represents a MsgConnectionOpenAckResponse. */
                class MsgConnectionOpenAckResponse implements IMsgConnectionOpenAckResponse {

                    /**
                     * Constructs a new MsgConnectionOpenAckResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenAckResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenAckResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAckResponse.verify|verify} messages.
                     * @param m MsgConnectionOpenAckResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenAckResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAckResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenAckResponse;
                }

                /** Properties of a MsgConnectionOpenConfirm. */
                interface IMsgConnectionOpenConfirm {

                    /** MsgConnectionOpenConfirm connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgConnectionOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenConfirm. */
                class MsgConnectionOpenConfirm implements IMsgConnectionOpenConfirm {

                    /**
                     * Constructs a new MsgConnectionOpenConfirm.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenConfirm);

                    /** MsgConnectionOpenConfirm connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgConnectionOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirm message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirm.verify|verify} messages.
                     * @param m MsgConnectionOpenConfirm message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenConfirm, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirm message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenConfirm;
                }

                /** Properties of a MsgConnectionOpenConfirmResponse. */
                interface IMsgConnectionOpenConfirmResponse {
                }

                /** Represents a MsgConnectionOpenConfirmResponse. */
                class MsgConnectionOpenConfirmResponse implements IMsgConnectionOpenConfirmResponse {

                    /**
                     * Constructs a new MsgConnectionOpenConfirmResponse.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenConfirmResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirmResponse.verify|verify} messages.
                     * @param m MsgConnectionOpenConfirmResponse message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirmResponse message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;
                }
            }
        }

        /** Namespace types. */
        namespace types {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState client_genesis */
                    client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis */
                    connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis */
                    channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.core.types.v1.IGenesisState);

                    /** GenesisState client_genesis. */
                    public client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis. */
                    public connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis. */
                    public channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.types.v1.GenesisState.verify|verify} messages.
                     * @param m GenesisState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.core.types.v1.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.core.types.v1.GenesisState;
                }
            }
        }
    }

    /** Namespace lightclients. */
    namespace lightclients {

        /** Namespace localhost. */
        namespace localhost {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState chain_id */
                    chain_id?: (string|null);

                    /** ClientState height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.localhost.v1.IClientState);

                    /** ClientState chain_id. */
                    public chain_id: string;

                    /** ClientState height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.localhost.v1.ClientState.verify|verify} messages.
                     * @param m ClientState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.localhost.v1.IClientState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.localhost.v1.ClientState;
                }
            }
        }

        /** Namespace solomachine. */
        namespace solomachine {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState sequence */
                    sequence?: (Long|null);

                    /** ClientState frozen_sequence */
                    frozen_sequence?: (Long|null);

                    /** ClientState consensus_state */
                    consensus_state?: (ibc.lightclients.solomachine.v1.IConsensusState|null);

                    /** ClientState allow_update_after_proposal */
                    allow_update_after_proposal?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IClientState);

                    /** ClientState sequence. */
                    public sequence: Long;

                    /** ClientState frozen_sequence. */
                    public frozen_sequence: Long;

                    /** ClientState consensus_state. */
                    public consensus_state?: (ibc.lightclients.solomachine.v1.IConsensusState|null);

                    /** ClientState allow_update_after_proposal. */
                    public allow_update_after_proposal: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientState.verify|verify} messages.
                     * @param m ClientState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IClientState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ClientState;
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier */
                    diversifier?: (string|null);

                    /** ConsensusState timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IConsensusState);

                    /** ConsensusState public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier. */
                    public diversifier: string;

                    /** ConsensusState timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusState.verify|verify} messages.
                     * @param m ConsensusState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IConsensusState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ConsensusState;
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header sequence */
                    sequence?: (Long|null);

                    /** Header timestamp */
                    timestamp?: (Long|null);

                    /** Header signature */
                    signature?: (Uint8Array|null);

                    /** Header new_public_key */
                    new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IHeader);

                    /** Header sequence. */
                    public sequence: Long;

                    /** Header timestamp. */
                    public timestamp: Long;

                    /** Header signature. */
                    public signature: Uint8Array;

                    /** Header new_public_key. */
                    public new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.solomachine.v1.Header.verify|verify} messages.
                     * @param m Header message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IHeader, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.Header;
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour sequence */
                    sequence?: (Long|null);

                    /** Misbehaviour signature_one */
                    signature_one?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /** Misbehaviour signature_two */
                    signature_two?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour sequence. */
                    public sequence: Long;

                    /** Misbehaviour signature_one. */
                    public signature_one?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /** Misbehaviour signature_two. */
                    public signature_two?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.solomachine.v1.Misbehaviour.verify|verify} messages.
                     * @param m Misbehaviour message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IMisbehaviour, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.Misbehaviour;
                }

                /** Properties of a SignatureAndData. */
                interface ISignatureAndData {

                    /** SignatureAndData signature */
                    signature?: (Uint8Array|null);

                    /** SignatureAndData data_type */
                    data_type?: (ibc.lightclients.solomachine.v1.DataType|null);

                    /** SignatureAndData data */
                    data?: (Uint8Array|null);

                    /** SignatureAndData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a SignatureAndData. */
                class SignatureAndData implements ISignatureAndData {

                    /**
                     * Constructs a new SignatureAndData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.ISignatureAndData);

                    /** SignatureAndData signature. */
                    public signature: Uint8Array;

                    /** SignatureAndData data_type. */
                    public data_type: ibc.lightclients.solomachine.v1.DataType;

                    /** SignatureAndData data. */
                    public data: Uint8Array;

                    /** SignatureAndData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified SignatureAndData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignatureAndData.verify|verify} messages.
                     * @param m SignatureAndData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.ISignatureAndData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.SignatureAndData;
                }

                /** Properties of a TimestampedSignatureData. */
                interface ITimestampedSignatureData {

                    /** TimestampedSignatureData signature_data */
                    signature_data?: (Uint8Array|null);

                    /** TimestampedSignatureData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a TimestampedSignatureData. */
                class TimestampedSignatureData implements ITimestampedSignatureData {

                    /**
                     * Constructs a new TimestampedSignatureData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.ITimestampedSignatureData);

                    /** TimestampedSignatureData signature_data. */
                    public signature_data: Uint8Array;

                    /** TimestampedSignatureData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified TimestampedSignatureData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.TimestampedSignatureData.verify|verify} messages.
                     * @param m TimestampedSignatureData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.ITimestampedSignatureData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.TimestampedSignatureData;
                }

                /** Properties of a SignBytes. */
                interface ISignBytes {

                    /** SignBytes sequence */
                    sequence?: (Long|null);

                    /** SignBytes timestamp */
                    timestamp?: (Long|null);

                    /** SignBytes diversifier */
                    diversifier?: (string|null);

                    /** SignBytes data_type */
                    data_type?: (ibc.lightclients.solomachine.v1.DataType|null);

                    /** SignBytes data */
                    data?: (Uint8Array|null);
                }

                /** Represents a SignBytes. */
                class SignBytes implements ISignBytes {

                    /**
                     * Constructs a new SignBytes.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.ISignBytes);

                    /** SignBytes sequence. */
                    public sequence: Long;

                    /** SignBytes timestamp. */
                    public timestamp: Long;

                    /** SignBytes diversifier. */
                    public diversifier: string;

                    /** SignBytes data_type. */
                    public data_type: ibc.lightclients.solomachine.v1.DataType;

                    /** SignBytes data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified SignBytes message. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignBytes.verify|verify} messages.
                     * @param m SignBytes message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.ISignBytes, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.SignBytes;
                }

                /** DataType enum. */
                enum DataType {
                    DATA_TYPE_UNINITIALIZED_UNSPECIFIED = 0,
                    DATA_TYPE_CLIENT_STATE = 1,
                    DATA_TYPE_CONSENSUS_STATE = 2,
                    DATA_TYPE_CONNECTION_STATE = 3,
                    DATA_TYPE_CHANNEL_STATE = 4,
                    DATA_TYPE_PACKET_COMMITMENT = 5,
                    DATA_TYPE_PACKET_ACKNOWLEDGEMENT = 6,
                    DATA_TYPE_PACKET_RECEIPT_ABSENCE = 7,
                    DATA_TYPE_NEXT_SEQUENCE_RECV = 8,
                    DATA_TYPE_HEADER = 9
                }

                /** Properties of a HeaderData. */
                interface IHeaderData {

                    /** HeaderData new_pub_key */
                    new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a HeaderData. */
                class HeaderData implements IHeaderData {

                    /**
                     * Constructs a new HeaderData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IHeaderData);

                    /** HeaderData new_pub_key. */
                    public new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified HeaderData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.HeaderData.verify|verify} messages.
                     * @param m HeaderData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IHeaderData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.HeaderData;
                }

                /** Properties of a ClientStateData. */
                interface IClientStateData {

                    /** ClientStateData path */
                    path?: (Uint8Array|null);

                    /** ClientStateData client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ClientStateData. */
                class ClientStateData implements IClientStateData {

                    /**
                     * Constructs a new ClientStateData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IClientStateData);

                    /** ClientStateData path. */
                    public path: Uint8Array;

                    /** ClientStateData client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ClientStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientStateData.verify|verify} messages.
                     * @param m ClientStateData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IClientStateData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientStateData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ClientStateData;
                }

                /** Properties of a ConsensusStateData. */
                interface IConsensusStateData {

                    /** ConsensusStateData path */
                    path?: (Uint8Array|null);

                    /** ConsensusStateData consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateData. */
                class ConsensusStateData implements IConsensusStateData {

                    /**
                     * Constructs a new ConsensusStateData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IConsensusStateData);

                    /** ConsensusStateData path. */
                    public path: Uint8Array;

                    /** ConsensusStateData consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusStateData.verify|verify} messages.
                     * @param m ConsensusStateData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IConsensusStateData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConsensusStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ConsensusStateData;
                }

                /** Properties of a ConnectionStateData. */
                interface IConnectionStateData {

                    /** ConnectionStateData path */
                    path?: (Uint8Array|null);

                    /** ConnectionStateData connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);
                }

                /** Represents a ConnectionStateData. */
                class ConnectionStateData implements IConnectionStateData {

                    /**
                     * Constructs a new ConnectionStateData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IConnectionStateData);

                    /** ConnectionStateData path. */
                    public path: Uint8Array;

                    /** ConnectionStateData connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /**
                     * Encodes the specified ConnectionStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConnectionStateData.verify|verify} messages.
                     * @param m ConnectionStateData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IConnectionStateData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionStateData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConnectionStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ConnectionStateData;
                }

                /** Properties of a ChannelStateData. */
                interface IChannelStateData {

                    /** ChannelStateData path */
                    path?: (Uint8Array|null);

                    /** ChannelStateData channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);
                }

                /** Represents a ChannelStateData. */
                class ChannelStateData implements IChannelStateData {

                    /**
                     * Constructs a new ChannelStateData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IChannelStateData);

                    /** ChannelStateData path. */
                    public path: Uint8Array;

                    /** ChannelStateData channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /**
                     * Encodes the specified ChannelStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ChannelStateData.verify|verify} messages.
                     * @param m ChannelStateData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IChannelStateData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ChannelStateData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ChannelStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.ChannelStateData;
                }

                /** Properties of a PacketCommitmentData. */
                interface IPacketCommitmentData {

                    /** PacketCommitmentData path */
                    path?: (Uint8Array|null);

                    /** PacketCommitmentData commitment */
                    commitment?: (Uint8Array|null);
                }

                /** Represents a PacketCommitmentData. */
                class PacketCommitmentData implements IPacketCommitmentData {

                    /**
                     * Constructs a new PacketCommitmentData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IPacketCommitmentData);

                    /** PacketCommitmentData path. */
                    public path: Uint8Array;

                    /** PacketCommitmentData commitment. */
                    public commitment: Uint8Array;

                    /**
                     * Encodes the specified PacketCommitmentData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketCommitmentData.verify|verify} messages.
                     * @param m PacketCommitmentData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IPacketCommitmentData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketCommitmentData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PacketCommitmentData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.PacketCommitmentData;
                }

                /** Properties of a PacketAcknowledgementData. */
                interface IPacketAcknowledgementData {

                    /** PacketAcknowledgementData path */
                    path?: (Uint8Array|null);

                    /** PacketAcknowledgementData acknowledgement */
                    acknowledgement?: (Uint8Array|null);
                }

                /** Represents a PacketAcknowledgementData. */
                class PacketAcknowledgementData implements IPacketAcknowledgementData {

                    /**
                     * Constructs a new PacketAcknowledgementData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IPacketAcknowledgementData);

                    /** PacketAcknowledgementData path. */
                    public path: Uint8Array;

                    /** PacketAcknowledgementData acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /**
                     * Encodes the specified PacketAcknowledgementData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketAcknowledgementData.verify|verify} messages.
                     * @param m PacketAcknowledgementData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IPacketAcknowledgementData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketAcknowledgementData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PacketAcknowledgementData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.PacketAcknowledgementData;
                }

                /** Properties of a PacketReceiptAbsenceData. */
                interface IPacketReceiptAbsenceData {

                    /** PacketReceiptAbsenceData path */
                    path?: (Uint8Array|null);
                }

                /** Represents a PacketReceiptAbsenceData. */
                class PacketReceiptAbsenceData implements IPacketReceiptAbsenceData {

                    /**
                     * Constructs a new PacketReceiptAbsenceData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.IPacketReceiptAbsenceData);

                    /** PacketReceiptAbsenceData path. */
                    public path: Uint8Array;

                    /**
                     * Encodes the specified PacketReceiptAbsenceData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData.verify|verify} messages.
                     * @param m PacketReceiptAbsenceData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.IPacketReceiptAbsenceData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketReceiptAbsenceData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns PacketReceiptAbsenceData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData;
                }

                /** Properties of a NextSequenceRecvData. */
                interface INextSequenceRecvData {

                    /** NextSequenceRecvData path */
                    path?: (Uint8Array|null);

                    /** NextSequenceRecvData next_seq_recv */
                    next_seq_recv?: (Long|null);
                }

                /** Represents a NextSequenceRecvData. */
                class NextSequenceRecvData implements INextSequenceRecvData {

                    /**
                     * Constructs a new NextSequenceRecvData.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.solomachine.v1.INextSequenceRecvData);

                    /** NextSequenceRecvData path. */
                    public path: Uint8Array;

                    /** NextSequenceRecvData next_seq_recv. */
                    public next_seq_recv: Long;

                    /**
                     * Encodes the specified NextSequenceRecvData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.NextSequenceRecvData.verify|verify} messages.
                     * @param m NextSequenceRecvData message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.solomachine.v1.INextSequenceRecvData, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a NextSequenceRecvData message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns NextSequenceRecvData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.solomachine.v1.NextSequenceRecvData;
                }
            }
        }

        /** Namespace tendermint. */
        namespace tendermint {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState chain_id */
                    chain_id?: (string|null);

                    /** ClientState trust_level */
                    trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period */
                    trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period */
                    unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift */
                    max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height */
                    frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height */
                    latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs */
                    proof_specs?: (ics23.IProofSpec[]|null);

                    /** ClientState upgrade_path */
                    upgrade_path?: (string[]|null);

                    /** ClientState allow_update_after_expiry */
                    allow_update_after_expiry?: (boolean|null);

                    /** ClientState allow_update_after_misbehaviour */
                    allow_update_after_misbehaviour?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.tendermint.v1.IClientState);

                    /** ClientState chain_id. */
                    public chain_id: string;

                    /** ClientState trust_level. */
                    public trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period. */
                    public trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period. */
                    public unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift. */
                    public max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height. */
                    public frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height. */
                    public latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs. */
                    public proof_specs: ics23.IProofSpec[];

                    /** ClientState upgrade_path. */
                    public upgrade_path: string[];

                    /** ClientState allow_update_after_expiry. */
                    public allow_update_after_expiry: boolean;

                    /** ClientState allow_update_after_misbehaviour. */
                    public allow_update_after_misbehaviour: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ClientState.verify|verify} messages.
                     * @param m ClientState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.tendermint.v1.IClientState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.tendermint.v1.ClientState;
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState timestamp */
                    timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root */
                    root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash */
                    next_validators_hash?: (Uint8Array|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.tendermint.v1.IConsensusState);

                    /** ConsensusState timestamp. */
                    public timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root. */
                    public root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash. */
                    public next_validators_hash: Uint8Array;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ConsensusState.verify|verify} messages.
                     * @param m ConsensusState message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.tendermint.v1.IConsensusState, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.tendermint.v1.ConsensusState;
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour header_1 */
                    header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2 */
                    header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.tendermint.v1.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour header_1. */
                    public header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2. */
                    public header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Misbehaviour.verify|verify} messages.
                     * @param m Misbehaviour message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.tendermint.v1.IMisbehaviour, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.tendermint.v1.Misbehaviour;
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header signed_header */
                    signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set */
                    validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height */
                    trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators */
                    trusted_validators?: (tendermint.types.IValidatorSet|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.tendermint.v1.IHeader);

                    /** Header signed_header. */
                    public signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set. */
                    public validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height. */
                    public trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators. */
                    public trusted_validators?: (tendermint.types.IValidatorSet|null);

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Header.verify|verify} messages.
                     * @param m Header message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.tendermint.v1.IHeader, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.tendermint.v1.Header;
                }

                /** Properties of a Fraction. */
                interface IFraction {

                    /** Fraction numerator */
                    numerator?: (Long|null);

                    /** Fraction denominator */
                    denominator?: (Long|null);
                }

                /** Represents a Fraction. */
                class Fraction implements IFraction {

                    /**
                     * Constructs a new Fraction.
                     * @param [p] Properties to set
                     */
                    constructor(p?: ibc.lightclients.tendermint.v1.IFraction);

                    /** Fraction numerator. */
                    public numerator: Long;

                    /** Fraction denominator. */
                    public denominator: Long;

                    /**
                     * Encodes the specified Fraction message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Fraction.verify|verify} messages.
                     * @param m Fraction message or plain object to encode
                     * @param [w] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(m: ibc.lightclients.tendermint.v1.IFraction, w?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Fraction message from the specified reader or buffer.
                     * @param r Reader or buffer to decode from
                     * @param [l] Message length if known beforehand
                     * @returns Fraction
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ibc.lightclients.tendermint.v1.Fraction;
                }
            }
        }
    }
}

/** Namespace ics23. */
export namespace ics23 {

    /** HashOp enum. */
    enum HashOp {
        NO_HASH = 0,
        SHA256 = 1,
        SHA512 = 2,
        KECCAK = 3,
        RIPEMD160 = 4,
        BITCOIN = 5
    }

    /**
     * LengthOp defines how to process the key and value of the LeafOp
     * to include length information. After encoding the length with the given
     * algorithm, the length will be prepended to the key and value bytes.
     * (Each one with it's own encoded length)
     */
    enum LengthOp {
        NO_PREFIX = 0,
        VAR_PROTO = 1,
        VAR_RLP = 2,
        FIXED32_BIG = 3,
        FIXED32_LITTLE = 4,
        FIXED64_BIG = 5,
        FIXED64_LITTLE = 6,
        REQUIRE_32_BYTES = 7,
        REQUIRE_64_BYTES = 8
    }

    /** Properties of an ExistenceProof. */
    interface IExistenceProof {

        /** ExistenceProof key */
        key?: (Uint8Array|null);

        /** ExistenceProof value */
        value?: (Uint8Array|null);

        /** ExistenceProof leaf */
        leaf?: (ics23.ILeafOp|null);

        /** ExistenceProof path */
        path?: (ics23.IInnerOp[]|null);
    }

    /**
     * ExistenceProof takes a key and a value and a set of steps to perform on it.
     * The result of peforming all these steps will provide a "root hash", which can
     * be compared to the value in a header.
     *
     * Since it is computationally infeasible to produce a hash collission for any of the used
     * cryptographic hash functions, if someone can provide a series of operations to transform
     * a given key and value into a root hash that matches some trusted root, these key and values
     * must be in the referenced merkle tree.
     *
     * The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
     * which should be controlled by a spec. Eg. with lengthOp as NONE,
     * prefix = FOO, key = BAR, value = CHOICE
     * and
     * prefix = F, key = OOBAR, value = CHOICE
     * would produce the same value.
     *
     * With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
     * in the ProofSpec is valuable to prevent this mutability. And why all trees should
     * length-prefix the data before hashing it.
     */
    class ExistenceProof implements IExistenceProof {

        /**
         * Constructs a new ExistenceProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IExistenceProof);

        /** ExistenceProof key. */
        public key: Uint8Array;

        /** ExistenceProof value. */
        public value: Uint8Array;

        /** ExistenceProof leaf. */
        public leaf?: (ics23.ILeafOp|null);

        /** ExistenceProof path. */
        public path: ics23.IInnerOp[];

        /**
         * Encodes the specified ExistenceProof message. Does not implicitly {@link ics23.ExistenceProof.verify|verify} messages.
         * @param m ExistenceProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IExistenceProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExistenceProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns ExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.ExistenceProof;
    }

    /** Properties of a NonExistenceProof. */
    interface INonExistenceProof {

        /** NonExistenceProof key */
        key?: (Uint8Array|null);

        /** NonExistenceProof left */
        left?: (ics23.IExistenceProof|null);

        /** NonExistenceProof right */
        right?: (ics23.IExistenceProof|null);
    }

    /** Represents a NonExistenceProof. */
    class NonExistenceProof implements INonExistenceProof {

        /**
         * Constructs a new NonExistenceProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.INonExistenceProof);

        /** NonExistenceProof key. */
        public key: Uint8Array;

        /** NonExistenceProof left. */
        public left?: (ics23.IExistenceProof|null);

        /** NonExistenceProof right. */
        public right?: (ics23.IExistenceProof|null);

        /**
         * Encodes the specified NonExistenceProof message. Does not implicitly {@link ics23.NonExistenceProof.verify|verify} messages.
         * @param m NonExistenceProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.INonExistenceProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NonExistenceProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns NonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.NonExistenceProof;
    }

    /** Properties of a CommitmentProof. */
    interface ICommitmentProof {

        /** CommitmentProof exist */
        exist?: (ics23.IExistenceProof|null);

        /** CommitmentProof nonexist */
        nonexist?: (ics23.INonExistenceProof|null);

        /** CommitmentProof batch */
        batch?: (ics23.IBatchProof|null);

        /** CommitmentProof compressed */
        compressed?: (ics23.ICompressedBatchProof|null);
    }

    /** Represents a CommitmentProof. */
    class CommitmentProof implements ICommitmentProof {

        /**
         * Constructs a new CommitmentProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ICommitmentProof);

        /** CommitmentProof exist. */
        public exist?: (ics23.IExistenceProof|null);

        /** CommitmentProof nonexist. */
        public nonexist?: (ics23.INonExistenceProof|null);

        /** CommitmentProof batch. */
        public batch?: (ics23.IBatchProof|null);

        /** CommitmentProof compressed. */
        public compressed?: (ics23.ICompressedBatchProof|null);

        /** CommitmentProof proof. */
        public proof?: ("exist"|"nonexist"|"batch"|"compressed");

        /**
         * Encodes the specified CommitmentProof message. Does not implicitly {@link ics23.CommitmentProof.verify|verify} messages.
         * @param m CommitmentProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ICommitmentProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitmentProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns CommitmentProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.CommitmentProof;
    }

    /** Properties of a LeafOp. */
    interface ILeafOp {

        /** LeafOp hash */
        hash?: (ics23.HashOp|null);

        /** LeafOp prehash_key */
        prehash_key?: (ics23.HashOp|null);

        /** LeafOp prehash_value */
        prehash_value?: (ics23.HashOp|null);

        /** LeafOp length */
        length?: (ics23.LengthOp|null);

        /** LeafOp prefix */
        prefix?: (Uint8Array|null);
    }

    /**
     * LeafOp represents the raw key-value data we wish to prove, and
     * must be flexible to represent the internal transformation from
     * the original key-value pairs into the basis hash, for many existing
     * merkle trees.
     *
     * key and value are passed in. So that the signature of this operation is:
     * leafOp(key, value) -> output
     *
     * To process this, first prehash the keys and values if needed (ANY means no hash in this case):
     * hkey = prehashKey(key)
     * hvalue = prehashValue(value)
     *
     * Then combine the bytes, and hash it
     * output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
     */
    class LeafOp implements ILeafOp {

        /**
         * Constructs a new LeafOp.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ILeafOp);

        /** LeafOp hash. */
        public hash: ics23.HashOp;

        /** LeafOp prehash_key. */
        public prehash_key: ics23.HashOp;

        /** LeafOp prehash_value. */
        public prehash_value: ics23.HashOp;

        /** LeafOp length. */
        public length: ics23.LengthOp;

        /** LeafOp prefix. */
        public prefix: Uint8Array;

        /**
         * Encodes the specified LeafOp message. Does not implicitly {@link ics23.LeafOp.verify|verify} messages.
         * @param m LeafOp message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ILeafOp, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeafOp message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns LeafOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.LeafOp;
    }

    /** Properties of an InnerOp. */
    interface IInnerOp {

        /** InnerOp hash */
        hash?: (ics23.HashOp|null);

        /** InnerOp prefix */
        prefix?: (Uint8Array|null);

        /** InnerOp suffix */
        suffix?: (Uint8Array|null);
    }

    /**
     * InnerOp represents a merkle-proof step that is not a leaf.
     * It represents concatenating two children and hashing them to provide the next result.
     *
     * The result of the previous step is passed in, so the signature of this op is:
     * innerOp(child) -> output
     *
     * The result of applying InnerOp should be:
     * output = op.hash(op.prefix || child || op.suffix)
     *
     * where the || operator is concatenation of binary data,
     * and child is the result of hashing all the tree below this step.
     *
     * Any special data, like prepending child with the length, or prepending the entire operation with
     * some value to differentiate from leaf nodes, should be included in prefix and suffix.
     * If either of prefix or suffix is empty, we just treat it as an empty string
     */
    class InnerOp implements IInnerOp {

        /**
         * Constructs a new InnerOp.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IInnerOp);

        /** InnerOp hash. */
        public hash: ics23.HashOp;

        /** InnerOp prefix. */
        public prefix: Uint8Array;

        /** InnerOp suffix. */
        public suffix: Uint8Array;

        /**
         * Encodes the specified InnerOp message. Does not implicitly {@link ics23.InnerOp.verify|verify} messages.
         * @param m InnerOp message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IInnerOp, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InnerOp message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns InnerOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.InnerOp;
    }

    /** Properties of a ProofSpec. */
    interface IProofSpec {

        /** ProofSpec leaf_spec */
        leaf_spec?: (ics23.ILeafOp|null);

        /** ProofSpec inner_spec */
        inner_spec?: (ics23.IInnerSpec|null);

        /** ProofSpec max_depth */
        max_depth?: (number|null);

        /** ProofSpec min_depth */
        min_depth?: (number|null);
    }

    /**
     * ProofSpec defines what the expected parameters are for a given proof type.
     * This can be stored in the client and used to validate any incoming proofs.
     *
     * verify(ProofSpec, Proof) -> Proof | Error
     *
     * As demonstrated in tests, if we don't fix the algorithm used to calculate the
     * LeafHash for a given tree, there are many possible key-value pairs that can
     * generate a given hash (by interpretting the preimage differently).
     * We need this for proper security, requires client knows a priori what
     * tree format server uses. But not in code, rather a configuration object.
     */
    class ProofSpec implements IProofSpec {

        /**
         * Constructs a new ProofSpec.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IProofSpec);

        /** ProofSpec leaf_spec. */
        public leaf_spec?: (ics23.ILeafOp|null);

        /** ProofSpec inner_spec. */
        public inner_spec?: (ics23.IInnerSpec|null);

        /** ProofSpec max_depth. */
        public max_depth: number;

        /** ProofSpec min_depth. */
        public min_depth: number;

        /**
         * Encodes the specified ProofSpec message. Does not implicitly {@link ics23.ProofSpec.verify|verify} messages.
         * @param m ProofSpec message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IProofSpec, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProofSpec message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns ProofSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.ProofSpec;
    }

    /** Properties of an InnerSpec. */
    interface IInnerSpec {

        /** InnerSpec child_order */
        child_order?: (number[]|null);

        /** InnerSpec child_size */
        child_size?: (number|null);

        /** InnerSpec min_prefix_length */
        min_prefix_length?: (number|null);

        /** InnerSpec max_prefix_length */
        max_prefix_length?: (number|null);

        /** InnerSpec empty_child */
        empty_child?: (Uint8Array|null);

        /** InnerSpec hash */
        hash?: (ics23.HashOp|null);
    }

    /** Represents an InnerSpec. */
    class InnerSpec implements IInnerSpec {

        /**
         * Constructs a new InnerSpec.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IInnerSpec);

        /** InnerSpec child_order. */
        public child_order: number[];

        /** InnerSpec child_size. */
        public child_size: number;

        /** InnerSpec min_prefix_length. */
        public min_prefix_length: number;

        /** InnerSpec max_prefix_length. */
        public max_prefix_length: number;

        /** InnerSpec empty_child. */
        public empty_child: Uint8Array;

        /** InnerSpec hash. */
        public hash: ics23.HashOp;

        /**
         * Encodes the specified InnerSpec message. Does not implicitly {@link ics23.InnerSpec.verify|verify} messages.
         * @param m InnerSpec message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IInnerSpec, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InnerSpec message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns InnerSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.InnerSpec;
    }

    /** Properties of a BatchProof. */
    interface IBatchProof {

        /** BatchProof entries */
        entries?: (ics23.IBatchEntry[]|null);
    }

    /** Represents a BatchProof. */
    class BatchProof implements IBatchProof {

        /**
         * Constructs a new BatchProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IBatchProof);

        /** BatchProof entries. */
        public entries: ics23.IBatchEntry[];

        /**
         * Encodes the specified BatchProof message. Does not implicitly {@link ics23.BatchProof.verify|verify} messages.
         * @param m BatchProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IBatchProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns BatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.BatchProof;
    }

    /** Properties of a BatchEntry. */
    interface IBatchEntry {

        /** BatchEntry exist */
        exist?: (ics23.IExistenceProof|null);

        /** BatchEntry nonexist */
        nonexist?: (ics23.INonExistenceProof|null);
    }

    /** Represents a BatchEntry. */
    class BatchEntry implements IBatchEntry {

        /**
         * Constructs a new BatchEntry.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.IBatchEntry);

        /** BatchEntry exist. */
        public exist?: (ics23.IExistenceProof|null);

        /** BatchEntry nonexist. */
        public nonexist?: (ics23.INonExistenceProof|null);

        /** BatchEntry proof. */
        public proof?: ("exist"|"nonexist");

        /**
         * Encodes the specified BatchEntry message. Does not implicitly {@link ics23.BatchEntry.verify|verify} messages.
         * @param m BatchEntry message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.IBatchEntry, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchEntry message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns BatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.BatchEntry;
    }

    /** Properties of a CompressedBatchProof. */
    interface ICompressedBatchProof {

        /** CompressedBatchProof entries */
        entries?: (ics23.ICompressedBatchEntry[]|null);

        /** CompressedBatchProof lookup_inners */
        lookup_inners?: (ics23.IInnerOp[]|null);
    }

    /** Represents a CompressedBatchProof. */
    class CompressedBatchProof implements ICompressedBatchProof {

        /**
         * Constructs a new CompressedBatchProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ICompressedBatchProof);

        /** CompressedBatchProof entries. */
        public entries: ics23.ICompressedBatchEntry[];

        /** CompressedBatchProof lookup_inners. */
        public lookup_inners: ics23.IInnerOp[];

        /**
         * Encodes the specified CompressedBatchProof message. Does not implicitly {@link ics23.CompressedBatchProof.verify|verify} messages.
         * @param m CompressedBatchProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ICompressedBatchProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedBatchProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns CompressedBatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.CompressedBatchProof;
    }

    /** Properties of a CompressedBatchEntry. */
    interface ICompressedBatchEntry {

        /** CompressedBatchEntry exist */
        exist?: (ics23.ICompressedExistenceProof|null);

        /** CompressedBatchEntry nonexist */
        nonexist?: (ics23.ICompressedNonExistenceProof|null);
    }

    /** Represents a CompressedBatchEntry. */
    class CompressedBatchEntry implements ICompressedBatchEntry {

        /**
         * Constructs a new CompressedBatchEntry.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ICompressedBatchEntry);

        /** CompressedBatchEntry exist. */
        public exist?: (ics23.ICompressedExistenceProof|null);

        /** CompressedBatchEntry nonexist. */
        public nonexist?: (ics23.ICompressedNonExistenceProof|null);

        /** CompressedBatchEntry proof. */
        public proof?: ("exist"|"nonexist");

        /**
         * Encodes the specified CompressedBatchEntry message. Does not implicitly {@link ics23.CompressedBatchEntry.verify|verify} messages.
         * @param m CompressedBatchEntry message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ICompressedBatchEntry, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedBatchEntry message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns CompressedBatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.CompressedBatchEntry;
    }

    /** Properties of a CompressedExistenceProof. */
    interface ICompressedExistenceProof {

        /** CompressedExistenceProof key */
        key?: (Uint8Array|null);

        /** CompressedExistenceProof value */
        value?: (Uint8Array|null);

        /** CompressedExistenceProof leaf */
        leaf?: (ics23.ILeafOp|null);

        /** CompressedExistenceProof path */
        path?: (number[]|null);
    }

    /** Represents a CompressedExistenceProof. */
    class CompressedExistenceProof implements ICompressedExistenceProof {

        /**
         * Constructs a new CompressedExistenceProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ICompressedExistenceProof);

        /** CompressedExistenceProof key. */
        public key: Uint8Array;

        /** CompressedExistenceProof value. */
        public value: Uint8Array;

        /** CompressedExistenceProof leaf. */
        public leaf?: (ics23.ILeafOp|null);

        /** CompressedExistenceProof path. */
        public path: number[];

        /**
         * Encodes the specified CompressedExistenceProof message. Does not implicitly {@link ics23.CompressedExistenceProof.verify|verify} messages.
         * @param m CompressedExistenceProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ICompressedExistenceProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedExistenceProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns CompressedExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.CompressedExistenceProof;
    }

    /** Properties of a CompressedNonExistenceProof. */
    interface ICompressedNonExistenceProof {

        /** CompressedNonExistenceProof key */
        key?: (Uint8Array|null);

        /** CompressedNonExistenceProof left */
        left?: (ics23.ICompressedExistenceProof|null);

        /** CompressedNonExistenceProof right */
        right?: (ics23.ICompressedExistenceProof|null);
    }

    /** Represents a CompressedNonExistenceProof. */
    class CompressedNonExistenceProof implements ICompressedNonExistenceProof {

        /**
         * Constructs a new CompressedNonExistenceProof.
         * @param [p] Properties to set
         */
        constructor(p?: ics23.ICompressedNonExistenceProof);

        /** CompressedNonExistenceProof key. */
        public key: Uint8Array;

        /** CompressedNonExistenceProof left. */
        public left?: (ics23.ICompressedExistenceProof|null);

        /** CompressedNonExistenceProof right. */
        public right?: (ics23.ICompressedExistenceProof|null);

        /**
         * Encodes the specified CompressedNonExistenceProof message. Does not implicitly {@link ics23.CompressedNonExistenceProof.verify|verify} messages.
         * @param m CompressedNonExistenceProof message or plain object to encode
         * @param [w] Writer to encode to
         * @returns Writer
         */
        public static encode(m: ics23.ICompressedNonExistenceProof, w?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedNonExistenceProof message from the specified reader or buffer.
         * @param r Reader or buffer to decode from
         * @param [l] Message length if known beforehand
         * @returns CompressedNonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): ics23.CompressedNonExistenceProof;
    }
}

/** Namespace tendermint. */
export namespace tendermint {

    /** Namespace abci. */
    namespace abci {

        /** Properties of a Request. */
        interface IRequest {

            /** Request echo */
            echo?: (tendermint.abci.IRequestEcho|null);

            /** Request flush */
            flush?: (tendermint.abci.IRequestFlush|null);

            /** Request info */
            info?: (tendermint.abci.IRequestInfo|null);

            /** Request set_option */
            set_option?: (tendermint.abci.IRequestSetOption|null);

            /** Request init_chain */
            init_chain?: (tendermint.abci.IRequestInitChain|null);

            /** Request query */
            query?: (tendermint.abci.IRequestQuery|null);

            /** Request begin_block */
            begin_block?: (tendermint.abci.IRequestBeginBlock|null);

            /** Request check_tx */
            check_tx?: (tendermint.abci.IRequestCheckTx|null);

            /** Request deliver_tx */
            deliver_tx?: (tendermint.abci.IRequestDeliverTx|null);

            /** Request end_block */
            end_block?: (tendermint.abci.IRequestEndBlock|null);

            /** Request commit */
            commit?: (tendermint.abci.IRequestCommit|null);

            /** Request list_snapshots */
            list_snapshots?: (tendermint.abci.IRequestListSnapshots|null);

            /** Request offer_snapshot */
            offer_snapshot?: (tendermint.abci.IRequestOfferSnapshot|null);

            /** Request load_snapshot_chunk */
            load_snapshot_chunk?: (tendermint.abci.IRequestLoadSnapshotChunk|null);

            /** Request apply_snapshot_chunk */
            apply_snapshot_chunk?: (tendermint.abci.IRequestApplySnapshotChunk|null);
        }

        /** Represents a Request. */
        class Request implements IRequest {

            /**
             * Constructs a new Request.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequest);

            /** Request echo. */
            public echo?: (tendermint.abci.IRequestEcho|null);

            /** Request flush. */
            public flush?: (tendermint.abci.IRequestFlush|null);

            /** Request info. */
            public info?: (tendermint.abci.IRequestInfo|null);

            /** Request set_option. */
            public set_option?: (tendermint.abci.IRequestSetOption|null);

            /** Request init_chain. */
            public init_chain?: (tendermint.abci.IRequestInitChain|null);

            /** Request query. */
            public query?: (tendermint.abci.IRequestQuery|null);

            /** Request begin_block. */
            public begin_block?: (tendermint.abci.IRequestBeginBlock|null);

            /** Request check_tx. */
            public check_tx?: (tendermint.abci.IRequestCheckTx|null);

            /** Request deliver_tx. */
            public deliver_tx?: (tendermint.abci.IRequestDeliverTx|null);

            /** Request end_block. */
            public end_block?: (tendermint.abci.IRequestEndBlock|null);

            /** Request commit. */
            public commit?: (tendermint.abci.IRequestCommit|null);

            /** Request list_snapshots. */
            public list_snapshots?: (tendermint.abci.IRequestListSnapshots|null);

            /** Request offer_snapshot. */
            public offer_snapshot?: (tendermint.abci.IRequestOfferSnapshot|null);

            /** Request load_snapshot_chunk. */
            public load_snapshot_chunk?: (tendermint.abci.IRequestLoadSnapshotChunk|null);

            /** Request apply_snapshot_chunk. */
            public apply_snapshot_chunk?: (tendermint.abci.IRequestApplySnapshotChunk|null);

            /** Request value. */
            public value?: ("echo"|"flush"|"info"|"set_option"|"init_chain"|"query"|"begin_block"|"check_tx"|"deliver_tx"|"end_block"|"commit"|"list_snapshots"|"offer_snapshot"|"load_snapshot_chunk"|"apply_snapshot_chunk");

            /**
             * Encodes the specified Request message. Does not implicitly {@link tendermint.abci.Request.verify|verify} messages.
             * @param m Request message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequest, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Request message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Request
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Request;
        }

        /** Properties of a RequestEcho. */
        interface IRequestEcho {

            /** RequestEcho message */
            message?: (string|null);
        }

        /** Represents a RequestEcho. */
        class RequestEcho implements IRequestEcho {

            /**
             * Constructs a new RequestEcho.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestEcho);

            /** RequestEcho message. */
            public message: string;

            /**
             * Encodes the specified RequestEcho message. Does not implicitly {@link tendermint.abci.RequestEcho.verify|verify} messages.
             * @param m RequestEcho message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestEcho, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestEcho message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestEcho;
        }

        /** Properties of a RequestFlush. */
        interface IRequestFlush {
        }

        /** Represents a RequestFlush. */
        class RequestFlush implements IRequestFlush {

            /**
             * Constructs a new RequestFlush.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestFlush);

            /**
             * Encodes the specified RequestFlush message. Does not implicitly {@link tendermint.abci.RequestFlush.verify|verify} messages.
             * @param m RequestFlush message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestFlush, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestFlush message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestFlush;
        }

        /** Properties of a RequestInfo. */
        interface IRequestInfo {

            /** RequestInfo version */
            version?: (string|null);

            /** RequestInfo block_version */
            block_version?: (Long|null);

            /** RequestInfo p2p_version */
            p2p_version?: (Long|null);
        }

        /** Represents a RequestInfo. */
        class RequestInfo implements IRequestInfo {

            /**
             * Constructs a new RequestInfo.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestInfo);

            /** RequestInfo version. */
            public version: string;

            /** RequestInfo block_version. */
            public block_version: Long;

            /** RequestInfo p2p_version. */
            public p2p_version: Long;

            /**
             * Encodes the specified RequestInfo message. Does not implicitly {@link tendermint.abci.RequestInfo.verify|verify} messages.
             * @param m RequestInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestInfo;
        }

        /** Properties of a RequestSetOption. */
        interface IRequestSetOption {

            /** RequestSetOption key */
            key?: (string|null);

            /** RequestSetOption value */
            value?: (string|null);
        }

        /** Represents a RequestSetOption. */
        class RequestSetOption implements IRequestSetOption {

            /**
             * Constructs a new RequestSetOption.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestSetOption);

            /** RequestSetOption key. */
            public key: string;

            /** RequestSetOption value. */
            public value: string;

            /**
             * Encodes the specified RequestSetOption message. Does not implicitly {@link tendermint.abci.RequestSetOption.verify|verify} messages.
             * @param m RequestSetOption message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestSetOption, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestSetOption message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestSetOption;
        }

        /** Properties of a RequestInitChain. */
        interface IRequestInitChain {

            /** RequestInitChain time */
            time?: (google.protobuf.ITimestamp|null);

            /** RequestInitChain chain_id */
            chain_id?: (string|null);

            /** RequestInitChain consensus_params */
            consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** RequestInitChain validators */
            validators?: (tendermint.abci.IValidatorUpdate[]|null);

            /** RequestInitChain app_state_bytes */
            app_state_bytes?: (Uint8Array|null);

            /** RequestInitChain initial_height */
            initial_height?: (Long|null);
        }

        /** Represents a RequestInitChain. */
        class RequestInitChain implements IRequestInitChain {

            /**
             * Constructs a new RequestInitChain.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestInitChain);

            /** RequestInitChain time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** RequestInitChain chain_id. */
            public chain_id: string;

            /** RequestInitChain consensus_params. */
            public consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** RequestInitChain validators. */
            public validators: tendermint.abci.IValidatorUpdate[];

            /** RequestInitChain app_state_bytes. */
            public app_state_bytes: Uint8Array;

            /** RequestInitChain initial_height. */
            public initial_height: Long;

            /**
             * Encodes the specified RequestInitChain message. Does not implicitly {@link tendermint.abci.RequestInitChain.verify|verify} messages.
             * @param m RequestInitChain message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestInitChain, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestInitChain message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestInitChain;
        }

        /** Properties of a RequestQuery. */
        interface IRequestQuery {

            /** RequestQuery data */
            data?: (Uint8Array|null);

            /** RequestQuery path */
            path?: (string|null);

            /** RequestQuery height */
            height?: (Long|null);

            /** RequestQuery prove */
            prove?: (boolean|null);
        }

        /** Represents a RequestQuery. */
        class RequestQuery implements IRequestQuery {

            /**
             * Constructs a new RequestQuery.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestQuery);

            /** RequestQuery data. */
            public data: Uint8Array;

            /** RequestQuery path. */
            public path: string;

            /** RequestQuery height. */
            public height: Long;

            /** RequestQuery prove. */
            public prove: boolean;

            /**
             * Encodes the specified RequestQuery message. Does not implicitly {@link tendermint.abci.RequestQuery.verify|verify} messages.
             * @param m RequestQuery message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestQuery, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestQuery message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestQuery;
        }

        /** Properties of a RequestBeginBlock. */
        interface IRequestBeginBlock {

            /** RequestBeginBlock hash */
            hash?: (Uint8Array|null);

            /** RequestBeginBlock header */
            header?: (tendermint.types.IHeader|null);

            /** RequestBeginBlock last_commit_info */
            last_commit_info?: (tendermint.abci.ILastCommitInfo|null);

            /** RequestBeginBlock byzantine_validators */
            byzantine_validators?: (tendermint.abci.IEvidence[]|null);
        }

        /** Represents a RequestBeginBlock. */
        class RequestBeginBlock implements IRequestBeginBlock {

            /**
             * Constructs a new RequestBeginBlock.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestBeginBlock);

            /** RequestBeginBlock hash. */
            public hash: Uint8Array;

            /** RequestBeginBlock header. */
            public header?: (tendermint.types.IHeader|null);

            /** RequestBeginBlock last_commit_info. */
            public last_commit_info?: (tendermint.abci.ILastCommitInfo|null);

            /** RequestBeginBlock byzantine_validators. */
            public byzantine_validators: tendermint.abci.IEvidence[];

            /**
             * Encodes the specified RequestBeginBlock message. Does not implicitly {@link tendermint.abci.RequestBeginBlock.verify|verify} messages.
             * @param m RequestBeginBlock message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestBeginBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestBeginBlock message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestBeginBlock;
        }

        /** CheckTxType enum. */
        enum CheckTxType {
            NEW = 0,
            RECHECK = 1
        }

        /** Properties of a RequestCheckTx. */
        interface IRequestCheckTx {

            /** RequestCheckTx tx */
            tx?: (Uint8Array|null);

            /** RequestCheckTx type */
            type?: (tendermint.abci.CheckTxType|null);
        }

        /** Represents a RequestCheckTx. */
        class RequestCheckTx implements IRequestCheckTx {

            /**
             * Constructs a new RequestCheckTx.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestCheckTx);

            /** RequestCheckTx tx. */
            public tx: Uint8Array;

            /** RequestCheckTx type. */
            public type: tendermint.abci.CheckTxType;

            /**
             * Encodes the specified RequestCheckTx message. Does not implicitly {@link tendermint.abci.RequestCheckTx.verify|verify} messages.
             * @param m RequestCheckTx message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestCheckTx, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestCheckTx message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestCheckTx;
        }

        /** Properties of a RequestDeliverTx. */
        interface IRequestDeliverTx {

            /** RequestDeliverTx tx */
            tx?: (Uint8Array|null);
        }

        /** Represents a RequestDeliverTx. */
        class RequestDeliverTx implements IRequestDeliverTx {

            /**
             * Constructs a new RequestDeliverTx.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestDeliverTx);

            /** RequestDeliverTx tx. */
            public tx: Uint8Array;

            /**
             * Encodes the specified RequestDeliverTx message. Does not implicitly {@link tendermint.abci.RequestDeliverTx.verify|verify} messages.
             * @param m RequestDeliverTx message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestDeliverTx, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestDeliverTx message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestDeliverTx;
        }

        /** Properties of a RequestEndBlock. */
        interface IRequestEndBlock {

            /** RequestEndBlock height */
            height?: (Long|null);
        }

        /** Represents a RequestEndBlock. */
        class RequestEndBlock implements IRequestEndBlock {

            /**
             * Constructs a new RequestEndBlock.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestEndBlock);

            /** RequestEndBlock height. */
            public height: Long;

            /**
             * Encodes the specified RequestEndBlock message. Does not implicitly {@link tendermint.abci.RequestEndBlock.verify|verify} messages.
             * @param m RequestEndBlock message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestEndBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestEndBlock message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestEndBlock;
        }

        /** Properties of a RequestCommit. */
        interface IRequestCommit {
        }

        /** Represents a RequestCommit. */
        class RequestCommit implements IRequestCommit {

            /**
             * Constructs a new RequestCommit.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestCommit);

            /**
             * Encodes the specified RequestCommit message. Does not implicitly {@link tendermint.abci.RequestCommit.verify|verify} messages.
             * @param m RequestCommit message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestCommit, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestCommit message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestCommit;
        }

        /** Properties of a RequestListSnapshots. */
        interface IRequestListSnapshots {
        }

        /** Represents a RequestListSnapshots. */
        class RequestListSnapshots implements IRequestListSnapshots {

            /**
             * Constructs a new RequestListSnapshots.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestListSnapshots);

            /**
             * Encodes the specified RequestListSnapshots message. Does not implicitly {@link tendermint.abci.RequestListSnapshots.verify|verify} messages.
             * @param m RequestListSnapshots message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestListSnapshots, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestListSnapshots message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestListSnapshots;
        }

        /** Properties of a RequestOfferSnapshot. */
        interface IRequestOfferSnapshot {

            /** RequestOfferSnapshot snapshot */
            snapshot?: (tendermint.abci.ISnapshot|null);

            /** RequestOfferSnapshot app_hash */
            app_hash?: (Uint8Array|null);
        }

        /** Represents a RequestOfferSnapshot. */
        class RequestOfferSnapshot implements IRequestOfferSnapshot {

            /**
             * Constructs a new RequestOfferSnapshot.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestOfferSnapshot);

            /** RequestOfferSnapshot snapshot. */
            public snapshot?: (tendermint.abci.ISnapshot|null);

            /** RequestOfferSnapshot app_hash. */
            public app_hash: Uint8Array;

            /**
             * Encodes the specified RequestOfferSnapshot message. Does not implicitly {@link tendermint.abci.RequestOfferSnapshot.verify|verify} messages.
             * @param m RequestOfferSnapshot message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestOfferSnapshot, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestOfferSnapshot message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestOfferSnapshot;
        }

        /** Properties of a RequestLoadSnapshotChunk. */
        interface IRequestLoadSnapshotChunk {

            /** RequestLoadSnapshotChunk height */
            height?: (Long|null);

            /** RequestLoadSnapshotChunk format */
            format?: (number|null);

            /** RequestLoadSnapshotChunk chunk */
            chunk?: (number|null);
        }

        /** Represents a RequestLoadSnapshotChunk. */
        class RequestLoadSnapshotChunk implements IRequestLoadSnapshotChunk {

            /**
             * Constructs a new RequestLoadSnapshotChunk.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestLoadSnapshotChunk);

            /** RequestLoadSnapshotChunk height. */
            public height: Long;

            /** RequestLoadSnapshotChunk format. */
            public format: number;

            /** RequestLoadSnapshotChunk chunk. */
            public chunk: number;

            /**
             * Encodes the specified RequestLoadSnapshotChunk message. Does not implicitly {@link tendermint.abci.RequestLoadSnapshotChunk.verify|verify} messages.
             * @param m RequestLoadSnapshotChunk message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestLoadSnapshotChunk, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestLoadSnapshotChunk message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestLoadSnapshotChunk;
        }

        /** Properties of a RequestApplySnapshotChunk. */
        interface IRequestApplySnapshotChunk {

            /** RequestApplySnapshotChunk index */
            index?: (number|null);

            /** RequestApplySnapshotChunk chunk */
            chunk?: (Uint8Array|null);

            /** RequestApplySnapshotChunk sender */
            sender?: (string|null);
        }

        /** Represents a RequestApplySnapshotChunk. */
        class RequestApplySnapshotChunk implements IRequestApplySnapshotChunk {

            /**
             * Constructs a new RequestApplySnapshotChunk.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IRequestApplySnapshotChunk);

            /** RequestApplySnapshotChunk index. */
            public index: number;

            /** RequestApplySnapshotChunk chunk. */
            public chunk: Uint8Array;

            /** RequestApplySnapshotChunk sender. */
            public sender: string;

            /**
             * Encodes the specified RequestApplySnapshotChunk message. Does not implicitly {@link tendermint.abci.RequestApplySnapshotChunk.verify|verify} messages.
             * @param m RequestApplySnapshotChunk message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IRequestApplySnapshotChunk, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestApplySnapshotChunk message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns RequestApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.RequestApplySnapshotChunk;
        }

        /** Properties of a Response. */
        interface IResponse {

            /** Response exception */
            exception?: (tendermint.abci.IResponseException|null);

            /** Response echo */
            echo?: (tendermint.abci.IResponseEcho|null);

            /** Response flush */
            flush?: (tendermint.abci.IResponseFlush|null);

            /** Response info */
            info?: (tendermint.abci.IResponseInfo|null);

            /** Response set_option */
            set_option?: (tendermint.abci.IResponseSetOption|null);

            /** Response init_chain */
            init_chain?: (tendermint.abci.IResponseInitChain|null);

            /** Response query */
            query?: (tendermint.abci.IResponseQuery|null);

            /** Response begin_block */
            begin_block?: (tendermint.abci.IResponseBeginBlock|null);

            /** Response check_tx */
            check_tx?: (tendermint.abci.IResponseCheckTx|null);

            /** Response deliver_tx */
            deliver_tx?: (tendermint.abci.IResponseDeliverTx|null);

            /** Response end_block */
            end_block?: (tendermint.abci.IResponseEndBlock|null);

            /** Response commit */
            commit?: (tendermint.abci.IResponseCommit|null);

            /** Response list_snapshots */
            list_snapshots?: (tendermint.abci.IResponseListSnapshots|null);

            /** Response offer_snapshot */
            offer_snapshot?: (tendermint.abci.IResponseOfferSnapshot|null);

            /** Response load_snapshot_chunk */
            load_snapshot_chunk?: (tendermint.abci.IResponseLoadSnapshotChunk|null);

            /** Response apply_snapshot_chunk */
            apply_snapshot_chunk?: (tendermint.abci.IResponseApplySnapshotChunk|null);
        }

        /** Represents a Response. */
        class Response implements IResponse {

            /**
             * Constructs a new Response.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponse);

            /** Response exception. */
            public exception?: (tendermint.abci.IResponseException|null);

            /** Response echo. */
            public echo?: (tendermint.abci.IResponseEcho|null);

            /** Response flush. */
            public flush?: (tendermint.abci.IResponseFlush|null);

            /** Response info. */
            public info?: (tendermint.abci.IResponseInfo|null);

            /** Response set_option. */
            public set_option?: (tendermint.abci.IResponseSetOption|null);

            /** Response init_chain. */
            public init_chain?: (tendermint.abci.IResponseInitChain|null);

            /** Response query. */
            public query?: (tendermint.abci.IResponseQuery|null);

            /** Response begin_block. */
            public begin_block?: (tendermint.abci.IResponseBeginBlock|null);

            /** Response check_tx. */
            public check_tx?: (tendermint.abci.IResponseCheckTx|null);

            /** Response deliver_tx. */
            public deliver_tx?: (tendermint.abci.IResponseDeliverTx|null);

            /** Response end_block. */
            public end_block?: (tendermint.abci.IResponseEndBlock|null);

            /** Response commit. */
            public commit?: (tendermint.abci.IResponseCommit|null);

            /** Response list_snapshots. */
            public list_snapshots?: (tendermint.abci.IResponseListSnapshots|null);

            /** Response offer_snapshot. */
            public offer_snapshot?: (tendermint.abci.IResponseOfferSnapshot|null);

            /** Response load_snapshot_chunk. */
            public load_snapshot_chunk?: (tendermint.abci.IResponseLoadSnapshotChunk|null);

            /** Response apply_snapshot_chunk. */
            public apply_snapshot_chunk?: (tendermint.abci.IResponseApplySnapshotChunk|null);

            /** Response value. */
            public value?: ("exception"|"echo"|"flush"|"info"|"set_option"|"init_chain"|"query"|"begin_block"|"check_tx"|"deliver_tx"|"end_block"|"commit"|"list_snapshots"|"offer_snapshot"|"load_snapshot_chunk"|"apply_snapshot_chunk");

            /**
             * Encodes the specified Response message. Does not implicitly {@link tendermint.abci.Response.verify|verify} messages.
             * @param m Response message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponse, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Response message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Response
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Response;
        }

        /** Properties of a ResponseException. */
        interface IResponseException {

            /** ResponseException error */
            error?: (string|null);
        }

        /** Represents a ResponseException. */
        class ResponseException implements IResponseException {

            /**
             * Constructs a new ResponseException.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseException);

            /** ResponseException error. */
            public error: string;

            /**
             * Encodes the specified ResponseException message. Does not implicitly {@link tendermint.abci.ResponseException.verify|verify} messages.
             * @param m ResponseException message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseException, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseException message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseException
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseException;
        }

        /** Properties of a ResponseEcho. */
        interface IResponseEcho {

            /** ResponseEcho message */
            message?: (string|null);
        }

        /** Represents a ResponseEcho. */
        class ResponseEcho implements IResponseEcho {

            /**
             * Constructs a new ResponseEcho.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseEcho);

            /** ResponseEcho message. */
            public message: string;

            /**
             * Encodes the specified ResponseEcho message. Does not implicitly {@link tendermint.abci.ResponseEcho.verify|verify} messages.
             * @param m ResponseEcho message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseEcho, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseEcho message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseEcho;
        }

        /** Properties of a ResponseFlush. */
        interface IResponseFlush {
        }

        /** Represents a ResponseFlush. */
        class ResponseFlush implements IResponseFlush {

            /**
             * Constructs a new ResponseFlush.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseFlush);

            /**
             * Encodes the specified ResponseFlush message. Does not implicitly {@link tendermint.abci.ResponseFlush.verify|verify} messages.
             * @param m ResponseFlush message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseFlush, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseFlush message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseFlush;
        }

        /** Properties of a ResponseInfo. */
        interface IResponseInfo {

            /** ResponseInfo data */
            data?: (string|null);

            /** ResponseInfo version */
            version?: (string|null);

            /** ResponseInfo app_version */
            app_version?: (Long|null);

            /** ResponseInfo last_block_height */
            last_block_height?: (Long|null);

            /** ResponseInfo last_block_app_hash */
            last_block_app_hash?: (Uint8Array|null);
        }

        /** Represents a ResponseInfo. */
        class ResponseInfo implements IResponseInfo {

            /**
             * Constructs a new ResponseInfo.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseInfo);

            /** ResponseInfo data. */
            public data: string;

            /** ResponseInfo version. */
            public version: string;

            /** ResponseInfo app_version. */
            public app_version: Long;

            /** ResponseInfo last_block_height. */
            public last_block_height: Long;

            /** ResponseInfo last_block_app_hash. */
            public last_block_app_hash: Uint8Array;

            /**
             * Encodes the specified ResponseInfo message. Does not implicitly {@link tendermint.abci.ResponseInfo.verify|verify} messages.
             * @param m ResponseInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseInfo;
        }

        /** Properties of a ResponseSetOption. */
        interface IResponseSetOption {

            /** ResponseSetOption code */
            code?: (number|null);

            /** ResponseSetOption log */
            log?: (string|null);

            /** ResponseSetOption info */
            info?: (string|null);
        }

        /** Represents a ResponseSetOption. */
        class ResponseSetOption implements IResponseSetOption {

            /**
             * Constructs a new ResponseSetOption.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseSetOption);

            /** ResponseSetOption code. */
            public code: number;

            /** ResponseSetOption log. */
            public log: string;

            /** ResponseSetOption info. */
            public info: string;

            /**
             * Encodes the specified ResponseSetOption message. Does not implicitly {@link tendermint.abci.ResponseSetOption.verify|verify} messages.
             * @param m ResponseSetOption message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseSetOption, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseSetOption message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseSetOption;
        }

        /** Properties of a ResponseInitChain. */
        interface IResponseInitChain {

            /** ResponseInitChain consensus_params */
            consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** ResponseInitChain validators */
            validators?: (tendermint.abci.IValidatorUpdate[]|null);

            /** ResponseInitChain app_hash */
            app_hash?: (Uint8Array|null);
        }

        /** Represents a ResponseInitChain. */
        class ResponseInitChain implements IResponseInitChain {

            /**
             * Constructs a new ResponseInitChain.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseInitChain);

            /** ResponseInitChain consensus_params. */
            public consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** ResponseInitChain validators. */
            public validators: tendermint.abci.IValidatorUpdate[];

            /** ResponseInitChain app_hash. */
            public app_hash: Uint8Array;

            /**
             * Encodes the specified ResponseInitChain message. Does not implicitly {@link tendermint.abci.ResponseInitChain.verify|verify} messages.
             * @param m ResponseInitChain message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseInitChain, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseInitChain message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseInitChain;
        }

        /** Properties of a ResponseQuery. */
        interface IResponseQuery {

            /** ResponseQuery code */
            code?: (number|null);

            /** ResponseQuery log */
            log?: (string|null);

            /** ResponseQuery info */
            info?: (string|null);

            /** ResponseQuery index */
            index?: (Long|null);

            /** ResponseQuery key */
            key?: (Uint8Array|null);

            /** ResponseQuery value */
            value?: (Uint8Array|null);

            /** ResponseQuery proof_ops */
            proof_ops?: (tendermint.crypto.IProofOps|null);

            /** ResponseQuery height */
            height?: (Long|null);

            /** ResponseQuery codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseQuery. */
        class ResponseQuery implements IResponseQuery {

            /**
             * Constructs a new ResponseQuery.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseQuery);

            /** ResponseQuery code. */
            public code: number;

            /** ResponseQuery log. */
            public log: string;

            /** ResponseQuery info. */
            public info: string;

            /** ResponseQuery index. */
            public index: Long;

            /** ResponseQuery key. */
            public key: Uint8Array;

            /** ResponseQuery value. */
            public value: Uint8Array;

            /** ResponseQuery proof_ops. */
            public proof_ops?: (tendermint.crypto.IProofOps|null);

            /** ResponseQuery height. */
            public height: Long;

            /** ResponseQuery codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseQuery message. Does not implicitly {@link tendermint.abci.ResponseQuery.verify|verify} messages.
             * @param m ResponseQuery message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseQuery, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseQuery message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseQuery;
        }

        /** Properties of a ResponseBeginBlock. */
        interface IResponseBeginBlock {

            /** ResponseBeginBlock events */
            events?: (tendermint.abci.IEvent[]|null);
        }

        /** Represents a ResponseBeginBlock. */
        class ResponseBeginBlock implements IResponseBeginBlock {

            /**
             * Constructs a new ResponseBeginBlock.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseBeginBlock);

            /** ResponseBeginBlock events. */
            public events: tendermint.abci.IEvent[];

            /**
             * Encodes the specified ResponseBeginBlock message. Does not implicitly {@link tendermint.abci.ResponseBeginBlock.verify|verify} messages.
             * @param m ResponseBeginBlock message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseBeginBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseBeginBlock message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseBeginBlock;
        }

        /** Properties of a ResponseCheckTx. */
        interface IResponseCheckTx {

            /** ResponseCheckTx code */
            code?: (number|null);

            /** ResponseCheckTx data */
            data?: (Uint8Array|null);

            /** ResponseCheckTx log */
            log?: (string|null);

            /** ResponseCheckTx info */
            info?: (string|null);

            /** ResponseCheckTx gas_wanted */
            gas_wanted?: (Long|null);

            /** ResponseCheckTx gas_used */
            gas_used?: (Long|null);

            /** ResponseCheckTx events */
            events?: (tendermint.abci.IEvent[]|null);

            /** ResponseCheckTx codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseCheckTx. */
        class ResponseCheckTx implements IResponseCheckTx {

            /**
             * Constructs a new ResponseCheckTx.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseCheckTx);

            /** ResponseCheckTx code. */
            public code: number;

            /** ResponseCheckTx data. */
            public data: Uint8Array;

            /** ResponseCheckTx log. */
            public log: string;

            /** ResponseCheckTx info. */
            public info: string;

            /** ResponseCheckTx gas_wanted. */
            public gas_wanted: Long;

            /** ResponseCheckTx gas_used. */
            public gas_used: Long;

            /** ResponseCheckTx events. */
            public events: tendermint.abci.IEvent[];

            /** ResponseCheckTx codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseCheckTx message. Does not implicitly {@link tendermint.abci.ResponseCheckTx.verify|verify} messages.
             * @param m ResponseCheckTx message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseCheckTx, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseCheckTx message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseCheckTx;
        }

        /** Properties of a ResponseDeliverTx. */
        interface IResponseDeliverTx {

            /** ResponseDeliverTx code */
            code?: (number|null);

            /** ResponseDeliverTx data */
            data?: (Uint8Array|null);

            /** ResponseDeliverTx log */
            log?: (string|null);

            /** ResponseDeliverTx info */
            info?: (string|null);

            /** ResponseDeliverTx gas_wanted */
            gas_wanted?: (Long|null);

            /** ResponseDeliverTx gas_used */
            gas_used?: (Long|null);

            /** ResponseDeliverTx events */
            events?: (tendermint.abci.IEvent[]|null);

            /** ResponseDeliverTx codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseDeliverTx. */
        class ResponseDeliverTx implements IResponseDeliverTx {

            /**
             * Constructs a new ResponseDeliverTx.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseDeliverTx);

            /** ResponseDeliverTx code. */
            public code: number;

            /** ResponseDeliverTx data. */
            public data: Uint8Array;

            /** ResponseDeliverTx log. */
            public log: string;

            /** ResponseDeliverTx info. */
            public info: string;

            /** ResponseDeliverTx gas_wanted. */
            public gas_wanted: Long;

            /** ResponseDeliverTx gas_used. */
            public gas_used: Long;

            /** ResponseDeliverTx events. */
            public events: tendermint.abci.IEvent[];

            /** ResponseDeliverTx codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseDeliverTx message. Does not implicitly {@link tendermint.abci.ResponseDeliverTx.verify|verify} messages.
             * @param m ResponseDeliverTx message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseDeliverTx, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseDeliverTx message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseDeliverTx;
        }

        /** Properties of a ResponseEndBlock. */
        interface IResponseEndBlock {

            /** ResponseEndBlock validator_updates */
            validator_updates?: (tendermint.abci.IValidatorUpdate[]|null);

            /** ResponseEndBlock consensus_param_updates */
            consensus_param_updates?: (tendermint.abci.IConsensusParams|null);

            /** ResponseEndBlock events */
            events?: (tendermint.abci.IEvent[]|null);
        }

        /** Represents a ResponseEndBlock. */
        class ResponseEndBlock implements IResponseEndBlock {

            /**
             * Constructs a new ResponseEndBlock.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseEndBlock);

            /** ResponseEndBlock validator_updates. */
            public validator_updates: tendermint.abci.IValidatorUpdate[];

            /** ResponseEndBlock consensus_param_updates. */
            public consensus_param_updates?: (tendermint.abci.IConsensusParams|null);

            /** ResponseEndBlock events. */
            public events: tendermint.abci.IEvent[];

            /**
             * Encodes the specified ResponseEndBlock message. Does not implicitly {@link tendermint.abci.ResponseEndBlock.verify|verify} messages.
             * @param m ResponseEndBlock message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseEndBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseEndBlock message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseEndBlock;
        }

        /** Properties of a ResponseCommit. */
        interface IResponseCommit {

            /** ResponseCommit data */
            data?: (Uint8Array|null);

            /** ResponseCommit retain_height */
            retain_height?: (Long|null);
        }

        /** Represents a ResponseCommit. */
        class ResponseCommit implements IResponseCommit {

            /**
             * Constructs a new ResponseCommit.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseCommit);

            /** ResponseCommit data. */
            public data: Uint8Array;

            /** ResponseCommit retain_height. */
            public retain_height: Long;

            /**
             * Encodes the specified ResponseCommit message. Does not implicitly {@link tendermint.abci.ResponseCommit.verify|verify} messages.
             * @param m ResponseCommit message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseCommit, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseCommit message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseCommit;
        }

        /** Properties of a ResponseListSnapshots. */
        interface IResponseListSnapshots {

            /** ResponseListSnapshots snapshots */
            snapshots?: (tendermint.abci.ISnapshot[]|null);
        }

        /** Represents a ResponseListSnapshots. */
        class ResponseListSnapshots implements IResponseListSnapshots {

            /**
             * Constructs a new ResponseListSnapshots.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseListSnapshots);

            /** ResponseListSnapshots snapshots. */
            public snapshots: tendermint.abci.ISnapshot[];

            /**
             * Encodes the specified ResponseListSnapshots message. Does not implicitly {@link tendermint.abci.ResponseListSnapshots.verify|verify} messages.
             * @param m ResponseListSnapshots message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseListSnapshots, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseListSnapshots message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseListSnapshots;
        }

        /** Properties of a ResponseOfferSnapshot. */
        interface IResponseOfferSnapshot {

            /** ResponseOfferSnapshot result */
            result?: (tendermint.abci.ResponseOfferSnapshot.Result|null);
        }

        /** Represents a ResponseOfferSnapshot. */
        class ResponseOfferSnapshot implements IResponseOfferSnapshot {

            /**
             * Constructs a new ResponseOfferSnapshot.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseOfferSnapshot);

            /** ResponseOfferSnapshot result. */
            public result: tendermint.abci.ResponseOfferSnapshot.Result;

            /**
             * Encodes the specified ResponseOfferSnapshot message. Does not implicitly {@link tendermint.abci.ResponseOfferSnapshot.verify|verify} messages.
             * @param m ResponseOfferSnapshot message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseOfferSnapshot, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseOfferSnapshot message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseOfferSnapshot;
        }

        namespace ResponseOfferSnapshot {

            /** Result enum. */
            enum Result {
                UNKNOWN = 0,
                ACCEPT = 1,
                ABORT = 2,
                REJECT = 3,
                REJECT_FORMAT = 4,
                REJECT_SENDER = 5
            }
        }

        /** Properties of a ResponseLoadSnapshotChunk. */
        interface IResponseLoadSnapshotChunk {

            /** ResponseLoadSnapshotChunk chunk */
            chunk?: (Uint8Array|null);
        }

        /** Represents a ResponseLoadSnapshotChunk. */
        class ResponseLoadSnapshotChunk implements IResponseLoadSnapshotChunk {

            /**
             * Constructs a new ResponseLoadSnapshotChunk.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseLoadSnapshotChunk);

            /** ResponseLoadSnapshotChunk chunk. */
            public chunk: Uint8Array;

            /**
             * Encodes the specified ResponseLoadSnapshotChunk message. Does not implicitly {@link tendermint.abci.ResponseLoadSnapshotChunk.verify|verify} messages.
             * @param m ResponseLoadSnapshotChunk message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseLoadSnapshotChunk, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseLoadSnapshotChunk message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseLoadSnapshotChunk;
        }

        /** Properties of a ResponseApplySnapshotChunk. */
        interface IResponseApplySnapshotChunk {

            /** ResponseApplySnapshotChunk result */
            result?: (tendermint.abci.ResponseApplySnapshotChunk.Result|null);

            /** ResponseApplySnapshotChunk refetch_chunks */
            refetch_chunks?: (number[]|null);

            /** ResponseApplySnapshotChunk reject_senders */
            reject_senders?: (string[]|null);
        }

        /** Represents a ResponseApplySnapshotChunk. */
        class ResponseApplySnapshotChunk implements IResponseApplySnapshotChunk {

            /**
             * Constructs a new ResponseApplySnapshotChunk.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IResponseApplySnapshotChunk);

            /** ResponseApplySnapshotChunk result. */
            public result: tendermint.abci.ResponseApplySnapshotChunk.Result;

            /** ResponseApplySnapshotChunk refetch_chunks. */
            public refetch_chunks: number[];

            /** ResponseApplySnapshotChunk reject_senders. */
            public reject_senders: string[];

            /**
             * Encodes the specified ResponseApplySnapshotChunk message. Does not implicitly {@link tendermint.abci.ResponseApplySnapshotChunk.verify|verify} messages.
             * @param m ResponseApplySnapshotChunk message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IResponseApplySnapshotChunk, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseApplySnapshotChunk message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ResponseApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ResponseApplySnapshotChunk;
        }

        namespace ResponseApplySnapshotChunk {

            /** Result enum. */
            enum Result {
                UNKNOWN = 0,
                ACCEPT = 1,
                ABORT = 2,
                RETRY = 3,
                RETRY_SNAPSHOT = 4,
                REJECT_SNAPSHOT = 5
            }
        }

        /** Properties of a ConsensusParams. */
        interface IConsensusParams {

            /** ConsensusParams block */
            block?: (tendermint.abci.IBlockParams|null);

            /** ConsensusParams evidence */
            evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator */
            validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version */
            version?: (tendermint.types.IVersionParams|null);
        }

        /** Represents a ConsensusParams. */
        class ConsensusParams implements IConsensusParams {

            /**
             * Constructs a new ConsensusParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IConsensusParams);

            /** ConsensusParams block. */
            public block?: (tendermint.abci.IBlockParams|null);

            /** ConsensusParams evidence. */
            public evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator. */
            public validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version. */
            public version?: (tendermint.types.IVersionParams|null);

            /**
             * Encodes the specified ConsensusParams message. Does not implicitly {@link tendermint.abci.ConsensusParams.verify|verify} messages.
             * @param m ConsensusParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IConsensusParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ConsensusParams;
        }

        /** Properties of a BlockParams. */
        interface IBlockParams {

            /** BlockParams max_bytes */
            max_bytes?: (Long|null);

            /** BlockParams max_gas */
            max_gas?: (Long|null);
        }

        /** Represents a BlockParams. */
        class BlockParams implements IBlockParams {

            /**
             * Constructs a new BlockParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IBlockParams);

            /** BlockParams max_bytes. */
            public max_bytes: Long;

            /** BlockParams max_gas. */
            public max_gas: Long;

            /**
             * Encodes the specified BlockParams message. Does not implicitly {@link tendermint.abci.BlockParams.verify|verify} messages.
             * @param m BlockParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IBlockParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.BlockParams;
        }

        /** Properties of a LastCommitInfo. */
        interface ILastCommitInfo {

            /** LastCommitInfo round */
            round?: (number|null);

            /** LastCommitInfo votes */
            votes?: (tendermint.abci.IVoteInfo[]|null);
        }

        /** Represents a LastCommitInfo. */
        class LastCommitInfo implements ILastCommitInfo {

            /**
             * Constructs a new LastCommitInfo.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.ILastCommitInfo);

            /** LastCommitInfo round. */
            public round: number;

            /** LastCommitInfo votes. */
            public votes: tendermint.abci.IVoteInfo[];

            /**
             * Encodes the specified LastCommitInfo message. Does not implicitly {@link tendermint.abci.LastCommitInfo.verify|verify} messages.
             * @param m LastCommitInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.ILastCommitInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LastCommitInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns LastCommitInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.LastCommitInfo;
        }

        /** Properties of an Event. */
        interface IEvent {

            /** Event type */
            type?: (string|null);

            /** Event attributes */
            attributes?: (tendermint.abci.IEventAttribute[]|null);
        }

        /** Represents an Event. */
        class Event implements IEvent {

            /**
             * Constructs a new Event.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IEvent);

            /** Event type. */
            public type: string;

            /** Event attributes. */
            public attributes: tendermint.abci.IEventAttribute[];

            /**
             * Encodes the specified Event message. Does not implicitly {@link tendermint.abci.Event.verify|verify} messages.
             * @param m Event message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IEvent, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Event message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Event;
        }

        /** Properties of an EventAttribute. */
        interface IEventAttribute {

            /** EventAttribute key */
            key?: (Uint8Array|null);

            /** EventAttribute value */
            value?: (Uint8Array|null);

            /** EventAttribute index */
            index?: (boolean|null);
        }

        /** Represents an EventAttribute. */
        class EventAttribute implements IEventAttribute {

            /**
             * Constructs a new EventAttribute.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IEventAttribute);

            /** EventAttribute key. */
            public key: Uint8Array;

            /** EventAttribute value. */
            public value: Uint8Array;

            /** EventAttribute index. */
            public index: boolean;

            /**
             * Encodes the specified EventAttribute message. Does not implicitly {@link tendermint.abci.EventAttribute.verify|verify} messages.
             * @param m EventAttribute message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IEventAttribute, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventAttribute message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EventAttribute
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.EventAttribute;
        }

        /** Properties of a TxResult. */
        interface ITxResult {

            /** TxResult height */
            height?: (Long|null);

            /** TxResult index */
            index?: (number|null);

            /** TxResult tx */
            tx?: (Uint8Array|null);

            /** TxResult result */
            result?: (tendermint.abci.IResponseDeliverTx|null);
        }

        /** Represents a TxResult. */
        class TxResult implements ITxResult {

            /**
             * Constructs a new TxResult.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.ITxResult);

            /** TxResult height. */
            public height: Long;

            /** TxResult index. */
            public index: number;

            /** TxResult tx. */
            public tx: Uint8Array;

            /** TxResult result. */
            public result?: (tendermint.abci.IResponseDeliverTx|null);

            /**
             * Encodes the specified TxResult message. Does not implicitly {@link tendermint.abci.TxResult.verify|verify} messages.
             * @param m TxResult message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.ITxResult, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxResult message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns TxResult
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.TxResult;
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator power */
            power?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator power. */
            public power: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.abci.Validator.verify|verify} messages.
             * @param m Validator message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IValidator, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Validator;
        }

        /** Properties of a ValidatorUpdate. */
        interface IValidatorUpdate {

            /** ValidatorUpdate pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** ValidatorUpdate power */
            power?: (Long|null);
        }

        /** Represents a ValidatorUpdate. */
        class ValidatorUpdate implements IValidatorUpdate {

            /**
             * Constructs a new ValidatorUpdate.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IValidatorUpdate);

            /** ValidatorUpdate pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** ValidatorUpdate power. */
            public power: Long;

            /**
             * Encodes the specified ValidatorUpdate message. Does not implicitly {@link tendermint.abci.ValidatorUpdate.verify|verify} messages.
             * @param m ValidatorUpdate message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IValidatorUpdate, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorUpdate message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ValidatorUpdate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.ValidatorUpdate;
        }

        /** Properties of a VoteInfo. */
        interface IVoteInfo {

            /** VoteInfo validator */
            validator?: (tendermint.abci.IValidator|null);

            /** VoteInfo signed_last_block */
            signed_last_block?: (boolean|null);
        }

        /** Represents a VoteInfo. */
        class VoteInfo implements IVoteInfo {

            /**
             * Constructs a new VoteInfo.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IVoteInfo);

            /** VoteInfo validator. */
            public validator?: (tendermint.abci.IValidator|null);

            /** VoteInfo signed_last_block. */
            public signed_last_block: boolean;

            /**
             * Encodes the specified VoteInfo message. Does not implicitly {@link tendermint.abci.VoteInfo.verify|verify} messages.
             * @param m VoteInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IVoteInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VoteInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns VoteInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.VoteInfo;
        }

        /** EvidenceType enum. */
        enum EvidenceType {
            UNKNOWN = 0,
            DUPLICATE_VOTE = 1,
            LIGHT_CLIENT_ATTACK = 2
        }

        /** Properties of an Evidence. */
        interface IEvidence {

            /** Evidence type */
            type?: (tendermint.abci.EvidenceType|null);

            /** Evidence validator */
            validator?: (tendermint.abci.IValidator|null);

            /** Evidence height */
            height?: (Long|null);

            /** Evidence time */
            time?: (google.protobuf.ITimestamp|null);

            /** Evidence total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents an Evidence. */
        class Evidence implements IEvidence {

            /**
             * Constructs a new Evidence.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.IEvidence);

            /** Evidence type. */
            public type: tendermint.abci.EvidenceType;

            /** Evidence validator. */
            public validator?: (tendermint.abci.IValidator|null);

            /** Evidence height. */
            public height: Long;

            /** Evidence time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Evidence total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified Evidence message. Does not implicitly {@link tendermint.abci.Evidence.verify|verify} messages.
             * @param m Evidence message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.IEvidence, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Evidence message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Evidence;
        }

        /** Properties of a Snapshot. */
        interface ISnapshot {

            /** Snapshot height */
            height?: (Long|null);

            /** Snapshot format */
            format?: (number|null);

            /** Snapshot chunks */
            chunks?: (number|null);

            /** Snapshot hash */
            hash?: (Uint8Array|null);

            /** Snapshot metadata */
            metadata?: (Uint8Array|null);
        }

        /** Represents a Snapshot. */
        class Snapshot implements ISnapshot {

            /**
             * Constructs a new Snapshot.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.abci.ISnapshot);

            /** Snapshot height. */
            public height: Long;

            /** Snapshot format. */
            public format: number;

            /** Snapshot chunks. */
            public chunks: number;

            /** Snapshot hash. */
            public hash: Uint8Array;

            /** Snapshot metadata. */
            public metadata: Uint8Array;

            /**
             * Encodes the specified Snapshot message. Does not implicitly {@link tendermint.abci.Snapshot.verify|verify} messages.
             * @param m Snapshot message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.abci.ISnapshot, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Snapshot message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Snapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.abci.Snapshot;
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Properties of a PublicKey. */
        interface IPublicKey {

            /** PublicKey ed25519 */
            ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1 */
            secp256k1?: (Uint8Array|null);
        }

        /** Represents a PublicKey. */
        class PublicKey implements IPublicKey {

            /**
             * Constructs a new PublicKey.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IPublicKey);

            /** PublicKey ed25519. */
            public ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1. */
            public secp256k1?: (Uint8Array|null);

            /** PublicKey sum. */
            public sum?: ("ed25519"|"secp256k1");

            /**
             * Encodes the specified PublicKey message. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param m PublicKey message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IPublicKey, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PublicKey message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.PublicKey;
        }

        /** Properties of a Proof. */
        interface IProof {

            /** Proof total */
            total?: (Long|null);

            /** Proof index */
            index?: (Long|null);

            /** Proof leaf_hash */
            leaf_hash?: (Uint8Array|null);

            /** Proof aunts */
            aunts?: (Uint8Array[]|null);
        }

        /** Represents a Proof. */
        class Proof implements IProof {

            /**
             * Constructs a new Proof.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IProof);

            /** Proof total. */
            public total: Long;

            /** Proof index. */
            public index: Long;

            /** Proof leaf_hash. */
            public leaf_hash: Uint8Array;

            /** Proof aunts. */
            public aunts: Uint8Array[];

            /**
             * Encodes the specified Proof message. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param m Proof message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IProof, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proof message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.Proof;
        }

        /** Properties of a ValueOp. */
        interface IValueOp {

            /** ValueOp key */
            key?: (Uint8Array|null);

            /** ValueOp proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a ValueOp. */
        class ValueOp implements IValueOp {

            /**
             * Constructs a new ValueOp.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IValueOp);

            /** ValueOp key. */
            public key: Uint8Array;

            /** ValueOp proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified ValueOp message. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param m ValueOp message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IValueOp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValueOp message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.ValueOp;
        }

        /** Properties of a DominoOp. */
        interface IDominoOp {

            /** DominoOp key */
            key?: (string|null);

            /** DominoOp input */
            input?: (string|null);

            /** DominoOp output */
            output?: (string|null);
        }

        /** Represents a DominoOp. */
        class DominoOp implements IDominoOp {

            /**
             * Constructs a new DominoOp.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IDominoOp);

            /** DominoOp key. */
            public key: string;

            /** DominoOp input. */
            public input: string;

            /** DominoOp output. */
            public output: string;

            /**
             * Encodes the specified DominoOp message. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param m DominoOp message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IDominoOp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DominoOp message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.DominoOp;
        }

        /** Properties of a ProofOp. */
        interface IProofOp {

            /** ProofOp type */
            type?: (string|null);

            /** ProofOp key */
            key?: (Uint8Array|null);

            /** ProofOp data */
            data?: (Uint8Array|null);
        }

        /** Represents a ProofOp. */
        class ProofOp implements IProofOp {

            /**
             * Constructs a new ProofOp.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IProofOp);

            /** ProofOp type. */
            public type: string;

            /** ProofOp key. */
            public key: Uint8Array;

            /** ProofOp data. */
            public data: Uint8Array;

            /**
             * Encodes the specified ProofOp message. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param m ProofOp message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IProofOp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOp message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.ProofOp;
        }

        /** Properties of a ProofOps. */
        interface IProofOps {

            /** ProofOps ops */
            ops?: (tendermint.crypto.IProofOp[]|null);
        }

        /** Represents a ProofOps. */
        class ProofOps implements IProofOps {

            /**
             * Constructs a new ProofOps.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.crypto.IProofOps);

            /** ProofOps ops. */
            public ops: tendermint.crypto.IProofOp[];

            /**
             * Encodes the specified ProofOps message. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param m ProofOps message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.crypto.IProofOps, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOps message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.crypto.ProofOps;
        }
    }

    /** Namespace libs. */
    namespace libs {

        /** Namespace bits. */
        namespace bits {

            /** Properties of a BitArray. */
            interface IBitArray {

                /** BitArray bits */
                bits?: (Long|null);

                /** BitArray elems */
                elems?: (Long[]|null);
            }

            /** Represents a BitArray. */
            class BitArray implements IBitArray {

                /**
                 * Constructs a new BitArray.
                 * @param [p] Properties to set
                 */
                constructor(p?: tendermint.libs.bits.IBitArray);

                /** BitArray bits. */
                public bits: Long;

                /** BitArray elems. */
                public elems: Long[];

                /**
                 * Encodes the specified BitArray message. Does not implicitly {@link tendermint.libs.bits.BitArray.verify|verify} messages.
                 * @param m BitArray message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: tendermint.libs.bits.IBitArray, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BitArray message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BitArray
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.libs.bits.BitArray;
            }
        }
    }

    /** Namespace p2p. */
    namespace p2p {

        /** Properties of a NetAddress. */
        interface INetAddress {

            /** NetAddress id */
            id?: (string|null);

            /** NetAddress ip */
            ip?: (string|null);

            /** NetAddress port */
            port?: (number|null);
        }

        /** Represents a NetAddress. */
        class NetAddress implements INetAddress {

            /**
             * Constructs a new NetAddress.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.p2p.INetAddress);

            /** NetAddress id. */
            public id: string;

            /** NetAddress ip. */
            public ip: string;

            /** NetAddress port. */
            public port: number;

            /**
             * Encodes the specified NetAddress message. Does not implicitly {@link tendermint.p2p.NetAddress.verify|verify} messages.
             * @param m NetAddress message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.p2p.INetAddress, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NetAddress message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns NetAddress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.p2p.NetAddress;
        }

        /** Properties of a ProtocolVersion. */
        interface IProtocolVersion {

            /** ProtocolVersion p2p */
            p2p?: (Long|null);

            /** ProtocolVersion block */
            block?: (Long|null);

            /** ProtocolVersion app */
            app?: (Long|null);
        }

        /** Represents a ProtocolVersion. */
        class ProtocolVersion implements IProtocolVersion {

            /**
             * Constructs a new ProtocolVersion.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.p2p.IProtocolVersion);

            /** ProtocolVersion p2p. */
            public p2p: Long;

            /** ProtocolVersion block. */
            public block: Long;

            /** ProtocolVersion app. */
            public app: Long;

            /**
             * Encodes the specified ProtocolVersion message. Does not implicitly {@link tendermint.p2p.ProtocolVersion.verify|verify} messages.
             * @param m ProtocolVersion message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.p2p.IProtocolVersion, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProtocolVersion message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ProtocolVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.p2p.ProtocolVersion;
        }

        /** Properties of a DefaultNodeInfo. */
        interface IDefaultNodeInfo {

            /** DefaultNodeInfo protocol_version */
            protocol_version?: (tendermint.p2p.IProtocolVersion|null);

            /** DefaultNodeInfo default_node_id */
            default_node_id?: (string|null);

            /** DefaultNodeInfo listen_addr */
            listen_addr?: (string|null);

            /** DefaultNodeInfo network */
            network?: (string|null);

            /** DefaultNodeInfo version */
            version?: (string|null);

            /** DefaultNodeInfo channels */
            channels?: (Uint8Array|null);

            /** DefaultNodeInfo moniker */
            moniker?: (string|null);

            /** DefaultNodeInfo other */
            other?: (tendermint.p2p.IDefaultNodeInfoOther|null);
        }

        /** Represents a DefaultNodeInfo. */
        class DefaultNodeInfo implements IDefaultNodeInfo {

            /**
             * Constructs a new DefaultNodeInfo.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.p2p.IDefaultNodeInfo);

            /** DefaultNodeInfo protocol_version. */
            public protocol_version?: (tendermint.p2p.IProtocolVersion|null);

            /** DefaultNodeInfo default_node_id. */
            public default_node_id: string;

            /** DefaultNodeInfo listen_addr. */
            public listen_addr: string;

            /** DefaultNodeInfo network. */
            public network: string;

            /** DefaultNodeInfo version. */
            public version: string;

            /** DefaultNodeInfo channels. */
            public channels: Uint8Array;

            /** DefaultNodeInfo moniker. */
            public moniker: string;

            /** DefaultNodeInfo other. */
            public other?: (tendermint.p2p.IDefaultNodeInfoOther|null);

            /**
             * Encodes the specified DefaultNodeInfo message. Does not implicitly {@link tendermint.p2p.DefaultNodeInfo.verify|verify} messages.
             * @param m DefaultNodeInfo message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.p2p.IDefaultNodeInfo, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DefaultNodeInfo message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns DefaultNodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.p2p.DefaultNodeInfo;
        }

        /** Properties of a DefaultNodeInfoOther. */
        interface IDefaultNodeInfoOther {

            /** DefaultNodeInfoOther tx_index */
            tx_index?: (string|null);

            /** DefaultNodeInfoOther rpc_address */
            rpc_address?: (string|null);
        }

        /** Represents a DefaultNodeInfoOther. */
        class DefaultNodeInfoOther implements IDefaultNodeInfoOther {

            /**
             * Constructs a new DefaultNodeInfoOther.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.p2p.IDefaultNodeInfoOther);

            /** DefaultNodeInfoOther tx_index. */
            public tx_index: string;

            /** DefaultNodeInfoOther rpc_address. */
            public rpc_address: string;

            /**
             * Encodes the specified DefaultNodeInfoOther message. Does not implicitly {@link tendermint.p2p.DefaultNodeInfoOther.verify|verify} messages.
             * @param m DefaultNodeInfoOther message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.p2p.IDefaultNodeInfoOther, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DefaultNodeInfoOther message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns DefaultNodeInfoOther
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.p2p.DefaultNodeInfoOther;
        }
    }

    /** Namespace types. */
    namespace types {

        /** Properties of a ConsensusParams. */
        interface IConsensusParams {

            /** ConsensusParams block */
            block?: (tendermint.types.IBlockParams|null);

            /** ConsensusParams evidence */
            evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator */
            validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version */
            version?: (tendermint.types.IVersionParams|null);
        }

        /** Represents a ConsensusParams. */
        class ConsensusParams implements IConsensusParams {

            /**
             * Constructs a new ConsensusParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IConsensusParams);

            /** ConsensusParams block. */
            public block?: (tendermint.types.IBlockParams|null);

            /** ConsensusParams evidence. */
            public evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator. */
            public validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version. */
            public version?: (tendermint.types.IVersionParams|null);

            /**
             * Encodes the specified ConsensusParams message. Does not implicitly {@link tendermint.types.ConsensusParams.verify|verify} messages.
             * @param m ConsensusParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IConsensusParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.ConsensusParams;
        }

        /** Properties of a BlockParams. */
        interface IBlockParams {

            /** BlockParams max_bytes */
            max_bytes?: (Long|null);

            /** BlockParams max_gas */
            max_gas?: (Long|null);

            /** BlockParams time_iota_ms */
            time_iota_ms?: (Long|null);
        }

        /** Represents a BlockParams. */
        class BlockParams implements IBlockParams {

            /**
             * Constructs a new BlockParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IBlockParams);

            /** BlockParams max_bytes. */
            public max_bytes: Long;

            /** BlockParams max_gas. */
            public max_gas: Long;

            /** BlockParams time_iota_ms. */
            public time_iota_ms: Long;

            /**
             * Encodes the specified BlockParams message. Does not implicitly {@link tendermint.types.BlockParams.verify|verify} messages.
             * @param m BlockParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IBlockParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.BlockParams;
        }

        /** Properties of an EvidenceParams. */
        interface IEvidenceParams {

            /** EvidenceParams max_age_num_blocks */
            max_age_num_blocks?: (Long|null);

            /** EvidenceParams max_age_duration */
            max_age_duration?: (google.protobuf.IDuration|null);

            /** EvidenceParams max_bytes */
            max_bytes?: (Long|null);
        }

        /** Represents an EvidenceParams. */
        class EvidenceParams implements IEvidenceParams {

            /**
             * Constructs a new EvidenceParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IEvidenceParams);

            /** EvidenceParams max_age_num_blocks. */
            public max_age_num_blocks: Long;

            /** EvidenceParams max_age_duration. */
            public max_age_duration?: (google.protobuf.IDuration|null);

            /** EvidenceParams max_bytes. */
            public max_bytes: Long;

            /**
             * Encodes the specified EvidenceParams message. Does not implicitly {@link tendermint.types.EvidenceParams.verify|verify} messages.
             * @param m EvidenceParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IEvidenceParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EvidenceParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EvidenceParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.EvidenceParams;
        }

        /** Properties of a ValidatorParams. */
        interface IValidatorParams {

            /** ValidatorParams pub_key_types */
            pub_key_types?: (string[]|null);
        }

        /** Represents a ValidatorParams. */
        class ValidatorParams implements IValidatorParams {

            /**
             * Constructs a new ValidatorParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IValidatorParams);

            /** ValidatorParams pub_key_types. */
            public pub_key_types: string[];

            /**
             * Encodes the specified ValidatorParams message. Does not implicitly {@link tendermint.types.ValidatorParams.verify|verify} messages.
             * @param m ValidatorParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IValidatorParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ValidatorParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.ValidatorParams;
        }

        /** Properties of a VersionParams. */
        interface IVersionParams {

            /** VersionParams app_version */
            app_version?: (Long|null);
        }

        /** Represents a VersionParams. */
        class VersionParams implements IVersionParams {

            /**
             * Constructs a new VersionParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IVersionParams);

            /** VersionParams app_version. */
            public app_version: Long;

            /**
             * Encodes the specified VersionParams message. Does not implicitly {@link tendermint.types.VersionParams.verify|verify} messages.
             * @param m VersionParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IVersionParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VersionParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns VersionParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.VersionParams;
        }

        /** Properties of a HashedParams. */
        interface IHashedParams {

            /** HashedParams block_max_bytes */
            block_max_bytes?: (Long|null);

            /** HashedParams block_max_gas */
            block_max_gas?: (Long|null);
        }

        /** Represents a HashedParams. */
        class HashedParams implements IHashedParams {

            /**
             * Constructs a new HashedParams.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IHashedParams);

            /** HashedParams block_max_bytes. */
            public block_max_bytes: Long;

            /** HashedParams block_max_gas. */
            public block_max_gas: Long;

            /**
             * Encodes the specified HashedParams message. Does not implicitly {@link tendermint.types.HashedParams.verify|verify} messages.
             * @param m HashedParams message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IHashedParams, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HashedParams message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns HashedParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.HashedParams;
        }

        /** Properties of an Evidence. */
        interface IEvidence {

            /** Evidence duplicate_vote_evidence */
            duplicate_vote_evidence?: (tendermint.types.IDuplicateVoteEvidence|null);

            /** Evidence light_client_attack_evidence */
            light_client_attack_evidence?: (tendermint.types.ILightClientAttackEvidence|null);
        }

        /** Represents an Evidence. */
        class Evidence implements IEvidence {

            /**
             * Constructs a new Evidence.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IEvidence);

            /** Evidence duplicate_vote_evidence. */
            public duplicate_vote_evidence?: (tendermint.types.IDuplicateVoteEvidence|null);

            /** Evidence light_client_attack_evidence. */
            public light_client_attack_evidence?: (tendermint.types.ILightClientAttackEvidence|null);

            /** Evidence sum. */
            public sum?: ("duplicate_vote_evidence"|"light_client_attack_evidence");

            /**
             * Encodes the specified Evidence message. Does not implicitly {@link tendermint.types.Evidence.verify|verify} messages.
             * @param m Evidence message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IEvidence, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Evidence message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Evidence;
        }

        /** Properties of a DuplicateVoteEvidence. */
        interface IDuplicateVoteEvidence {

            /** DuplicateVoteEvidence vote_a */
            vote_a?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence vote_b */
            vote_b?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence total_voting_power */
            total_voting_power?: (Long|null);

            /** DuplicateVoteEvidence validator_power */
            validator_power?: (Long|null);

            /** DuplicateVoteEvidence timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents a DuplicateVoteEvidence. */
        class DuplicateVoteEvidence implements IDuplicateVoteEvidence {

            /**
             * Constructs a new DuplicateVoteEvidence.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IDuplicateVoteEvidence);

            /** DuplicateVoteEvidence vote_a. */
            public vote_a?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence vote_b. */
            public vote_b?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence total_voting_power. */
            public total_voting_power: Long;

            /** DuplicateVoteEvidence validator_power. */
            public validator_power: Long;

            /** DuplicateVoteEvidence timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified DuplicateVoteEvidence message. Does not implicitly {@link tendermint.types.DuplicateVoteEvidence.verify|verify} messages.
             * @param m DuplicateVoteEvidence message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IDuplicateVoteEvidence, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DuplicateVoteEvidence message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns DuplicateVoteEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.DuplicateVoteEvidence;
        }

        /** Properties of a LightClientAttackEvidence. */
        interface ILightClientAttackEvidence {

            /** LightClientAttackEvidence conflicting_block */
            conflicting_block?: (tendermint.types.ILightBlock|null);

            /** LightClientAttackEvidence common_height */
            common_height?: (Long|null);

            /** LightClientAttackEvidence byzantine_validators */
            byzantine_validators?: (tendermint.types.IValidator[]|null);

            /** LightClientAttackEvidence total_voting_power */
            total_voting_power?: (Long|null);

            /** LightClientAttackEvidence timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents a LightClientAttackEvidence. */
        class LightClientAttackEvidence implements ILightClientAttackEvidence {

            /**
             * Constructs a new LightClientAttackEvidence.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ILightClientAttackEvidence);

            /** LightClientAttackEvidence conflicting_block. */
            public conflicting_block?: (tendermint.types.ILightBlock|null);

            /** LightClientAttackEvidence common_height. */
            public common_height: Long;

            /** LightClientAttackEvidence byzantine_validators. */
            public byzantine_validators: tendermint.types.IValidator[];

            /** LightClientAttackEvidence total_voting_power. */
            public total_voting_power: Long;

            /** LightClientAttackEvidence timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified LightClientAttackEvidence message. Does not implicitly {@link tendermint.types.LightClientAttackEvidence.verify|verify} messages.
             * @param m LightClientAttackEvidence message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ILightClientAttackEvidence, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightClientAttackEvidence message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns LightClientAttackEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.LightClientAttackEvidence;
        }

        /** Properties of an EvidenceList. */
        interface IEvidenceList {

            /** EvidenceList evidence */
            evidence?: (tendermint.types.IEvidence[]|null);
        }

        /** Represents an EvidenceList. */
        class EvidenceList implements IEvidenceList {

            /**
             * Constructs a new EvidenceList.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IEvidenceList);

            /** EvidenceList evidence. */
            public evidence: tendermint.types.IEvidence[];

            /**
             * Encodes the specified EvidenceList message. Does not implicitly {@link tendermint.types.EvidenceList.verify|verify} messages.
             * @param m EvidenceList message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IEvidenceList, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EvidenceList message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns EvidenceList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.EvidenceList;
        }

        /** Properties of a Block. */
        interface IBlock {

            /** Block header */
            header?: (tendermint.types.IHeader|null);

            /** Block data */
            data?: (tendermint.types.IData|null);

            /** Block evidence */
            evidence?: (tendermint.types.IEvidenceList|null);

            /** Block last_commit */
            last_commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a Block. */
        class Block implements IBlock {

            /**
             * Constructs a new Block.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IBlock);

            /** Block header. */
            public header?: (tendermint.types.IHeader|null);

            /** Block data. */
            public data?: (tendermint.types.IData|null);

            /** Block evidence. */
            public evidence?: (tendermint.types.IEvidenceList|null);

            /** Block last_commit. */
            public last_commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified Block message. Does not implicitly {@link tendermint.types.Block.verify|verify} messages.
             * @param m Block message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Block message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Block
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Block;
        }

        /** Properties of a ValidatorSet. */
        interface IValidatorSet {

            /** ValidatorSet validators */
            validators?: (tendermint.types.IValidator[]|null);

            /** ValidatorSet proposer */
            proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents a ValidatorSet. */
        class ValidatorSet implements IValidatorSet {

            /**
             * Constructs a new ValidatorSet.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IValidatorSet);

            /** ValidatorSet validators. */
            public validators: tendermint.types.IValidator[];

            /** ValidatorSet proposer. */
            public proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified ValidatorSet message. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param m ValidatorSet message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IValidatorSet, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.ValidatorSet;
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power */
            voting_power?: (Long|null);

            /** Validator proposer_priority */
            proposer_priority?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power. */
            public voting_power: Long;

            /** Validator proposer_priority. */
            public proposer_priority: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param m Validator message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IValidator, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Validator;
        }

        /** Properties of a SimpleValidator. */
        interface ISimpleValidator {

            /** SimpleValidator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power */
            voting_power?: (Long|null);
        }

        /** Represents a SimpleValidator. */
        class SimpleValidator implements ISimpleValidator {

            /**
             * Constructs a new SimpleValidator.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ISimpleValidator);

            /** SimpleValidator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power. */
            public voting_power: Long;

            /**
             * Encodes the specified SimpleValidator message. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param m SimpleValidator message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ISimpleValidator, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.SimpleValidator;
        }

        /** BlockIDFlag enum. */
        enum BlockIDFlag {
            BLOCK_ID_FLAG_UNKNOWN = 0,
            BLOCK_ID_FLAG_ABSENT = 1,
            BLOCK_ID_FLAG_COMMIT = 2,
            BLOCK_ID_FLAG_NIL = 3
        }

        /** SignedMsgType enum. */
        enum SignedMsgType {
            SIGNED_MSG_TYPE_UNKNOWN = 0,
            SIGNED_MSG_TYPE_PREVOTE = 1,
            SIGNED_MSG_TYPE_PRECOMMIT = 2,
            SIGNED_MSG_TYPE_PROPOSAL = 32
        }

        /** Properties of a PartSetHeader. */
        interface IPartSetHeader {

            /** PartSetHeader total */
            total?: (number|null);

            /** PartSetHeader hash */
            hash?: (Uint8Array|null);
        }

        /** Represents a PartSetHeader. */
        class PartSetHeader implements IPartSetHeader {

            /**
             * Constructs a new PartSetHeader.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IPartSetHeader);

            /** PartSetHeader total. */
            public total: number;

            /** PartSetHeader hash. */
            public hash: Uint8Array;

            /**
             * Encodes the specified PartSetHeader message. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param m PartSetHeader message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IPartSetHeader, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.PartSetHeader;
        }

        /** Properties of a Part. */
        interface IPart {

            /** Part index */
            index?: (number|null);

            /** Part bytes */
            bytes?: (Uint8Array|null);

            /** Part proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a Part. */
        class Part implements IPart {

            /**
             * Constructs a new Part.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IPart);

            /** Part index. */
            public index: number;

            /** Part bytes. */
            public bytes: Uint8Array;

            /** Part proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified Part message. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param m Part message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IPart, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Part message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Part;
        }

        /** Properties of a BlockID. */
        interface IBlockID {

            /** BlockID hash */
            hash?: (Uint8Array|null);

            /** BlockID part_set_header */
            part_set_header?: (tendermint.types.IPartSetHeader|null);
        }

        /** Represents a BlockID. */
        class BlockID implements IBlockID {

            /**
             * Constructs a new BlockID.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IBlockID);

            /** BlockID hash. */
            public hash: Uint8Array;

            /** BlockID part_set_header. */
            public part_set_header?: (tendermint.types.IPartSetHeader|null);

            /**
             * Encodes the specified BlockID message. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param m BlockID message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IBlockID, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockID message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.BlockID;
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header version */
            version?: (tendermint.version.IConsensus|null);

            /** Header chain_id */
            chain_id?: (string|null);

            /** Header height */
            height?: (Long|null);

            /** Header time */
            time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id */
            last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash */
            last_commit_hash?: (Uint8Array|null);

            /** Header data_hash */
            data_hash?: (Uint8Array|null);

            /** Header validators_hash */
            validators_hash?: (Uint8Array|null);

            /** Header next_validators_hash */
            next_validators_hash?: (Uint8Array|null);

            /** Header consensus_hash */
            consensus_hash?: (Uint8Array|null);

            /** Header app_hash */
            app_hash?: (Uint8Array|null);

            /** Header last_results_hash */
            last_results_hash?: (Uint8Array|null);

            /** Header evidence_hash */
            evidence_hash?: (Uint8Array|null);

            /** Header proposer_address */
            proposer_address?: (Uint8Array|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IHeader);

            /** Header version. */
            public version?: (tendermint.version.IConsensus|null);

            /** Header chain_id. */
            public chain_id: string;

            /** Header height. */
            public height: Long;

            /** Header time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id. */
            public last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash. */
            public last_commit_hash: Uint8Array;

            /** Header data_hash. */
            public data_hash: Uint8Array;

            /** Header validators_hash. */
            public validators_hash: Uint8Array;

            /** Header next_validators_hash. */
            public next_validators_hash: Uint8Array;

            /** Header consensus_hash. */
            public consensus_hash: Uint8Array;

            /** Header app_hash. */
            public app_hash: Uint8Array;

            /** Header last_results_hash. */
            public last_results_hash: Uint8Array;

            /** Header evidence_hash. */
            public evidence_hash: Uint8Array;

            /** Header proposer_address. */
            public proposer_address: Uint8Array;

            /**
             * Encodes the specified Header message. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param m Header message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IHeader, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Header;
        }

        /** Properties of a Data. */
        interface IData {

            /** Data txs */
            txs?: (Uint8Array[]|null);
        }

        /** Represents a Data. */
        class Data implements IData {

            /**
             * Constructs a new Data.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IData);

            /** Data txs. */
            public txs: Uint8Array[];

            /**
             * Encodes the specified Data message. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param m Data message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IData, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Data message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Data;
        }

        /** Properties of a Vote. */
        interface IVote {

            /** Vote type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Vote height */
            height?: (Long|null);

            /** Vote round */
            round?: (number|null);

            /** Vote block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address */
            validator_address?: (Uint8Array|null);

            /** Vote validator_index */
            validator_index?: (number|null);

            /** Vote signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Vote. */
        class Vote implements IVote {

            /**
             * Constructs a new Vote.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IVote);

            /** Vote type. */
            public type: tendermint.types.SignedMsgType;

            /** Vote height. */
            public height: Long;

            /** Vote round. */
            public round: number;

            /** Vote block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address. */
            public validator_address: Uint8Array;

            /** Vote validator_index. */
            public validator_index: number;

            /** Vote signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Vote message. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param m Vote message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IVote, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vote message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Vote;
        }

        /** Properties of a Commit. */
        interface ICommit {

            /** Commit height */
            height?: (Long|null);

            /** Commit round */
            round?: (number|null);

            /** Commit block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures */
            signatures?: (tendermint.types.ICommitSig[]|null);
        }

        /** Represents a Commit. */
        class Commit implements ICommit {

            /**
             * Constructs a new Commit.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ICommit);

            /** Commit height. */
            public height: Long;

            /** Commit round. */
            public round: number;

            /** Commit block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures. */
            public signatures: tendermint.types.ICommitSig[];

            /**
             * Encodes the specified Commit message. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param m Commit message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ICommit, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Commit message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Commit;
        }

        /** Properties of a CommitSig. */
        interface ICommitSig {

            /** CommitSig block_id_flag */
            block_id_flag?: (tendermint.types.BlockIDFlag|null);

            /** CommitSig validator_address */
            validator_address?: (Uint8Array|null);

            /** CommitSig timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a CommitSig. */
        class CommitSig implements ICommitSig {

            /**
             * Constructs a new CommitSig.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ICommitSig);

            /** CommitSig block_id_flag. */
            public block_id_flag: tendermint.types.BlockIDFlag;

            /** CommitSig validator_address. */
            public validator_address: Uint8Array;

            /** CommitSig timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified CommitSig message. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param m CommitSig message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ICommitSig, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommitSig message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.CommitSig;
        }

        /** Properties of a Proposal. */
        interface IProposal {

            /** Proposal type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Proposal height */
            height?: (Long|null);

            /** Proposal round */
            round?: (number|null);

            /** Proposal pol_round */
            pol_round?: (number|null);

            /** Proposal block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Proposal. */
        class Proposal implements IProposal {

            /**
             * Constructs a new Proposal.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IProposal);

            /** Proposal type. */
            public type: tendermint.types.SignedMsgType;

            /** Proposal height. */
            public height: Long;

            /** Proposal round. */
            public round: number;

            /** Proposal pol_round. */
            public pol_round: number;

            /** Proposal block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Proposal message. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param m Proposal message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IProposal, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proposal message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.Proposal;
        }

        /** Properties of a SignedHeader. */
        interface ISignedHeader {

            /** SignedHeader header */
            header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit */
            commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a SignedHeader. */
        class SignedHeader implements ISignedHeader {

            /**
             * Constructs a new SignedHeader.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ISignedHeader);

            /** SignedHeader header. */
            public header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit. */
            public commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified SignedHeader message. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param m SignedHeader message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ISignedHeader, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.SignedHeader;
        }

        /** Properties of a LightBlock. */
        interface ILightBlock {

            /** LightBlock signed_header */
            signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set */
            validator_set?: (tendermint.types.IValidatorSet|null);
        }

        /** Represents a LightBlock. */
        class LightBlock implements ILightBlock {

            /**
             * Constructs a new LightBlock.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ILightBlock);

            /** LightBlock signed_header. */
            public signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set. */
            public validator_set?: (tendermint.types.IValidatorSet|null);

            /**
             * Encodes the specified LightBlock message. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param m LightBlock message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ILightBlock, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightBlock message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.LightBlock;
        }

        /** Properties of a BlockMeta. */
        interface IBlockMeta {

            /** BlockMeta block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size */
            block_size?: (Long|null);

            /** BlockMeta header */
            header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs */
            num_txs?: (Long|null);
        }

        /** Represents a BlockMeta. */
        class BlockMeta implements IBlockMeta {

            /**
             * Constructs a new BlockMeta.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.IBlockMeta);

            /** BlockMeta block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size. */
            public block_size: Long;

            /** BlockMeta header. */
            public header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs. */
            public num_txs: Long;

            /**
             * Encodes the specified BlockMeta message. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param m BlockMeta message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.IBlockMeta, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.BlockMeta;
        }

        /** Properties of a TxProof. */
        interface ITxProof {

            /** TxProof root_hash */
            root_hash?: (Uint8Array|null);

            /** TxProof data */
            data?: (Uint8Array|null);

            /** TxProof proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a TxProof. */
        class TxProof implements ITxProof {

            /**
             * Constructs a new TxProof.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.types.ITxProof);

            /** TxProof root_hash. */
            public root_hash: Uint8Array;

            /** TxProof data. */
            public data: Uint8Array;

            /** TxProof proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified TxProof message. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param m TxProof message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.types.ITxProof, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxProof message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.types.TxProof;
        }
    }

    /** Namespace version. */
    namespace version {

        /** Properties of an App. */
        interface IApp {

            /** App protocol */
            protocol?: (Long|null);

            /** App software */
            software?: (string|null);
        }

        /** Represents an App. */
        class App implements IApp {

            /**
             * Constructs a new App.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.version.IApp);

            /** App protocol. */
            public protocol: Long;

            /** App software. */
            public software: string;

            /**
             * Encodes the specified App message. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param m App message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.version.IApp, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an App message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.version.App;
        }

        /** Properties of a Consensus. */
        interface IConsensus {

            /** Consensus block */
            block?: (Long|null);

            /** Consensus app */
            app?: (Long|null);
        }

        /** Represents a Consensus. */
        class Consensus implements IConsensus {

            /**
             * Constructs a new Consensus.
             * @param [p] Properties to set
             */
            constructor(p?: tendermint.version.IConsensus);

            /** Consensus block. */
            public block: Long;

            /** Consensus app. */
            public app: Long;

            /**
             * Encodes the specified Consensus message. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param m Consensus message or plain object to encode
             * @param [w] Writer to encode to
             * @returns Writer
             */
            public static encode(m: tendermint.version.IConsensus, w?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Consensus message from the specified reader or buffer.
             * @param r Reader or buffer to decode from
             * @param [l] Message length if known beforehand
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): tendermint.version.Consensus;
        }
    }
}

/** Namespace oraichain. */
export namespace oraichain {

    /** Namespace orai. */
    namespace orai {

        /** Namespace aioracle. */
        namespace aioracle {

            /** Properties of a AIOracle. */
            interface IAIOracle {

                /** AIOracle request_id */
                request_id?: (string|null);

                /** AIOracle contract */
                contract?: (Uint8Array|null);

                /** AIOracle creator */
                creator?: (Uint8Array|null);

                /** AIOracle validators */
                validators?: (Uint8Array[]|null);

                /** AIOracle block_height */
                block_height?: (Long|null);

                /** AIOracle fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** AIOracle input */
                input?: (Uint8Array|null);

                /** AIOracle test_only */
                test_only?: (boolean|null);
            }

            /** Represents a AIOracle. */
            class AIOracle implements IAIOracle {

                /**
                 * Constructs a new AIOracle.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IAIOracle);

                /** AIOracle request_id. */
                public request_id: string;

                /** AIOracle contract. */
                public contract: Uint8Array;

                /** AIOracle creator. */
                public creator: Uint8Array;

                /** AIOracle validators. */
                public validators: Uint8Array[];

                /** AIOracle block_height. */
                public block_height: Long;

                /** AIOracle fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** AIOracle input. */
                public input: Uint8Array;

                /** AIOracle test_only. */
                public test_only: boolean;

                /**
                 * Encodes the specified AIOracle message. Does not implicitly {@link oraichain.orai.aioracle.AIOracle.verify|verify} messages.
                 * @param m AIOracle message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IAIOracle, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a AIOracle message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AIOracle
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.AIOracle;
            }

            /** Properties of an EntryPoint. */
            interface IEntryPoint {

                /** EntryPoint url */
                url?: (string|null);

                /** EntryPoint headers */
                headers?: (string[]|null);

                /** EntryPoint owner */
                owner?: (Uint8Array|null);

                /** EntryPoint provider_fees */
                provider_fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an EntryPoint. */
            class EntryPoint implements IEntryPoint {

                /**
                 * Constructs a new EntryPoint.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IEntryPoint);

                /** EntryPoint url. */
                public url: string;

                /** EntryPoint headers. */
                public headers: string[];

                /** EntryPoint owner. */
                public owner: Uint8Array;

                /** EntryPoint provider_fees. */
                public provider_fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified EntryPoint message. Does not implicitly {@link oraichain.orai.aioracle.EntryPoint.verify|verify} messages.
                 * @param m EntryPoint message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IEntryPoint, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EntryPoint message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns EntryPoint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.EntryPoint;
            }

            /** Properties of a Result. */
            interface IResult {

                /** Result entry_point */
                entry_point?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** Result result */
                result?: (Uint8Array|null);

                /** Result status */
                status?: (string|null);
            }

            /** Represents a Result. */
            class Result implements IResult {

                /**
                 * Constructs a new Result.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IResult);

                /** Result entry_point. */
                public entry_point?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** Result result. */
                public result: Uint8Array;

                /** Result status. */
                public status: string;

                /**
                 * Encodes the specified Result message. Does not implicitly {@link oraichain.orai.aioracle.Result.verify|verify} messages.
                 * @param m Result message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IResult, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Result message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Result;
            }

            /** Properties of a BaseReport. */
            interface IBaseReport {

                /** BaseReport request_id */
                request_id?: (string|null);

                /** BaseReport block_height */
                block_height?: (Long|null);

                /** BaseReport fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseReport validator_address */
                validator_address?: (Uint8Array|null);
            }

            /** Represents a BaseReport. */
            class BaseReport implements IBaseReport {

                /**
                 * Constructs a new BaseReport.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IBaseReport);

                /** BaseReport request_id. */
                public request_id: string;

                /** BaseReport block_height. */
                public block_height: Long;

                /** BaseReport fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** BaseReport validator_address. */
                public validator_address: Uint8Array;

                /**
                 * Encodes the specified BaseReport message. Does not implicitly {@link oraichain.orai.aioracle.BaseReport.verify|verify} messages.
                 * @param m BaseReport message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IBaseReport, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseReport message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BaseReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.BaseReport;
            }

            /** Properties of a Report. */
            interface IReport {

                /** Report base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** Report data_source_results */
                data_source_results?: (oraichain.orai.aioracle.IResult[]|null);

                /** Report result_status */
                result_status?: (string|null);

                /** Report aggregated_result */
                aggregated_result?: (Uint8Array|null);
            }

            /** Represents a Report. */
            class Report implements IReport {

                /**
                 * Constructs a new Report.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IReport);

                /** Report base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** Report data_source_results. */
                public data_source_results: oraichain.orai.aioracle.IResult[];

                /** Report result_status. */
                public result_status: string;

                /** Report aggregated_result. */
                public aggregated_result: Uint8Array;

                /**
                 * Encodes the specified Report message. Does not implicitly {@link oraichain.orai.aioracle.Report.verify|verify} messages.
                 * @param m Report message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IReport, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Report message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Report
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Report;
            }

            /** Properties of a TestCaseReport. */
            interface ITestCaseReport {

                /** TestCaseReport base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** TestCaseReport results_with_test_case */
                results_with_test_case?: (oraichain.orai.aioracle.IResultWithTestCase[]|null);
            }

            /** Represents a TestCaseReport. */
            class TestCaseReport implements ITestCaseReport {

                /**
                 * Constructs a new TestCaseReport.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.ITestCaseReport);

                /** TestCaseReport base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** TestCaseReport results_with_test_case. */
                public results_with_test_case: oraichain.orai.aioracle.IResultWithTestCase[];

                /**
                 * Encodes the specified TestCaseReport message. Does not implicitly {@link oraichain.orai.aioracle.TestCaseReport.verify|verify} messages.
                 * @param m TestCaseReport message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.ITestCaseReport, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestCaseReport message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns TestCaseReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.TestCaseReport;
            }

            /** Properties of a AIOracleResult. */
            interface IAIOracleResult {

                /** AIOracleResult request_id */
                request_id?: (string|null);

                /** AIOracleResult results */
                results?: (oraichain.orai.aioracle.IValResult[]|null);

                /** AIOracleResult status */
                status?: (string|null);
            }

            /** Represents a AIOracleResult. */
            class AIOracleResult implements IAIOracleResult {

                /**
                 * Constructs a new AIOracleResult.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IAIOracleResult);

                /** AIOracleResult request_id. */
                public request_id: string;

                /** AIOracleResult results. */
                public results: oraichain.orai.aioracle.IValResult[];

                /** AIOracleResult status. */
                public status: string;

                /**
                 * Encodes the specified AIOracleResult message. Does not implicitly {@link oraichain.orai.aioracle.AIOracleResult.verify|verify} messages.
                 * @param m AIOracleResult message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IAIOracleResult, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a AIOracleResult message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns AIOracleResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.AIOracleResult;
            }

            /** Properties of a BaseReward. */
            interface IBaseReward {

                /** BaseReward validators */
                validators?: (oraichain.orai.aioracle.IValidator[]|null);

                /** BaseReward block_height */
                block_height?: (Long|null);

                /** BaseReward total_power */
                total_power?: (Long|null);

                /** BaseReward provider_fees */
                provider_fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseReward validator_fees */
                validator_fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a BaseReward. */
            class BaseReward implements IBaseReward {

                /**
                 * Constructs a new BaseReward.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IBaseReward);

                /** BaseReward validators. */
                public validators: oraichain.orai.aioracle.IValidator[];

                /** BaseReward block_height. */
                public block_height: Long;

                /** BaseReward total_power. */
                public total_power: Long;

                /** BaseReward provider_fees. */
                public provider_fees: cosmos.base.v1beta1.ICoin[];

                /** BaseReward validator_fees. */
                public validator_fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified BaseReward message. Does not implicitly {@link oraichain.orai.aioracle.BaseReward.verify|verify} messages.
                 * @param m BaseReward message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IBaseReward, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseReward message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns BaseReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.BaseReward;
            }

            /** Properties of a Reward. */
            interface IReward {

                /** Reward base_reward */
                base_reward?: (oraichain.orai.aioracle.IBaseReward|null);

                /** Reward results */
                results?: (oraichain.orai.aioracle.IResult[]|null);
            }

            /** Represents a Reward. */
            class Reward implements IReward {

                /**
                 * Constructs a new Reward.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IReward);

                /** Reward base_reward. */
                public base_reward?: (oraichain.orai.aioracle.IBaseReward|null);

                /** Reward results. */
                public results: oraichain.orai.aioracle.IResult[];

                /**
                 * Encodes the specified Reward message. Does not implicitly {@link oraichain.orai.aioracle.Reward.verify|verify} messages.
                 * @param m Reward message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IReward, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Reward message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Reward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Reward;
            }

            /** Properties of a ResultWithTestCase. */
            interface IResultWithTestCase {

                /** ResultWithTestCase entry_point */
                entry_point?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** ResultWithTestCase test_case_results */
                test_case_results?: (oraichain.orai.aioracle.IResult[]|null);

                /** ResultWithTestCase status */
                status?: (string|null);
            }

            /** Represents a ResultWithTestCase. */
            class ResultWithTestCase implements IResultWithTestCase {

                /**
                 * Constructs a new ResultWithTestCase.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IResultWithTestCase);

                /** ResultWithTestCase entry_point. */
                public entry_point?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** ResultWithTestCase test_case_results. */
                public test_case_results: oraichain.orai.aioracle.IResult[];

                /** ResultWithTestCase status. */
                public status: string;

                /**
                 * Encodes the specified ResultWithTestCase message. Does not implicitly {@link oraichain.orai.aioracle.ResultWithTestCase.verify|verify} messages.
                 * @param m ResultWithTestCase message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IResultWithTestCase, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ResultWithTestCase message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ResultWithTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.ResultWithTestCase;
            }

            /** Properties of a Validator. */
            interface IValidator {

                /** Validator address */
                address?: (Uint8Array|null);

                /** Validator voting_power */
                voting_power?: (Long|null);

                /** Validator status */
                status?: (string|null);
            }

            /** Represents a Validator. */
            class Validator implements IValidator {

                /**
                 * Constructs a new Validator.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IValidator);

                /** Validator address. */
                public address: Uint8Array;

                /** Validator voting_power. */
                public voting_power: Long;

                /** Validator status. */
                public status: string;

                /**
                 * Encodes the specified Validator message. Does not implicitly {@link oraichain.orai.aioracle.Validator.verify|verify} messages.
                 * @param m Validator message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IValidator, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Validator message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Validator;
            }

            /** Properties of a ValResult. */
            interface IValResult {

                /** ValResult validator */
                validator?: (oraichain.orai.aioracle.IValidator|null);

                /** ValResult result */
                result?: (Uint8Array|null);

                /** ValResult result_status */
                result_status?: (string|null);
            }

            /** Represents a ValResult. */
            class ValResult implements IValResult {

                /**
                 * Constructs a new ValResult.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IValResult);

                /** ValResult validator. */
                public validator?: (oraichain.orai.aioracle.IValidator|null);

                /** ValResult result. */
                public result: Uint8Array;

                /** ValResult result_status. */
                public result_status: string;

                /**
                 * Encodes the specified ValResult message. Does not implicitly {@link oraichain.orai.aioracle.ValResult.verify|verify} messages.
                 * @param m ValResult message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IValResult, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValResult message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ValResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.ValResult;
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params maximum_ai_oracle_request_bytes */
                maximum_ai_oracle_request_bytes?: (Long|null);

                /** Params reward_ai_oracle_percentages */
                reward_ai_oracle_percentages?: (Long|null);

                /** Params reports_percentages */
                reports_percentages?: (Long|null);

                /** Params maximum_ai_oracle_response_bytes */
                maximum_ai_oracle_response_bytes?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IParams);

                /** Params maximum_ai_oracle_request_bytes. */
                public maximum_ai_oracle_request_bytes: Long;

                /** Params reward_ai_oracle_percentages. */
                public reward_ai_oracle_percentages: Long;

                /** Params reports_percentages. */
                public reports_percentages: Long;

                /** Params maximum_ai_oracle_response_bytes. */
                public maximum_ai_oracle_response_bytes: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link oraichain.orai.aioracle.Params.verify|verify} messages.
                 * @param m Params message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Params;
            }

            /** Properties of a QueryAIOracleReq. */
            interface IQueryAIOracleReq {

                /** QueryAIOracleReq request_id */
                request_id?: (string|null);
            }

            /** Represents a QueryAIOracleReq. */
            class QueryAIOracleReq implements IQueryAIOracleReq {

                /**
                 * Constructs a new QueryAIOracleReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryAIOracleReq);

                /** QueryAIOracleReq request_id. */
                public request_id: string;

                /**
                 * Encodes the specified QueryAIOracleReq message. Does not implicitly {@link oraichain.orai.aioracle.QueryAIOracleReq.verify|verify} messages.
                 * @param m QueryAIOracleReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryAIOracleReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIOracleReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAIOracleReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryAIOracleReq;
            }

            /** Properties of a QueryAIOracleRes. */
            interface IQueryAIOracleRes {

                /** QueryAIOracleRes request_id */
                request_id?: (string|null);

                /** QueryAIOracleRes contract */
                contract?: (Uint8Array|null);

                /** QueryAIOracleRes creator */
                creator?: (Uint8Array|null);

                /** QueryAIOracleRes validators */
                validators?: (Uint8Array[]|null);

                /** QueryAIOracleRes block_height */
                block_height?: (Long|null);

                /** QueryAIOracleRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryAIOracleRes input */
                input?: (Uint8Array|null);
            }

            /** Represents a QueryAIOracleRes. */
            class QueryAIOracleRes implements IQueryAIOracleRes {

                /**
                 * Constructs a new QueryAIOracleRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryAIOracleRes);

                /** QueryAIOracleRes request_id. */
                public request_id: string;

                /** QueryAIOracleRes contract. */
                public contract: Uint8Array;

                /** QueryAIOracleRes creator. */
                public creator: Uint8Array;

                /** QueryAIOracleRes validators. */
                public validators: Uint8Array[];

                /** QueryAIOracleRes block_height. */
                public block_height: Long;

                /** QueryAIOracleRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** QueryAIOracleRes input. */
                public input: Uint8Array;

                /**
                 * Encodes the specified QueryAIOracleRes message. Does not implicitly {@link oraichain.orai.aioracle.QueryAIOracleRes.verify|verify} messages.
                 * @param m QueryAIOracleRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryAIOracleRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIOracleRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAIOracleRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryAIOracleRes;
            }

            /** Properties of a QueryAIOracleIDsReq. */
            interface IQueryAIOracleIDsReq {

                /** QueryAIOracleIDsReq page */
                page?: (Long|null);

                /** QueryAIOracleIDsReq limit */
                limit?: (Long|null);
            }

            /** Represents a QueryAIOracleIDsReq. */
            class QueryAIOracleIDsReq implements IQueryAIOracleIDsReq {

                /**
                 * Constructs a new QueryAIOracleIDsReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryAIOracleIDsReq);

                /** QueryAIOracleIDsReq page. */
                public page: Long;

                /** QueryAIOracleIDsReq limit. */
                public limit: Long;

                /**
                 * Encodes the specified QueryAIOracleIDsReq message. Does not implicitly {@link oraichain.orai.aioracle.QueryAIOracleIDsReq.verify|verify} messages.
                 * @param m QueryAIOracleIDsReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryAIOracleIDsReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIOracleIDsReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAIOracleIDsReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryAIOracleIDsReq;
            }

            /** Properties of a QueryAIOracleIDsRes. */
            interface IQueryAIOracleIDsRes {

                /** QueryAIOracleIDsRes request_ids */
                request_ids?: (string[]|null);
            }

            /** Represents a QueryAIOracleIDsRes. */
            class QueryAIOracleIDsRes implements IQueryAIOracleIDsRes {

                /**
                 * Constructs a new QueryAIOracleIDsRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryAIOracleIDsRes);

                /** QueryAIOracleIDsRes request_ids. */
                public request_ids: string[];

                /**
                 * Encodes the specified QueryAIOracleIDsRes message. Does not implicitly {@link oraichain.orai.aioracle.QueryAIOracleIDsRes.verify|verify} messages.
                 * @param m QueryAIOracleIDsRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryAIOracleIDsRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIOracleIDsRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryAIOracleIDsRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryAIOracleIDsRes;
            }

            /** Properties of a Fetch. */
            interface IFetch {

                /** Fetch url */
                url?: (string|null);

                /** Fetch headers */
                headers?: (string[]|null);

                /** Fetch method */
                method?: (string|null);

                /** Fetch body */
                body?: (string|null);
            }

            /** Represents a Fetch. */
            class Fetch implements IFetch {

                /**
                 * Constructs a new Fetch.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IFetch);

                /** Fetch url. */
                public url: string;

                /** Fetch headers. */
                public headers: string[];

                /** Fetch method. */
                public method: string;

                /** Fetch body. */
                public body: string;

                /**
                 * Encodes the specified Fetch message. Does not implicitly {@link oraichain.orai.aioracle.Fetch.verify|verify} messages.
                 * @param m Fetch message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IFetch, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Fetch message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Fetch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Fetch;
            }

            /** Properties of a Request. */
            interface IRequest {

                /** Request fetch */
                fetch?: (oraichain.orai.aioracle.IFetch|null);
            }

            /** Represents a Request. */
            class Request implements IRequest {

                /**
                 * Constructs a new Request.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IRequest);

                /** Request fetch. */
                public fetch?: (oraichain.orai.aioracle.IFetch|null);

                /**
                 * Encodes the specified Request message. Does not implicitly {@link oraichain.orai.aioracle.Request.verify|verify} messages.
                 * @param m Request message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Request message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns Request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.Request;
            }

            /** Properties of an EmptyParams. */
            interface IEmptyParams {
            }

            /** Represents an EmptyParams. */
            class EmptyParams implements IEmptyParams {

                /**
                 * Constructs a new EmptyParams.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IEmptyParams);

                /**
                 * Encodes the specified EmptyParams message. Does not implicitly {@link oraichain.orai.aioracle.EmptyParams.verify|verify} messages.
                 * @param m EmptyParams message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IEmptyParams, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EmptyParams message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns EmptyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.EmptyParams;
            }

            /** Properties of a RequestDataSource. */
            interface IRequestDataSource {

                /** RequestDataSource dsource */
                dsource?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** RequestDataSource input */
                input?: (string|null);
            }

            /** Represents a RequestDataSource. */
            class RequestDataSource implements IRequestDataSource {

                /**
                 * Constructs a new RequestDataSource.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IRequestDataSource);

                /** RequestDataSource dsource. */
                public dsource?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** RequestDataSource input. */
                public input: string;

                /**
                 * Encodes the specified RequestDataSource message. Does not implicitly {@link oraichain.orai.aioracle.RequestDataSource.verify|verify} messages.
                 * @param m RequestDataSource message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IRequestDataSource, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestDataSource message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RequestDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.RequestDataSource;
            }

            /** Properties of a RequestTestCase. */
            interface IRequestTestCase {

                /** RequestTestCase tcase */
                tcase?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** RequestTestCase input */
                input?: (oraichain.orai.aioracle.IEntryPoint|null);
            }

            /** Represents a RequestTestCase. */
            class RequestTestCase implements IRequestTestCase {

                /**
                 * Constructs a new RequestTestCase.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IRequestTestCase);

                /** RequestTestCase tcase. */
                public tcase?: (oraichain.orai.aioracle.IEntryPoint|null);

                /** RequestTestCase input. */
                public input?: (oraichain.orai.aioracle.IEntryPoint|null);

                /**
                 * Encodes the specified RequestTestCase message. Does not implicitly {@link oraichain.orai.aioracle.RequestTestCase.verify|verify} messages.
                 * @param m RequestTestCase message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IRequestTestCase, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestTestCase message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RequestTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.RequestTestCase;
            }

            /** Properties of a RequestOracleScript. */
            interface IRequestOracleScript {

                /** RequestOracleScript results */
                results?: (string[]|null);
            }

            /** Represents a RequestOracleScript. */
            class RequestOracleScript implements IRequestOracleScript {

                /**
                 * Constructs a new RequestOracleScript.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IRequestOracleScript);

                /** RequestOracleScript results. */
                public results: string[];

                /**
                 * Encodes the specified RequestOracleScript message. Does not implicitly {@link oraichain.orai.aioracle.RequestOracleScript.verify|verify} messages.
                 * @param m RequestOracleScript message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IRequestOracleScript, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestOracleScript message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns RequestOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.RequestOracleScript;
            }

            /** Properties of a QueryDataSourceSmartContract. */
            interface IQueryDataSourceSmartContract {

                /** QueryDataSourceSmartContract get */
                get?: (oraichain.orai.aioracle.IRequestDataSource|null);
            }

            /** Represents a QueryDataSourceSmartContract. */
            class QueryDataSourceSmartContract implements IQueryDataSourceSmartContract {

                /**
                 * Constructs a new QueryDataSourceSmartContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryDataSourceSmartContract);

                /** QueryDataSourceSmartContract get. */
                public get?: (oraichain.orai.aioracle.IRequestDataSource|null);

                /**
                 * Encodes the specified QueryDataSourceSmartContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryDataSourceSmartContract.verify|verify} messages.
                 * @param m QueryDataSourceSmartContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryDataSourceSmartContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceSmartContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDataSourceSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryDataSourceSmartContract;
            }

            /** Properties of a QueryTestCaseSmartContract. */
            interface IQueryTestCaseSmartContract {

                /** QueryTestCaseSmartContract test */
                test?: (oraichain.orai.aioracle.IRequestTestCase|null);
            }

            /** Represents a QueryTestCaseSmartContract. */
            class QueryTestCaseSmartContract implements IQueryTestCaseSmartContract {

                /**
                 * Constructs a new QueryTestCaseSmartContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryTestCaseSmartContract);

                /** QueryTestCaseSmartContract test. */
                public test?: (oraichain.orai.aioracle.IRequestTestCase|null);

                /**
                 * Encodes the specified QueryTestCaseSmartContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryTestCaseSmartContract.verify|verify} messages.
                 * @param m QueryTestCaseSmartContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryTestCaseSmartContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseSmartContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTestCaseSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryTestCaseSmartContract;
            }

            /** Properties of a QueryOracleScriptSmartContract. */
            interface IQueryOracleScriptSmartContract {

                /** QueryOracleScriptSmartContract aggregate */
                aggregate?: (oraichain.orai.aioracle.IRequestOracleScript|null);
            }

            /** Represents a QueryOracleScriptSmartContract. */
            class QueryOracleScriptSmartContract implements IQueryOracleScriptSmartContract {

                /**
                 * Constructs a new QueryOracleScriptSmartContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryOracleScriptSmartContract);

                /** QueryOracleScriptSmartContract aggregate. */
                public aggregate?: (oraichain.orai.aioracle.IRequestOracleScript|null);

                /**
                 * Encodes the specified QueryOracleScriptSmartContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryOracleScriptSmartContract.verify|verify} messages.
                 * @param m QueryOracleScriptSmartContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryOracleScriptSmartContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleScriptSmartContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryOracleScriptSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryOracleScriptSmartContract;
            }

            /** Properties of a QueryDataSourceEntriesSmartContract. */
            interface IQueryDataSourceEntriesSmartContract {

                /** QueryDataSourceEntriesSmartContract get_data_sources */
                get_data_sources?: (oraichain.orai.aioracle.IEmptyParams|null);
            }

            /** Represents a QueryDataSourceEntriesSmartContract. */
            class QueryDataSourceEntriesSmartContract implements IQueryDataSourceEntriesSmartContract {

                /**
                 * Constructs a new QueryDataSourceEntriesSmartContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryDataSourceEntriesSmartContract);

                /** QueryDataSourceEntriesSmartContract get_data_sources. */
                public get_data_sources?: (oraichain.orai.aioracle.IEmptyParams|null);

                /**
                 * Encodes the specified QueryDataSourceEntriesSmartContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryDataSourceEntriesSmartContract.verify|verify} messages.
                 * @param m QueryDataSourceEntriesSmartContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryDataSourceEntriesSmartContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceEntriesSmartContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDataSourceEntriesSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryDataSourceEntriesSmartContract;
            }

            /** Properties of a QueryTestCaseEntriesSmartContract. */
            interface IQueryTestCaseEntriesSmartContract {

                /** QueryTestCaseEntriesSmartContract get_test_cases */
                get_test_cases?: (oraichain.orai.aioracle.IEmptyParams|null);
            }

            /** Represents a QueryTestCaseEntriesSmartContract. */
            class QueryTestCaseEntriesSmartContract implements IQueryTestCaseEntriesSmartContract {

                /**
                 * Constructs a new QueryTestCaseEntriesSmartContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryTestCaseEntriesSmartContract);

                /** QueryTestCaseEntriesSmartContract get_test_cases. */
                public get_test_cases?: (oraichain.orai.aioracle.IEmptyParams|null);

                /**
                 * Encodes the specified QueryTestCaseEntriesSmartContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryTestCaseEntriesSmartContract.verify|verify} messages.
                 * @param m QueryTestCaseEntriesSmartContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryTestCaseEntriesSmartContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseEntriesSmartContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTestCaseEntriesSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryTestCaseEntriesSmartContract;
            }

            /** Properties of a QueryDataSourceContract. */
            interface IQueryDataSourceContract {

                /** QueryDataSourceContract contract */
                contract?: (Uint8Array|null);

                /** QueryDataSourceContract request */
                request?: (oraichain.orai.aioracle.IRequestDataSource|null);
            }

            /** Represents a QueryDataSourceContract. */
            class QueryDataSourceContract implements IQueryDataSourceContract {

                /**
                 * Constructs a new QueryDataSourceContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryDataSourceContract);

                /** QueryDataSourceContract contract. */
                public contract: Uint8Array;

                /** QueryDataSourceContract request. */
                public request?: (oraichain.orai.aioracle.IRequestDataSource|null);

                /**
                 * Encodes the specified QueryDataSourceContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryDataSourceContract.verify|verify} messages.
                 * @param m QueryDataSourceContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryDataSourceContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDataSourceContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryDataSourceContract;
            }

            /** Properties of a QueryDataSourceEntriesContract. */
            interface IQueryDataSourceEntriesContract {

                /** QueryDataSourceEntriesContract contract */
                contract?: (Uint8Array|null);

                /** QueryDataSourceEntriesContract request */
                request?: (oraichain.orai.aioracle.IEmptyParams|null);
            }

            /** Represents a QueryDataSourceEntriesContract. */
            class QueryDataSourceEntriesContract implements IQueryDataSourceEntriesContract {

                /**
                 * Constructs a new QueryDataSourceEntriesContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryDataSourceEntriesContract);

                /** QueryDataSourceEntriesContract contract. */
                public contract: Uint8Array;

                /** QueryDataSourceEntriesContract request. */
                public request?: (oraichain.orai.aioracle.IEmptyParams|null);

                /**
                 * Encodes the specified QueryDataSourceEntriesContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryDataSourceEntriesContract.verify|verify} messages.
                 * @param m QueryDataSourceEntriesContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryDataSourceEntriesContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceEntriesContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryDataSourceEntriesContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryDataSourceEntriesContract;
            }

            /** Properties of a QueryTestCaseEntriesContract. */
            interface IQueryTestCaseEntriesContract {

                /** QueryTestCaseEntriesContract contract */
                contract?: (Uint8Array|null);

                /** QueryTestCaseEntriesContract request */
                request?: (oraichain.orai.aioracle.IEmptyParams|null);
            }

            /** Represents a QueryTestCaseEntriesContract. */
            class QueryTestCaseEntriesContract implements IQueryTestCaseEntriesContract {

                /**
                 * Constructs a new QueryTestCaseEntriesContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryTestCaseEntriesContract);

                /** QueryTestCaseEntriesContract contract. */
                public contract: Uint8Array;

                /** QueryTestCaseEntriesContract request. */
                public request?: (oraichain.orai.aioracle.IEmptyParams|null);

                /**
                 * Encodes the specified QueryTestCaseEntriesContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryTestCaseEntriesContract.verify|verify} messages.
                 * @param m QueryTestCaseEntriesContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryTestCaseEntriesContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseEntriesContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTestCaseEntriesContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryTestCaseEntriesContract;
            }

            /** Properties of a QueryTestCaseContract. */
            interface IQueryTestCaseContract {

                /** QueryTestCaseContract contract */
                contract?: (Uint8Array|null);

                /** QueryTestCaseContract request */
                request?: (oraichain.orai.aioracle.IRequestTestCase|null);
            }

            /** Represents a QueryTestCaseContract. */
            class QueryTestCaseContract implements IQueryTestCaseContract {

                /**
                 * Constructs a new QueryTestCaseContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryTestCaseContract);

                /** QueryTestCaseContract contract. */
                public contract: Uint8Array;

                /** QueryTestCaseContract request. */
                public request?: (oraichain.orai.aioracle.IRequestTestCase|null);

                /**
                 * Encodes the specified QueryTestCaseContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryTestCaseContract.verify|verify} messages.
                 * @param m QueryTestCaseContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryTestCaseContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryTestCaseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryTestCaseContract;
            }

            /** Properties of a QueryOracleScriptContract. */
            interface IQueryOracleScriptContract {

                /** QueryOracleScriptContract contract */
                contract?: (Uint8Array|null);

                /** QueryOracleScriptContract request */
                request?: (oraichain.orai.aioracle.IRequestOracleScript|null);
            }

            /** Represents a QueryOracleScriptContract. */
            class QueryOracleScriptContract implements IQueryOracleScriptContract {

                /**
                 * Constructs a new QueryOracleScriptContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryOracleScriptContract);

                /** QueryOracleScriptContract contract. */
                public contract: Uint8Array;

                /** QueryOracleScriptContract request. */
                public request?: (oraichain.orai.aioracle.IRequestOracleScript|null);

                /**
                 * Encodes the specified QueryOracleScriptContract message. Does not implicitly {@link oraichain.orai.aioracle.QueryOracleScriptContract.verify|verify} messages.
                 * @param m QueryOracleScriptContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryOracleScriptContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleScriptContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryOracleScriptContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryOracleScriptContract;
            }

            /** Properties of a ResponseContract. */
            interface IResponseContract {

                /** ResponseContract data */
                data?: (Uint8Array|null);
            }

            /** Represents a ResponseContract. */
            class ResponseContract implements IResponseContract {

                /**
                 * Constructs a new ResponseContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IResponseContract);

                /** ResponseContract data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified ResponseContract message. Does not implicitly {@link oraichain.orai.aioracle.ResponseContract.verify|verify} messages.
                 * @param m ResponseContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IResponseContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ResponseContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ResponseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.ResponseContract;
            }

            /** Properties of a ResponseEntryPointContract. */
            interface IResponseEntryPointContract {

                /** ResponseEntryPointContract data */
                data?: (oraichain.orai.aioracle.IEntryPoint[]|null);
            }

            /** Represents a ResponseEntryPointContract. */
            class ResponseEntryPointContract implements IResponseEntryPointContract {

                /**
                 * Constructs a new ResponseEntryPointContract.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IResponseEntryPointContract);

                /** ResponseEntryPointContract data. */
                public data: oraichain.orai.aioracle.IEntryPoint[];

                /**
                 * Encodes the specified ResponseEntryPointContract message. Does not implicitly {@link oraichain.orai.aioracle.ResponseEntryPointContract.verify|verify} messages.
                 * @param m ResponseEntryPointContract message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IResponseEntryPointContract, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ResponseEntryPointContract message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns ResponseEntryPointContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.ResponseEntryPointContract;
            }

            /** Properties of a QueryRewardReq. */
            interface IQueryRewardReq {

                /** QueryRewardReq block_height */
                block_height?: (string|null);
            }

            /** Represents a QueryRewardReq. */
            class QueryRewardReq implements IQueryRewardReq {

                /**
                 * Constructs a new QueryRewardReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryRewardReq);

                /** QueryRewardReq block_height. */
                public block_height: string;

                /**
                 * Encodes the specified QueryRewardReq message. Does not implicitly {@link oraichain.orai.aioracle.QueryRewardReq.verify|verify} messages.
                 * @param m QueryRewardReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryRewardReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRewardReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRewardReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryRewardReq;
            }

            /** Properties of a QueryRewardRes. */
            interface IQueryRewardRes {

                /** QueryRewardRes reward */
                reward?: (oraichain.orai.aioracle.IReward|null);
            }

            /** Represents a QueryRewardRes. */
            class QueryRewardRes implements IQueryRewardRes {

                /**
                 * Constructs a new QueryRewardRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryRewardRes);

                /** QueryRewardRes reward. */
                public reward?: (oraichain.orai.aioracle.IReward|null);

                /**
                 * Encodes the specified QueryRewardRes message. Does not implicitly {@link oraichain.orai.aioracle.QueryRewardRes.verify|verify} messages.
                 * @param m QueryRewardRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryRewardRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRewardRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryRewardRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryRewardRes;
            }

            /** Properties of a QueryFullOracleReq. */
            interface IQueryFullOracleReq {

                /** QueryFullOracleReq request_id */
                request_id?: (string|null);
            }

            /** Represents a QueryFullOracleReq. */
            class QueryFullOracleReq implements IQueryFullOracleReq {

                /**
                 * Constructs a new QueryFullOracleReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryFullOracleReq);

                /** QueryFullOracleReq request_id. */
                public request_id: string;

                /**
                 * Encodes the specified QueryFullOracleReq message. Does not implicitly {@link oraichain.orai.aioracle.QueryFullOracleReq.verify|verify} messages.
                 * @param m QueryFullOracleReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryFullOracleReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullOracleReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryFullOracleReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryFullOracleReq;
            }

            /** Properties of a QueryFullOracleRes. */
            interface IQueryFullOracleRes {

                /** QueryFullOracleRes ai_oracle */
                ai_oracle?: (oraichain.orai.aioracle.IAIOracle|null);

                /** QueryFullOracleRes reports */
                reports?: (oraichain.orai.aioracle.IReport[]|null);

                /** QueryFullOracleRes testcase_reports */
                testcase_reports?: (oraichain.orai.aioracle.ITestCaseReport[]|null);

                /** QueryFullOracleRes result */
                result?: (oraichain.orai.aioracle.IAIOracleResult|null);
            }

            /** Represents a QueryFullOracleRes. */
            class QueryFullOracleRes implements IQueryFullOracleRes {

                /**
                 * Constructs a new QueryFullOracleRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryFullOracleRes);

                /** QueryFullOracleRes ai_oracle. */
                public ai_oracle?: (oraichain.orai.aioracle.IAIOracle|null);

                /** QueryFullOracleRes reports. */
                public reports: oraichain.orai.aioracle.IReport[];

                /** QueryFullOracleRes testcase_reports. */
                public testcase_reports: oraichain.orai.aioracle.ITestCaseReport[];

                /** QueryFullOracleRes result. */
                public result?: (oraichain.orai.aioracle.IAIOracleResult|null);

                /**
                 * Encodes the specified QueryFullOracleRes message. Does not implicitly {@link oraichain.orai.aioracle.QueryFullOracleRes.verify|verify} messages.
                 * @param m QueryFullOracleRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryFullOracleRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullOracleRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryFullOracleRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryFullOracleRes;
            }

            /** Properties of a MinFeesReq. */
            interface IMinFeesReq {

                /** MinFeesReq contract_addr */
                contract_addr?: (string|null);

                /** MinFeesReq val_num */
                val_num?: (Long|null);

                /** MinFeesReq test_only */
                test_only?: (boolean|null);
            }

            /** Represents a MinFeesReq. */
            class MinFeesReq implements IMinFeesReq {

                /**
                 * Constructs a new MinFeesReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMinFeesReq);

                /** MinFeesReq contract_addr. */
                public contract_addr: string;

                /** MinFeesReq val_num. */
                public val_num: Long;

                /** MinFeesReq test_only. */
                public test_only: boolean;

                /**
                 * Encodes the specified MinFeesReq message. Does not implicitly {@link oraichain.orai.aioracle.MinFeesReq.verify|verify} messages.
                 * @param m MinFeesReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMinFeesReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinFeesReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MinFeesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MinFeesReq;
            }

            /** Properties of a MinFeesRes. */
            interface IMinFeesRes {

                /** MinFeesRes minimum_fees */
                minimum_fees?: (string|null);
            }

            /** Represents a MinFeesRes. */
            class MinFeesRes implements IMinFeesRes {

                /**
                 * Constructs a new MinFeesRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMinFeesRes);

                /** MinFeesRes minimum_fees. */
                public minimum_fees: string;

                /**
                 * Encodes the specified MinFeesRes message. Does not implicitly {@link oraichain.orai.aioracle.MinFeesRes.verify|verify} messages.
                 * @param m MinFeesRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMinFeesRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinFeesRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MinFeesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MinFeesRes;
            }

            /** Properties of a MinGasPricesReq. */
            interface IMinGasPricesReq {
            }

            /** Represents a MinGasPricesReq. */
            class MinGasPricesReq implements IMinGasPricesReq {

                /**
                 * Constructs a new MinGasPricesReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMinGasPricesReq);

                /**
                 * Encodes the specified MinGasPricesReq message. Does not implicitly {@link oraichain.orai.aioracle.MinGasPricesReq.verify|verify} messages.
                 * @param m MinGasPricesReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMinGasPricesReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinGasPricesReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MinGasPricesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MinGasPricesReq;
            }

            /** Properties of a MinGasPricesRes. */
            interface IMinGasPricesRes {

                /** MinGasPricesRes min_gas_prices */
                min_gas_prices?: (string|null);
            }

            /** Represents a MinGasPricesRes. */
            class MinGasPricesRes implements IMinGasPricesRes {

                /**
                 * Constructs a new MinGasPricesRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMinGasPricesRes);

                /** MinGasPricesRes min_gas_prices. */
                public min_gas_prices: string;

                /**
                 * Encodes the specified MinGasPricesRes message. Does not implicitly {@link oraichain.orai.aioracle.MinGasPricesRes.verify|verify} messages.
                 * @param m MinGasPricesRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMinGasPricesRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinGasPricesRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MinGasPricesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MinGasPricesRes;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link oraichain.orai.aioracle.QueryParamsRequest.verify|verify} messages.
                 * @param m QueryParamsRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryParamsRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryParamsRequest;
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (oraichain.orai.aioracle.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (oraichain.orai.aioracle.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link oraichain.orai.aioracle.QueryParamsResponse.verify|verify} messages.
                 * @param m QueryParamsResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryParamsResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryParamsResponse;
            }

            /** Properties of a QueryParamRequest. */
            interface IQueryParamRequest {

                /** QueryParamRequest param */
                param?: (string|null);
            }

            /** Represents a QueryParamRequest. */
            class QueryParamRequest implements IQueryParamRequest {

                /**
                 * Constructs a new QueryParamRequest.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryParamRequest);

                /** QueryParamRequest param. */
                public param: string;

                /**
                 * Encodes the specified QueryParamRequest message. Does not implicitly {@link oraichain.orai.aioracle.QueryParamRequest.verify|verify} messages.
                 * @param m QueryParamRequest message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryParamRequest, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamRequest message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryParamRequest;
            }

            /** Properties of a QueryParamResponse. */
            interface IQueryParamResponse {

                /** QueryParamResponse param */
                param?: (Long|null);
            }

            /** Represents a QueryParamResponse. */
            class QueryParamResponse implements IQueryParamResponse {

                /**
                 * Constructs a new QueryParamResponse.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IQueryParamResponse);

                /** QueryParamResponse param. */
                public param: Long;

                /**
                 * Encodes the specified QueryParamResponse message. Does not implicitly {@link oraichain.orai.aioracle.QueryParamResponse.verify|verify} messages.
                 * @param m QueryParamResponse message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IQueryParamResponse, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamResponse message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns QueryParamResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.QueryParamResponse;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState ai_oracles */
                ai_oracles?: (oraichain.orai.aioracle.IAIOracle[]|null);

                /** GenesisState BaseReports */
                BaseReports?: (oraichain.orai.aioracle.IBaseReport[]|null);

                /** GenesisState ai_oracle_results */
                ai_oracle_results?: (oraichain.orai.aioracle.IAIOracleResult[]|null);

                /** GenesisState params */
                params?: (oraichain.orai.aioracle.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IGenesisState);

                /** GenesisState ai_oracles. */
                public ai_oracles: oraichain.orai.aioracle.IAIOracle[];

                /** GenesisState BaseReports. */
                public BaseReports: oraichain.orai.aioracle.IBaseReport[];

                /** GenesisState ai_oracle_results. */
                public ai_oracle_results: oraichain.orai.aioracle.IAIOracleResult[];

                /** GenesisState params. */
                public params?: (oraichain.orai.aioracle.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link oraichain.orai.aioracle.GenesisState.verify|verify} messages.
                 * @param m GenesisState message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IGenesisState, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.GenesisState;
            }

            /** Properties of a MsgSetAIOracleReq. */
            interface IMsgSetAIOracleReq {

                /** MsgSetAIOracleReq request_id */
                request_id?: (string|null);

                /** MsgSetAIOracleReq contract */
                contract?: (string|null);

                /** MsgSetAIOracleReq creator */
                creator?: (string|null);

                /** MsgSetAIOracleReq validator_count */
                validator_count?: (Long|null);

                /** MsgSetAIOracleReq fees */
                fees?: (string|null);

                /** MsgSetAIOracleReq input */
                input?: (Uint8Array|null);

                /** MsgSetAIOracleReq test_only */
                test_only?: (boolean|null);
            }

            /** Represents a MsgSetAIOracleReq. */
            class MsgSetAIOracleReq implements IMsgSetAIOracleReq {

                /**
                 * Constructs a new MsgSetAIOracleReq.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgSetAIOracleReq);

                /** MsgSetAIOracleReq request_id. */
                public request_id: string;

                /** MsgSetAIOracleReq contract. */
                public contract: string;

                /** MsgSetAIOracleReq creator. */
                public creator: string;

                /** MsgSetAIOracleReq validator_count. */
                public validator_count: Long;

                /** MsgSetAIOracleReq fees. */
                public fees: string;

                /** MsgSetAIOracleReq input. */
                public input: Uint8Array;

                /** MsgSetAIOracleReq test_only. */
                public test_only: boolean;

                /**
                 * Encodes the specified MsgSetAIOracleReq message. Does not implicitly {@link oraichain.orai.aioracle.MsgSetAIOracleReq.verify|verify} messages.
                 * @param m MsgSetAIOracleReq message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgSetAIOracleReq, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetAIOracleReq message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSetAIOracleReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgSetAIOracleReq;
            }

            /** Properties of a MsgSetAIOracleRes. */
            interface IMsgSetAIOracleRes {

                /** MsgSetAIOracleRes request_id */
                request_id?: (string|null);

                /** MsgSetAIOracleRes contract */
                contract?: (string|null);

                /** MsgSetAIOracleRes creator */
                creator?: (string|null);

                /** MsgSetAIOracleRes validator_count */
                validator_count?: (Long|null);

                /** MsgSetAIOracleRes fees */
                fees?: (string|null);

                /** MsgSetAIOracleRes input */
                input?: (Uint8Array|null);

                /** MsgSetAIOracleRes test_only */
                test_only?: (boolean|null);
            }

            /** Represents a MsgSetAIOracleRes. */
            class MsgSetAIOracleRes implements IMsgSetAIOracleRes {

                /**
                 * Constructs a new MsgSetAIOracleRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgSetAIOracleRes);

                /** MsgSetAIOracleRes request_id. */
                public request_id: string;

                /** MsgSetAIOracleRes contract. */
                public contract: string;

                /** MsgSetAIOracleRes creator. */
                public creator: string;

                /** MsgSetAIOracleRes validator_count. */
                public validator_count: Long;

                /** MsgSetAIOracleRes fees. */
                public fees: string;

                /** MsgSetAIOracleRes input. */
                public input: Uint8Array;

                /** MsgSetAIOracleRes test_only. */
                public test_only: boolean;

                /**
                 * Encodes the specified MsgSetAIOracleRes message. Does not implicitly {@link oraichain.orai.aioracle.MsgSetAIOracleRes.verify|verify} messages.
                 * @param m MsgSetAIOracleRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgSetAIOracleRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetAIOracleRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgSetAIOracleRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgSetAIOracleRes;
            }

            /** Properties of a MsgCreateReport. */
            interface IMsgCreateReport {

                /** MsgCreateReport base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateReport data_source_results */
                data_source_results?: (oraichain.orai.aioracle.IResult[]|null);

                /** MsgCreateReport result_status */
                result_status?: (string|null);

                /** MsgCreateReport aggregated_result */
                aggregated_result?: (Uint8Array|null);
            }

            /** Represents a MsgCreateReport. */
            class MsgCreateReport implements IMsgCreateReport {

                /**
                 * Constructs a new MsgCreateReport.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgCreateReport);

                /** MsgCreateReport base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateReport data_source_results. */
                public data_source_results: oraichain.orai.aioracle.IResult[];

                /** MsgCreateReport result_status. */
                public result_status: string;

                /** MsgCreateReport aggregated_result. */
                public aggregated_result: Uint8Array;

                /**
                 * Encodes the specified MsgCreateReport message. Does not implicitly {@link oraichain.orai.aioracle.MsgCreateReport.verify|verify} messages.
                 * @param m MsgCreateReport message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgCreateReport, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateReport message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgCreateReport;
            }

            /** Properties of a MsgCreateTestCaseReport. */
            interface IMsgCreateTestCaseReport {

                /** MsgCreateTestCaseReport base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateTestCaseReport results_with_test_case */
                results_with_test_case?: (oraichain.orai.aioracle.IResultWithTestCase[]|null);
            }

            /** Represents a MsgCreateTestCaseReport. */
            class MsgCreateTestCaseReport implements IMsgCreateTestCaseReport {

                /**
                 * Constructs a new MsgCreateTestCaseReport.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgCreateTestCaseReport);

                /** MsgCreateTestCaseReport base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateTestCaseReport results_with_test_case. */
                public results_with_test_case: oraichain.orai.aioracle.IResultWithTestCase[];

                /**
                 * Encodes the specified MsgCreateTestCaseReport message. Does not implicitly {@link oraichain.orai.aioracle.MsgCreateTestCaseReport.verify|verify} messages.
                 * @param m MsgCreateTestCaseReport message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgCreateTestCaseReport, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateTestCaseReport message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateTestCaseReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgCreateTestCaseReport;
            }

            /** Properties of a MsgCreateReportRes. */
            interface IMsgCreateReportRes {

                /** MsgCreateReportRes base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateReportRes data_source_results */
                data_source_results?: (oraichain.orai.aioracle.IResult[]|null);

                /** MsgCreateReportRes result_status */
                result_status?: (string|null);

                /** MsgCreateReportRes aggregated_result */
                aggregated_result?: (Uint8Array|null);
            }

            /** Represents a MsgCreateReportRes. */
            class MsgCreateReportRes implements IMsgCreateReportRes {

                /**
                 * Constructs a new MsgCreateReportRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgCreateReportRes);

                /** MsgCreateReportRes base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateReportRes data_source_results. */
                public data_source_results: oraichain.orai.aioracle.IResult[];

                /** MsgCreateReportRes result_status. */
                public result_status: string;

                /** MsgCreateReportRes aggregated_result. */
                public aggregated_result: Uint8Array;

                /**
                 * Encodes the specified MsgCreateReportRes message. Does not implicitly {@link oraichain.orai.aioracle.MsgCreateReportRes.verify|verify} messages.
                 * @param m MsgCreateReportRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgCreateReportRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateReportRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateReportRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgCreateReportRes;
            }

            /** Properties of a MsgCreateTestCaseReportRes. */
            interface IMsgCreateTestCaseReportRes {

                /** MsgCreateTestCaseReportRes base_report */
                base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateTestCaseReportRes results_with_test_case */
                results_with_test_case?: (oraichain.orai.aioracle.IResultWithTestCase[]|null);
            }

            /** Represents a MsgCreateTestCaseReportRes. */
            class MsgCreateTestCaseReportRes implements IMsgCreateTestCaseReportRes {

                /**
                 * Constructs a new MsgCreateTestCaseReportRes.
                 * @param [p] Properties to set
                 */
                constructor(p?: oraichain.orai.aioracle.IMsgCreateTestCaseReportRes);

                /** MsgCreateTestCaseReportRes base_report. */
                public base_report?: (oraichain.orai.aioracle.IBaseReport|null);

                /** MsgCreateTestCaseReportRes results_with_test_case. */
                public results_with_test_case: oraichain.orai.aioracle.IResultWithTestCase[];

                /**
                 * Encodes the specified MsgCreateTestCaseReportRes message. Does not implicitly {@link oraichain.orai.aioracle.MsgCreateTestCaseReportRes.verify|verify} messages.
                 * @param m MsgCreateTestCaseReportRes message or plain object to encode
                 * @param [w] Writer to encode to
                 * @returns Writer
                 */
                public static encode(m: oraichain.orai.aioracle.IMsgCreateTestCaseReportRes, w?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateTestCaseReportRes message from the specified reader or buffer.
                 * @param r Reader or buffer to decode from
                 * @param [l] Message length if known beforehand
                 * @returns MsgCreateTestCaseReportRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): oraichain.orai.aioracle.MsgCreateTestCaseReportRes;
            }
        }
    }
}
