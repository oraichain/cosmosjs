import * as $protobuf from "protobufjs";
/** Namespace oraichain. */
export namespace oraichain {

    /** Namespace orai. */
    namespace orai {

        /** Namespace airequest. */
        namespace airequest {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls QueryAIRequest.
                 * @param request QueryAIRequestReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAIRequestRes
                 */
                public queryAIRequest(request: oraichain.orai.airequest.IQueryAIRequestReq, callback: oraichain.orai.airequest.Query.QueryAIRequestCallback): void;

                /**
                 * Calls QueryAIRequest.
                 * @param request QueryAIRequestReq message or plain object
                 * @returns Promise
                 */
                public queryAIRequest(request: oraichain.orai.airequest.IQueryAIRequestReq): Promise<oraichain.orai.airequest.QueryAIRequestRes>;

                /**
                 * Calls QueryAIRequestIDs.
                 * @param request QueryAIRequestIDsReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAIRequestIDsRes
                 */
                public queryAIRequestIDs(request: oraichain.orai.airequest.IQueryAIRequestIDsReq, callback: oraichain.orai.airequest.Query.QueryAIRequestIDsCallback): void;

                /**
                 * Calls QueryAIRequestIDs.
                 * @param request QueryAIRequestIDsReq message or plain object
                 * @returns Promise
                 */
                public queryAIRequestIDs(request: oraichain.orai.airequest.IQueryAIRequestIDsReq): Promise<oraichain.orai.airequest.QueryAIRequestIDsRes>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link oraichain.orai.airequest.Query#queryAIRequest}.
                 * @param error Error, if any
                 * @param [response] QueryAIRequestRes
                 */
                type QueryAIRequestCallback = (error: (Error|null), response?: oraichain.orai.airequest.QueryAIRequestRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.airequest.Query#queryAIRequestIDs}.
                 * @param error Error, if any
                 * @param [response] QueryAIRequestIDsRes
                 */
                type QueryAIRequestIDsCallback = (error: (Error|null), response?: oraichain.orai.airequest.QueryAIRequestIDsRes) => void;
            }

            /** Properties of a QueryAIRequestReq. */
            interface IQueryAIRequestReq {

                /** QueryAIRequestReq request_id */
                request_id?: (string|null);
            }

            /** Represents a QueryAIRequestReq. */
            class QueryAIRequestReq implements IQueryAIRequestReq {

                /**
                 * Constructs a new QueryAIRequestReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IQueryAIRequestReq);

                /** QueryAIRequestReq request_id. */
                public request_id: string;

                /**
                 * Encodes the specified QueryAIRequestReq message. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestReq.verify|verify} messages.
                 * @param message QueryAIRequestReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IQueryAIRequestReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAIRequestReq message, length delimited. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestReq.verify|verify} messages.
                 * @param message QueryAIRequestReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IQueryAIRequestReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIRequestReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAIRequestReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.QueryAIRequestReq;

                /**
                 * Decodes a QueryAIRequestReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAIRequestReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.QueryAIRequestReq;

                /**
                 * Verifies a QueryAIRequestReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAIRequestReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAIRequestReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.QueryAIRequestReq;

                /**
                 * Creates a plain object from a QueryAIRequestReq message. Also converts values to other types if specified.
                 * @param message QueryAIRequestReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.QueryAIRequestReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAIRequestReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAIRequestRes. */
            interface IQueryAIRequestRes {

                /** QueryAIRequestRes request_id */
                request_id?: (string|null);

                /** QueryAIRequestRes oracle_script_name */
                oracle_script_name?: (string|null);

                /** QueryAIRequestRes creator */
                creator?: (Uint8Array|null);

                /** QueryAIRequestRes validators */
                validators?: (Uint8Array[]|null);

                /** QueryAIRequestRes block_height */
                block_height?: (Long|null);

                /** QueryAIRequestRes ai_data_sources */
                ai_data_sources?: (oraichain.orai.provider.IAIDataSource[]|null);

                /** QueryAIRequestRes test_cases */
                test_cases?: (oraichain.orai.provider.ITestCase[]|null);

                /** QueryAIRequestRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryAIRequestRes input */
                input?: (Uint8Array|null);

                /** QueryAIRequestRes output */
                output?: (Uint8Array|null);
            }

            /** Represents a QueryAIRequestRes. */
            class QueryAIRequestRes implements IQueryAIRequestRes {

                /**
                 * Constructs a new QueryAIRequestRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IQueryAIRequestRes);

                /** QueryAIRequestRes request_id. */
                public request_id: string;

                /** QueryAIRequestRes oracle_script_name. */
                public oracle_script_name: string;

                /** QueryAIRequestRes creator. */
                public creator: Uint8Array;

                /** QueryAIRequestRes validators. */
                public validators: Uint8Array[];

                /** QueryAIRequestRes block_height. */
                public block_height: Long;

                /** QueryAIRequestRes ai_data_sources. */
                public ai_data_sources: oraichain.orai.provider.IAIDataSource[];

                /** QueryAIRequestRes test_cases. */
                public test_cases: oraichain.orai.provider.ITestCase[];

                /** QueryAIRequestRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** QueryAIRequestRes input. */
                public input: Uint8Array;

                /** QueryAIRequestRes output. */
                public output: Uint8Array;

                /**
                 * Encodes the specified QueryAIRequestRes message. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestRes.verify|verify} messages.
                 * @param message QueryAIRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IQueryAIRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAIRequestRes message, length delimited. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestRes.verify|verify} messages.
                 * @param message QueryAIRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IQueryAIRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIRequestRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAIRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.QueryAIRequestRes;

                /**
                 * Decodes a QueryAIRequestRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAIRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.QueryAIRequestRes;

                /**
                 * Verifies a QueryAIRequestRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAIRequestRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAIRequestRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.QueryAIRequestRes;

                /**
                 * Creates a plain object from a QueryAIRequestRes message. Also converts values to other types if specified.
                 * @param message QueryAIRequestRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.QueryAIRequestRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAIRequestRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAIRequestIDsReq. */
            interface IQueryAIRequestIDsReq {

                /** QueryAIRequestIDsReq page */
                page?: (Long|null);

                /** QueryAIRequestIDsReq limit */
                limit?: (Long|null);
            }

            /** Represents a QueryAIRequestIDsReq. */
            class QueryAIRequestIDsReq implements IQueryAIRequestIDsReq {

                /**
                 * Constructs a new QueryAIRequestIDsReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IQueryAIRequestIDsReq);

                /** QueryAIRequestIDsReq page. */
                public page: Long;

                /** QueryAIRequestIDsReq limit. */
                public limit: Long;

                /**
                 * Encodes the specified QueryAIRequestIDsReq message. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestIDsReq.verify|verify} messages.
                 * @param message QueryAIRequestIDsReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IQueryAIRequestIDsReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAIRequestIDsReq message, length delimited. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestIDsReq.verify|verify} messages.
                 * @param message QueryAIRequestIDsReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IQueryAIRequestIDsReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIRequestIDsReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAIRequestIDsReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.QueryAIRequestIDsReq;

                /**
                 * Decodes a QueryAIRequestIDsReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAIRequestIDsReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.QueryAIRequestIDsReq;

                /**
                 * Verifies a QueryAIRequestIDsReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAIRequestIDsReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAIRequestIDsReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.QueryAIRequestIDsReq;

                /**
                 * Creates a plain object from a QueryAIRequestIDsReq message. Also converts values to other types if specified.
                 * @param message QueryAIRequestIDsReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.QueryAIRequestIDsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAIRequestIDsReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAIRequestIDsRes. */
            interface IQueryAIRequestIDsRes {

                /** QueryAIRequestIDsRes request_ids */
                request_ids?: (string[]|null);
            }

            /** Represents a QueryAIRequestIDsRes. */
            class QueryAIRequestIDsRes implements IQueryAIRequestIDsRes {

                /**
                 * Constructs a new QueryAIRequestIDsRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IQueryAIRequestIDsRes);

                /** QueryAIRequestIDsRes request_ids. */
                public request_ids: string[];

                /**
                 * Encodes the specified QueryAIRequestIDsRes message. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestIDsRes.verify|verify} messages.
                 * @param message QueryAIRequestIDsRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IQueryAIRequestIDsRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAIRequestIDsRes message, length delimited. Does not implicitly {@link oraichain.orai.airequest.QueryAIRequestIDsRes.verify|verify} messages.
                 * @param message QueryAIRequestIDsRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IQueryAIRequestIDsRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAIRequestIDsRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAIRequestIDsRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.QueryAIRequestIDsRes;

                /**
                 * Decodes a QueryAIRequestIDsRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAIRequestIDsRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.QueryAIRequestIDsRes;

                /**
                 * Verifies a QueryAIRequestIDsRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAIRequestIDsRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAIRequestIDsRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.QueryAIRequestIDsRes;

                /**
                 * Creates a plain object from a QueryAIRequestIDsRes message. Also converts values to other types if specified.
                 * @param message QueryAIRequestIDsRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.QueryAIRequestIDsRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAIRequestIDsRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState ai_requests */
                ai_requests?: (oraichain.orai.airequest.IAIRequest[]|null);

                /** GenesisState params */
                params?: (oraichain.orai.airequest.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IGenesisState);

                /** GenesisState ai_requests. */
                public ai_requests: oraichain.orai.airequest.IAIRequest[];

                /** GenesisState params. */
                public params?: (oraichain.orai.airequest.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link oraichain.orai.airequest.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link oraichain.orai.airequest.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a AIRequest. */
            interface IAIRequest {

                /** AIRequest request_id */
                request_id?: (string|null);

                /** AIRequest oracle_script_name */
                oracle_script_name?: (string|null);

                /** AIRequest creator */
                creator?: (Uint8Array|null);

                /** AIRequest validators */
                validators?: (Uint8Array[]|null);

                /** AIRequest block_height */
                block_height?: (Long|null);

                /** AIRequest ai_data_sources */
                ai_data_sources?: (oraichain.orai.provider.IAIDataSource[]|null);

                /** AIRequest test_cases */
                test_cases?: (oraichain.orai.provider.ITestCase[]|null);

                /** AIRequest fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** AIRequest input */
                input?: (Uint8Array|null);

                /** AIRequest expected_output */
                expected_output?: (Uint8Array|null);
            }

            /** Represents a AIRequest. */
            class AIRequest implements IAIRequest {

                /**
                 * Constructs a new AIRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IAIRequest);

                /** AIRequest request_id. */
                public request_id: string;

                /** AIRequest oracle_script_name. */
                public oracle_script_name: string;

                /** AIRequest creator. */
                public creator: Uint8Array;

                /** AIRequest validators. */
                public validators: Uint8Array[];

                /** AIRequest block_height. */
                public block_height: Long;

                /** AIRequest ai_data_sources. */
                public ai_data_sources: oraichain.orai.provider.IAIDataSource[];

                /** AIRequest test_cases. */
                public test_cases: oraichain.orai.provider.ITestCase[];

                /** AIRequest fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** AIRequest input. */
                public input: Uint8Array;

                /** AIRequest expected_output. */
                public expected_output: Uint8Array;

                /**
                 * Encodes the specified AIRequest message. Does not implicitly {@link oraichain.orai.airequest.AIRequest.verify|verify} messages.
                 * @param message AIRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IAIRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AIRequest message, length delimited. Does not implicitly {@link oraichain.orai.airequest.AIRequest.verify|verify} messages.
                 * @param message AIRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IAIRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a AIRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AIRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.AIRequest;

                /**
                 * Decodes a AIRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AIRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.AIRequest;

                /**
                 * Verifies a AIRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a AIRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AIRequest
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.AIRequest;

                /**
                 * Creates a plain object from a AIRequest message. Also converts values to other types if specified.
                 * @param message AIRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.AIRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AIRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params maximum_request_bytes */
                maximum_request_bytes?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IParams);

                /** Params maximum_request_bytes. */
                public maximum_request_bytes: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link oraichain.orai.airequest.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link oraichain.orai.airequest.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateAIRequest.
                 * @param request MsgSetAIRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetAIRequestRes
                 */
                public createAIRequest(request: oraichain.orai.airequest.IMsgSetAIRequest, callback: oraichain.orai.airequest.Msg.CreateAIRequestCallback): void;

                /**
                 * Calls CreateAIRequest.
                 * @param request MsgSetAIRequest message or plain object
                 * @returns Promise
                 */
                public createAIRequest(request: oraichain.orai.airequest.IMsgSetAIRequest): Promise<oraichain.orai.airequest.MsgSetAIRequestRes>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link oraichain.orai.airequest.Msg#createAIRequest}.
                 * @param error Error, if any
                 * @param [response] MsgSetAIRequestRes
                 */
                type CreateAIRequestCallback = (error: (Error|null), response?: oraichain.orai.airequest.MsgSetAIRequestRes) => void;
            }

            /** Properties of a MsgSetAIRequest. */
            interface IMsgSetAIRequest {

                /** MsgSetAIRequest request_id */
                request_id?: (string|null);

                /** MsgSetAIRequest oracle_script_name */
                oracle_script_name?: (string|null);

                /** MsgSetAIRequest creator */
                creator?: (Uint8Array|null);

                /** MsgSetAIRequest validator_count */
                validator_count?: (Long|null);

                /** MsgSetAIRequest fees */
                fees?: (string|null);

                /** MsgSetAIRequest input */
                input?: (Uint8Array|null);

                /** MsgSetAIRequest expected_output */
                expected_output?: (Uint8Array|null);
            }

            /** Represents a MsgSetAIRequest. */
            class MsgSetAIRequest implements IMsgSetAIRequest {

                /**
                 * Constructs a new MsgSetAIRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IMsgSetAIRequest);

                /** MsgSetAIRequest request_id. */
                public request_id: string;

                /** MsgSetAIRequest oracle_script_name. */
                public oracle_script_name: string;

                /** MsgSetAIRequest creator. */
                public creator: Uint8Array;

                /** MsgSetAIRequest validator_count. */
                public validator_count: Long;

                /** MsgSetAIRequest fees. */
                public fees: string;

                /** MsgSetAIRequest input. */
                public input: Uint8Array;

                /** MsgSetAIRequest expected_output. */
                public expected_output: Uint8Array;

                /**
                 * Encodes the specified MsgSetAIRequest message. Does not implicitly {@link oraichain.orai.airequest.MsgSetAIRequest.verify|verify} messages.
                 * @param message MsgSetAIRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IMsgSetAIRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetAIRequest message, length delimited. Does not implicitly {@link oraichain.orai.airequest.MsgSetAIRequest.verify|verify} messages.
                 * @param message MsgSetAIRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IMsgSetAIRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetAIRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetAIRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.MsgSetAIRequest;

                /**
                 * Decodes a MsgSetAIRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetAIRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.MsgSetAIRequest;

                /**
                 * Verifies a MsgSetAIRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetAIRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetAIRequest
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.MsgSetAIRequest;

                /**
                 * Creates a plain object from a MsgSetAIRequest message. Also converts values to other types if specified.
                 * @param message MsgSetAIRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.MsgSetAIRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetAIRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetAIRequestRes. */
            interface IMsgSetAIRequestRes {

                /** MsgSetAIRequestRes request_id */
                request_id?: (string|null);

                /** MsgSetAIRequestRes oracle_script_name */
                oracle_script_name?: (string|null);

                /** MsgSetAIRequestRes creator */
                creator?: (Uint8Array|null);

                /** MsgSetAIRequestRes validator_count */
                validator_count?: (Long|null);

                /** MsgSetAIRequestRes fees */
                fees?: (string|null);

                /** MsgSetAIRequestRes input */
                input?: (Uint8Array|null);

                /** MsgSetAIRequestRes expected_output */
                expected_output?: (Uint8Array|null);
            }

            /** Represents a MsgSetAIRequestRes. */
            class MsgSetAIRequestRes implements IMsgSetAIRequestRes {

                /**
                 * Constructs a new MsgSetAIRequestRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airequest.IMsgSetAIRequestRes);

                /** MsgSetAIRequestRes request_id. */
                public request_id: string;

                /** MsgSetAIRequestRes oracle_script_name. */
                public oracle_script_name: string;

                /** MsgSetAIRequestRes creator. */
                public creator: Uint8Array;

                /** MsgSetAIRequestRes validator_count. */
                public validator_count: Long;

                /** MsgSetAIRequestRes fees. */
                public fees: string;

                /** MsgSetAIRequestRes input. */
                public input: Uint8Array;

                /** MsgSetAIRequestRes expected_output. */
                public expected_output: Uint8Array;

                /**
                 * Encodes the specified MsgSetAIRequestRes message. Does not implicitly {@link oraichain.orai.airequest.MsgSetAIRequestRes.verify|verify} messages.
                 * @param message MsgSetAIRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airequest.IMsgSetAIRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetAIRequestRes message, length delimited. Does not implicitly {@link oraichain.orai.airequest.MsgSetAIRequestRes.verify|verify} messages.
                 * @param message MsgSetAIRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airequest.IMsgSetAIRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetAIRequestRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetAIRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airequest.MsgSetAIRequestRes;

                /**
                 * Decodes a MsgSetAIRequestRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetAIRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airequest.MsgSetAIRequestRes;

                /**
                 * Verifies a MsgSetAIRequestRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetAIRequestRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetAIRequestRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airequest.MsgSetAIRequestRes;

                /**
                 * Creates a plain object from a MsgSetAIRequestRes message. Also converts values to other types if specified.
                 * @param message MsgSetAIRequestRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airequest.MsgSetAIRequestRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetAIRequestRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace airesult. */
        namespace airesult {

            /** Properties of a Reward. */
            interface IReward {

                /** Reward validators */
                validators?: (oraichain.orai.websocket.IValidator[]|null);

                /** Reward data_sources */
                data_sources?: (oraichain.orai.provider.IAIDataSource[]|null);

                /** Reward test_cases */
                test_cases?: (oraichain.orai.provider.ITestCase[]|null);

                /** Reward block_height */
                block_height?: (Long|null);

                /** Reward total_power */
                total_power?: (Long|null);

                /** Reward provider_fees */
                provider_fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Reward validator_fees */
                validator_fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Reward. */
            class Reward implements IReward {

                /**
                 * Constructs a new Reward.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IReward);

                /** Reward validators. */
                public validators: oraichain.orai.websocket.IValidator[];

                /** Reward data_sources. */
                public data_sources: oraichain.orai.provider.IAIDataSource[];

                /** Reward test_cases. */
                public test_cases: oraichain.orai.provider.ITestCase[];

                /** Reward block_height. */
                public block_height: Long;

                /** Reward total_power. */
                public total_power: Long;

                /** Reward provider_fees. */
                public provider_fees: cosmos.base.v1beta1.ICoin[];

                /** Reward validator_fees. */
                public validator_fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Reward message. Does not implicitly {@link oraichain.orai.airesult.Reward.verify|verify} messages.
                 * @param message Reward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Reward message, length delimited. Does not implicitly {@link oraichain.orai.airesult.Reward.verify|verify} messages.
                 * @param message Reward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Reward message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Reward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.Reward;

                /**
                 * Decodes a Reward message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Reward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.Reward;

                /**
                 * Verifies a Reward message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Reward message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Reward
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.Reward;

                /**
                 * Creates a plain object from a Reward message. Also converts values to other types if specified.
                 * @param message Reward
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.Reward, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Reward to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls QueryFullRequest.
                 * @param request QueryFullRequestReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFullRequestRes
                 */
                public queryFullRequest(request: oraichain.orai.airesult.IQueryFullRequestReq, callback: oraichain.orai.airesult.Query.QueryFullRequestCallback): void;

                /**
                 * Calls QueryFullRequest.
                 * @param request QueryFullRequestReq message or plain object
                 * @returns Promise
                 */
                public queryFullRequest(request: oraichain.orai.airesult.IQueryFullRequestReq): Promise<oraichain.orai.airesult.QueryFullRequestRes>;

                /**
                 * Calls QueryReward.
                 * @param request QueryRewardReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryRewardRes
                 */
                public queryReward(request: oraichain.orai.airesult.IQueryRewardReq, callback: oraichain.orai.airesult.Query.QueryRewardCallback): void;

                /**
                 * Calls QueryReward.
                 * @param request QueryRewardReq message or plain object
                 * @returns Promise
                 */
                public queryReward(request: oraichain.orai.airesult.IQueryRewardReq): Promise<oraichain.orai.airesult.QueryRewardRes>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link oraichain.orai.airesult.Query#queryFullRequest}.
                 * @param error Error, if any
                 * @param [response] QueryFullRequestRes
                 */
                type QueryFullRequestCallback = (error: (Error|null), response?: oraichain.orai.airesult.QueryFullRequestRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.airesult.Query#queryReward}.
                 * @param error Error, if any
                 * @param [response] QueryRewardRes
                 */
                type QueryRewardCallback = (error: (Error|null), response?: oraichain.orai.airesult.QueryRewardRes) => void;
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState ai_request_results */
                ai_request_results?: (oraichain.orai.airesult.IAIRequestResult[]|null);

                /** GenesisState params */
                params?: (oraichain.orai.airesult.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IGenesisState);

                /** GenesisState ai_request_results. */
                public ai_request_results: oraichain.orai.airesult.IAIRequestResult[];

                /** GenesisState params. */
                public params?: (oraichain.orai.airesult.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link oraichain.orai.airesult.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link oraichain.orai.airesult.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params expiration_count */
                expiration_count?: (Long|null);

                /** Params total_reports */
                total_reports?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IParams);

                /** Params expiration_count. */
                public expiration_count: Long;

                /** Params total_reports. */
                public total_reports: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link oraichain.orai.airesult.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link oraichain.orai.airesult.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryRewardReq. */
            interface IQueryRewardReq {

                /** QueryRewardReq block_height */
                block_height?: (string|null);
            }

            /** Represents a QueryRewardReq. */
            class QueryRewardReq implements IQueryRewardReq {

                /**
                 * Constructs a new QueryRewardReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IQueryRewardReq);

                /** QueryRewardReq block_height. */
                public block_height: string;

                /**
                 * Encodes the specified QueryRewardReq message. Does not implicitly {@link oraichain.orai.airesult.QueryRewardReq.verify|verify} messages.
                 * @param message QueryRewardReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IQueryRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryRewardReq message, length delimited. Does not implicitly {@link oraichain.orai.airesult.QueryRewardReq.verify|verify} messages.
                 * @param message QueryRewardReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IQueryRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRewardReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryRewardReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.QueryRewardReq;

                /**
                 * Decodes a QueryRewardReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryRewardReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.QueryRewardReq;

                /**
                 * Verifies a QueryRewardReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryRewardReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryRewardReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.QueryRewardReq;

                /**
                 * Creates a plain object from a QueryRewardReq message. Also converts values to other types if specified.
                 * @param message QueryRewardReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.QueryRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryRewardReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryRewardRes. */
            interface IQueryRewardRes {

                /** QueryRewardRes reward */
                reward?: (oraichain.orai.airesult.IReward|null);
            }

            /** Represents a QueryRewardRes. */
            class QueryRewardRes implements IQueryRewardRes {

                /**
                 * Constructs a new QueryRewardRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IQueryRewardRes);

                /** QueryRewardRes reward. */
                public reward?: (oraichain.orai.airesult.IReward|null);

                /**
                 * Encodes the specified QueryRewardRes message. Does not implicitly {@link oraichain.orai.airesult.QueryRewardRes.verify|verify} messages.
                 * @param message QueryRewardRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IQueryRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryRewardRes message, length delimited. Does not implicitly {@link oraichain.orai.airesult.QueryRewardRes.verify|verify} messages.
                 * @param message QueryRewardRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IQueryRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRewardRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryRewardRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.QueryRewardRes;

                /**
                 * Decodes a QueryRewardRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryRewardRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.QueryRewardRes;

                /**
                 * Verifies a QueryRewardRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryRewardRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryRewardRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.QueryRewardRes;

                /**
                 * Creates a plain object from a QueryRewardRes message. Also converts values to other types if specified.
                 * @param message QueryRewardRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.QueryRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryRewardRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a AIRequestResult. */
            interface IAIRequestResult {

                /** AIRequestResult request_id */
                request_id?: (string|null);

                /** AIRequestResult results */
                results?: (oraichain.orai.websocket.IValResult[]|null);

                /** AIRequestResult status */
                status?: (string|null);
            }

            /** Represents a AIRequestResult. */
            class AIRequestResult implements IAIRequestResult {

                /**
                 * Constructs a new AIRequestResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IAIRequestResult);

                /** AIRequestResult request_id. */
                public request_id: string;

                /** AIRequestResult results. */
                public results: oraichain.orai.websocket.IValResult[];

                /** AIRequestResult status. */
                public status: string;

                /**
                 * Encodes the specified AIRequestResult message. Does not implicitly {@link oraichain.orai.airesult.AIRequestResult.verify|verify} messages.
                 * @param message AIRequestResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IAIRequestResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AIRequestResult message, length delimited. Does not implicitly {@link oraichain.orai.airesult.AIRequestResult.verify|verify} messages.
                 * @param message AIRequestResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IAIRequestResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a AIRequestResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AIRequestResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.AIRequestResult;

                /**
                 * Decodes a AIRequestResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AIRequestResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.AIRequestResult;

                /**
                 * Verifies a AIRequestResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a AIRequestResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AIRequestResult
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.AIRequestResult;

                /**
                 * Creates a plain object from a AIRequestResult message. Also converts values to other types if specified.
                 * @param message AIRequestResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.AIRequestResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AIRequestResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullRequestReq. */
            interface IQueryFullRequestReq {

                /** QueryFullRequestReq request_id */
                request_id?: (string|null);
            }

            /** Represents a QueryFullRequestReq. */
            class QueryFullRequestReq implements IQueryFullRequestReq {

                /**
                 * Constructs a new QueryFullRequestReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IQueryFullRequestReq);

                /** QueryFullRequestReq request_id. */
                public request_id: string;

                /**
                 * Encodes the specified QueryFullRequestReq message. Does not implicitly {@link oraichain.orai.airesult.QueryFullRequestReq.verify|verify} messages.
                 * @param message QueryFullRequestReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IQueryFullRequestReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullRequestReq message, length delimited. Does not implicitly {@link oraichain.orai.airesult.QueryFullRequestReq.verify|verify} messages.
                 * @param message QueryFullRequestReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IQueryFullRequestReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullRequestReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullRequestReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.QueryFullRequestReq;

                /**
                 * Decodes a QueryFullRequestReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullRequestReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.QueryFullRequestReq;

                /**
                 * Verifies a QueryFullRequestReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullRequestReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullRequestReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.QueryFullRequestReq;

                /**
                 * Creates a plain object from a QueryFullRequestReq message. Also converts values to other types if specified.
                 * @param message QueryFullRequestReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.QueryFullRequestReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullRequestReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullRequestRes. */
            interface IQueryFullRequestRes {

                /** QueryFullRequestRes ai_request */
                ai_request?: (oraichain.orai.airequest.IAIRequest|null);

                /** QueryFullRequestRes reports */
                reports?: (oraichain.orai.websocket.IReport[]|null);

                /** QueryFullRequestRes result */
                result?: (oraichain.orai.airesult.IAIRequestResult|null);
            }

            /** Represents a QueryFullRequestRes. */
            class QueryFullRequestRes implements IQueryFullRequestRes {

                /**
                 * Constructs a new QueryFullRequestRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.airesult.IQueryFullRequestRes);

                /** QueryFullRequestRes ai_request. */
                public ai_request?: (oraichain.orai.airequest.IAIRequest|null);

                /** QueryFullRequestRes reports. */
                public reports: oraichain.orai.websocket.IReport[];

                /** QueryFullRequestRes result. */
                public result?: (oraichain.orai.airesult.IAIRequestResult|null);

                /**
                 * Encodes the specified QueryFullRequestRes message. Does not implicitly {@link oraichain.orai.airesult.QueryFullRequestRes.verify|verify} messages.
                 * @param message QueryFullRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.airesult.IQueryFullRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullRequestRes message, length delimited. Does not implicitly {@link oraichain.orai.airesult.QueryFullRequestRes.verify|verify} messages.
                 * @param message QueryFullRequestRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.airesult.IQueryFullRequestRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullRequestRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.airesult.QueryFullRequestRes;

                /**
                 * Decodes a QueryFullRequestRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullRequestRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.airesult.QueryFullRequestRes;

                /**
                 * Verifies a QueryFullRequestRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullRequestRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullRequestRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.airesult.QueryFullRequestRes;

                /**
                 * Creates a plain object from a QueryFullRequestRes message. Also converts values to other types if specified.
                 * @param message QueryFullRequestRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.airesult.QueryFullRequestRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullRequestRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace provider. */
        namespace provider {

            /** Properties of a DataSourceInfoReq. */
            interface IDataSourceInfoReq {

                /** DataSourceInfoReq name */
                name?: (string|null);
            }

            /** Represents a DataSourceInfoReq. */
            class DataSourceInfoReq implements IDataSourceInfoReq {

                /**
                 * Constructs a new DataSourceInfoReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IDataSourceInfoReq);

                /** DataSourceInfoReq name. */
                public name: string;

                /**
                 * Encodes the specified DataSourceInfoReq message. Does not implicitly {@link oraichain.orai.provider.DataSourceInfoReq.verify|verify} messages.
                 * @param message DataSourceInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IDataSourceInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DataSourceInfoReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.DataSourceInfoReq.verify|verify} messages.
                 * @param message DataSourceInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IDataSourceInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DataSourceInfoReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataSourceInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.DataSourceInfoReq;

                /**
                 * Decodes a DataSourceInfoReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataSourceInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.DataSourceInfoReq;

                /**
                 * Verifies a DataSourceInfoReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataSourceInfoReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataSourceInfoReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.DataSourceInfoReq;

                /**
                 * Creates a plain object from a DataSourceInfoReq message. Also converts values to other types if specified.
                 * @param message DataSourceInfoReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.DataSourceInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataSourceInfoReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DataSourceInfoRes. */
            interface IDataSourceInfoRes {

                /** DataSourceInfoRes name */
                name?: (string|null);

                /** DataSourceInfoRes owner */
                owner?: (Uint8Array|null);

                /** DataSourceInfoRes contract */
                contract?: (string|null);

                /** DataSourceInfoRes description */
                description?: (string|null);

                /** DataSourceInfoRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a DataSourceInfoRes. */
            class DataSourceInfoRes implements IDataSourceInfoRes {

                /**
                 * Constructs a new DataSourceInfoRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IDataSourceInfoRes);

                /** DataSourceInfoRes name. */
                public name: string;

                /** DataSourceInfoRes owner. */
                public owner: Uint8Array;

                /** DataSourceInfoRes contract. */
                public contract: string;

                /** DataSourceInfoRes description. */
                public description: string;

                /** DataSourceInfoRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified DataSourceInfoRes message. Does not implicitly {@link oraichain.orai.provider.DataSourceInfoRes.verify|verify} messages.
                 * @param message DataSourceInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IDataSourceInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DataSourceInfoRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.DataSourceInfoRes.verify|verify} messages.
                 * @param message DataSourceInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IDataSourceInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DataSourceInfoRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataSourceInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.DataSourceInfoRes;

                /**
                 * Decodes a DataSourceInfoRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataSourceInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.DataSourceInfoRes;

                /**
                 * Verifies a DataSourceInfoRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataSourceInfoRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataSourceInfoRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.DataSourceInfoRes;

                /**
                 * Creates a plain object from a DataSourceInfoRes message. Also converts values to other types if specified.
                 * @param message DataSourceInfoRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.DataSourceInfoRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataSourceInfoRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListDataSourcesReq. */
            interface IListDataSourcesReq {

                /** ListDataSourcesReq name */
                name?: (string|null);

                /** ListDataSourcesReq page */
                page?: (Long|null);

                /** ListDataSourcesReq limit */
                limit?: (Long|null);
            }

            /** Represents a ListDataSourcesReq. */
            class ListDataSourcesReq implements IListDataSourcesReq {

                /**
                 * Constructs a new ListDataSourcesReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListDataSourcesReq);

                /** ListDataSourcesReq name. */
                public name: string;

                /** ListDataSourcesReq page. */
                public page: Long;

                /** ListDataSourcesReq limit. */
                public limit: Long;

                /**
                 * Encodes the specified ListDataSourcesReq message. Does not implicitly {@link oraichain.orai.provider.ListDataSourcesReq.verify|verify} messages.
                 * @param message ListDataSourcesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListDataSourcesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListDataSourcesReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListDataSourcesReq.verify|verify} messages.
                 * @param message ListDataSourcesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListDataSourcesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListDataSourcesReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListDataSourcesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListDataSourcesReq;

                /**
                 * Decodes a ListDataSourcesReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListDataSourcesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListDataSourcesReq;

                /**
                 * Verifies a ListDataSourcesReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListDataSourcesReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListDataSourcesReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListDataSourcesReq;

                /**
                 * Creates a plain object from a ListDataSourcesReq message. Also converts values to other types if specified.
                 * @param message ListDataSourcesReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListDataSourcesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListDataSourcesReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListDataSourcesRes. */
            interface IListDataSourcesRes {

                /** ListDataSourcesRes AIDataSources */
                AIDataSources?: (oraichain.orai.provider.IAIDataSource[]|null);

                /** ListDataSourcesRes count */
                count?: (Long|null);
            }

            /** Represents a ListDataSourcesRes. */
            class ListDataSourcesRes implements IListDataSourcesRes {

                /**
                 * Constructs a new ListDataSourcesRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListDataSourcesRes);

                /** ListDataSourcesRes AIDataSources. */
                public AIDataSources: oraichain.orai.provider.IAIDataSource[];

                /** ListDataSourcesRes count. */
                public count: Long;

                /**
                 * Encodes the specified ListDataSourcesRes message. Does not implicitly {@link oraichain.orai.provider.ListDataSourcesRes.verify|verify} messages.
                 * @param message ListDataSourcesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListDataSourcesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListDataSourcesRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListDataSourcesRes.verify|verify} messages.
                 * @param message ListDataSourcesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListDataSourcesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListDataSourcesRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListDataSourcesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListDataSourcesRes;

                /**
                 * Decodes a ListDataSourcesRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListDataSourcesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListDataSourcesRes;

                /**
                 * Verifies a ListDataSourcesRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListDataSourcesRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListDataSourcesRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListDataSourcesRes;

                /**
                 * Creates a plain object from a ListDataSourcesRes message. Also converts values to other types if specified.
                 * @param message ListDataSourcesRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListDataSourcesRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListDataSourcesRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateTestCase. */
            interface IMsgCreateTestCase {

                /** MsgCreateTestCase name */
                name?: (string|null);

                /** MsgCreateTestCase description */
                description?: (string|null);

                /** MsgCreateTestCase contract */
                contract?: (string|null);

                /** MsgCreateTestCase owner */
                owner?: (Uint8Array|null);

                /** MsgCreateTestCase fees */
                fees?: (string|null);
            }

            /** Represents a MsgCreateTestCase. */
            class MsgCreateTestCase implements IMsgCreateTestCase {

                /**
                 * Constructs a new MsgCreateTestCase.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateTestCase);

                /** MsgCreateTestCase name. */
                public name: string;

                /** MsgCreateTestCase description. */
                public description: string;

                /** MsgCreateTestCase contract. */
                public contract: string;

                /** MsgCreateTestCase owner. */
                public owner: Uint8Array;

                /** MsgCreateTestCase fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgCreateTestCase message. Does not implicitly {@link oraichain.orai.provider.MsgCreateTestCase.verify|verify} messages.
                 * @param message MsgCreateTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateTestCase message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateTestCase.verify|verify} messages.
                 * @param message MsgCreateTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateTestCase message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateTestCase;

                /**
                 * Decodes a MsgCreateTestCase message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateTestCase;

                /**
                 * Verifies a MsgCreateTestCase message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateTestCase message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateTestCase
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateTestCase;

                /**
                 * Creates a plain object from a MsgCreateTestCase message. Also converts values to other types if specified.
                 * @param message MsgCreateTestCase
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateTestCase, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateTestCase to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateTestCaseRes. */
            interface IMsgCreateTestCaseRes {

                /** MsgCreateTestCaseRes name */
                name?: (string|null);

                /** MsgCreateTestCaseRes description */
                description?: (string|null);

                /** MsgCreateTestCaseRes contract */
                contract?: (string|null);

                /** MsgCreateTestCaseRes owner */
                owner?: (Uint8Array|null);

                /** MsgCreateTestCaseRes fees */
                fees?: (string|null);
            }

            /** Represents a MsgCreateTestCaseRes. */
            class MsgCreateTestCaseRes implements IMsgCreateTestCaseRes {

                /**
                 * Constructs a new MsgCreateTestCaseRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateTestCaseRes);

                /** MsgCreateTestCaseRes name. */
                public name: string;

                /** MsgCreateTestCaseRes description. */
                public description: string;

                /** MsgCreateTestCaseRes contract. */
                public contract: string;

                /** MsgCreateTestCaseRes owner. */
                public owner: Uint8Array;

                /** MsgCreateTestCaseRes fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgCreateTestCaseRes message. Does not implicitly {@link oraichain.orai.provider.MsgCreateTestCaseRes.verify|verify} messages.
                 * @param message MsgCreateTestCaseRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateTestCaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateTestCaseRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateTestCaseRes.verify|verify} messages.
                 * @param message MsgCreateTestCaseRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateTestCaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateTestCaseRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateTestCaseRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateTestCaseRes;

                /**
                 * Decodes a MsgCreateTestCaseRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateTestCaseRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateTestCaseRes;

                /**
                 * Verifies a MsgCreateTestCaseRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateTestCaseRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateTestCaseRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateTestCaseRes;

                /**
                 * Creates a plain object from a MsgCreateTestCaseRes message. Also converts values to other types if specified.
                 * @param message MsgCreateTestCaseRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateTestCaseRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateTestCaseRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditTestCase. */
            interface IMsgEditTestCase {

                /** MsgEditTestCase old_name */
                old_name?: (string|null);

                /** MsgEditTestCase new_name */
                new_name?: (string|null);

                /** MsgEditTestCase description */
                description?: (string|null);

                /** MsgEditTestCase contract */
                contract?: (string|null);

                /** MsgEditTestCase owner */
                owner?: (Uint8Array|null);

                /** MsgEditTestCase fees */
                fees?: (string|null);
            }

            /** Represents a MsgEditTestCase. */
            class MsgEditTestCase implements IMsgEditTestCase {

                /**
                 * Constructs a new MsgEditTestCase.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditTestCase);

                /** MsgEditTestCase old_name. */
                public old_name: string;

                /** MsgEditTestCase new_name. */
                public new_name: string;

                /** MsgEditTestCase description. */
                public description: string;

                /** MsgEditTestCase contract. */
                public contract: string;

                /** MsgEditTestCase owner. */
                public owner: Uint8Array;

                /** MsgEditTestCase fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgEditTestCase message. Does not implicitly {@link oraichain.orai.provider.MsgEditTestCase.verify|verify} messages.
                 * @param message MsgEditTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditTestCase message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditTestCase.verify|verify} messages.
                 * @param message MsgEditTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditTestCase message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditTestCase;

                /**
                 * Decodes a MsgEditTestCase message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditTestCase;

                /**
                 * Verifies a MsgEditTestCase message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditTestCase message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditTestCase
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditTestCase;

                /**
                 * Creates a plain object from a MsgEditTestCase message. Also converts values to other types if specified.
                 * @param message MsgEditTestCase
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditTestCase, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditTestCase to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditTestCaseRes. */
            interface IMsgEditTestCaseRes {

                /** MsgEditTestCaseRes name */
                name?: (string|null);

                /** MsgEditTestCaseRes description */
                description?: (string|null);

                /** MsgEditTestCaseRes contract */
                contract?: (string|null);

                /** MsgEditTestCaseRes owner */
                owner?: (Uint8Array|null);

                /** MsgEditTestCaseRes fees */
                fees?: (string|null);
            }

            /** Represents a MsgEditTestCaseRes. */
            class MsgEditTestCaseRes implements IMsgEditTestCaseRes {

                /**
                 * Constructs a new MsgEditTestCaseRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditTestCaseRes);

                /** MsgEditTestCaseRes name. */
                public name: string;

                /** MsgEditTestCaseRes description. */
                public description: string;

                /** MsgEditTestCaseRes contract. */
                public contract: string;

                /** MsgEditTestCaseRes owner. */
                public owner: Uint8Array;

                /** MsgEditTestCaseRes fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgEditTestCaseRes message. Does not implicitly {@link oraichain.orai.provider.MsgEditTestCaseRes.verify|verify} messages.
                 * @param message MsgEditTestCaseRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditTestCaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditTestCaseRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditTestCaseRes.verify|verify} messages.
                 * @param message MsgEditTestCaseRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditTestCaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditTestCaseRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditTestCaseRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditTestCaseRes;

                /**
                 * Decodes a MsgEditTestCaseRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditTestCaseRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditTestCaseRes;

                /**
                 * Verifies a MsgEditTestCaseRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditTestCaseRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditTestCaseRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditTestCaseRes;

                /**
                 * Creates a plain object from a MsgEditTestCaseRes message. Also converts values to other types if specified.
                 * @param message MsgEditTestCaseRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditTestCaseRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditTestCaseRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleScript. */
            interface IOracleScript {

                /** OracleScript name */
                name?: (string|null);

                /** OracleScript contract */
                contract?: (string|null);

                /** OracleScript owner */
                owner?: (Uint8Array|null);

                /** OracleScript description */
                description?: (string|null);

                /** OracleScript minimum_fees */
                minimum_fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** OracleScript d_sources */
                d_sources?: (string[]|null);

                /** OracleScript t_cases */
                t_cases?: (string[]|null);
            }

            /** Represents an OracleScript. */
            class OracleScript implements IOracleScript {

                /**
                 * Constructs a new OracleScript.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IOracleScript);

                /** OracleScript name. */
                public name: string;

                /** OracleScript contract. */
                public contract: string;

                /** OracleScript owner. */
                public owner: Uint8Array;

                /** OracleScript description. */
                public description: string;

                /** OracleScript minimum_fees. */
                public minimum_fees: cosmos.base.v1beta1.ICoin[];

                /** OracleScript d_sources. */
                public d_sources: string[];

                /** OracleScript t_cases. */
                public t_cases: string[];

                /**
                 * Encodes the specified OracleScript message. Does not implicitly {@link oraichain.orai.provider.OracleScript.verify|verify} messages.
                 * @param message OracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleScript message, length delimited. Does not implicitly {@link oraichain.orai.provider.OracleScript.verify|verify} messages.
                 * @param message OracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleScript message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.OracleScript;

                /**
                 * Decodes an OracleScript message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.OracleScript;

                /**
                 * Verifies an OracleScript message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleScript message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleScript
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.OracleScript;

                /**
                 * Creates a plain object from an OracleScript message. Also converts values to other types if specified.
                 * @param message OracleScript
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.OracleScript, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleScript to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls DataSourceInfo.
                 * @param request DataSourceInfoReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and DataSourceInfoRes
                 */
                public dataSourceInfo(request: oraichain.orai.provider.IDataSourceInfoReq, callback: oraichain.orai.provider.Query.DataSourceInfoCallback): void;

                /**
                 * Calls DataSourceInfo.
                 * @param request DataSourceInfoReq message or plain object
                 * @returns Promise
                 */
                public dataSourceInfo(request: oraichain.orai.provider.IDataSourceInfoReq): Promise<oraichain.orai.provider.DataSourceInfoRes>;

                /**
                 * Calls ListDataSources.
                 * @param request ListDataSourcesReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and ListDataSourcesRes
                 */
                public listDataSources(request: oraichain.orai.provider.IListDataSourcesReq, callback: oraichain.orai.provider.Query.ListDataSourcesCallback): void;

                /**
                 * Calls ListDataSources.
                 * @param request ListDataSourcesReq message or plain object
                 * @returns Promise
                 */
                public listDataSources(request: oraichain.orai.provider.IListDataSourcesReq): Promise<oraichain.orai.provider.ListDataSourcesRes>;

                /**
                 * Calls OracleScriptInfo.
                 * @param request OracleScriptInfoReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and OracleScriptInfoRes
                 */
                public oracleScriptInfo(request: oraichain.orai.provider.IOracleScriptInfoReq, callback: oraichain.orai.provider.Query.OracleScriptInfoCallback): void;

                /**
                 * Calls OracleScriptInfo.
                 * @param request OracleScriptInfoReq message or plain object
                 * @returns Promise
                 */
                public oracleScriptInfo(request: oraichain.orai.provider.IOracleScriptInfoReq): Promise<oraichain.orai.provider.OracleScriptInfoRes>;

                /**
                 * Calls ListOracleScripts.
                 * @param request ListOracleScriptsReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and ListOracleScriptsRes
                 */
                public listOracleScripts(request: oraichain.orai.provider.IListOracleScriptsReq, callback: oraichain.orai.provider.Query.ListOracleScriptsCallback): void;

                /**
                 * Calls ListOracleScripts.
                 * @param request ListOracleScriptsReq message or plain object
                 * @returns Promise
                 */
                public listOracleScripts(request: oraichain.orai.provider.IListOracleScriptsReq): Promise<oraichain.orai.provider.ListOracleScriptsRes>;

                /**
                 * Calls TestCaseInfo.
                 * @param request TestCaseInfoReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and TestCaseInfoRes
                 */
                public testCaseInfo(request: oraichain.orai.provider.ITestCaseInfoReq, callback: oraichain.orai.provider.Query.TestCaseInfoCallback): void;

                /**
                 * Calls TestCaseInfo.
                 * @param request TestCaseInfoReq message or plain object
                 * @returns Promise
                 */
                public testCaseInfo(request: oraichain.orai.provider.ITestCaseInfoReq): Promise<oraichain.orai.provider.TestCaseInfoRes>;

                /**
                 * Calls ListTestCases.
                 * @param request ListTestCasesReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and ListTestCasesRes
                 */
                public listTestCases(request: oraichain.orai.provider.IListTestCasesReq, callback: oraichain.orai.provider.Query.ListTestCasesCallback): void;

                /**
                 * Calls ListTestCases.
                 * @param request ListTestCasesReq message or plain object
                 * @returns Promise
                 */
                public listTestCases(request: oraichain.orai.provider.IListTestCasesReq): Promise<oraichain.orai.provider.ListTestCasesRes>;

                /**
                 * Calls QueryMinFees.
                 * @param request MinFeesReq message or plain object
                 * @param callback Node-style callback called with the error, if any, and MinFeesRes
                 */
                public queryMinFees(request: oraichain.orai.provider.IMinFeesReq, callback: oraichain.orai.provider.Query.QueryMinFeesCallback): void;

                /**
                 * Calls QueryMinFees.
                 * @param request MinFeesReq message or plain object
                 * @returns Promise
                 */
                public queryMinFees(request: oraichain.orai.provider.IMinFeesReq): Promise<oraichain.orai.provider.MinFeesRes>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#dataSourceInfo}.
                 * @param error Error, if any
                 * @param [response] DataSourceInfoRes
                 */
                type DataSourceInfoCallback = (error: (Error|null), response?: oraichain.orai.provider.DataSourceInfoRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#listDataSources}.
                 * @param error Error, if any
                 * @param [response] ListDataSourcesRes
                 */
                type ListDataSourcesCallback = (error: (Error|null), response?: oraichain.orai.provider.ListDataSourcesRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#oracleScriptInfo}.
                 * @param error Error, if any
                 * @param [response] OracleScriptInfoRes
                 */
                type OracleScriptInfoCallback = (error: (Error|null), response?: oraichain.orai.provider.OracleScriptInfoRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#listOracleScripts}.
                 * @param error Error, if any
                 * @param [response] ListOracleScriptsRes
                 */
                type ListOracleScriptsCallback = (error: (Error|null), response?: oraichain.orai.provider.ListOracleScriptsRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#testCaseInfo}.
                 * @param error Error, if any
                 * @param [response] TestCaseInfoRes
                 */
                type TestCaseInfoCallback = (error: (Error|null), response?: oraichain.orai.provider.TestCaseInfoRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#listTestCases}.
                 * @param error Error, if any
                 * @param [response] ListTestCasesRes
                 */
                type ListTestCasesCallback = (error: (Error|null), response?: oraichain.orai.provider.ListTestCasesRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Query#queryMinFees}.
                 * @param error Error, if any
                 * @param [response] MinFeesRes
                 */
                type QueryMinFeesCallback = (error: (Error|null), response?: oraichain.orai.provider.MinFeesRes) => void;
            }

            /** Properties of a AIDataSource. */
            interface IAIDataSource {

                /** AIDataSource name */
                name?: (string|null);

                /** AIDataSource contract */
                contract?: (string|null);

                /** AIDataSource owner */
                owner?: (Uint8Array|null);

                /** AIDataSource description */
                description?: (string|null);

                /** AIDataSource fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a AIDataSource. */
            class AIDataSource implements IAIDataSource {

                /**
                 * Constructs a new AIDataSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IAIDataSource);

                /** AIDataSource name. */
                public name: string;

                /** AIDataSource contract. */
                public contract: string;

                /** AIDataSource owner. */
                public owner: Uint8Array;

                /** AIDataSource description. */
                public description: string;

                /** AIDataSource fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified AIDataSource message. Does not implicitly {@link oraichain.orai.provider.AIDataSource.verify|verify} messages.
                 * @param message AIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AIDataSource message, length delimited. Does not implicitly {@link oraichain.orai.provider.AIDataSource.verify|verify} messages.
                 * @param message AIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a AIDataSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.AIDataSource;

                /**
                 * Decodes a AIDataSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.AIDataSource;

                /**
                 * Verifies a AIDataSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a AIDataSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AIDataSource
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.AIDataSource;

                /**
                 * Creates a plain object from a AIDataSource message. Also converts values to other types if specified.
                 * @param message AIDataSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.AIDataSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AIDataSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState AIDataSources */
                AIDataSources?: (oraichain.orai.provider.IAIDataSource[]|null);

                /** GenesisState OracleScripts */
                OracleScripts?: (oraichain.orai.provider.IOracleScript[]|null);

                /** GenesisState TestCases */
                TestCases?: (oraichain.orai.provider.ITestCase[]|null);

                /** GenesisState params */
                params?: (oraichain.orai.provider.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IGenesisState);

                /** GenesisState AIDataSources. */
                public AIDataSources: oraichain.orai.provider.IAIDataSource[];

                /** GenesisState OracleScripts. */
                public OracleScripts: oraichain.orai.provider.IOracleScript[];

                /** GenesisState TestCases. */
                public TestCases: oraichain.orai.provider.ITestCase[];

                /** GenesisState params. */
                public params?: (oraichain.orai.provider.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link oraichain.orai.provider.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link oraichain.orai.provider.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params oracle_script_reward_percentage */
                oracle_script_reward_percentage?: (Long|null);

                /** Params maximum_code_bytes */
                maximum_code_bytes?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IParams);

                /** Params oracle_script_reward_percentage. */
                public oracle_script_reward_percentage: Long;

                /** Params maximum_code_bytes. */
                public maximum_code_bytes: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link oraichain.orai.provider.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link oraichain.orai.provider.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TestCase. */
            interface ITestCase {

                /** TestCase name */
                name?: (string|null);

                /** TestCase contract */
                contract?: (string|null);

                /** TestCase owner */
                owner?: (Uint8Array|null);

                /** TestCase description */
                description?: (string|null);

                /** TestCase fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a TestCase. */
            class TestCase implements ITestCase {

                /**
                 * Constructs a new TestCase.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.ITestCase);

                /** TestCase name. */
                public name: string;

                /** TestCase contract. */
                public contract: string;

                /** TestCase owner. */
                public owner: Uint8Array;

                /** TestCase description. */
                public description: string;

                /** TestCase fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified TestCase message. Does not implicitly {@link oraichain.orai.provider.TestCase.verify|verify} messages.
                 * @param message TestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.ITestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestCase message, length delimited. Does not implicitly {@link oraichain.orai.provider.TestCase.verify|verify} messages.
                 * @param message TestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.ITestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestCase message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.TestCase;

                /**
                 * Decodes a TestCase message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.TestCase;

                /**
                 * Verifies a TestCase message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestCase message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestCase
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.TestCase;

                /**
                 * Creates a plain object from a TestCase message. Also converts values to other types if specified.
                 * @param message TestCase
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.TestCase, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestCase to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateOracleScript. */
            interface IMsgCreateOracleScript {

                /** MsgCreateOracleScript name */
                name?: (string|null);

                /** MsgCreateOracleScript description */
                description?: (string|null);

                /** MsgCreateOracleScript contract */
                contract?: (string|null);

                /** MsgCreateOracleScript owner */
                owner?: (Uint8Array|null);

                /** MsgCreateOracleScript fees */
                fees?: (string|null);

                /** MsgCreateOracleScript data_sources */
                data_sources?: (string[]|null);

                /** MsgCreateOracleScript test_cases */
                test_cases?: (string[]|null);
            }

            /** Represents a MsgCreateOracleScript. */
            class MsgCreateOracleScript implements IMsgCreateOracleScript {

                /**
                 * Constructs a new MsgCreateOracleScript.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateOracleScript);

                /** MsgCreateOracleScript name. */
                public name: string;

                /** MsgCreateOracleScript description. */
                public description: string;

                /** MsgCreateOracleScript contract. */
                public contract: string;

                /** MsgCreateOracleScript owner. */
                public owner: Uint8Array;

                /** MsgCreateOracleScript fees. */
                public fees: string;

                /** MsgCreateOracleScript data_sources. */
                public data_sources: string[];

                /** MsgCreateOracleScript test_cases. */
                public test_cases: string[];

                /**
                 * Encodes the specified MsgCreateOracleScript message. Does not implicitly {@link oraichain.orai.provider.MsgCreateOracleScript.verify|verify} messages.
                 * @param message MsgCreateOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateOracleScript message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateOracleScript.verify|verify} messages.
                 * @param message MsgCreateOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateOracleScript message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateOracleScript;

                /**
                 * Decodes a MsgCreateOracleScript message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateOracleScript;

                /**
                 * Verifies a MsgCreateOracleScript message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateOracleScript message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateOracleScript
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateOracleScript;

                /**
                 * Creates a plain object from a MsgCreateOracleScript message. Also converts values to other types if specified.
                 * @param message MsgCreateOracleScript
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateOracleScript, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateOracleScript to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateOracleScriptRes. */
            interface IMsgCreateOracleScriptRes {

                /** MsgCreateOracleScriptRes name */
                name?: (string|null);

                /** MsgCreateOracleScriptRes description */
                description?: (string|null);

                /** MsgCreateOracleScriptRes contract */
                contract?: (string|null);

                /** MsgCreateOracleScriptRes owner */
                owner?: (Uint8Array|null);

                /** MsgCreateOracleScriptRes fees */
                fees?: (string|null);

                /** MsgCreateOracleScriptRes data_sources */
                data_sources?: (string[]|null);

                /** MsgCreateOracleScriptRes test_cases */
                test_cases?: (string[]|null);
            }

            /** Represents a MsgCreateOracleScriptRes. */
            class MsgCreateOracleScriptRes implements IMsgCreateOracleScriptRes {

                /**
                 * Constructs a new MsgCreateOracleScriptRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateOracleScriptRes);

                /** MsgCreateOracleScriptRes name. */
                public name: string;

                /** MsgCreateOracleScriptRes description. */
                public description: string;

                /** MsgCreateOracleScriptRes contract. */
                public contract: string;

                /** MsgCreateOracleScriptRes owner. */
                public owner: Uint8Array;

                /** MsgCreateOracleScriptRes fees. */
                public fees: string;

                /** MsgCreateOracleScriptRes data_sources. */
                public data_sources: string[];

                /** MsgCreateOracleScriptRes test_cases. */
                public test_cases: string[];

                /**
                 * Encodes the specified MsgCreateOracleScriptRes message. Does not implicitly {@link oraichain.orai.provider.MsgCreateOracleScriptRes.verify|verify} messages.
                 * @param message MsgCreateOracleScriptRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateOracleScriptRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateOracleScriptRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateOracleScriptRes.verify|verify} messages.
                 * @param message MsgCreateOracleScriptRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateOracleScriptRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateOracleScriptRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateOracleScriptRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateOracleScriptRes;

                /**
                 * Decodes a MsgCreateOracleScriptRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateOracleScriptRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateOracleScriptRes;

                /**
                 * Verifies a MsgCreateOracleScriptRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateOracleScriptRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateOracleScriptRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateOracleScriptRes;

                /**
                 * Creates a plain object from a MsgCreateOracleScriptRes message. Also converts values to other types if specified.
                 * @param message MsgCreateOracleScriptRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateOracleScriptRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateOracleScriptRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditOracleScript. */
            interface IMsgEditOracleScript {

                /** MsgEditOracleScript old_name */
                old_name?: (string|null);

                /** MsgEditOracleScript new_name */
                new_name?: (string|null);

                /** MsgEditOracleScript description */
                description?: (string|null);

                /** MsgEditOracleScript contract */
                contract?: (string|null);

                /** MsgEditOracleScript owner */
                owner?: (Uint8Array|null);

                /** MsgEditOracleScript fees */
                fees?: (string|null);

                /** MsgEditOracleScript data_sources */
                data_sources?: (string[]|null);

                /** MsgEditOracleScript test_cases */
                test_cases?: (string[]|null);
            }

            /** Represents a MsgEditOracleScript. */
            class MsgEditOracleScript implements IMsgEditOracleScript {

                /**
                 * Constructs a new MsgEditOracleScript.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditOracleScript);

                /** MsgEditOracleScript old_name. */
                public old_name: string;

                /** MsgEditOracleScript new_name. */
                public new_name: string;

                /** MsgEditOracleScript description. */
                public description: string;

                /** MsgEditOracleScript contract. */
                public contract: string;

                /** MsgEditOracleScript owner. */
                public owner: Uint8Array;

                /** MsgEditOracleScript fees. */
                public fees: string;

                /** MsgEditOracleScript data_sources. */
                public data_sources: string[];

                /** MsgEditOracleScript test_cases. */
                public test_cases: string[];

                /**
                 * Encodes the specified MsgEditOracleScript message. Does not implicitly {@link oraichain.orai.provider.MsgEditOracleScript.verify|verify} messages.
                 * @param message MsgEditOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditOracleScript message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditOracleScript.verify|verify} messages.
                 * @param message MsgEditOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditOracleScript message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditOracleScript;

                /**
                 * Decodes a MsgEditOracleScript message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditOracleScript;

                /**
                 * Verifies a MsgEditOracleScript message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditOracleScript message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditOracleScript
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditOracleScript;

                /**
                 * Creates a plain object from a MsgEditOracleScript message. Also converts values to other types if specified.
                 * @param message MsgEditOracleScript
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditOracleScript, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditOracleScript to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditOracleScriptRes. */
            interface IMsgEditOracleScriptRes {

                /** MsgEditOracleScriptRes name */
                name?: (string|null);

                /** MsgEditOracleScriptRes description */
                description?: (string|null);

                /** MsgEditOracleScriptRes contract */
                contract?: (string|null);

                /** MsgEditOracleScriptRes owner */
                owner?: (Uint8Array|null);

                /** MsgEditOracleScriptRes fees */
                fees?: (string|null);

                /** MsgEditOracleScriptRes data_sources */
                data_sources?: (string[]|null);

                /** MsgEditOracleScriptRes test_cases */
                test_cases?: (string[]|null);
            }

            /** Represents a MsgEditOracleScriptRes. */
            class MsgEditOracleScriptRes implements IMsgEditOracleScriptRes {

                /**
                 * Constructs a new MsgEditOracleScriptRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditOracleScriptRes);

                /** MsgEditOracleScriptRes name. */
                public name: string;

                /** MsgEditOracleScriptRes description. */
                public description: string;

                /** MsgEditOracleScriptRes contract. */
                public contract: string;

                /** MsgEditOracleScriptRes owner. */
                public owner: Uint8Array;

                /** MsgEditOracleScriptRes fees. */
                public fees: string;

                /** MsgEditOracleScriptRes data_sources. */
                public data_sources: string[];

                /** MsgEditOracleScriptRes test_cases. */
                public test_cases: string[];

                /**
                 * Encodes the specified MsgEditOracleScriptRes message. Does not implicitly {@link oraichain.orai.provider.MsgEditOracleScriptRes.verify|verify} messages.
                 * @param message MsgEditOracleScriptRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditOracleScriptRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditOracleScriptRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditOracleScriptRes.verify|verify} messages.
                 * @param message MsgEditOracleScriptRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditOracleScriptRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditOracleScriptRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditOracleScriptRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditOracleScriptRes;

                /**
                 * Decodes a MsgEditOracleScriptRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditOracleScriptRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditOracleScriptRes;

                /**
                 * Verifies a MsgEditOracleScriptRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditOracleScriptRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditOracleScriptRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditOracleScriptRes;

                /**
                 * Creates a plain object from a MsgEditOracleScriptRes message. Also converts values to other types if specified.
                 * @param message MsgEditOracleScriptRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditOracleScriptRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditOracleScriptRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateAIDataSource. */
            interface IMsgCreateAIDataSource {

                /** MsgCreateAIDataSource name */
                name?: (string|null);

                /** MsgCreateAIDataSource description */
                description?: (string|null);

                /** MsgCreateAIDataSource contract */
                contract?: (string|null);

                /** MsgCreateAIDataSource owner */
                owner?: (Uint8Array|null);

                /** MsgCreateAIDataSource fees */
                fees?: (string|null);
            }

            /** Represents a MsgCreateAIDataSource. */
            class MsgCreateAIDataSource implements IMsgCreateAIDataSource {

                /**
                 * Constructs a new MsgCreateAIDataSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateAIDataSource);

                /** MsgCreateAIDataSource name. */
                public name: string;

                /** MsgCreateAIDataSource description. */
                public description: string;

                /** MsgCreateAIDataSource contract. */
                public contract: string;

                /** MsgCreateAIDataSource owner. */
                public owner: Uint8Array;

                /** MsgCreateAIDataSource fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgCreateAIDataSource message. Does not implicitly {@link oraichain.orai.provider.MsgCreateAIDataSource.verify|verify} messages.
                 * @param message MsgCreateAIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateAIDataSource message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateAIDataSource.verify|verify} messages.
                 * @param message MsgCreateAIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateAIDataSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateAIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateAIDataSource;

                /**
                 * Decodes a MsgCreateAIDataSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateAIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateAIDataSource;

                /**
                 * Verifies a MsgCreateAIDataSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateAIDataSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateAIDataSource
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateAIDataSource;

                /**
                 * Creates a plain object from a MsgCreateAIDataSource message. Also converts values to other types if specified.
                 * @param message MsgCreateAIDataSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateAIDataSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateAIDataSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateAIDataSourceRes. */
            interface IMsgCreateAIDataSourceRes {

                /** MsgCreateAIDataSourceRes name */
                name?: (string|null);

                /** MsgCreateAIDataSourceRes description */
                description?: (string|null);

                /** MsgCreateAIDataSourceRes contract */
                contract?: (string|null);

                /** MsgCreateAIDataSourceRes owner */
                owner?: (Uint8Array|null);

                /** MsgCreateAIDataSourceRes fees */
                fees?: (string|null);
            }

            /** Represents a MsgCreateAIDataSourceRes. */
            class MsgCreateAIDataSourceRes implements IMsgCreateAIDataSourceRes {

                /**
                 * Constructs a new MsgCreateAIDataSourceRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgCreateAIDataSourceRes);

                /** MsgCreateAIDataSourceRes name. */
                public name: string;

                /** MsgCreateAIDataSourceRes description. */
                public description: string;

                /** MsgCreateAIDataSourceRes contract. */
                public contract: string;

                /** MsgCreateAIDataSourceRes owner. */
                public owner: Uint8Array;

                /** MsgCreateAIDataSourceRes fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgCreateAIDataSourceRes message. Does not implicitly {@link oraichain.orai.provider.MsgCreateAIDataSourceRes.verify|verify} messages.
                 * @param message MsgCreateAIDataSourceRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgCreateAIDataSourceRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateAIDataSourceRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgCreateAIDataSourceRes.verify|verify} messages.
                 * @param message MsgCreateAIDataSourceRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgCreateAIDataSourceRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateAIDataSourceRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateAIDataSourceRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgCreateAIDataSourceRes;

                /**
                 * Decodes a MsgCreateAIDataSourceRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateAIDataSourceRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgCreateAIDataSourceRes;

                /**
                 * Verifies a MsgCreateAIDataSourceRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateAIDataSourceRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateAIDataSourceRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgCreateAIDataSourceRes;

                /**
                 * Creates a plain object from a MsgCreateAIDataSourceRes message. Also converts values to other types if specified.
                 * @param message MsgCreateAIDataSourceRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgCreateAIDataSourceRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateAIDataSourceRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditAIDataSource. */
            interface IMsgEditAIDataSource {

                /** MsgEditAIDataSource old_name */
                old_name?: (string|null);

                /** MsgEditAIDataSource new_name */
                new_name?: (string|null);

                /** MsgEditAIDataSource description */
                description?: (string|null);

                /** MsgEditAIDataSource contract */
                contract?: (string|null);

                /** MsgEditAIDataSource owner */
                owner?: (Uint8Array|null);

                /** MsgEditAIDataSource fees */
                fees?: (string|null);
            }

            /** Represents a MsgEditAIDataSource. */
            class MsgEditAIDataSource implements IMsgEditAIDataSource {

                /**
                 * Constructs a new MsgEditAIDataSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditAIDataSource);

                /** MsgEditAIDataSource old_name. */
                public old_name: string;

                /** MsgEditAIDataSource new_name. */
                public new_name: string;

                /** MsgEditAIDataSource description. */
                public description: string;

                /** MsgEditAIDataSource contract. */
                public contract: string;

                /** MsgEditAIDataSource owner. */
                public owner: Uint8Array;

                /** MsgEditAIDataSource fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgEditAIDataSource message. Does not implicitly {@link oraichain.orai.provider.MsgEditAIDataSource.verify|verify} messages.
                 * @param message MsgEditAIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditAIDataSource message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditAIDataSource.verify|verify} messages.
                 * @param message MsgEditAIDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditAIDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditAIDataSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditAIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditAIDataSource;

                /**
                 * Decodes a MsgEditAIDataSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditAIDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditAIDataSource;

                /**
                 * Verifies a MsgEditAIDataSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditAIDataSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditAIDataSource
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditAIDataSource;

                /**
                 * Creates a plain object from a MsgEditAIDataSource message. Also converts values to other types if specified.
                 * @param message MsgEditAIDataSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditAIDataSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditAIDataSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditAIDataSourceRes. */
            interface IMsgEditAIDataSourceRes {

                /** MsgEditAIDataSourceRes name */
                name?: (string|null);

                /** MsgEditAIDataSourceRes description */
                description?: (string|null);

                /** MsgEditAIDataSourceRes contract */
                contract?: (string|null);

                /** MsgEditAIDataSourceRes owner */
                owner?: (Uint8Array|null);

                /** MsgEditAIDataSourceRes fees */
                fees?: (string|null);
            }

            /** Represents a MsgEditAIDataSourceRes. */
            class MsgEditAIDataSourceRes implements IMsgEditAIDataSourceRes {

                /**
                 * Constructs a new MsgEditAIDataSourceRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMsgEditAIDataSourceRes);

                /** MsgEditAIDataSourceRes name. */
                public name: string;

                /** MsgEditAIDataSourceRes description. */
                public description: string;

                /** MsgEditAIDataSourceRes contract. */
                public contract: string;

                /** MsgEditAIDataSourceRes owner. */
                public owner: Uint8Array;

                /** MsgEditAIDataSourceRes fees. */
                public fees: string;

                /**
                 * Encodes the specified MsgEditAIDataSourceRes message. Does not implicitly {@link oraichain.orai.provider.MsgEditAIDataSourceRes.verify|verify} messages.
                 * @param message MsgEditAIDataSourceRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMsgEditAIDataSourceRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditAIDataSourceRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MsgEditAIDataSourceRes.verify|verify} messages.
                 * @param message MsgEditAIDataSourceRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMsgEditAIDataSourceRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditAIDataSourceRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditAIDataSourceRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MsgEditAIDataSourceRes;

                /**
                 * Decodes a MsgEditAIDataSourceRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditAIDataSourceRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MsgEditAIDataSourceRes;

                /**
                 * Verifies a MsgEditAIDataSourceRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditAIDataSourceRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditAIDataSourceRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MsgEditAIDataSourceRes;

                /**
                 * Creates a plain object from a MsgEditAIDataSourceRes message. Also converts values to other types if specified.
                 * @param message MsgEditAIDataSourceRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MsgEditAIDataSourceRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditAIDataSourceRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleScriptInfoReq. */
            interface IOracleScriptInfoReq {

                /** OracleScriptInfoReq name */
                name?: (string|null);
            }

            /** Represents an OracleScriptInfoReq. */
            class OracleScriptInfoReq implements IOracleScriptInfoReq {

                /**
                 * Constructs a new OracleScriptInfoReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IOracleScriptInfoReq);

                /** OracleScriptInfoReq name. */
                public name: string;

                /**
                 * Encodes the specified OracleScriptInfoReq message. Does not implicitly {@link oraichain.orai.provider.OracleScriptInfoReq.verify|verify} messages.
                 * @param message OracleScriptInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IOracleScriptInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleScriptInfoReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.OracleScriptInfoReq.verify|verify} messages.
                 * @param message OracleScriptInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IOracleScriptInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleScriptInfoReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleScriptInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.OracleScriptInfoReq;

                /**
                 * Decodes an OracleScriptInfoReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleScriptInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.OracleScriptInfoReq;

                /**
                 * Verifies an OracleScriptInfoReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleScriptInfoReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleScriptInfoReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.OracleScriptInfoReq;

                /**
                 * Creates a plain object from an OracleScriptInfoReq message. Also converts values to other types if specified.
                 * @param message OracleScriptInfoReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.OracleScriptInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleScriptInfoReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleScriptInfoRes. */
            interface IOracleScriptInfoRes {

                /** OracleScriptInfoRes name */
                name?: (string|null);

                /** OracleScriptInfoRes owner */
                owner?: (Uint8Array|null);

                /** OracleScriptInfoRes contract */
                contract?: (string|null);

                /** OracleScriptInfoRes description */
                description?: (string|null);

                /** OracleScriptInfoRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** OracleScriptInfoRes d_sources */
                d_sources?: (string[]|null);

                /** OracleScriptInfoRes t_cases */
                t_cases?: (string[]|null);
            }

            /** Represents an OracleScriptInfoRes. */
            class OracleScriptInfoRes implements IOracleScriptInfoRes {

                /**
                 * Constructs a new OracleScriptInfoRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IOracleScriptInfoRes);

                /** OracleScriptInfoRes name. */
                public name: string;

                /** OracleScriptInfoRes owner. */
                public owner: Uint8Array;

                /** OracleScriptInfoRes contract. */
                public contract: string;

                /** OracleScriptInfoRes description. */
                public description: string;

                /** OracleScriptInfoRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** OracleScriptInfoRes d_sources. */
                public d_sources: string[];

                /** OracleScriptInfoRes t_cases. */
                public t_cases: string[];

                /**
                 * Encodes the specified OracleScriptInfoRes message. Does not implicitly {@link oraichain.orai.provider.OracleScriptInfoRes.verify|verify} messages.
                 * @param message OracleScriptInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IOracleScriptInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleScriptInfoRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.OracleScriptInfoRes.verify|verify} messages.
                 * @param message OracleScriptInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IOracleScriptInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleScriptInfoRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleScriptInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.OracleScriptInfoRes;

                /**
                 * Decodes an OracleScriptInfoRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleScriptInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.OracleScriptInfoRes;

                /**
                 * Verifies an OracleScriptInfoRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleScriptInfoRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleScriptInfoRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.OracleScriptInfoRes;

                /**
                 * Creates a plain object from an OracleScriptInfoRes message. Also converts values to other types if specified.
                 * @param message OracleScriptInfoRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.OracleScriptInfoRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleScriptInfoRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListOracleScriptsReq. */
            interface IListOracleScriptsReq {

                /** ListOracleScriptsReq name */
                name?: (string|null);

                /** ListOracleScriptsReq page */
                page?: (Long|null);

                /** ListOracleScriptsReq limit */
                limit?: (Long|null);
            }

            /** Represents a ListOracleScriptsReq. */
            class ListOracleScriptsReq implements IListOracleScriptsReq {

                /**
                 * Constructs a new ListOracleScriptsReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListOracleScriptsReq);

                /** ListOracleScriptsReq name. */
                public name: string;

                /** ListOracleScriptsReq page. */
                public page: Long;

                /** ListOracleScriptsReq limit. */
                public limit: Long;

                /**
                 * Encodes the specified ListOracleScriptsReq message. Does not implicitly {@link oraichain.orai.provider.ListOracleScriptsReq.verify|verify} messages.
                 * @param message ListOracleScriptsReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListOracleScriptsReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListOracleScriptsReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListOracleScriptsReq.verify|verify} messages.
                 * @param message ListOracleScriptsReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListOracleScriptsReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListOracleScriptsReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListOracleScriptsReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListOracleScriptsReq;

                /**
                 * Decodes a ListOracleScriptsReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListOracleScriptsReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListOracleScriptsReq;

                /**
                 * Verifies a ListOracleScriptsReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListOracleScriptsReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListOracleScriptsReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListOracleScriptsReq;

                /**
                 * Creates a plain object from a ListOracleScriptsReq message. Also converts values to other types if specified.
                 * @param message ListOracleScriptsReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListOracleScriptsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListOracleScriptsReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListOracleScriptsRes. */
            interface IListOracleScriptsRes {

                /** ListOracleScriptsRes OracleScripts */
                OracleScripts?: (oraichain.orai.provider.IOracleScript[]|null);

                /** ListOracleScriptsRes count */
                count?: (Long|null);
            }

            /** Represents a ListOracleScriptsRes. */
            class ListOracleScriptsRes implements IListOracleScriptsRes {

                /**
                 * Constructs a new ListOracleScriptsRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListOracleScriptsRes);

                /** ListOracleScriptsRes OracleScripts. */
                public OracleScripts: oraichain.orai.provider.IOracleScript[];

                /** ListOracleScriptsRes count. */
                public count: Long;

                /**
                 * Encodes the specified ListOracleScriptsRes message. Does not implicitly {@link oraichain.orai.provider.ListOracleScriptsRes.verify|verify} messages.
                 * @param message ListOracleScriptsRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListOracleScriptsRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListOracleScriptsRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListOracleScriptsRes.verify|verify} messages.
                 * @param message ListOracleScriptsRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListOracleScriptsRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListOracleScriptsRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListOracleScriptsRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListOracleScriptsRes;

                /**
                 * Decodes a ListOracleScriptsRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListOracleScriptsRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListOracleScriptsRes;

                /**
                 * Verifies a ListOracleScriptsRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListOracleScriptsRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListOracleScriptsRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListOracleScriptsRes;

                /**
                 * Creates a plain object from a ListOracleScriptsRes message. Also converts values to other types if specified.
                 * @param message ListOracleScriptsRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListOracleScriptsRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListOracleScriptsRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MinFeesReq. */
            interface IMinFeesReq {

                /** MinFeesReq OracleScriptName */
                OracleScriptName?: (string|null);

                /** MinFeesReq ValNum */
                ValNum?: (Long|null);
            }

            /** Represents a MinFeesReq. */
            class MinFeesReq implements IMinFeesReq {

                /**
                 * Constructs a new MinFeesReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMinFeesReq);

                /** MinFeesReq OracleScriptName. */
                public OracleScriptName: string;

                /** MinFeesReq ValNum. */
                public ValNum: Long;

                /**
                 * Encodes the specified MinFeesReq message. Does not implicitly {@link oraichain.orai.provider.MinFeesReq.verify|verify} messages.
                 * @param message MinFeesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMinFeesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MinFeesReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.MinFeesReq.verify|verify} messages.
                 * @param message MinFeesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMinFeesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinFeesReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MinFeesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MinFeesReq;

                /**
                 * Decodes a MinFeesReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MinFeesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MinFeesReq;

                /**
                 * Verifies a MinFeesReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MinFeesReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MinFeesReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MinFeesReq;

                /**
                 * Creates a plain object from a MinFeesReq message. Also converts values to other types if specified.
                 * @param message MinFeesReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MinFeesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MinFeesReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MinFeesRes. */
            interface IMinFeesRes {

                /** MinFeesRes minFees */
                minFees?: (string|null);
            }

            /** Represents a MinFeesRes. */
            class MinFeesRes implements IMinFeesRes {

                /**
                 * Constructs a new MinFeesRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IMinFeesRes);

                /** MinFeesRes minFees. */
                public minFees: string;

                /**
                 * Encodes the specified MinFeesRes message. Does not implicitly {@link oraichain.orai.provider.MinFeesRes.verify|verify} messages.
                 * @param message MinFeesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IMinFeesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MinFeesRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.MinFeesRes.verify|verify} messages.
                 * @param message MinFeesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IMinFeesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinFeesRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MinFeesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.MinFeesRes;

                /**
                 * Decodes a MinFeesRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MinFeesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.MinFeesRes;

                /**
                 * Verifies a MinFeesRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MinFeesRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MinFeesRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.MinFeesRes;

                /**
                 * Creates a plain object from a MinFeesRes message. Also converts values to other types if specified.
                 * @param message MinFeesRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.MinFeesRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MinFeesRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateAIDataSource.
                 * @param request MsgCreateAIDataSource message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateAIDataSourceRes
                 */
                public createAIDataSource(request: oraichain.orai.provider.IMsgCreateAIDataSource, callback: oraichain.orai.provider.Msg.CreateAIDataSourceCallback): void;

                /**
                 * Calls CreateAIDataSource.
                 * @param request MsgCreateAIDataSource message or plain object
                 * @returns Promise
                 */
                public createAIDataSource(request: oraichain.orai.provider.IMsgCreateAIDataSource): Promise<oraichain.orai.provider.MsgCreateAIDataSourceRes>;

                /**
                 * Calls EditAIDataSource.
                 * @param request MsgEditAIDataSource message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgEditAIDataSourceRes
                 */
                public editAIDataSource(request: oraichain.orai.provider.IMsgEditAIDataSource, callback: oraichain.orai.provider.Msg.EditAIDataSourceCallback): void;

                /**
                 * Calls EditAIDataSource.
                 * @param request MsgEditAIDataSource message or plain object
                 * @returns Promise
                 */
                public editAIDataSource(request: oraichain.orai.provider.IMsgEditAIDataSource): Promise<oraichain.orai.provider.MsgEditAIDataSourceRes>;

                /**
                 * Calls CreateOracleScript.
                 * @param request MsgCreateOracleScript message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateOracleScriptRes
                 */
                public createOracleScript(request: oraichain.orai.provider.IMsgCreateOracleScript, callback: oraichain.orai.provider.Msg.CreateOracleScriptCallback): void;

                /**
                 * Calls CreateOracleScript.
                 * @param request MsgCreateOracleScript message or plain object
                 * @returns Promise
                 */
                public createOracleScript(request: oraichain.orai.provider.IMsgCreateOracleScript): Promise<oraichain.orai.provider.MsgCreateOracleScriptRes>;

                /**
                 * Calls EditOracleScript.
                 * @param request MsgEditOracleScript message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgEditOracleScriptRes
                 */
                public editOracleScript(request: oraichain.orai.provider.IMsgEditOracleScript, callback: oraichain.orai.provider.Msg.EditOracleScriptCallback): void;

                /**
                 * Calls EditOracleScript.
                 * @param request MsgEditOracleScript message or plain object
                 * @returns Promise
                 */
                public editOracleScript(request: oraichain.orai.provider.IMsgEditOracleScript): Promise<oraichain.orai.provider.MsgEditOracleScriptRes>;

                /**
                 * Calls CreateTestCase.
                 * @param request MsgCreateTestCase message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateTestCaseRes
                 */
                public createTestCase(request: oraichain.orai.provider.IMsgCreateTestCase, callback: oraichain.orai.provider.Msg.CreateTestCaseCallback): void;

                /**
                 * Calls CreateTestCase.
                 * @param request MsgCreateTestCase message or plain object
                 * @returns Promise
                 */
                public createTestCase(request: oraichain.orai.provider.IMsgCreateTestCase): Promise<oraichain.orai.provider.MsgCreateTestCaseRes>;

                /**
                 * Calls EditTestCase.
                 * @param request MsgEditTestCase message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgEditTestCaseRes
                 */
                public editTestCase(request: oraichain.orai.provider.IMsgEditTestCase, callback: oraichain.orai.provider.Msg.EditTestCaseCallback): void;

                /**
                 * Calls EditTestCase.
                 * @param request MsgEditTestCase message or plain object
                 * @returns Promise
                 */
                public editTestCase(request: oraichain.orai.provider.IMsgEditTestCase): Promise<oraichain.orai.provider.MsgEditTestCaseRes>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#createAIDataSource}.
                 * @param error Error, if any
                 * @param [response] MsgCreateAIDataSourceRes
                 */
                type CreateAIDataSourceCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgCreateAIDataSourceRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#editAIDataSource}.
                 * @param error Error, if any
                 * @param [response] MsgEditAIDataSourceRes
                 */
                type EditAIDataSourceCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgEditAIDataSourceRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#createOracleScript}.
                 * @param error Error, if any
                 * @param [response] MsgCreateOracleScriptRes
                 */
                type CreateOracleScriptCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgCreateOracleScriptRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#editOracleScript}.
                 * @param error Error, if any
                 * @param [response] MsgEditOracleScriptRes
                 */
                type EditOracleScriptCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgEditOracleScriptRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#createTestCase}.
                 * @param error Error, if any
                 * @param [response] MsgCreateTestCaseRes
                 */
                type CreateTestCaseCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgCreateTestCaseRes) => void;

                /**
                 * Callback as used by {@link oraichain.orai.provider.Msg#editTestCase}.
                 * @param error Error, if any
                 * @param [response] MsgEditTestCaseRes
                 */
                type EditTestCaseCallback = (error: (Error|null), response?: oraichain.orai.provider.MsgEditTestCaseRes) => void;
            }

            /** Properties of a TestCaseInfoReq. */
            interface ITestCaseInfoReq {

                /** TestCaseInfoReq name */
                name?: (string|null);
            }

            /** Represents a TestCaseInfoReq. */
            class TestCaseInfoReq implements ITestCaseInfoReq {

                /**
                 * Constructs a new TestCaseInfoReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.ITestCaseInfoReq);

                /** TestCaseInfoReq name. */
                public name: string;

                /**
                 * Encodes the specified TestCaseInfoReq message. Does not implicitly {@link oraichain.orai.provider.TestCaseInfoReq.verify|verify} messages.
                 * @param message TestCaseInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.ITestCaseInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestCaseInfoReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.TestCaseInfoReq.verify|verify} messages.
                 * @param message TestCaseInfoReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.ITestCaseInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestCaseInfoReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestCaseInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.TestCaseInfoReq;

                /**
                 * Decodes a TestCaseInfoReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestCaseInfoReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.TestCaseInfoReq;

                /**
                 * Verifies a TestCaseInfoReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestCaseInfoReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestCaseInfoReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.TestCaseInfoReq;

                /**
                 * Creates a plain object from a TestCaseInfoReq message. Also converts values to other types if specified.
                 * @param message TestCaseInfoReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.TestCaseInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestCaseInfoReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TestCaseInfoRes. */
            interface ITestCaseInfoRes {

                /** TestCaseInfoRes name */
                name?: (string|null);

                /** TestCaseInfoRes owner */
                owner?: (Uint8Array|null);

                /** TestCaseInfoRes contract */
                contract?: (string|null);

                /** TestCaseInfoRes description */
                description?: (string|null);

                /** TestCaseInfoRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a TestCaseInfoRes. */
            class TestCaseInfoRes implements ITestCaseInfoRes {

                /**
                 * Constructs a new TestCaseInfoRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.ITestCaseInfoRes);

                /** TestCaseInfoRes name. */
                public name: string;

                /** TestCaseInfoRes owner. */
                public owner: Uint8Array;

                /** TestCaseInfoRes contract. */
                public contract: string;

                /** TestCaseInfoRes description. */
                public description: string;

                /** TestCaseInfoRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified TestCaseInfoRes message. Does not implicitly {@link oraichain.orai.provider.TestCaseInfoRes.verify|verify} messages.
                 * @param message TestCaseInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.ITestCaseInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestCaseInfoRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.TestCaseInfoRes.verify|verify} messages.
                 * @param message TestCaseInfoRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.ITestCaseInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestCaseInfoRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestCaseInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.TestCaseInfoRes;

                /**
                 * Decodes a TestCaseInfoRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestCaseInfoRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.TestCaseInfoRes;

                /**
                 * Verifies a TestCaseInfoRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestCaseInfoRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestCaseInfoRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.TestCaseInfoRes;

                /**
                 * Creates a plain object from a TestCaseInfoRes message. Also converts values to other types if specified.
                 * @param message TestCaseInfoRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.TestCaseInfoRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestCaseInfoRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListTestCasesReq. */
            interface IListTestCasesReq {

                /** ListTestCasesReq name */
                name?: (string|null);

                /** ListTestCasesReq page */
                page?: (Long|null);

                /** ListTestCasesReq limit */
                limit?: (Long|null);
            }

            /** Represents a ListTestCasesReq. */
            class ListTestCasesReq implements IListTestCasesReq {

                /**
                 * Constructs a new ListTestCasesReq.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListTestCasesReq);

                /** ListTestCasesReq name. */
                public name: string;

                /** ListTestCasesReq page. */
                public page: Long;

                /** ListTestCasesReq limit. */
                public limit: Long;

                /**
                 * Encodes the specified ListTestCasesReq message. Does not implicitly {@link oraichain.orai.provider.ListTestCasesReq.verify|verify} messages.
                 * @param message ListTestCasesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListTestCasesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListTestCasesReq message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListTestCasesReq.verify|verify} messages.
                 * @param message ListTestCasesReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListTestCasesReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListTestCasesReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListTestCasesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListTestCasesReq;

                /**
                 * Decodes a ListTestCasesReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListTestCasesReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListTestCasesReq;

                /**
                 * Verifies a ListTestCasesReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListTestCasesReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListTestCasesReq
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListTestCasesReq;

                /**
                 * Creates a plain object from a ListTestCasesReq message. Also converts values to other types if specified.
                 * @param message ListTestCasesReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListTestCasesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListTestCasesReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListTestCasesRes. */
            interface IListTestCasesRes {

                /** ListTestCasesRes TestCases */
                TestCases?: (oraichain.orai.provider.ITestCase[]|null);

                /** ListTestCasesRes count */
                count?: (Long|null);
            }

            /** Represents a ListTestCasesRes. */
            class ListTestCasesRes implements IListTestCasesRes {

                /**
                 * Constructs a new ListTestCasesRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.provider.IListTestCasesRes);

                /** ListTestCasesRes TestCases. */
                public TestCases: oraichain.orai.provider.ITestCase[];

                /** ListTestCasesRes count. */
                public count: Long;

                /**
                 * Encodes the specified ListTestCasesRes message. Does not implicitly {@link oraichain.orai.provider.ListTestCasesRes.verify|verify} messages.
                 * @param message ListTestCasesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.provider.IListTestCasesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListTestCasesRes message, length delimited. Does not implicitly {@link oraichain.orai.provider.ListTestCasesRes.verify|verify} messages.
                 * @param message ListTestCasesRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.provider.IListTestCasesRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListTestCasesRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListTestCasesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.provider.ListTestCasesRes;

                /**
                 * Decodes a ListTestCasesRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListTestCasesRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.provider.ListTestCasesRes;

                /**
                 * Verifies a ListTestCasesRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListTestCasesRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListTestCasesRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.provider.ListTestCasesRes;

                /**
                 * Creates a plain object from a ListTestCasesRes message. Also converts values to other types if specified.
                 * @param message ListTestCasesRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.provider.ListTestCasesRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListTestCasesRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace websocket. */
        namespace websocket {

            /** Properties of a Reporter. */
            interface IReporter {

                /** Reporter address */
                address?: (Uint8Array|null);

                /** Reporter name */
                name?: (string|null);

                /** Reporter validator */
                validator?: (Uint8Array|null);
            }

            /** Represents a Reporter. */
            class Reporter implements IReporter {

                /**
                 * Constructs a new Reporter.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IReporter);

                /** Reporter address. */
                public address: Uint8Array;

                /** Reporter name. */
                public name: string;

                /** Reporter validator. */
                public validator: Uint8Array;

                /**
                 * Encodes the specified Reporter message. Does not implicitly {@link oraichain.orai.websocket.Reporter.verify|verify} messages.
                 * @param message Reporter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IReporter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Reporter message, length delimited. Does not implicitly {@link oraichain.orai.websocket.Reporter.verify|verify} messages.
                 * @param message Reporter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IReporter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Reporter message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Reporter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.Reporter;

                /**
                 * Decodes a Reporter message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Reporter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.Reporter;

                /**
                 * Verifies a Reporter message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Reporter message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Reporter
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.Reporter;

                /**
                 * Creates a plain object from a Reporter message. Also converts values to other types if specified.
                 * @param message Reporter
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.Reporter, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Reporter to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls OracleContract.
                 * @param request QueryOracleContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and ResponseContract
                 */
                public oracleContract(request: oraichain.orai.websocket.IQueryOracleContract, callback: oraichain.orai.websocket.Query.OracleContractCallback): void;

                /**
                 * Calls OracleContract.
                 * @param request QueryOracleContract message or plain object
                 * @returns Promise
                 */
                public oracleContract(request: oraichain.orai.websocket.IQueryOracleContract): Promise<oraichain.orai.websocket.ResponseContract>;

                /**
                 * Calls DataSourceContract.
                 * @param request QueryDataSourceContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and ResponseContract
                 */
                public dataSourceContract(request: oraichain.orai.websocket.IQueryDataSourceContract, callback: oraichain.orai.websocket.Query.DataSourceContractCallback): void;

                /**
                 * Calls DataSourceContract.
                 * @param request QueryDataSourceContract message or plain object
                 * @returns Promise
                 */
                public dataSourceContract(request: oraichain.orai.websocket.IQueryDataSourceContract): Promise<oraichain.orai.websocket.ResponseContract>;

                /**
                 * Calls TestCaseContract.
                 * @param request QueryTestCaseContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and ResponseContract
                 */
                public testCaseContract(request: oraichain.orai.websocket.IQueryTestCaseContract, callback: oraichain.orai.websocket.Query.TestCaseContractCallback): void;

                /**
                 * Calls TestCaseContract.
                 * @param request QueryTestCaseContract message or plain object
                 * @returns Promise
                 */
                public testCaseContract(request: oraichain.orai.websocket.IQueryTestCaseContract): Promise<oraichain.orai.websocket.ResponseContract>;

                /**
                 * Calls OracleScriptContract.
                 * @param request QueryOracleScriptContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and ResponseContract
                 */
                public oracleScriptContract(request: oraichain.orai.websocket.IQueryOracleScriptContract, callback: oraichain.orai.websocket.Query.OracleScriptContractCallback): void;

                /**
                 * Calls OracleScriptContract.
                 * @param request QueryOracleScriptContract message or plain object
                 * @returns Promise
                 */
                public oracleScriptContract(request: oraichain.orai.websocket.IQueryOracleScriptContract): Promise<oraichain.orai.websocket.ResponseContract>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link oraichain.orai.websocket.Query#oracleContract}.
                 * @param error Error, if any
                 * @param [response] ResponseContract
                 */
                type OracleContractCallback = (error: (Error|null), response?: oraichain.orai.websocket.ResponseContract) => void;

                /**
                 * Callback as used by {@link oraichain.orai.websocket.Query#dataSourceContract}.
                 * @param error Error, if any
                 * @param [response] ResponseContract
                 */
                type DataSourceContractCallback = (error: (Error|null), response?: oraichain.orai.websocket.ResponseContract) => void;

                /**
                 * Callback as used by {@link oraichain.orai.websocket.Query#testCaseContract}.
                 * @param error Error, if any
                 * @param [response] ResponseContract
                 */
                type TestCaseContractCallback = (error: (Error|null), response?: oraichain.orai.websocket.ResponseContract) => void;

                /**
                 * Callback as used by {@link oraichain.orai.websocket.Query#oracleScriptContract}.
                 * @param error Error, if any
                 * @param [response] ResponseContract
                 */
                type OracleScriptContractCallback = (error: (Error|null), response?: oraichain.orai.websocket.ResponseContract) => void;
            }

            /** Properties of a MsgCreateReport. */
            interface IMsgCreateReport {

                /** MsgCreateReport requestID */
                requestID?: (string|null);

                /** MsgCreateReport DataSourceResults */
                DataSourceResults?: (oraichain.orai.websocket.IDataSourceResult[]|null);

                /** MsgCreateReport TestCaseResults */
                TestCaseResults?: (oraichain.orai.websocket.ITestCaseResult[]|null);

                /** MsgCreateReport reporter */
                reporter?: (oraichain.orai.websocket.IReporter|null);

                /** MsgCreateReport fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgCreateReport aggregatedResult */
                aggregatedResult?: (Uint8Array|null);

                /** MsgCreateReport resultStatus */
                resultStatus?: (string|null);
            }

            /** Represents a MsgCreateReport. */
            class MsgCreateReport implements IMsgCreateReport {

                /**
                 * Constructs a new MsgCreateReport.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IMsgCreateReport);

                /** MsgCreateReport requestID. */
                public requestID: string;

                /** MsgCreateReport DataSourceResults. */
                public DataSourceResults: oraichain.orai.websocket.IDataSourceResult[];

                /** MsgCreateReport TestCaseResults. */
                public TestCaseResults: oraichain.orai.websocket.ITestCaseResult[];

                /** MsgCreateReport reporter. */
                public reporter?: (oraichain.orai.websocket.IReporter|null);

                /** MsgCreateReport fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** MsgCreateReport aggregatedResult. */
                public aggregatedResult: Uint8Array;

                /** MsgCreateReport resultStatus. */
                public resultStatus: string;

                /**
                 * Encodes the specified MsgCreateReport message. Does not implicitly {@link oraichain.orai.websocket.MsgCreateReport.verify|verify} messages.
                 * @param message MsgCreateReport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IMsgCreateReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateReport message, length delimited. Does not implicitly {@link oraichain.orai.websocket.MsgCreateReport.verify|verify} messages.
                 * @param message MsgCreateReport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IMsgCreateReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateReport message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.MsgCreateReport;

                /**
                 * Decodes a MsgCreateReport message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.MsgCreateReport;

                /**
                 * Verifies a MsgCreateReport message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateReport message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateReport
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.MsgCreateReport;

                /**
                 * Creates a plain object from a MsgCreateReport message. Also converts values to other types if specified.
                 * @param message MsgCreateReport
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.MsgCreateReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateReport to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateReportRes. */
            interface IMsgCreateReportRes {

                /** MsgCreateReportRes requestID */
                requestID?: (string|null);

                /** MsgCreateReportRes DataSourceResults */
                DataSourceResults?: (oraichain.orai.websocket.IDataSourceResult[]|null);

                /** MsgCreateReportRes TestCaseResults */
                TestCaseResults?: (oraichain.orai.websocket.ITestCaseResult[]|null);

                /** MsgCreateReportRes reporter */
                reporter?: (oraichain.orai.websocket.IReporter|null);

                /** MsgCreateReportRes fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgCreateReportRes aggregatedResult */
                aggregatedResult?: (Uint8Array|null);

                /** MsgCreateReportRes resultStatus */
                resultStatus?: (string|null);
            }

            /** Represents a MsgCreateReportRes. */
            class MsgCreateReportRes implements IMsgCreateReportRes {

                /**
                 * Constructs a new MsgCreateReportRes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IMsgCreateReportRes);

                /** MsgCreateReportRes requestID. */
                public requestID: string;

                /** MsgCreateReportRes DataSourceResults. */
                public DataSourceResults: oraichain.orai.websocket.IDataSourceResult[];

                /** MsgCreateReportRes TestCaseResults. */
                public TestCaseResults: oraichain.orai.websocket.ITestCaseResult[];

                /** MsgCreateReportRes reporter. */
                public reporter?: (oraichain.orai.websocket.IReporter|null);

                /** MsgCreateReportRes fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** MsgCreateReportRes aggregatedResult. */
                public aggregatedResult: Uint8Array;

                /** MsgCreateReportRes resultStatus. */
                public resultStatus: string;

                /**
                 * Encodes the specified MsgCreateReportRes message. Does not implicitly {@link oraichain.orai.websocket.MsgCreateReportRes.verify|verify} messages.
                 * @param message MsgCreateReportRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IMsgCreateReportRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateReportRes message, length delimited. Does not implicitly {@link oraichain.orai.websocket.MsgCreateReportRes.verify|verify} messages.
                 * @param message MsgCreateReportRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IMsgCreateReportRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateReportRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateReportRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.MsgCreateReportRes;

                /**
                 * Decodes a MsgCreateReportRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateReportRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.MsgCreateReportRes;

                /**
                 * Verifies a MsgCreateReportRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateReportRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateReportRes
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.MsgCreateReportRes;

                /**
                 * Creates a plain object from a MsgCreateReportRes message. Also converts values to other types if specified.
                 * @param message MsgCreateReportRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.MsgCreateReportRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateReportRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Report. */
            interface IReport {

                /** Report requestID */
                requestID?: (string|null);

                /** Report DataSourceResults */
                DataSourceResults?: (oraichain.orai.websocket.IDataSourceResult[]|null);

                /** Report TestCaseResults */
                TestCaseResults?: (oraichain.orai.websocket.ITestCaseResult[]|null);

                /** Report blockHeight */
                blockHeight?: (Long|null);

                /** Report fees */
                fees?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Report aggregatedResult */
                aggregatedResult?: (Uint8Array|null);

                /** Report resultStatus */
                resultStatus?: (string|null);

                /** Report reporter */
                reporter?: (oraichain.orai.websocket.IReporter|null);
            }

            /** Represents a Report. */
            class Report implements IReport {

                /**
                 * Constructs a new Report.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IReport);

                /** Report requestID. */
                public requestID: string;

                /** Report DataSourceResults. */
                public DataSourceResults: oraichain.orai.websocket.IDataSourceResult[];

                /** Report TestCaseResults. */
                public TestCaseResults: oraichain.orai.websocket.ITestCaseResult[];

                /** Report blockHeight. */
                public blockHeight: Long;

                /** Report fees. */
                public fees: cosmos.base.v1beta1.ICoin[];

                /** Report aggregatedResult. */
                public aggregatedResult: Uint8Array;

                /** Report resultStatus. */
                public resultStatus: string;

                /** Report reporter. */
                public reporter?: (oraichain.orai.websocket.IReporter|null);

                /**
                 * Encodes the specified Report message. Does not implicitly {@link oraichain.orai.websocket.Report.verify|verify} messages.
                 * @param message Report message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Report message, length delimited. Does not implicitly {@link oraichain.orai.websocket.Report.verify|verify} messages.
                 * @param message Report message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Report message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Report
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.Report;

                /**
                 * Decodes a Report message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Report
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.Report;

                /**
                 * Verifies a Report message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Report message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Report
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.Report;

                /**
                 * Creates a plain object from a Report message. Also converts values to other types if specified.
                 * @param message Report
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.Report, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Report to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState Reports */
                Reports?: (oraichain.orai.websocket.IReport[]|null);

                /** GenesisState Reporters */
                Reporters?: (oraichain.orai.websocket.IReporter[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IGenesisState);

                /** GenesisState Reports. */
                public Reports: oraichain.orai.websocket.IReport[];

                /** GenesisState Reporters. */
                public Reporters: oraichain.orai.websocket.IReporter[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link oraichain.orai.websocket.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link oraichain.orai.websocket.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TestCaseResult. */
            interface ITestCaseResult {

                /** TestCaseResult name */
                name?: (string|null);

                /** TestCaseResult DataSourceResults */
                DataSourceResults?: (oraichain.orai.websocket.IDataSourceResult[]|null);
            }

            /** Represents a TestCaseResult. */
            class TestCaseResult implements ITestCaseResult {

                /**
                 * Constructs a new TestCaseResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.ITestCaseResult);

                /** TestCaseResult name. */
                public name: string;

                /** TestCaseResult DataSourceResults. */
                public DataSourceResults: oraichain.orai.websocket.IDataSourceResult[];

                /**
                 * Encodes the specified TestCaseResult message. Does not implicitly {@link oraichain.orai.websocket.TestCaseResult.verify|verify} messages.
                 * @param message TestCaseResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.ITestCaseResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestCaseResult message, length delimited. Does not implicitly {@link oraichain.orai.websocket.TestCaseResult.verify|verify} messages.
                 * @param message TestCaseResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.ITestCaseResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestCaseResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestCaseResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.TestCaseResult;

                /**
                 * Decodes a TestCaseResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestCaseResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.TestCaseResult;

                /**
                 * Verifies a TestCaseResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestCaseResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestCaseResult
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.TestCaseResult;

                /**
                 * Creates a plain object from a TestCaseResult message. Also converts values to other types if specified.
                 * @param message TestCaseResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.TestCaseResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestCaseResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DataSourceResult. */
            interface IDataSourceResult {

                /** DataSourceResult name */
                name?: (string|null);

                /** DataSourceResult result */
                result?: (Uint8Array|null);

                /** DataSourceResult status */
                status?: (string|null);
            }

            /** Represents a DataSourceResult. */
            class DataSourceResult implements IDataSourceResult {

                /**
                 * Constructs a new DataSourceResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IDataSourceResult);

                /** DataSourceResult name. */
                public name: string;

                /** DataSourceResult result. */
                public result: Uint8Array;

                /** DataSourceResult status. */
                public status: string;

                /**
                 * Encodes the specified DataSourceResult message. Does not implicitly {@link oraichain.orai.websocket.DataSourceResult.verify|verify} messages.
                 * @param message DataSourceResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IDataSourceResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DataSourceResult message, length delimited. Does not implicitly {@link oraichain.orai.websocket.DataSourceResult.verify|verify} messages.
                 * @param message DataSourceResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IDataSourceResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DataSourceResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataSourceResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.DataSourceResult;

                /**
                 * Decodes a DataSourceResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataSourceResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.DataSourceResult;

                /**
                 * Verifies a DataSourceResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataSourceResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataSourceResult
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.DataSourceResult;

                /**
                 * Creates a plain object from a DataSourceResult message. Also converts values to other types if specified.
                 * @param message DataSourceResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.DataSourceResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataSourceResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls AddReport.
                 * @param request MsgCreateReport message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateReportRes
                 */
                public addReport(request: oraichain.orai.websocket.IMsgCreateReport, callback: oraichain.orai.websocket.Msg.AddReportCallback): void;

                /**
                 * Calls AddReport.
                 * @param request MsgCreateReport message or plain object
                 * @returns Promise
                 */
                public addReport(request: oraichain.orai.websocket.IMsgCreateReport): Promise<oraichain.orai.websocket.MsgCreateReportRes>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link oraichain.orai.websocket.Msg#addReport}.
                 * @param error Error, if any
                 * @param [response] MsgCreateReportRes
                 */
                type AddReportCallback = (error: (Error|null), response?: oraichain.orai.websocket.MsgCreateReportRes) => void;
            }

            /** Properties of a Fetch. */
            interface IFetch {

                /** Fetch url */
                url?: (string|null);

                /** Fetch method */
                method?: (string|null);

                /** Fetch authorization */
                authorization?: (string|null);

                /** Fetch body */
                body?: (string|null);
            }

            /** Represents a Fetch. */
            class Fetch implements IFetch {

                /**
                 * Constructs a new Fetch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IFetch);

                /** Fetch url. */
                public url: string;

                /** Fetch method. */
                public method: string;

                /** Fetch authorization. */
                public authorization: string;

                /** Fetch body. */
                public body: string;

                /**
                 * Encodes the specified Fetch message. Does not implicitly {@link oraichain.orai.websocket.Fetch.verify|verify} messages.
                 * @param message Fetch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IFetch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Fetch message, length delimited. Does not implicitly {@link oraichain.orai.websocket.Fetch.verify|verify} messages.
                 * @param message Fetch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IFetch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Fetch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Fetch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.Fetch;

                /**
                 * Decodes a Fetch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Fetch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.Fetch;

                /**
                 * Verifies a Fetch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Fetch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Fetch
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.Fetch;

                /**
                 * Creates a plain object from a Fetch message. Also converts values to other types if specified.
                 * @param message Fetch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.Fetch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Fetch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Request. */
            interface IRequest {

                /** Request fetch */
                fetch?: (oraichain.orai.websocket.IFetch|null);
            }

            /** Represents a Request. */
            class Request implements IRequest {

                /**
                 * Constructs a new Request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IRequest);

                /** Request fetch. */
                public fetch?: (oraichain.orai.websocket.IFetch|null);

                /**
                 * Encodes the specified Request message. Does not implicitly {@link oraichain.orai.websocket.Request.verify|verify} messages.
                 * @param message Request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Request message, length delimited. Does not implicitly {@link oraichain.orai.websocket.Request.verify|verify} messages.
                 * @param message Request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.Request;

                /**
                 * Decodes a Request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.Request;

                /**
                 * Verifies a Request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Request
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.Request;

                /**
                 * Creates a plain object from a Request message. Also converts values to other types if specified.
                 * @param message Request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RequestDataSource. */
            interface IRequestDataSource {

                /** RequestDataSource input */
                input?: (string|null);
            }

            /** Represents a RequestDataSource. */
            class RequestDataSource implements IRequestDataSource {

                /**
                 * Constructs a new RequestDataSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IRequestDataSource);

                /** RequestDataSource input. */
                public input: string;

                /**
                 * Encodes the specified RequestDataSource message. Does not implicitly {@link oraichain.orai.websocket.RequestDataSource.verify|verify} messages.
                 * @param message RequestDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IRequestDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequestDataSource message, length delimited. Does not implicitly {@link oraichain.orai.websocket.RequestDataSource.verify|verify} messages.
                 * @param message RequestDataSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IRequestDataSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestDataSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequestDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.RequestDataSource;

                /**
                 * Decodes a RequestDataSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequestDataSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.RequestDataSource;

                /**
                 * Verifies a RequestDataSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequestDataSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequestDataSource
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.RequestDataSource;

                /**
                 * Creates a plain object from a RequestDataSource message. Also converts values to other types if specified.
                 * @param message RequestDataSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.RequestDataSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequestDataSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RequestTestCase. */
            interface IRequestTestCase {

                /** RequestTestCase contract */
                contract?: (Uint8Array|null);

                /** RequestTestCase input */
                input?: (string|null);

                /** RequestTestCase output */
                output?: (string|null);
            }

            /** Represents a RequestTestCase. */
            class RequestTestCase implements IRequestTestCase {

                /**
                 * Constructs a new RequestTestCase.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IRequestTestCase);

                /** RequestTestCase contract. */
                public contract: Uint8Array;

                /** RequestTestCase input. */
                public input: string;

                /** RequestTestCase output. */
                public output: string;

                /**
                 * Encodes the specified RequestTestCase message. Does not implicitly {@link oraichain.orai.websocket.RequestTestCase.verify|verify} messages.
                 * @param message RequestTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IRequestTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequestTestCase message, length delimited. Does not implicitly {@link oraichain.orai.websocket.RequestTestCase.verify|verify} messages.
                 * @param message RequestTestCase message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IRequestTestCase, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestTestCase message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequestTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.RequestTestCase;

                /**
                 * Decodes a RequestTestCase message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequestTestCase
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.RequestTestCase;

                /**
                 * Verifies a RequestTestCase message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequestTestCase message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequestTestCase
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.RequestTestCase;

                /**
                 * Creates a plain object from a RequestTestCase message. Also converts values to other types if specified.
                 * @param message RequestTestCase
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.RequestTestCase, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequestTestCase to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RequestOracleScript. */
            interface IRequestOracleScript {

                /** RequestOracleScript results */
                results?: (string[]|null);
            }

            /** Represents a RequestOracleScript. */
            class RequestOracleScript implements IRequestOracleScript {

                /**
                 * Constructs a new RequestOracleScript.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IRequestOracleScript);

                /** RequestOracleScript results. */
                public results: string[];

                /**
                 * Encodes the specified RequestOracleScript message. Does not implicitly {@link oraichain.orai.websocket.RequestOracleScript.verify|verify} messages.
                 * @param message RequestOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IRequestOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequestOracleScript message, length delimited. Does not implicitly {@link oraichain.orai.websocket.RequestOracleScript.verify|verify} messages.
                 * @param message RequestOracleScript message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IRequestOracleScript, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestOracleScript message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequestOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.RequestOracleScript;

                /**
                 * Decodes a RequestOracleScript message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequestOracleScript
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.RequestOracleScript;

                /**
                 * Verifies a RequestOracleScript message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequestOracleScript message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequestOracleScript
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.RequestOracleScript;

                /**
                 * Creates a plain object from a RequestOracleScript message. Also converts values to other types if specified.
                 * @param message RequestOracleScript
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.RequestOracleScript, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequestOracleScript to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleContract. */
            interface IQueryOracleContract {

                /** QueryOracleContract contract */
                contract?: (Uint8Array|null);

                /** QueryOracleContract request */
                request?: (oraichain.orai.websocket.IRequest|null);
            }

            /** Represents a QueryOracleContract. */
            class QueryOracleContract implements IQueryOracleContract {

                /**
                 * Constructs a new QueryOracleContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryOracleContract);

                /** QueryOracleContract contract. */
                public contract: Uint8Array;

                /** QueryOracleContract request. */
                public request?: (oraichain.orai.websocket.IRequest|null);

                /**
                 * Encodes the specified QueryOracleContract message. Does not implicitly {@link oraichain.orai.websocket.QueryOracleContract.verify|verify} messages.
                 * @param message QueryOracleContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryOracleContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryOracleContract.verify|verify} messages.
                 * @param message QueryOracleContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryOracleContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryOracleContract;

                /**
                 * Decodes a QueryOracleContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryOracleContract;

                /**
                 * Verifies a QueryOracleContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryOracleContract;

                /**
                 * Creates a plain object from a QueryOracleContract message. Also converts values to other types if specified.
                 * @param message QueryOracleContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryOracleContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDataSourceContract. */
            interface IQueryDataSourceContract {

                /** QueryDataSourceContract name */
                name?: (string|null);

                /** QueryDataSourceContract request */
                request?: (oraichain.orai.websocket.IRequestDataSource|null);
            }

            /** Represents a QueryDataSourceContract. */
            class QueryDataSourceContract implements IQueryDataSourceContract {

                /**
                 * Constructs a new QueryDataSourceContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryDataSourceContract);

                /** QueryDataSourceContract name. */
                public name: string;

                /** QueryDataSourceContract request. */
                public request?: (oraichain.orai.websocket.IRequestDataSource|null);

                /**
                 * Encodes the specified QueryDataSourceContract message. Does not implicitly {@link oraichain.orai.websocket.QueryDataSourceContract.verify|verify} messages.
                 * @param message QueryDataSourceContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryDataSourceContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDataSourceContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryDataSourceContract.verify|verify} messages.
                 * @param message QueryDataSourceContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryDataSourceContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDataSourceContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryDataSourceContract;

                /**
                 * Decodes a QueryDataSourceContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDataSourceContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryDataSourceContract;

                /**
                 * Verifies a QueryDataSourceContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDataSourceContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDataSourceContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryDataSourceContract;

                /**
                 * Creates a plain object from a QueryDataSourceContract message. Also converts values to other types if specified.
                 * @param message QueryDataSourceContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryDataSourceContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDataSourceContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDataSourceSmartContract. */
            interface IQueryDataSourceSmartContract {

                /** QueryDataSourceSmartContract get */
                get?: (oraichain.orai.websocket.IRequestDataSource|null);
            }

            /** Represents a QueryDataSourceSmartContract. */
            class QueryDataSourceSmartContract implements IQueryDataSourceSmartContract {

                /**
                 * Constructs a new QueryDataSourceSmartContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryDataSourceSmartContract);

                /** QueryDataSourceSmartContract get. */
                public get?: (oraichain.orai.websocket.IRequestDataSource|null);

                /**
                 * Encodes the specified QueryDataSourceSmartContract message. Does not implicitly {@link oraichain.orai.websocket.QueryDataSourceSmartContract.verify|verify} messages.
                 * @param message QueryDataSourceSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryDataSourceSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDataSourceSmartContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryDataSourceSmartContract.verify|verify} messages.
                 * @param message QueryDataSourceSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryDataSourceSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDataSourceSmartContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDataSourceSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryDataSourceSmartContract;

                /**
                 * Decodes a QueryDataSourceSmartContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDataSourceSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryDataSourceSmartContract;

                /**
                 * Verifies a QueryDataSourceSmartContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDataSourceSmartContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDataSourceSmartContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryDataSourceSmartContract;

                /**
                 * Creates a plain object from a QueryDataSourceSmartContract message. Also converts values to other types if specified.
                 * @param message QueryDataSourceSmartContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryDataSourceSmartContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDataSourceSmartContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTestCaseContract. */
            interface IQueryTestCaseContract {

                /** QueryTestCaseContract name */
                name?: (string|null);

                /** QueryTestCaseContract dataSourceName */
                dataSourceName?: (string|null);

                /** QueryTestCaseContract request */
                request?: (oraichain.orai.websocket.IRequestTestCase|null);
            }

            /** Represents a QueryTestCaseContract. */
            class QueryTestCaseContract implements IQueryTestCaseContract {

                /**
                 * Constructs a new QueryTestCaseContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryTestCaseContract);

                /** QueryTestCaseContract name. */
                public name: string;

                /** QueryTestCaseContract dataSourceName. */
                public dataSourceName: string;

                /** QueryTestCaseContract request. */
                public request?: (oraichain.orai.websocket.IRequestTestCase|null);

                /**
                 * Encodes the specified QueryTestCaseContract message. Does not implicitly {@link oraichain.orai.websocket.QueryTestCaseContract.verify|verify} messages.
                 * @param message QueryTestCaseContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryTestCaseContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTestCaseContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryTestCaseContract.verify|verify} messages.
                 * @param message QueryTestCaseContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryTestCaseContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTestCaseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryTestCaseContract;

                /**
                 * Decodes a QueryTestCaseContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTestCaseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryTestCaseContract;

                /**
                 * Verifies a QueryTestCaseContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTestCaseContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTestCaseContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryTestCaseContract;

                /**
                 * Creates a plain object from a QueryTestCaseContract message. Also converts values to other types if specified.
                 * @param message QueryTestCaseContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryTestCaseContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTestCaseContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTestCaseSmartContract. */
            interface IQueryTestCaseSmartContract {

                /** QueryTestCaseSmartContract test */
                test?: (oraichain.orai.websocket.IRequestTestCase|null);
            }

            /** Represents a QueryTestCaseSmartContract. */
            class QueryTestCaseSmartContract implements IQueryTestCaseSmartContract {

                /**
                 * Constructs a new QueryTestCaseSmartContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryTestCaseSmartContract);

                /** QueryTestCaseSmartContract test. */
                public test?: (oraichain.orai.websocket.IRequestTestCase|null);

                /**
                 * Encodes the specified QueryTestCaseSmartContract message. Does not implicitly {@link oraichain.orai.websocket.QueryTestCaseSmartContract.verify|verify} messages.
                 * @param message QueryTestCaseSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryTestCaseSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTestCaseSmartContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryTestCaseSmartContract.verify|verify} messages.
                 * @param message QueryTestCaseSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryTestCaseSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTestCaseSmartContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTestCaseSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryTestCaseSmartContract;

                /**
                 * Decodes a QueryTestCaseSmartContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTestCaseSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryTestCaseSmartContract;

                /**
                 * Verifies a QueryTestCaseSmartContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTestCaseSmartContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTestCaseSmartContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryTestCaseSmartContract;

                /**
                 * Creates a plain object from a QueryTestCaseSmartContract message. Also converts values to other types if specified.
                 * @param message QueryTestCaseSmartContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryTestCaseSmartContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTestCaseSmartContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleScriptContract. */
            interface IQueryOracleScriptContract {

                /** QueryOracleScriptContract name */
                name?: (string|null);

                /** QueryOracleScriptContract request */
                request?: (oraichain.orai.websocket.IRequestOracleScript|null);
            }

            /** Represents a QueryOracleScriptContract. */
            class QueryOracleScriptContract implements IQueryOracleScriptContract {

                /**
                 * Constructs a new QueryOracleScriptContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryOracleScriptContract);

                /** QueryOracleScriptContract name. */
                public name: string;

                /** QueryOracleScriptContract request. */
                public request?: (oraichain.orai.websocket.IRequestOracleScript|null);

                /**
                 * Encodes the specified QueryOracleScriptContract message. Does not implicitly {@link oraichain.orai.websocket.QueryOracleScriptContract.verify|verify} messages.
                 * @param message QueryOracleScriptContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryOracleScriptContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleScriptContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryOracleScriptContract.verify|verify} messages.
                 * @param message QueryOracleScriptContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryOracleScriptContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleScriptContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleScriptContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryOracleScriptContract;

                /**
                 * Decodes a QueryOracleScriptContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleScriptContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryOracleScriptContract;

                /**
                 * Verifies a QueryOracleScriptContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleScriptContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleScriptContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryOracleScriptContract;

                /**
                 * Creates a plain object from a QueryOracleScriptContract message. Also converts values to other types if specified.
                 * @param message QueryOracleScriptContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryOracleScriptContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleScriptContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleScriptSmartContract. */
            interface IQueryOracleScriptSmartContract {

                /** QueryOracleScriptSmartContract aggregate */
                aggregate?: (oraichain.orai.websocket.IRequestOracleScript|null);
            }

            /** Represents a QueryOracleScriptSmartContract. */
            class QueryOracleScriptSmartContract implements IQueryOracleScriptSmartContract {

                /**
                 * Constructs a new QueryOracleScriptSmartContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IQueryOracleScriptSmartContract);

                /** QueryOracleScriptSmartContract aggregate. */
                public aggregate?: (oraichain.orai.websocket.IRequestOracleScript|null);

                /**
                 * Encodes the specified QueryOracleScriptSmartContract message. Does not implicitly {@link oraichain.orai.websocket.QueryOracleScriptSmartContract.verify|verify} messages.
                 * @param message QueryOracleScriptSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IQueryOracleScriptSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleScriptSmartContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.QueryOracleScriptSmartContract.verify|verify} messages.
                 * @param message QueryOracleScriptSmartContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IQueryOracleScriptSmartContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleScriptSmartContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleScriptSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.QueryOracleScriptSmartContract;

                /**
                 * Decodes a QueryOracleScriptSmartContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleScriptSmartContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.QueryOracleScriptSmartContract;

                /**
                 * Verifies a QueryOracleScriptSmartContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleScriptSmartContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleScriptSmartContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.QueryOracleScriptSmartContract;

                /**
                 * Creates a plain object from a QueryOracleScriptSmartContract message. Also converts values to other types if specified.
                 * @param message QueryOracleScriptSmartContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.QueryOracleScriptSmartContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleScriptSmartContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ResponseContract. */
            interface IResponseContract {

                /** ResponseContract data */
                data?: (Uint8Array|null);
            }

            /** Represents a ResponseContract. */
            class ResponseContract implements IResponseContract {

                /**
                 * Constructs a new ResponseContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IResponseContract);

                /** ResponseContract data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified ResponseContract message. Does not implicitly {@link oraichain.orai.websocket.ResponseContract.verify|verify} messages.
                 * @param message ResponseContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IResponseContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ResponseContract message, length delimited. Does not implicitly {@link oraichain.orai.websocket.ResponseContract.verify|verify} messages.
                 * @param message ResponseContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IResponseContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ResponseContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ResponseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.ResponseContract;

                /**
                 * Decodes a ResponseContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ResponseContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.ResponseContract;

                /**
                 * Verifies a ResponseContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ResponseContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ResponseContract
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.ResponseContract;

                /**
                 * Creates a plain object from a ResponseContract message. Also converts values to other types if specified.
                 * @param message ResponseContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.ResponseContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ResponseContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Validator. */
            interface IValidator {

                /** Validator address */
                address?: (Uint8Array|null);

                /** Validator votingPower */
                votingPower?: (Long|null);

                /** Validator status */
                status?: (string|null);
            }

            /** Represents a Validator. */
            class Validator implements IValidator {

                /**
                 * Constructs a new Validator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IValidator);

                /** Validator address. */
                public address: Uint8Array;

                /** Validator votingPower. */
                public votingPower: Long;

                /** Validator status. */
                public status: string;

                /**
                 * Encodes the specified Validator message. Does not implicitly {@link oraichain.orai.websocket.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Validator message, length delimited. Does not implicitly {@link oraichain.orai.websocket.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Validator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.Validator;

                /**
                 * Decodes a Validator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.Validator;

                /**
                 * Verifies a Validator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Validator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Validator
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.Validator;

                /**
                 * Creates a plain object from a Validator message. Also converts values to other types if specified.
                 * @param message Validator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Validator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValResult. */
            interface IValResult {

                /** ValResult validator */
                validator?: (oraichain.orai.websocket.IValidator|null);

                /** ValResult result */
                result?: (Uint8Array|null);

                /** ValResult resultStatus */
                resultStatus?: (string|null);
            }

            /** Represents a ValResult. */
            class ValResult implements IValResult {

                /**
                 * Constructs a new ValResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: oraichain.orai.websocket.IValResult);

                /** ValResult validator. */
                public validator?: (oraichain.orai.websocket.IValidator|null);

                /** ValResult result. */
                public result: Uint8Array;

                /** ValResult resultStatus. */
                public resultStatus: string;

                /**
                 * Encodes the specified ValResult message. Does not implicitly {@link oraichain.orai.websocket.ValResult.verify|verify} messages.
                 * @param message ValResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: oraichain.orai.websocket.IValResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValResult message, length delimited. Does not implicitly {@link oraichain.orai.websocket.ValResult.verify|verify} messages.
                 * @param message ValResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: oraichain.orai.websocket.IValResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): oraichain.orai.websocket.ValResult;

                /**
                 * Decodes a ValResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): oraichain.orai.websocket.ValResult;

                /**
                 * Verifies a ValResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValResult
                 */
                public static fromObject(object: { [k: string]: any }): oraichain.orai.websocket.ValResult;

                /**
                 * Creates a plain object from a ValResult message. Also converts values to other types if specified.
                 * @param message ValResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: oraichain.orai.websocket.ValResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace cosmos. */
export namespace cosmos {

    /** Namespace auth. */
    namespace auth {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Account.
                 * @param request QueryAccountRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAccountResponse
                 */
                public account(request: cosmos.auth.v1beta1.IQueryAccountRequest, callback: cosmos.auth.v1beta1.Query.AccountCallback): void;

                /**
                 * Calls Account.
                 * @param request QueryAccountRequest message or plain object
                 * @returns Promise
                 */
                public account(request: cosmos.auth.v1beta1.IQueryAccountRequest): Promise<cosmos.auth.v1beta1.QueryAccountResponse>;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.auth.v1beta1.IQueryParamsRequest, callback: cosmos.auth.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.auth.v1beta1.IQueryParamsRequest): Promise<cosmos.auth.v1beta1.QueryParamsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.auth.v1beta1.Query#account}.
                 * @param error Error, if any
                 * @param [response] QueryAccountResponse
                 */
                type AccountCallback = (error: (Error|null), response?: cosmos.auth.v1beta1.QueryAccountResponse) => void;

                /**
                 * Callback as used by {@link cosmos.auth.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.auth.v1beta1.QueryParamsResponse) => void;
            }

            /** Properties of a QueryAccountRequest. */
            interface IQueryAccountRequest {

                /** QueryAccountRequest address */
                address?: (string|null);
            }

            /** Represents a QueryAccountRequest. */
            class QueryAccountRequest implements IQueryAccountRequest {

                /**
                 * Constructs a new QueryAccountRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IQueryAccountRequest);

                /** QueryAccountRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryAccountRequest message. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountRequest.verify|verify} messages.
                 * @param message QueryAccountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IQueryAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountRequest message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountRequest.verify|verify} messages.
                 * @param message QueryAccountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IQueryAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.QueryAccountRequest;

                /**
                 * Decodes a QueryAccountRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.QueryAccountRequest;

                /**
                 * Verifies a QueryAccountRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.QueryAccountRequest;

                /**
                 * Creates a plain object from a QueryAccountRequest message. Also converts values to other types if specified.
                 * @param message QueryAccountRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.QueryAccountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAccountResponse. */
            interface IQueryAccountResponse {

                /** QueryAccountResponse account */
                account?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryAccountResponse. */
            class QueryAccountResponse implements IQueryAccountResponse {

                /**
                 * Constructs a new QueryAccountResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IQueryAccountResponse);

                /** QueryAccountResponse account. */
                public account?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryAccountResponse message. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountResponse.verify|verify} messages.
                 * @param message QueryAccountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IQueryAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountResponse message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.QueryAccountResponse.verify|verify} messages.
                 * @param message QueryAccountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IQueryAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.QueryAccountResponse;

                /**
                 * Decodes a QueryAccountResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.QueryAccountResponse;

                /**
                 * Verifies a QueryAccountResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.QueryAccountResponse;

                /**
                 * Creates a plain object from a QueryAccountResponse message. Also converts values to other types if specified.
                 * @param message QueryAccountResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.QueryAccountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.auth.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.auth.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.auth.v1beta1.IParams|null);

                /** GenesisState accounts */
                accounts?: (google.protobuf.IAny[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.auth.v1beta1.IParams|null);

                /** GenesisState accounts. */
                public accounts: google.protobuf.IAny[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.auth.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BaseAccount. */
            interface IBaseAccount {

                /** BaseAccount address */
                address?: (string|null);

                /** BaseAccount pub_key */
                pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number */
                account_number?: (Long|null);

                /** BaseAccount sequence */
                sequence?: (Long|null);
            }

            /** Represents a BaseAccount. */
            class BaseAccount implements IBaseAccount {

                /**
                 * Constructs a new BaseAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IBaseAccount);

                /** BaseAccount address. */
                public address: string;

                /** BaseAccount pub_key. */
                public pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number. */
                public account_number: Long;

                /** BaseAccount sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified BaseAccount message. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BaseAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Verifies a BaseAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BaseAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BaseAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Creates a plain object from a BaseAccount message. Also converts values to other types if specified.
                 * @param message BaseAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.BaseAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BaseAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleAccount. */
            interface IModuleAccount {

                /** ModuleAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name */
                name?: (string|null);

                /** ModuleAccount permissions */
                permissions?: (string[]|null);
            }

            /** Represents a ModuleAccount. */
            class ModuleAccount implements IModuleAccount {

                /**
                 * Constructs a new ModuleAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleAccount);

                /** ModuleAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name. */
                public name: string;

                /** ModuleAccount permissions. */
                public permissions: string[];

                /**
                 * Encodes the specified ModuleAccount message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Verifies a ModuleAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Creates a plain object from a ModuleAccount message. Also converts values to other types if specified.
                 * @param message ModuleAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params max_memo_characters */
                max_memo_characters?: (Long|null);

                /** Params tx_sig_limit */
                tx_sig_limit?: (Long|null);

                /** Params tx_size_cost_per_byte */
                tx_size_cost_per_byte?: (Long|null);

                /** Params sig_verify_cost_ed25519 */
                sig_verify_cost_ed25519?: (Long|null);

                /** Params sig_verify_cost_secp256k1 */
                sig_verify_cost_secp256k1?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IParams);

                /** Params max_memo_characters. */
                public max_memo_characters: Long;

                /** Params tx_sig_limit. */
                public tx_sig_limit: Long;

                /** Params tx_size_cost_per_byte. */
                public tx_size_cost_per_byte: Long;

                /** Params sig_verify_cost_ed25519. */
                public sig_verify_cost_ed25519: Long;

                /** Params sig_verify_cost_secp256k1. */
                public sig_verify_cost_secp256k1: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace bank. */
    namespace bank {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Balance.
                 * @param request QueryBalanceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBalanceResponse
                 */
                public balance(request: cosmos.bank.v1beta1.IQueryBalanceRequest, callback: cosmos.bank.v1beta1.Query.BalanceCallback): void;

                /**
                 * Calls Balance.
                 * @param request QueryBalanceRequest message or plain object
                 * @returns Promise
                 */
                public balance(request: cosmos.bank.v1beta1.IQueryBalanceRequest): Promise<cosmos.bank.v1beta1.QueryBalanceResponse>;

                /**
                 * Calls AllBalances.
                 * @param request QueryAllBalancesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAllBalancesResponse
                 */
                public allBalances(request: cosmos.bank.v1beta1.IQueryAllBalancesRequest, callback: cosmos.bank.v1beta1.Query.AllBalancesCallback): void;

                /**
                 * Calls AllBalances.
                 * @param request QueryAllBalancesRequest message or plain object
                 * @returns Promise
                 */
                public allBalances(request: cosmos.bank.v1beta1.IQueryAllBalancesRequest): Promise<cosmos.bank.v1beta1.QueryAllBalancesResponse>;

                /**
                 * Calls TotalSupply.
                 * @param request QueryTotalSupplyRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTotalSupplyResponse
                 */
                public totalSupply(request: cosmos.bank.v1beta1.IQueryTotalSupplyRequest, callback: cosmos.bank.v1beta1.Query.TotalSupplyCallback): void;

                /**
                 * Calls TotalSupply.
                 * @param request QueryTotalSupplyRequest message or plain object
                 * @returns Promise
                 */
                public totalSupply(request: cosmos.bank.v1beta1.IQueryTotalSupplyRequest): Promise<cosmos.bank.v1beta1.QueryTotalSupplyResponse>;

                /**
                 * Calls SupplyOf.
                 * @param request QuerySupplyOfRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySupplyOfResponse
                 */
                public supplyOf(request: cosmos.bank.v1beta1.IQuerySupplyOfRequest, callback: cosmos.bank.v1beta1.Query.SupplyOfCallback): void;

                /**
                 * Calls SupplyOf.
                 * @param request QuerySupplyOfRequest message or plain object
                 * @returns Promise
                 */
                public supplyOf(request: cosmos.bank.v1beta1.IQuerySupplyOfRequest): Promise<cosmos.bank.v1beta1.QuerySupplyOfResponse>;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.bank.v1beta1.IQueryParamsRequest, callback: cosmos.bank.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.bank.v1beta1.IQueryParamsRequest): Promise<cosmos.bank.v1beta1.QueryParamsResponse>;

                /**
                 * Calls DenomMetadata.
                 * @param request QueryDenomMetadataRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomMetadataResponse
                 */
                public denomMetadata(request: cosmos.bank.v1beta1.IQueryDenomMetadataRequest, callback: cosmos.bank.v1beta1.Query.DenomMetadataCallback): void;

                /**
                 * Calls DenomMetadata.
                 * @param request QueryDenomMetadataRequest message or plain object
                 * @returns Promise
                 */
                public denomMetadata(request: cosmos.bank.v1beta1.IQueryDenomMetadataRequest): Promise<cosmos.bank.v1beta1.QueryDenomMetadataResponse>;

                /**
                 * Calls DenomsMetadata.
                 * @param request QueryDenomsMetadataRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomsMetadataResponse
                 */
                public denomsMetadata(request: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest, callback: cosmos.bank.v1beta1.Query.DenomsMetadataCallback): void;

                /**
                 * Calls DenomsMetadata.
                 * @param request QueryDenomsMetadataRequest message or plain object
                 * @returns Promise
                 */
                public denomsMetadata(request: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest): Promise<cosmos.bank.v1beta1.QueryDenomsMetadataResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#balance}.
                 * @param error Error, if any
                 * @param [response] QueryBalanceResponse
                 */
                type BalanceCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryBalanceResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#allBalances}.
                 * @param error Error, if any
                 * @param [response] QueryAllBalancesResponse
                 */
                type AllBalancesCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryAllBalancesResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#totalSupply}.
                 * @param error Error, if any
                 * @param [response] QueryTotalSupplyResponse
                 */
                type TotalSupplyCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryTotalSupplyResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#supplyOf}.
                 * @param error Error, if any
                 * @param [response] QuerySupplyOfResponse
                 */
                type SupplyOfCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QuerySupplyOfResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#denomMetadata}.
                 * @param error Error, if any
                 * @param [response] QueryDenomMetadataResponse
                 */
                type DenomMetadataCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryDenomMetadataResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Query#denomsMetadata}.
                 * @param error Error, if any
                 * @param [response] QueryDenomsMetadataResponse
                 */
                type DenomsMetadataCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.QueryDenomsMetadataResponse) => void;
            }

            /** Properties of a QueryBalanceRequest. */
            interface IQueryBalanceRequest {

                /** QueryBalanceRequest address */
                address?: (string|null);

                /** QueryBalanceRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryBalanceRequest. */
            class QueryBalanceRequest implements IQueryBalanceRequest {

                /**
                 * Constructs a new QueryBalanceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryBalanceRequest);

                /** QueryBalanceRequest address. */
                public address: string;

                /** QueryBalanceRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryBalanceRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceRequest.verify|verify} messages.
                 * @param message QueryBalanceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryBalanceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceRequest.verify|verify} messages.
                 * @param message QueryBalanceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryBalanceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryBalanceRequest;

                /**
                 * Decodes a QueryBalanceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryBalanceRequest;

                /**
                 * Verifies a QueryBalanceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryBalanceRequest;

                /**
                 * Creates a plain object from a QueryBalanceRequest message. Also converts values to other types if specified.
                 * @param message QueryBalanceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryBalanceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBalanceResponse. */
            interface IQueryBalanceResponse {

                /** QueryBalanceResponse balance */
                balance?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QueryBalanceResponse. */
            class QueryBalanceResponse implements IQueryBalanceResponse {

                /**
                 * Constructs a new QueryBalanceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryBalanceResponse);

                /** QueryBalanceResponse balance. */
                public balance?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QueryBalanceResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceResponse.verify|verify} messages.
                 * @param message QueryBalanceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryBalanceResponse.verify|verify} messages.
                 * @param message QueryBalanceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryBalanceResponse;

                /**
                 * Decodes a QueryBalanceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryBalanceResponse;

                /**
                 * Verifies a QueryBalanceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryBalanceResponse;

                /**
                 * Creates a plain object from a QueryBalanceResponse message. Also converts values to other types if specified.
                 * @param message QueryBalanceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryBalanceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAllBalancesRequest. */
            interface IQueryAllBalancesRequest {

                /** QueryAllBalancesRequest address */
                address?: (string|null);

                /** QueryAllBalancesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryAllBalancesRequest. */
            class QueryAllBalancesRequest implements IQueryAllBalancesRequest {

                /**
                 * Constructs a new QueryAllBalancesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryAllBalancesRequest);

                /** QueryAllBalancesRequest address. */
                public address: string;

                /** QueryAllBalancesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryAllBalancesRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesRequest.verify|verify} messages.
                 * @param message QueryAllBalancesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryAllBalancesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAllBalancesRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesRequest.verify|verify} messages.
                 * @param message QueryAllBalancesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryAllBalancesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllBalancesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAllBalancesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryAllBalancesRequest;

                /**
                 * Decodes a QueryAllBalancesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAllBalancesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryAllBalancesRequest;

                /**
                 * Verifies a QueryAllBalancesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAllBalancesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAllBalancesRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryAllBalancesRequest;

                /**
                 * Creates a plain object from a QueryAllBalancesRequest message. Also converts values to other types if specified.
                 * @param message QueryAllBalancesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryAllBalancesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAllBalancesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAllBalancesResponse. */
            interface IQueryAllBalancesResponse {

                /** QueryAllBalancesResponse balances */
                balances?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryAllBalancesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryAllBalancesResponse. */
            class QueryAllBalancesResponse implements IQueryAllBalancesResponse {

                /**
                 * Constructs a new QueryAllBalancesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryAllBalancesResponse);

                /** QueryAllBalancesResponse balances. */
                public balances: cosmos.base.v1beta1.ICoin[];

                /** QueryAllBalancesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryAllBalancesResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesResponse.verify|verify} messages.
                 * @param message QueryAllBalancesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryAllBalancesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAllBalancesResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryAllBalancesResponse.verify|verify} messages.
                 * @param message QueryAllBalancesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryAllBalancesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllBalancesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAllBalancesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryAllBalancesResponse;

                /**
                 * Decodes a QueryAllBalancesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAllBalancesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryAllBalancesResponse;

                /**
                 * Verifies a QueryAllBalancesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAllBalancesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAllBalancesResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryAllBalancesResponse;

                /**
                 * Creates a plain object from a QueryAllBalancesResponse message. Also converts values to other types if specified.
                 * @param message QueryAllBalancesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryAllBalancesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAllBalancesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalSupplyRequest. */
            interface IQueryTotalSupplyRequest {
            }

            /** Represents a QueryTotalSupplyRequest. */
            class QueryTotalSupplyRequest implements IQueryTotalSupplyRequest {

                /**
                 * Constructs a new QueryTotalSupplyRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryTotalSupplyRequest);

                /**
                 * Encodes the specified QueryTotalSupplyRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyRequest.verify|verify} messages.
                 * @param message QueryTotalSupplyRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryTotalSupplyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalSupplyRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyRequest.verify|verify} messages.
                 * @param message QueryTotalSupplyRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryTotalSupplyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSupplyRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalSupplyRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryTotalSupplyRequest;

                /**
                 * Decodes a QueryTotalSupplyRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalSupplyRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryTotalSupplyRequest;

                /**
                 * Verifies a QueryTotalSupplyRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalSupplyRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalSupplyRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryTotalSupplyRequest;

                /**
                 * Creates a plain object from a QueryTotalSupplyRequest message. Also converts values to other types if specified.
                 * @param message QueryTotalSupplyRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryTotalSupplyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalSupplyRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalSupplyResponse. */
            interface IQueryTotalSupplyResponse {

                /** QueryTotalSupplyResponse supply */
                supply?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryTotalSupplyResponse. */
            class QueryTotalSupplyResponse implements IQueryTotalSupplyResponse {

                /**
                 * Constructs a new QueryTotalSupplyResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryTotalSupplyResponse);

                /** QueryTotalSupplyResponse supply. */
                public supply: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryTotalSupplyResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyResponse.verify|verify} messages.
                 * @param message QueryTotalSupplyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryTotalSupplyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalSupplyResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryTotalSupplyResponse.verify|verify} messages.
                 * @param message QueryTotalSupplyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryTotalSupplyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSupplyResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalSupplyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryTotalSupplyResponse;

                /**
                 * Decodes a QueryTotalSupplyResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalSupplyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryTotalSupplyResponse;

                /**
                 * Verifies a QueryTotalSupplyResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalSupplyResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalSupplyResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryTotalSupplyResponse;

                /**
                 * Creates a plain object from a QueryTotalSupplyResponse message. Also converts values to other types if specified.
                 * @param message QueryTotalSupplyResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryTotalSupplyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalSupplyResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySupplyOfRequest. */
            interface IQuerySupplyOfRequest {

                /** QuerySupplyOfRequest denom */
                denom?: (string|null);
            }

            /** Represents a QuerySupplyOfRequest. */
            class QuerySupplyOfRequest implements IQuerySupplyOfRequest {

                /**
                 * Constructs a new QuerySupplyOfRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQuerySupplyOfRequest);

                /** QuerySupplyOfRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QuerySupplyOfRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfRequest.verify|verify} messages.
                 * @param message QuerySupplyOfRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQuerySupplyOfRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySupplyOfRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfRequest.verify|verify} messages.
                 * @param message QuerySupplyOfRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQuerySupplyOfRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySupplyOfRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySupplyOfRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QuerySupplyOfRequest;

                /**
                 * Decodes a QuerySupplyOfRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySupplyOfRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QuerySupplyOfRequest;

                /**
                 * Verifies a QuerySupplyOfRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySupplyOfRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySupplyOfRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QuerySupplyOfRequest;

                /**
                 * Creates a plain object from a QuerySupplyOfRequest message. Also converts values to other types if specified.
                 * @param message QuerySupplyOfRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QuerySupplyOfRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySupplyOfRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySupplyOfResponse. */
            interface IQuerySupplyOfResponse {

                /** QuerySupplyOfResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QuerySupplyOfResponse. */
            class QuerySupplyOfResponse implements IQuerySupplyOfResponse {

                /**
                 * Constructs a new QuerySupplyOfResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQuerySupplyOfResponse);

                /** QuerySupplyOfResponse amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QuerySupplyOfResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfResponse.verify|verify} messages.
                 * @param message QuerySupplyOfResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQuerySupplyOfResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySupplyOfResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QuerySupplyOfResponse.verify|verify} messages.
                 * @param message QuerySupplyOfResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQuerySupplyOfResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySupplyOfResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySupplyOfResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QuerySupplyOfResponse;

                /**
                 * Decodes a QuerySupplyOfResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySupplyOfResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QuerySupplyOfResponse;

                /**
                 * Verifies a QuerySupplyOfResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySupplyOfResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySupplyOfResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QuerySupplyOfResponse;

                /**
                 * Creates a plain object from a QuerySupplyOfResponse message. Also converts values to other types if specified.
                 * @param message QuerySupplyOfResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QuerySupplyOfResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySupplyOfResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.bank.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.bank.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsMetadataRequest. */
            interface IQueryDenomsMetadataRequest {

                /** QueryDenomsMetadataRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDenomsMetadataRequest. */
            class QueryDenomsMetadataRequest implements IQueryDenomsMetadataRequest {

                /**
                 * Constructs a new QueryDenomsMetadataRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest);

                /** QueryDenomsMetadataRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDenomsMetadataRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomsMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsMetadataRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomsMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryDenomsMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsMetadataRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryDenomsMetadataRequest;

                /**
                 * Decodes a QueryDenomsMetadataRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryDenomsMetadataRequest;

                /**
                 * Verifies a QueryDenomsMetadataRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsMetadataRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsMetadataRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryDenomsMetadataRequest;

                /**
                 * Creates a plain object from a QueryDenomsMetadataRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomsMetadataRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryDenomsMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsMetadataRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsMetadataResponse. */
            interface IQueryDenomsMetadataResponse {

                /** QueryDenomsMetadataResponse metadatas */
                metadatas?: (cosmos.bank.v1beta1.IMetadata[]|null);

                /** QueryDenomsMetadataResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDenomsMetadataResponse. */
            class QueryDenomsMetadataResponse implements IQueryDenomsMetadataResponse {

                /**
                 * Constructs a new QueryDenomsMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryDenomsMetadataResponse);

                /** QueryDenomsMetadataResponse metadatas. */
                public metadatas: cosmos.bank.v1beta1.IMetadata[];

                /** QueryDenomsMetadataResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDenomsMetadataResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomsMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryDenomsMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsMetadataResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomsMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomsMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryDenomsMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryDenomsMetadataResponse;

                /**
                 * Decodes a QueryDenomsMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryDenomsMetadataResponse;

                /**
                 * Verifies a QueryDenomsMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryDenomsMetadataResponse;

                /**
                 * Creates a plain object from a QueryDenomsMetadataResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomsMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryDenomsMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomMetadataRequest. */
            interface IQueryDenomMetadataRequest {

                /** QueryDenomMetadataRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomMetadataRequest. */
            class QueryDenomMetadataRequest implements IQueryDenomMetadataRequest {

                /**
                 * Constructs a new QueryDenomMetadataRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryDenomMetadataRequest);

                /** QueryDenomMetadataRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomMetadataRequest message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryDenomMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomMetadataRequest message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryDenomMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomMetadataRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryDenomMetadataRequest;

                /**
                 * Decodes a QueryDenomMetadataRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryDenomMetadataRequest;

                /**
                 * Verifies a QueryDenomMetadataRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomMetadataRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomMetadataRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryDenomMetadataRequest;

                /**
                 * Creates a plain object from a QueryDenomMetadataRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomMetadataRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryDenomMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomMetadataRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomMetadataResponse. */
            interface IQueryDenomMetadataResponse {

                /** QueryDenomMetadataResponse metadata */
                metadata?: (cosmos.bank.v1beta1.IMetadata|null);
            }

            /** Represents a QueryDenomMetadataResponse. */
            class QueryDenomMetadataResponse implements IQueryDenomMetadataResponse {

                /**
                 * Constructs a new QueryDenomMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IQueryDenomMetadataResponse);

                /** QueryDenomMetadataResponse metadata. */
                public metadata?: (cosmos.bank.v1beta1.IMetadata|null);

                /**
                 * Encodes the specified QueryDenomMetadataResponse message. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IQueryDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomMetadataResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.QueryDenomMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IQueryDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.QueryDenomMetadataResponse;

                /**
                 * Decodes a QueryDenomMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.QueryDenomMetadataResponse;

                /**
                 * Verifies a QueryDenomMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.QueryDenomMetadataResponse;

                /**
                 * Creates a plain object from a QueryDenomMetadataResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.QueryDenomMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.bank.v1beta1.IParams|null);

                /** GenesisState balances */
                balances?: (cosmos.bank.v1beta1.IBalance[]|null);

                /** GenesisState supply */
                supply?: (cosmos.base.v1beta1.ICoin[]|null);

                /** GenesisState denom_metadata */
                denom_metadata?: (cosmos.bank.v1beta1.IMetadata[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.bank.v1beta1.IParams|null);

                /** GenesisState balances. */
                public balances: cosmos.bank.v1beta1.IBalance[];

                /** GenesisState supply. */
                public supply: cosmos.base.v1beta1.ICoin[];

                /** GenesisState denom_metadata. */
                public denom_metadata: cosmos.bank.v1beta1.IMetadata[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.bank.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Balance. */
            interface IBalance {

                /** Balance address */
                address?: (string|null);

                /** Balance coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Balance. */
            class Balance implements IBalance {

                /**
                 * Constructs a new Balance.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IBalance);

                /** Balance address. */
                public address: string;

                /** Balance coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Balance message. Does not implicitly {@link cosmos.bank.v1beta1.Balance.verify|verify} messages.
                 * @param message Balance message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IBalance, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Balance message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Balance.verify|verify} messages.
                 * @param message Balance message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IBalance, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Balance message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Balance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Balance;

                /**
                 * Decodes a Balance message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Balance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Balance;

                /**
                 * Verifies a Balance message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Balance message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Balance
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Balance;

                /**
                 * Creates a plain object from a Balance message. Also converts values to other types if specified.
                 * @param message Balance
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Balance, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Balance to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Send.
                 * @param request MsgSend message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSendResponse
                 */
                public send(request: cosmos.bank.v1beta1.IMsgSend, callback: cosmos.bank.v1beta1.Msg.SendCallback): void;

                /**
                 * Calls Send.
                 * @param request MsgSend message or plain object
                 * @returns Promise
                 */
                public send(request: cosmos.bank.v1beta1.IMsgSend): Promise<cosmos.bank.v1beta1.MsgSendResponse>;

                /**
                 * Calls MultiSend.
                 * @param request MsgMultiSend message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgMultiSendResponse
                 */
                public multiSend(request: cosmos.bank.v1beta1.IMsgMultiSend, callback: cosmos.bank.v1beta1.Msg.MultiSendCallback): void;

                /**
                 * Calls MultiSend.
                 * @param request MsgMultiSend message or plain object
                 * @returns Promise
                 */
                public multiSend(request: cosmos.bank.v1beta1.IMsgMultiSend): Promise<cosmos.bank.v1beta1.MsgMultiSendResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Msg#send}.
                 * @param error Error, if any
                 * @param [response] MsgSendResponse
                 */
                type SendCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.MsgSendResponse) => void;

                /**
                 * Callback as used by {@link cosmos.bank.v1beta1.Msg#multiSend}.
                 * @param error Error, if any
                 * @param [response] MsgMultiSendResponse
                 */
                type MultiSendCallback = (error: (Error|null), response?: cosmos.bank.v1beta1.MsgMultiSendResponse) => void;
            }

            /** Properties of a MsgSend. */
            interface IMsgSend {

                /** MsgSend from_address */
                from_address?: (string|null);

                /** MsgSend to_address */
                to_address?: (string|null);

                /** MsgSend amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgSend. */
            class MsgSend implements IMsgSend {

                /**
                 * Constructs a new MsgSend.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMsgSend);

                /** MsgSend from_address. */
                public from_address: string;

                /** MsgSend to_address. */
                public to_address: string;

                /** MsgSend amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgSend message. Does not implicitly {@link cosmos.bank.v1beta1.MsgSend.verify|verify} messages.
                 * @param message MsgSend message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMsgSend, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSend message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.MsgSend.verify|verify} messages.
                 * @param message MsgSend message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMsgSend, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSend message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.MsgSend;

                /**
                 * Decodes a MsgSend message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.MsgSend;

                /**
                 * Verifies a MsgSend message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSend message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSend
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.MsgSend;

                /**
                 * Creates a plain object from a MsgSend message. Also converts values to other types if specified.
                 * @param message MsgSend
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.MsgSend, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSend to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSendResponse. */
            interface IMsgSendResponse {
            }

            /** Represents a MsgSendResponse. */
            class MsgSendResponse implements IMsgSendResponse {

                /**
                 * Constructs a new MsgSendResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMsgSendResponse);

                /**
                 * Encodes the specified MsgSendResponse message. Does not implicitly {@link cosmos.bank.v1beta1.MsgSendResponse.verify|verify} messages.
                 * @param message MsgSendResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMsgSendResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSendResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.MsgSendResponse.verify|verify} messages.
                 * @param message MsgSendResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMsgSendResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSendResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.MsgSendResponse;

                /**
                 * Decodes a MsgSendResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.MsgSendResponse;

                /**
                 * Verifies a MsgSendResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSendResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSendResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.MsgSendResponse;

                /**
                 * Creates a plain object from a MsgSendResponse message. Also converts values to other types if specified.
                 * @param message MsgSendResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.MsgSendResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSendResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMultiSend. */
            interface IMsgMultiSend {

                /** MsgMultiSend inputs */
                inputs?: (cosmos.bank.v1beta1.IInput[]|null);

                /** MsgMultiSend outputs */
                outputs?: (cosmos.bank.v1beta1.IOutput[]|null);
            }

            /** Represents a MsgMultiSend. */
            class MsgMultiSend implements IMsgMultiSend {

                /**
                 * Constructs a new MsgMultiSend.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMsgMultiSend);

                /** MsgMultiSend inputs. */
                public inputs: cosmos.bank.v1beta1.IInput[];

                /** MsgMultiSend outputs. */
                public outputs: cosmos.bank.v1beta1.IOutput[];

                /**
                 * Encodes the specified MsgMultiSend message. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSend.verify|verify} messages.
                 * @param message MsgMultiSend message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMsgMultiSend, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMultiSend message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSend.verify|verify} messages.
                 * @param message MsgMultiSend message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMsgMultiSend, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMultiSend message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMultiSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.MsgMultiSend;

                /**
                 * Decodes a MsgMultiSend message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMultiSend
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.MsgMultiSend;

                /**
                 * Verifies a MsgMultiSend message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMultiSend message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMultiSend
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.MsgMultiSend;

                /**
                 * Creates a plain object from a MsgMultiSend message. Also converts values to other types if specified.
                 * @param message MsgMultiSend
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.MsgMultiSend, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMultiSend to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMultiSendResponse. */
            interface IMsgMultiSendResponse {
            }

            /** Represents a MsgMultiSendResponse. */
            class MsgMultiSendResponse implements IMsgMultiSendResponse {

                /**
                 * Constructs a new MsgMultiSendResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMsgMultiSendResponse);

                /**
                 * Encodes the specified MsgMultiSendResponse message. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSendResponse.verify|verify} messages.
                 * @param message MsgMultiSendResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMsgMultiSendResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMultiSendResponse message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.MsgMultiSendResponse.verify|verify} messages.
                 * @param message MsgMultiSendResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMsgMultiSendResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMultiSendResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMultiSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.MsgMultiSendResponse;

                /**
                 * Decodes a MsgMultiSendResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMultiSendResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.MsgMultiSendResponse;

                /**
                 * Verifies a MsgMultiSendResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMultiSendResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMultiSendResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.MsgMultiSendResponse;

                /**
                 * Creates a plain object from a MsgMultiSendResponse message. Also converts values to other types if specified.
                 * @param message MsgMultiSendResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.MsgMultiSendResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMultiSendResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params send_enabled */
                send_enabled?: (cosmos.bank.v1beta1.ISendEnabled[]|null);

                /** Params default_send_enabled */
                default_send_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IParams);

                /** Params send_enabled. */
                public send_enabled: cosmos.bank.v1beta1.ISendEnabled[];

                /** Params default_send_enabled. */
                public default_send_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SendEnabled. */
            interface ISendEnabled {

                /** SendEnabled denom */
                denom?: (string|null);

                /** SendEnabled enabled */
                enabled?: (boolean|null);
            }

            /** Represents a SendEnabled. */
            class SendEnabled implements ISendEnabled {

                /**
                 * Constructs a new SendEnabled.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISendEnabled);

                /** SendEnabled denom. */
                public denom: string;

                /** SendEnabled enabled. */
                public enabled: boolean;

                /**
                 * Encodes the specified SendEnabled message. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SendEnabled message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Verifies a SendEnabled message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SendEnabled message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SendEnabled
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Creates a plain object from a SendEnabled message. Also converts values to other types if specified.
                 * @param message SendEnabled
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.SendEnabled, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SendEnabled to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Input. */
            interface IInput {

                /** Input address */
                address?: (string|null);

                /** Input coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Input. */
            class Input implements IInput {

                /**
                 * Constructs a new Input.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IInput);

                /** Input address. */
                public address: string;

                /** Input coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Input message. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Input message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Input message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Input;

                /**
                 * Decodes an Input message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Input;

                /**
                 * Verifies an Input message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Input message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Input
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Input;

                /**
                 * Creates a plain object from an Input message. Also converts values to other types if specified.
                 * @param message Input
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Input, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Input to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Output. */
            interface IOutput {

                /** Output address */
                address?: (string|null);

                /** Output coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Output. */
            class Output implements IOutput {

                /**
                 * Constructs a new Output.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IOutput);

                /** Output address. */
                public address: string;

                /** Output coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Output message. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Output message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Output message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Output;

                /**
                 * Decodes an Output message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Output;

                /**
                 * Verifies an Output message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Output message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Output
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Output;

                /**
                 * Creates a plain object from an Output message. Also converts values to other types if specified.
                 * @param message Output
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Output, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Output to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Supply. */
            interface ISupply {

                /** Supply total */
                total?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Supply. */
            class Supply implements ISupply {

                /**
                 * Constructs a new Supply.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISupply);

                /** Supply total. */
                public total: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Supply message. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Supply message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Supply message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Supply;

                /**
                 * Decodes a Supply message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Supply;

                /**
                 * Verifies a Supply message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Supply message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Supply
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Supply;

                /**
                 * Creates a plain object from a Supply message. Also converts values to other types if specified.
                 * @param message Supply
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Supply, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Supply to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomUnit. */
            interface IDenomUnit {

                /** DenomUnit denom */
                denom?: (string|null);

                /** DenomUnit exponent */
                exponent?: (number|null);

                /** DenomUnit aliases */
                aliases?: (string[]|null);
            }

            /** Represents a DenomUnit. */
            class DenomUnit implements IDenomUnit {

                /**
                 * Constructs a new DenomUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IDenomUnit);

                /** DenomUnit denom. */
                public denom: string;

                /** DenomUnit exponent. */
                public exponent: number;

                /** DenomUnit aliases. */
                public aliases: string[];

                /**
                 * Encodes the specified DenomUnit message. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomUnit message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Verifies a DenomUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomUnit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Creates a plain object from a DenomUnit message. Also converts values to other types if specified.
                 * @param message DenomUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.DenomUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Metadata. */
            interface IMetadata {

                /** Metadata description */
                description?: (string|null);

                /** Metadata denom_units */
                denom_units?: (cosmos.bank.v1beta1.IDenomUnit[]|null);

                /** Metadata base */
                base?: (string|null);

                /** Metadata display */
                display?: (string|null);
            }

            /** Represents a Metadata. */
            class Metadata implements IMetadata {

                /**
                 * Constructs a new Metadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMetadata);

                /** Metadata description. */
                public description: string;

                /** Metadata denom_units. */
                public denom_units: cosmos.bank.v1beta1.IDenomUnit[];

                /** Metadata base. */
                public base: string;

                /** Metadata display. */
                public display: string;

                /**
                 * Encodes the specified Metadata message. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Metadata message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Metadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Metadata;

                /**
                 * Decodes a Metadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Metadata;

                /**
                 * Verifies a Metadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Metadata
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Metadata;

                /**
                 * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                 * @param message Metadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Metadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace base. */
    namespace base {

        /** Namespace abci. */
        namespace abci {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a TxResponse. */
                interface ITxResponse {

                    /** TxResponse height */
                    height?: (Long|null);

                    /** TxResponse txhash */
                    txhash?: (string|null);

                    /** TxResponse codespace */
                    codespace?: (string|null);

                    /** TxResponse code */
                    code?: (number|null);

                    /** TxResponse data */
                    data?: (string|null);

                    /** TxResponse raw_log */
                    raw_log?: (string|null);

                    /** TxResponse logs */
                    logs?: (cosmos.base.abci.v1beta1.IABCIMessageLog[]|null);

                    /** TxResponse info */
                    info?: (string|null);

                    /** TxResponse gas_wanted */
                    gas_wanted?: (Long|null);

                    /** TxResponse gas_used */
                    gas_used?: (Long|null);

                    /** TxResponse tx */
                    tx?: (google.protobuf.IAny|null);

                    /** TxResponse timestamp */
                    timestamp?: (string|null);
                }

                /** Represents a TxResponse. */
                class TxResponse implements ITxResponse {

                    /**
                     * Constructs a new TxResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.ITxResponse);

                    /** TxResponse height. */
                    public height: Long;

                    /** TxResponse txhash. */
                    public txhash: string;

                    /** TxResponse codespace. */
                    public codespace: string;

                    /** TxResponse code. */
                    public code: number;

                    /** TxResponse data. */
                    public data: string;

                    /** TxResponse raw_log. */
                    public raw_log: string;

                    /** TxResponse logs. */
                    public logs: cosmos.base.abci.v1beta1.IABCIMessageLog[];

                    /** TxResponse info. */
                    public info: string;

                    /** TxResponse gas_wanted. */
                    public gas_wanted: Long;

                    /** TxResponse gas_used. */
                    public gas_used: Long;

                    /** TxResponse tx. */
                    public tx?: (google.protobuf.IAny|null);

                    /** TxResponse timestamp. */
                    public timestamp: string;

                    /**
                     * Encodes the specified TxResponse message. Does not implicitly {@link cosmos.base.abci.v1beta1.TxResponse.verify|verify} messages.
                     * @param message TxResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.ITxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TxResponse message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.TxResponse.verify|verify} messages.
                     * @param message TxResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.ITxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TxResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TxResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.TxResponse;

                    /**
                     * Decodes a TxResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TxResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.TxResponse;

                    /**
                     * Verifies a TxResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TxResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TxResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.TxResponse;

                    /**
                     * Creates a plain object from a TxResponse message. Also converts values to other types if specified.
                     * @param message TxResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.TxResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TxResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ABCIMessageLog. */
                interface IABCIMessageLog {

                    /** ABCIMessageLog msg_index */
                    msg_index?: (number|null);

                    /** ABCIMessageLog log */
                    log?: (string|null);

                    /** ABCIMessageLog events */
                    events?: (cosmos.base.abci.v1beta1.IStringEvent[]|null);
                }

                /** Represents a ABCIMessageLog. */
                class ABCIMessageLog implements IABCIMessageLog {

                    /**
                     * Constructs a new ABCIMessageLog.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IABCIMessageLog);

                    /** ABCIMessageLog msg_index. */
                    public msg_index: number;

                    /** ABCIMessageLog log. */
                    public log: string;

                    /** ABCIMessageLog events. */
                    public events: cosmos.base.abci.v1beta1.IStringEvent[];

                    /**
                     * Encodes the specified ABCIMessageLog message. Does not implicitly {@link cosmos.base.abci.v1beta1.ABCIMessageLog.verify|verify} messages.
                     * @param message ABCIMessageLog message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IABCIMessageLog, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ABCIMessageLog message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.ABCIMessageLog.verify|verify} messages.
                     * @param message ABCIMessageLog message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IABCIMessageLog, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ABCIMessageLog message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ABCIMessageLog
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.ABCIMessageLog;

                    /**
                     * Decodes a ABCIMessageLog message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ABCIMessageLog
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.ABCIMessageLog;

                    /**
                     * Verifies a ABCIMessageLog message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ABCIMessageLog message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ABCIMessageLog
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.ABCIMessageLog;

                    /**
                     * Creates a plain object from a ABCIMessageLog message. Also converts values to other types if specified.
                     * @param message ABCIMessageLog
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.ABCIMessageLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ABCIMessageLog to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a StringEvent. */
                interface IStringEvent {

                    /** StringEvent type */
                    type?: (string|null);

                    /** StringEvent attributes */
                    attributes?: (cosmos.base.abci.v1beta1.IAttribute[]|null);
                }

                /** Represents a StringEvent. */
                class StringEvent implements IStringEvent {

                    /**
                     * Constructs a new StringEvent.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IStringEvent);

                    /** StringEvent type. */
                    public type: string;

                    /** StringEvent attributes. */
                    public attributes: cosmos.base.abci.v1beta1.IAttribute[];

                    /**
                     * Encodes the specified StringEvent message. Does not implicitly {@link cosmos.base.abci.v1beta1.StringEvent.verify|verify} messages.
                     * @param message StringEvent message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IStringEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified StringEvent message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.StringEvent.verify|verify} messages.
                     * @param message StringEvent message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IStringEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a StringEvent message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns StringEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.StringEvent;

                    /**
                     * Decodes a StringEvent message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns StringEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.StringEvent;

                    /**
                     * Verifies a StringEvent message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a StringEvent message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns StringEvent
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.StringEvent;

                    /**
                     * Creates a plain object from a StringEvent message. Also converts values to other types if specified.
                     * @param message StringEvent
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.StringEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this StringEvent to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Attribute. */
                interface IAttribute {

                    /** Attribute key */
                    key?: (string|null);

                    /** Attribute value */
                    value?: (string|null);
                }

                /** Represents an Attribute. */
                class Attribute implements IAttribute {

                    /**
                     * Constructs a new Attribute.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IAttribute);

                    /** Attribute key. */
                    public key: string;

                    /** Attribute value. */
                    public value: string;

                    /**
                     * Encodes the specified Attribute message. Does not implicitly {@link cosmos.base.abci.v1beta1.Attribute.verify|verify} messages.
                     * @param message Attribute message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Attribute message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.Attribute.verify|verify} messages.
                     * @param message Attribute message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Attribute message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Attribute
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.Attribute;

                    /**
                     * Decodes an Attribute message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Attribute
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.Attribute;

                    /**
                     * Verifies an Attribute message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Attribute message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Attribute
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.Attribute;

                    /**
                     * Creates a plain object from an Attribute message. Also converts values to other types if specified.
                     * @param message Attribute
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.Attribute, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Attribute to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GasInfo. */
                interface IGasInfo {

                    /** GasInfo gas_wanted */
                    gas_wanted?: (Long|null);

                    /** GasInfo gas_used */
                    gas_used?: (Long|null);
                }

                /** Represents a GasInfo. */
                class GasInfo implements IGasInfo {

                    /**
                     * Constructs a new GasInfo.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IGasInfo);

                    /** GasInfo gas_wanted. */
                    public gas_wanted: Long;

                    /** GasInfo gas_used. */
                    public gas_used: Long;

                    /**
                     * Encodes the specified GasInfo message. Does not implicitly {@link cosmos.base.abci.v1beta1.GasInfo.verify|verify} messages.
                     * @param message GasInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IGasInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GasInfo message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.GasInfo.verify|verify} messages.
                     * @param message GasInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IGasInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GasInfo message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GasInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.GasInfo;

                    /**
                     * Decodes a GasInfo message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GasInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.GasInfo;

                    /**
                     * Verifies a GasInfo message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GasInfo message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GasInfo
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.GasInfo;

                    /**
                     * Creates a plain object from a GasInfo message. Also converts values to other types if specified.
                     * @param message GasInfo
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.GasInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GasInfo to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Result. */
                interface IResult {

                    /** Result data */
                    data?: (Uint8Array|null);

                    /** Result log */
                    log?: (string|null);

                    /** Result events */
                    events?: (tendermint.abci.IEvent[]|null);
                }

                /** Represents a Result. */
                class Result implements IResult {

                    /**
                     * Constructs a new Result.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IResult);

                    /** Result data. */
                    public data: Uint8Array;

                    /** Result log. */
                    public log: string;

                    /** Result events. */
                    public events: tendermint.abci.IEvent[];

                    /**
                     * Encodes the specified Result message. Does not implicitly {@link cosmos.base.abci.v1beta1.Result.verify|verify} messages.
                     * @param message Result message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Result message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.Result.verify|verify} messages.
                     * @param message Result message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Result message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Result
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.Result;

                    /**
                     * Decodes a Result message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Result
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.Result;

                    /**
                     * Verifies a Result message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Result message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Result
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.Result;

                    /**
                     * Creates a plain object from a Result message. Also converts values to other types if specified.
                     * @param message Result
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.Result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Result to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SimulationResponse. */
                interface ISimulationResponse {

                    /** SimulationResponse gas_info */
                    gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                    /** SimulationResponse result */
                    result?: (cosmos.base.abci.v1beta1.IResult|null);
                }

                /** Represents a SimulationResponse. */
                class SimulationResponse implements ISimulationResponse {

                    /**
                     * Constructs a new SimulationResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.ISimulationResponse);

                    /** SimulationResponse gas_info. */
                    public gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                    /** SimulationResponse result. */
                    public result?: (cosmos.base.abci.v1beta1.IResult|null);

                    /**
                     * Encodes the specified SimulationResponse message. Does not implicitly {@link cosmos.base.abci.v1beta1.SimulationResponse.verify|verify} messages.
                     * @param message SimulationResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.ISimulationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SimulationResponse message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.SimulationResponse.verify|verify} messages.
                     * @param message SimulationResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.ISimulationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SimulationResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SimulationResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.SimulationResponse;

                    /**
                     * Decodes a SimulationResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SimulationResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.SimulationResponse;

                    /**
                     * Verifies a SimulationResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SimulationResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SimulationResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.SimulationResponse;

                    /**
                     * Creates a plain object from a SimulationResponse message. Also converts values to other types if specified.
                     * @param message SimulationResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.SimulationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SimulationResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgData. */
                interface IMsgData {

                    /** MsgData msg_type */
                    msg_type?: (string|null);

                    /** MsgData data */
                    data?: (Uint8Array|null);
                }

                /** Represents a MsgData. */
                class MsgData implements IMsgData {

                    /**
                     * Constructs a new MsgData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.IMsgData);

                    /** MsgData msg_type. */
                    public msg_type: string;

                    /** MsgData data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified MsgData message. Does not implicitly {@link cosmos.base.abci.v1beta1.MsgData.verify|verify} messages.
                     * @param message MsgData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.IMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgData message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.MsgData.verify|verify} messages.
                     * @param message MsgData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.IMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.MsgData;

                    /**
                     * Decodes a MsgData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.MsgData;

                    /**
                     * Verifies a MsgData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgData
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.MsgData;

                    /**
                     * Creates a plain object from a MsgData message. Also converts values to other types if specified.
                     * @param message MsgData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.MsgData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a TxMsgData. */
                interface ITxMsgData {

                    /** TxMsgData data */
                    data?: (cosmos.base.abci.v1beta1.IMsgData[]|null);
                }

                /** Represents a TxMsgData. */
                class TxMsgData implements ITxMsgData {

                    /**
                     * Constructs a new TxMsgData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.ITxMsgData);

                    /** TxMsgData data. */
                    public data: cosmos.base.abci.v1beta1.IMsgData[];

                    /**
                     * Encodes the specified TxMsgData message. Does not implicitly {@link cosmos.base.abci.v1beta1.TxMsgData.verify|verify} messages.
                     * @param message TxMsgData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.ITxMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TxMsgData message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.TxMsgData.verify|verify} messages.
                     * @param message TxMsgData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.ITxMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TxMsgData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TxMsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.TxMsgData;

                    /**
                     * Decodes a TxMsgData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TxMsgData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.TxMsgData;

                    /**
                     * Verifies a TxMsgData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TxMsgData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TxMsgData
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.TxMsgData;

                    /**
                     * Creates a plain object from a TxMsgData message. Also converts values to other types if specified.
                     * @param message TxMsgData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.TxMsgData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TxMsgData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SearchTxsResult. */
                interface ISearchTxsResult {

                    /** SearchTxsResult total_count */
                    total_count?: (Long|null);

                    /** SearchTxsResult count */
                    count?: (Long|null);

                    /** SearchTxsResult page_number */
                    page_number?: (Long|null);

                    /** SearchTxsResult page_total */
                    page_total?: (Long|null);

                    /** SearchTxsResult limit */
                    limit?: (Long|null);

                    /** SearchTxsResult txs */
                    txs?: (cosmos.base.abci.v1beta1.ITxResponse[]|null);
                }

                /** Represents a SearchTxsResult. */
                class SearchTxsResult implements ISearchTxsResult {

                    /**
                     * Constructs a new SearchTxsResult.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.abci.v1beta1.ISearchTxsResult);

                    /** SearchTxsResult total_count. */
                    public total_count: Long;

                    /** SearchTxsResult count. */
                    public count: Long;

                    /** SearchTxsResult page_number. */
                    public page_number: Long;

                    /** SearchTxsResult page_total. */
                    public page_total: Long;

                    /** SearchTxsResult limit. */
                    public limit: Long;

                    /** SearchTxsResult txs. */
                    public txs: cosmos.base.abci.v1beta1.ITxResponse[];

                    /**
                     * Encodes the specified SearchTxsResult message. Does not implicitly {@link cosmos.base.abci.v1beta1.SearchTxsResult.verify|verify} messages.
                     * @param message SearchTxsResult message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.abci.v1beta1.ISearchTxsResult, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SearchTxsResult message, length delimited. Does not implicitly {@link cosmos.base.abci.v1beta1.SearchTxsResult.verify|verify} messages.
                     * @param message SearchTxsResult message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.abci.v1beta1.ISearchTxsResult, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SearchTxsResult message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SearchTxsResult
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.abci.v1beta1.SearchTxsResult;

                    /**
                     * Decodes a SearchTxsResult message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SearchTxsResult
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.abci.v1beta1.SearchTxsResult;

                    /**
                     * Verifies a SearchTxsResult message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SearchTxsResult message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SearchTxsResult
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.abci.v1beta1.SearchTxsResult;

                    /**
                     * Creates a plain object from a SearchTxsResult message. Also converts values to other types if specified.
                     * @param message SearchTxsResult
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.abci.v1beta1.SearchTxsResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SearchTxsResult to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace kv. */
        namespace kv {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a Pairs. */
                interface IPairs {

                    /** Pairs pairs */
                    pairs?: (cosmos.base.kv.v1beta1.IPair[]|null);
                }

                /** Represents a Pairs. */
                class Pairs implements IPairs {

                    /**
                     * Constructs a new Pairs.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.kv.v1beta1.IPairs);

                    /** Pairs pairs. */
                    public pairs: cosmos.base.kv.v1beta1.IPair[];

                    /**
                     * Encodes the specified Pairs message. Does not implicitly {@link cosmos.base.kv.v1beta1.Pairs.verify|verify} messages.
                     * @param message Pairs message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.kv.v1beta1.IPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Pairs message, length delimited. Does not implicitly {@link cosmos.base.kv.v1beta1.Pairs.verify|verify} messages.
                     * @param message Pairs message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.kv.v1beta1.IPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Pairs message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Pairs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.kv.v1beta1.Pairs;

                    /**
                     * Decodes a Pairs message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Pairs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.kv.v1beta1.Pairs;

                    /**
                     * Verifies a Pairs message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Pairs message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Pairs
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.kv.v1beta1.Pairs;

                    /**
                     * Creates a plain object from a Pairs message. Also converts values to other types if specified.
                     * @param message Pairs
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.kv.v1beta1.Pairs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Pairs to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Pair. */
                interface IPair {

                    /** Pair key */
                    key?: (Uint8Array|null);

                    /** Pair value */
                    value?: (Uint8Array|null);
                }

                /** Represents a Pair. */
                class Pair implements IPair {

                    /**
                     * Constructs a new Pair.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.kv.v1beta1.IPair);

                    /** Pair key. */
                    public key: Uint8Array;

                    /** Pair value. */
                    public value: Uint8Array;

                    /**
                     * Encodes the specified Pair message. Does not implicitly {@link cosmos.base.kv.v1beta1.Pair.verify|verify} messages.
                     * @param message Pair message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.kv.v1beta1.IPair, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Pair message, length delimited. Does not implicitly {@link cosmos.base.kv.v1beta1.Pair.verify|verify} messages.
                     * @param message Pair message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.kv.v1beta1.IPair, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Pair message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Pair
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.kv.v1beta1.Pair;

                    /**
                     * Decodes a Pair message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Pair
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.kv.v1beta1.Pair;

                    /**
                     * Verifies a Pair message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Pair message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Pair
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.kv.v1beta1.Pair;

                    /**
                     * Creates a plain object from a Pair message. Also converts values to other types if specified.
                     * @param message Pair
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.kv.v1beta1.Pair, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Pair to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace query. */
        namespace query {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a PageRequest. */
                interface IPageRequest {

                    /** PageRequest key */
                    key?: (Uint8Array|null);

                    /** PageRequest offset */
                    offset?: (Long|null);

                    /** PageRequest limit */
                    limit?: (Long|null);

                    /** PageRequest count_total */
                    count_total?: (boolean|null);
                }

                /** Represents a PageRequest. */
                class PageRequest implements IPageRequest {

                    /**
                     * Constructs a new PageRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageRequest);

                    /** PageRequest key. */
                    public key: Uint8Array;

                    /** PageRequest offset. */
                    public offset: Long;

                    /** PageRequest limit. */
                    public limit: Long;

                    /** PageRequest count_total. */
                    public count_total: boolean;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Verifies a PageRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                     * @param message PageRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PageResponse. */
                interface IPageResponse {

                    /** PageResponse next_key */
                    next_key?: (Uint8Array|null);

                    /** PageResponse total */
                    total?: (Long|null);
                }

                /** Represents a PageResponse. */
                class PageResponse implements IPageResponse {

                    /**
                     * Constructs a new PageResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageResponse);

                    /** PageResponse next_key. */
                    public next_key: Uint8Array;

                    /** PageResponse total. */
                    public total: Long;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Verifies a PageResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                     * @param message PageResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace reflection. */
        namespace reflection {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Represents a ReflectionService */
                class ReflectionService extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new ReflectionService service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ListAllInterfaces.
                     * @param request ListAllInterfacesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and ListAllInterfacesResponse
                     */
                    public listAllInterfaces(request: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest, callback: cosmos.base.reflection.v1beta1.ReflectionService.ListAllInterfacesCallback): void;

                    /**
                     * Calls ListAllInterfaces.
                     * @param request ListAllInterfacesRequest message or plain object
                     * @returns Promise
                     */
                    public listAllInterfaces(request: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest): Promise<cosmos.base.reflection.v1beta1.ListAllInterfacesResponse>;

                    /**
                     * Calls ListImplementations.
                     * @param request ListImplementationsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and ListImplementationsResponse
                     */
                    public listImplementations(request: cosmos.base.reflection.v1beta1.IListImplementationsRequest, callback: cosmos.base.reflection.v1beta1.ReflectionService.ListImplementationsCallback): void;

                    /**
                     * Calls ListImplementations.
                     * @param request ListImplementationsRequest message or plain object
                     * @returns Promise
                     */
                    public listImplementations(request: cosmos.base.reflection.v1beta1.IListImplementationsRequest): Promise<cosmos.base.reflection.v1beta1.ListImplementationsResponse>;
                }

                namespace ReflectionService {

                    /**
                     * Callback as used by {@link cosmos.base.reflection.v1beta1.ReflectionService#listAllInterfaces}.
                     * @param error Error, if any
                     * @param [response] ListAllInterfacesResponse
                     */
                    type ListAllInterfacesCallback = (error: (Error|null), response?: cosmos.base.reflection.v1beta1.ListAllInterfacesResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.reflection.v1beta1.ReflectionService#listImplementations}.
                     * @param error Error, if any
                     * @param [response] ListImplementationsResponse
                     */
                    type ListImplementationsCallback = (error: (Error|null), response?: cosmos.base.reflection.v1beta1.ListImplementationsResponse) => void;
                }

                /** Properties of a ListAllInterfacesRequest. */
                interface IListAllInterfacesRequest {
                }

                /** Represents a ListAllInterfacesRequest. */
                class ListAllInterfacesRequest implements IListAllInterfacesRequest {

                    /**
                     * Constructs a new ListAllInterfacesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest);

                    /**
                     * Encodes the specified ListAllInterfacesRequest message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesRequest.verify|verify} messages.
                     * @param message ListAllInterfacesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ListAllInterfacesRequest message, length delimited. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesRequest.verify|verify} messages.
                     * @param message ListAllInterfacesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.reflection.v1beta1.IListAllInterfacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListAllInterfacesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ListAllInterfacesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.reflection.v1beta1.ListAllInterfacesRequest;

                    /**
                     * Decodes a ListAllInterfacesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ListAllInterfacesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.reflection.v1beta1.ListAllInterfacesRequest;

                    /**
                     * Verifies a ListAllInterfacesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ListAllInterfacesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ListAllInterfacesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.reflection.v1beta1.ListAllInterfacesRequest;

                    /**
                     * Creates a plain object from a ListAllInterfacesRequest message. Also converts values to other types if specified.
                     * @param message ListAllInterfacesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.reflection.v1beta1.ListAllInterfacesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ListAllInterfacesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ListAllInterfacesResponse. */
                interface IListAllInterfacesResponse {

                    /** ListAllInterfacesResponse interface_names */
                    interface_names?: (string[]|null);
                }

                /** Represents a ListAllInterfacesResponse. */
                class ListAllInterfacesResponse implements IListAllInterfacesResponse {

                    /**
                     * Constructs a new ListAllInterfacesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.reflection.v1beta1.IListAllInterfacesResponse);

                    /** ListAllInterfacesResponse interface_names. */
                    public interface_names: string[];

                    /**
                     * Encodes the specified ListAllInterfacesResponse message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.verify|verify} messages.
                     * @param message ListAllInterfacesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.reflection.v1beta1.IListAllInterfacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ListAllInterfacesResponse message, length delimited. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.verify|verify} messages.
                     * @param message ListAllInterfacesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.reflection.v1beta1.IListAllInterfacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListAllInterfacesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ListAllInterfacesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.reflection.v1beta1.ListAllInterfacesResponse;

                    /**
                     * Decodes a ListAllInterfacesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ListAllInterfacesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.reflection.v1beta1.ListAllInterfacesResponse;

                    /**
                     * Verifies a ListAllInterfacesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ListAllInterfacesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ListAllInterfacesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.reflection.v1beta1.ListAllInterfacesResponse;

                    /**
                     * Creates a plain object from a ListAllInterfacesResponse message. Also converts values to other types if specified.
                     * @param message ListAllInterfacesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.reflection.v1beta1.ListAllInterfacesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ListAllInterfacesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ListImplementationsRequest. */
                interface IListImplementationsRequest {

                    /** ListImplementationsRequest interface_name */
                    interface_name?: (string|null);
                }

                /** Represents a ListImplementationsRequest. */
                class ListImplementationsRequest implements IListImplementationsRequest {

                    /**
                     * Constructs a new ListImplementationsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.reflection.v1beta1.IListImplementationsRequest);

                    /** ListImplementationsRequest interface_name. */
                    public interface_name: string;

                    /**
                     * Encodes the specified ListImplementationsRequest message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsRequest.verify|verify} messages.
                     * @param message ListImplementationsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.reflection.v1beta1.IListImplementationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ListImplementationsRequest message, length delimited. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsRequest.verify|verify} messages.
                     * @param message ListImplementationsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.reflection.v1beta1.IListImplementationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListImplementationsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ListImplementationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.reflection.v1beta1.ListImplementationsRequest;

                    /**
                     * Decodes a ListImplementationsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ListImplementationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.reflection.v1beta1.ListImplementationsRequest;

                    /**
                     * Verifies a ListImplementationsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ListImplementationsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ListImplementationsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.reflection.v1beta1.ListImplementationsRequest;

                    /**
                     * Creates a plain object from a ListImplementationsRequest message. Also converts values to other types if specified.
                     * @param message ListImplementationsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.reflection.v1beta1.ListImplementationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ListImplementationsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ListImplementationsResponse. */
                interface IListImplementationsResponse {

                    /** ListImplementationsResponse implementation_message_names */
                    implementation_message_names?: (string[]|null);
                }

                /** Represents a ListImplementationsResponse. */
                class ListImplementationsResponse implements IListImplementationsResponse {

                    /**
                     * Constructs a new ListImplementationsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.reflection.v1beta1.IListImplementationsResponse);

                    /** ListImplementationsResponse implementation_message_names. */
                    public implementation_message_names: string[];

                    /**
                     * Encodes the specified ListImplementationsResponse message. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsResponse.verify|verify} messages.
                     * @param message ListImplementationsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.reflection.v1beta1.IListImplementationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ListImplementationsResponse message, length delimited. Does not implicitly {@link cosmos.base.reflection.v1beta1.ListImplementationsResponse.verify|verify} messages.
                     * @param message ListImplementationsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.reflection.v1beta1.IListImplementationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ListImplementationsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ListImplementationsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.reflection.v1beta1.ListImplementationsResponse;

                    /**
                     * Decodes a ListImplementationsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ListImplementationsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.reflection.v1beta1.ListImplementationsResponse;

                    /**
                     * Verifies a ListImplementationsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ListImplementationsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ListImplementationsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.reflection.v1beta1.ListImplementationsResponse;

                    /**
                     * Creates a plain object from a ListImplementationsResponse message. Also converts values to other types if specified.
                     * @param message ListImplementationsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.reflection.v1beta1.ListImplementationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ListImplementationsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace snapshots. */
        namespace snapshots {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a Snapshot. */
                interface ISnapshot {

                    /** Snapshot height */
                    height?: (Long|null);

                    /** Snapshot format */
                    format?: (number|null);

                    /** Snapshot chunks */
                    chunks?: (number|null);

                    /** Snapshot hash */
                    hash?: (Uint8Array|null);

                    /** Snapshot metadata */
                    metadata?: (cosmos.base.snapshots.v1beta1.IMetadata|null);
                }

                /** Represents a Snapshot. */
                class Snapshot implements ISnapshot {

                    /**
                     * Constructs a new Snapshot.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.snapshots.v1beta1.ISnapshot);

                    /** Snapshot height. */
                    public height: Long;

                    /** Snapshot format. */
                    public format: number;

                    /** Snapshot chunks. */
                    public chunks: number;

                    /** Snapshot hash. */
                    public hash: Uint8Array;

                    /** Snapshot metadata. */
                    public metadata?: (cosmos.base.snapshots.v1beta1.IMetadata|null);

                    /**
                     * Encodes the specified Snapshot message. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Snapshot.verify|verify} messages.
                     * @param message Snapshot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.snapshots.v1beta1.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Snapshot message, length delimited. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Snapshot.verify|verify} messages.
                     * @param message Snapshot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.snapshots.v1beta1.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Snapshot message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Snapshot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.snapshots.v1beta1.Snapshot;

                    /**
                     * Decodes a Snapshot message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Snapshot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.snapshots.v1beta1.Snapshot;

                    /**
                     * Verifies a Snapshot message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Snapshot message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Snapshot
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.snapshots.v1beta1.Snapshot;

                    /**
                     * Creates a plain object from a Snapshot message. Also converts values to other types if specified.
                     * @param message Snapshot
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.snapshots.v1beta1.Snapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Snapshot to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Metadata. */
                interface IMetadata {

                    /** Metadata chunk_hashes */
                    chunk_hashes?: (Uint8Array[]|null);
                }

                /** Represents a Metadata. */
                class Metadata implements IMetadata {

                    /**
                     * Constructs a new Metadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.snapshots.v1beta1.IMetadata);

                    /** Metadata chunk_hashes. */
                    public chunk_hashes: Uint8Array[];

                    /**
                     * Encodes the specified Metadata message. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.snapshots.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Metadata message, length delimited. Does not implicitly {@link cosmos.base.snapshots.v1beta1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.snapshots.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.snapshots.v1beta1.Metadata;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.snapshots.v1beta1.Metadata;

                    /**
                     * Verifies a Metadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Metadata
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.snapshots.v1beta1.Metadata;

                    /**
                     * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                     * @param message Metadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.snapshots.v1beta1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Metadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace store. */
        namespace store {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a CommitInfo. */
                interface ICommitInfo {

                    /** CommitInfo version */
                    version?: (Long|null);

                    /** CommitInfo store_infos */
                    store_infos?: (cosmos.base.store.v1beta1.IStoreInfo[]|null);
                }

                /** Represents a CommitInfo. */
                class CommitInfo implements ICommitInfo {

                    /**
                     * Constructs a new CommitInfo.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.ICommitInfo);

                    /** CommitInfo version. */
                    public version: Long;

                    /** CommitInfo store_infos. */
                    public store_infos: cosmos.base.store.v1beta1.IStoreInfo[];

                    /**
                     * Encodes the specified CommitInfo message. Does not implicitly {@link cosmos.base.store.v1beta1.CommitInfo.verify|verify} messages.
                     * @param message CommitInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.ICommitInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified CommitInfo message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.CommitInfo.verify|verify} messages.
                     * @param message CommitInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.ICommitInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CommitInfo message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns CommitInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.CommitInfo;

                    /**
                     * Decodes a CommitInfo message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns CommitInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.CommitInfo;

                    /**
                     * Verifies a CommitInfo message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a CommitInfo message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns CommitInfo
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.CommitInfo;

                    /**
                     * Creates a plain object from a CommitInfo message. Also converts values to other types if specified.
                     * @param message CommitInfo
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.CommitInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this CommitInfo to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a StoreInfo. */
                interface IStoreInfo {

                    /** StoreInfo name */
                    name?: (string|null);

                    /** StoreInfo commit_id */
                    commit_id?: (cosmos.base.store.v1beta1.ICommitID|null);
                }

                /** Represents a StoreInfo. */
                class StoreInfo implements IStoreInfo {

                    /**
                     * Constructs a new StoreInfo.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.IStoreInfo);

                    /** StoreInfo name. */
                    public name: string;

                    /** StoreInfo commit_id. */
                    public commit_id?: (cosmos.base.store.v1beta1.ICommitID|null);

                    /**
                     * Encodes the specified StoreInfo message. Does not implicitly {@link cosmos.base.store.v1beta1.StoreInfo.verify|verify} messages.
                     * @param message StoreInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.IStoreInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified StoreInfo message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.StoreInfo.verify|verify} messages.
                     * @param message StoreInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.IStoreInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a StoreInfo message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns StoreInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.StoreInfo;

                    /**
                     * Decodes a StoreInfo message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns StoreInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.StoreInfo;

                    /**
                     * Verifies a StoreInfo message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a StoreInfo message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns StoreInfo
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.StoreInfo;

                    /**
                     * Creates a plain object from a StoreInfo message. Also converts values to other types if specified.
                     * @param message StoreInfo
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.StoreInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this StoreInfo to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a CommitID. */
                interface ICommitID {

                    /** CommitID version */
                    version?: (Long|null);

                    /** CommitID hash */
                    hash?: (Uint8Array|null);
                }

                /** Represents a CommitID. */
                class CommitID implements ICommitID {

                    /**
                     * Constructs a new CommitID.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.ICommitID);

                    /** CommitID version. */
                    public version: Long;

                    /** CommitID hash. */
                    public hash: Uint8Array;

                    /**
                     * Encodes the specified CommitID message. Does not implicitly {@link cosmos.base.store.v1beta1.CommitID.verify|verify} messages.
                     * @param message CommitID message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.ICommitID, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified CommitID message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.CommitID.verify|verify} messages.
                     * @param message CommitID message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.ICommitID, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CommitID message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns CommitID
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.CommitID;

                    /**
                     * Decodes a CommitID message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns CommitID
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.CommitID;

                    /**
                     * Verifies a CommitID message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a CommitID message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns CommitID
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.CommitID;

                    /**
                     * Creates a plain object from a CommitID message. Also converts values to other types if specified.
                     * @param message CommitID
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.CommitID, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this CommitID to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SnapshotItem. */
                interface ISnapshotItem {

                    /** SnapshotItem store */
                    store?: (cosmos.base.store.v1beta1.ISnapshotStoreItem|null);

                    /** SnapshotItem iavl */
                    iavl?: (cosmos.base.store.v1beta1.ISnapshotIAVLItem|null);
                }

                /** Represents a SnapshotItem. */
                class SnapshotItem implements ISnapshotItem {

                    /**
                     * Constructs a new SnapshotItem.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.ISnapshotItem);

                    /** SnapshotItem store. */
                    public store?: (cosmos.base.store.v1beta1.ISnapshotStoreItem|null);

                    /** SnapshotItem iavl. */
                    public iavl?: (cosmos.base.store.v1beta1.ISnapshotIAVLItem|null);

                    /** SnapshotItem item. */
                    public item?: ("store"|"iavl");

                    /**
                     * Encodes the specified SnapshotItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotItem.verify|verify} messages.
                     * @param message SnapshotItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.ISnapshotItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SnapshotItem message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotItem.verify|verify} messages.
                     * @param message SnapshotItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.ISnapshotItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotItem message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SnapshotItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.SnapshotItem;

                    /**
                     * Decodes a SnapshotItem message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SnapshotItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.SnapshotItem;

                    /**
                     * Verifies a SnapshotItem message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SnapshotItem message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SnapshotItem
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.SnapshotItem;

                    /**
                     * Creates a plain object from a SnapshotItem message. Also converts values to other types if specified.
                     * @param message SnapshotItem
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.SnapshotItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SnapshotItem to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SnapshotStoreItem. */
                interface ISnapshotStoreItem {

                    /** SnapshotStoreItem name */
                    name?: (string|null);
                }

                /** Represents a SnapshotStoreItem. */
                class SnapshotStoreItem implements ISnapshotStoreItem {

                    /**
                     * Constructs a new SnapshotStoreItem.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.ISnapshotStoreItem);

                    /** SnapshotStoreItem name. */
                    public name: string;

                    /**
                     * Encodes the specified SnapshotStoreItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotStoreItem.verify|verify} messages.
                     * @param message SnapshotStoreItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.ISnapshotStoreItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SnapshotStoreItem message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotStoreItem.verify|verify} messages.
                     * @param message SnapshotStoreItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.ISnapshotStoreItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotStoreItem message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SnapshotStoreItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.SnapshotStoreItem;

                    /**
                     * Decodes a SnapshotStoreItem message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SnapshotStoreItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.SnapshotStoreItem;

                    /**
                     * Verifies a SnapshotStoreItem message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SnapshotStoreItem message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SnapshotStoreItem
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.SnapshotStoreItem;

                    /**
                     * Creates a plain object from a SnapshotStoreItem message. Also converts values to other types if specified.
                     * @param message SnapshotStoreItem
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.SnapshotStoreItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SnapshotStoreItem to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SnapshotIAVLItem. */
                interface ISnapshotIAVLItem {

                    /** SnapshotIAVLItem key */
                    key?: (Uint8Array|null);

                    /** SnapshotIAVLItem value */
                    value?: (Uint8Array|null);

                    /** SnapshotIAVLItem version */
                    version?: (Long|null);

                    /** SnapshotIAVLItem height */
                    height?: (number|null);
                }

                /** Represents a SnapshotIAVLItem. */
                class SnapshotIAVLItem implements ISnapshotIAVLItem {

                    /**
                     * Constructs a new SnapshotIAVLItem.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.store.v1beta1.ISnapshotIAVLItem);

                    /** SnapshotIAVLItem key. */
                    public key: Uint8Array;

                    /** SnapshotIAVLItem value. */
                    public value: Uint8Array;

                    /** SnapshotIAVLItem version. */
                    public version: Long;

                    /** SnapshotIAVLItem height. */
                    public height: number;

                    /**
                     * Encodes the specified SnapshotIAVLItem message. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotIAVLItem.verify|verify} messages.
                     * @param message SnapshotIAVLItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.store.v1beta1.ISnapshotIAVLItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SnapshotIAVLItem message, length delimited. Does not implicitly {@link cosmos.base.store.v1beta1.SnapshotIAVLItem.verify|verify} messages.
                     * @param message SnapshotIAVLItem message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.store.v1beta1.ISnapshotIAVLItem, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SnapshotIAVLItem message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SnapshotIAVLItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.store.v1beta1.SnapshotIAVLItem;

                    /**
                     * Decodes a SnapshotIAVLItem message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SnapshotIAVLItem
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.store.v1beta1.SnapshotIAVLItem;

                    /**
                     * Verifies a SnapshotIAVLItem message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SnapshotIAVLItem message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SnapshotIAVLItem
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.store.v1beta1.SnapshotIAVLItem;

                    /**
                     * Creates a plain object from a SnapshotIAVLItem message. Also converts values to other types if specified.
                     * @param message SnapshotIAVLItem
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.store.v1beta1.SnapshotIAVLItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SnapshotIAVLItem to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace tendermint. */
        namespace tendermint {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Represents a Service */
                class Service extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Service service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls GetNodeInfo.
                     * @param request GetNodeInfoRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetNodeInfoResponse
                     */
                    public getNodeInfo(request: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetNodeInfoCallback): void;

                    /**
                     * Calls GetNodeInfo.
                     * @param request GetNodeInfoRequest message or plain object
                     * @returns Promise
                     */
                    public getNodeInfo(request: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest): Promise<cosmos.base.tendermint.v1beta1.GetNodeInfoResponse>;

                    /**
                     * Calls GetSyncing.
                     * @param request GetSyncingRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetSyncingResponse
                     */
                    public getSyncing(request: cosmos.base.tendermint.v1beta1.IGetSyncingRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetSyncingCallback): void;

                    /**
                     * Calls GetSyncing.
                     * @param request GetSyncingRequest message or plain object
                     * @returns Promise
                     */
                    public getSyncing(request: cosmos.base.tendermint.v1beta1.IGetSyncingRequest): Promise<cosmos.base.tendermint.v1beta1.GetSyncingResponse>;

                    /**
                     * Calls GetLatestBlock.
                     * @param request GetLatestBlockRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetLatestBlockResponse
                     */
                    public getLatestBlock(request: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetLatestBlockCallback): void;

                    /**
                     * Calls GetLatestBlock.
                     * @param request GetLatestBlockRequest message or plain object
                     * @returns Promise
                     */
                    public getLatestBlock(request: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest): Promise<cosmos.base.tendermint.v1beta1.GetLatestBlockResponse>;

                    /**
                     * Calls GetBlockByHeight.
                     * @param request GetBlockByHeightRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetBlockByHeightResponse
                     */
                    public getBlockByHeight(request: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetBlockByHeightCallback): void;

                    /**
                     * Calls GetBlockByHeight.
                     * @param request GetBlockByHeightRequest message or plain object
                     * @returns Promise
                     */
                    public getBlockByHeight(request: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest): Promise<cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse>;

                    /**
                     * Calls GetLatestValidatorSet.
                     * @param request GetLatestValidatorSetRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetLatestValidatorSetResponse
                     */
                    public getLatestValidatorSet(request: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetLatestValidatorSetCallback): void;

                    /**
                     * Calls GetLatestValidatorSet.
                     * @param request GetLatestValidatorSetRequest message or plain object
                     * @returns Promise
                     */
                    public getLatestValidatorSet(request: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest): Promise<cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse>;

                    /**
                     * Calls GetValidatorSetByHeight.
                     * @param request GetValidatorSetByHeightRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and GetValidatorSetByHeightResponse
                     */
                    public getValidatorSetByHeight(request: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest, callback: cosmos.base.tendermint.v1beta1.Service.GetValidatorSetByHeightCallback): void;

                    /**
                     * Calls GetValidatorSetByHeight.
                     * @param request GetValidatorSetByHeightRequest message or plain object
                     * @returns Promise
                     */
                    public getValidatorSetByHeight(request: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest): Promise<cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse>;
                }

                namespace Service {

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getNodeInfo}.
                     * @param error Error, if any
                     * @param [response] GetNodeInfoResponse
                     */
                    type GetNodeInfoCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetNodeInfoResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getSyncing}.
                     * @param error Error, if any
                     * @param [response] GetSyncingResponse
                     */
                    type GetSyncingCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetSyncingResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getLatestBlock}.
                     * @param error Error, if any
                     * @param [response] GetLatestBlockResponse
                     */
                    type GetLatestBlockCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetLatestBlockResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getBlockByHeight}.
                     * @param error Error, if any
                     * @param [response] GetBlockByHeightResponse
                     */
                    type GetBlockByHeightCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getLatestValidatorSet}.
                     * @param error Error, if any
                     * @param [response] GetLatestValidatorSetResponse
                     */
                    type GetLatestValidatorSetCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse) => void;

                    /**
                     * Callback as used by {@link cosmos.base.tendermint.v1beta1.Service#getValidatorSetByHeight}.
                     * @param error Error, if any
                     * @param [response] GetValidatorSetByHeightResponse
                     */
                    type GetValidatorSetByHeightCallback = (error: (Error|null), response?: cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse) => void;
                }

                /** Properties of a GetValidatorSetByHeightRequest. */
                interface IGetValidatorSetByHeightRequest {

                    /** GetValidatorSetByHeightRequest height */
                    height?: (Long|null);

                    /** GetValidatorSetByHeightRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a GetValidatorSetByHeightRequest. */
                class GetValidatorSetByHeightRequest implements IGetValidatorSetByHeightRequest {

                    /**
                     * Constructs a new GetValidatorSetByHeightRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest);

                    /** GetValidatorSetByHeightRequest height. */
                    public height: Long;

                    /** GetValidatorSetByHeightRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified GetValidatorSetByHeightRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.verify|verify} messages.
                     * @param message GetValidatorSetByHeightRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetValidatorSetByHeightRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.verify|verify} messages.
                     * @param message GetValidatorSetByHeightRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetValidatorSetByHeightRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetValidatorSetByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest;

                    /**
                     * Decodes a GetValidatorSetByHeightRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetValidatorSetByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest;

                    /**
                     * Verifies a GetValidatorSetByHeightRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetValidatorSetByHeightRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetValidatorSetByHeightRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest;

                    /**
                     * Creates a plain object from a GetValidatorSetByHeightRequest message. Also converts values to other types if specified.
                     * @param message GetValidatorSetByHeightRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetValidatorSetByHeightRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetValidatorSetByHeightResponse. */
                interface IGetValidatorSetByHeightResponse {

                    /** GetValidatorSetByHeightResponse block_height */
                    block_height?: (Long|null);

                    /** GetValidatorSetByHeightResponse validators */
                    validators?: (cosmos.base.tendermint.v1beta1.IValidator[]|null);

                    /** GetValidatorSetByHeightResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a GetValidatorSetByHeightResponse. */
                class GetValidatorSetByHeightResponse implements IGetValidatorSetByHeightResponse {

                    /**
                     * Constructs a new GetValidatorSetByHeightResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightResponse);

                    /** GetValidatorSetByHeightResponse block_height. */
                    public block_height: Long;

                    /** GetValidatorSetByHeightResponse validators. */
                    public validators: cosmos.base.tendermint.v1beta1.IValidator[];

                    /** GetValidatorSetByHeightResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified GetValidatorSetByHeightResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.verify|verify} messages.
                     * @param message GetValidatorSetByHeightResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetValidatorSetByHeightResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.verify|verify} messages.
                     * @param message GetValidatorSetByHeightResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetValidatorSetByHeightResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetValidatorSetByHeightResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetValidatorSetByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse;

                    /**
                     * Decodes a GetValidatorSetByHeightResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetValidatorSetByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse;

                    /**
                     * Verifies a GetValidatorSetByHeightResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetValidatorSetByHeightResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetValidatorSetByHeightResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse;

                    /**
                     * Creates a plain object from a GetValidatorSetByHeightResponse message. Also converts values to other types if specified.
                     * @param message GetValidatorSetByHeightResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetValidatorSetByHeightResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetLatestValidatorSetRequest. */
                interface IGetLatestValidatorSetRequest {

                    /** GetLatestValidatorSetRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a GetLatestValidatorSetRequest. */
                class GetLatestValidatorSetRequest implements IGetLatestValidatorSetRequest {

                    /**
                     * Constructs a new GetLatestValidatorSetRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest);

                    /** GetLatestValidatorSetRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified GetLatestValidatorSetRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.verify|verify} messages.
                     * @param message GetLatestValidatorSetRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetLatestValidatorSetRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.verify|verify} messages.
                     * @param message GetLatestValidatorSetRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestValidatorSetRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetLatestValidatorSetRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest;

                    /**
                     * Decodes a GetLatestValidatorSetRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetLatestValidatorSetRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest;

                    /**
                     * Verifies a GetLatestValidatorSetRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetLatestValidatorSetRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetLatestValidatorSetRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest;

                    /**
                     * Creates a plain object from a GetLatestValidatorSetRequest message. Also converts values to other types if specified.
                     * @param message GetLatestValidatorSetRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetLatestValidatorSetRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetLatestValidatorSetResponse. */
                interface IGetLatestValidatorSetResponse {

                    /** GetLatestValidatorSetResponse block_height */
                    block_height?: (Long|null);

                    /** GetLatestValidatorSetResponse validators */
                    validators?: (cosmos.base.tendermint.v1beta1.IValidator[]|null);

                    /** GetLatestValidatorSetResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a GetLatestValidatorSetResponse. */
                class GetLatestValidatorSetResponse implements IGetLatestValidatorSetResponse {

                    /**
                     * Constructs a new GetLatestValidatorSetResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetResponse);

                    /** GetLatestValidatorSetResponse block_height. */
                    public block_height: Long;

                    /** GetLatestValidatorSetResponse validators. */
                    public validators: cosmos.base.tendermint.v1beta1.IValidator[];

                    /** GetLatestValidatorSetResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified GetLatestValidatorSetResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.verify|verify} messages.
                     * @param message GetLatestValidatorSetResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetLatestValidatorSetResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.verify|verify} messages.
                     * @param message GetLatestValidatorSetResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetLatestValidatorSetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestValidatorSetResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetLatestValidatorSetResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse;

                    /**
                     * Decodes a GetLatestValidatorSetResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetLatestValidatorSetResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse;

                    /**
                     * Verifies a GetLatestValidatorSetResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetLatestValidatorSetResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetLatestValidatorSetResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse;

                    /**
                     * Creates a plain object from a GetLatestValidatorSetResponse message. Also converts values to other types if specified.
                     * @param message GetLatestValidatorSetResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetLatestValidatorSetResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Validator. */
                interface IValidator {

                    /** Validator address */
                    address?: (string|null);

                    /** Validator pub_key */
                    pub_key?: (google.protobuf.IAny|null);

                    /** Validator voting_power */
                    voting_power?: (Long|null);

                    /** Validator proposer_priority */
                    proposer_priority?: (Long|null);
                }

                /** Represents a Validator. */
                class Validator implements IValidator {

                    /**
                     * Constructs a new Validator.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IValidator);

                    /** Validator address. */
                    public address: string;

                    /** Validator pub_key. */
                    public pub_key?: (google.protobuf.IAny|null);

                    /** Validator voting_power. */
                    public voting_power: Long;

                    /** Validator proposer_priority. */
                    public proposer_priority: Long;

                    /**
                     * Encodes the specified Validator message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Validator.verify|verify} messages.
                     * @param message Validator message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Validator message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Validator.verify|verify} messages.
                     * @param message Validator message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Validator message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Validator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.Validator;

                    /**
                     * Decodes a Validator message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Validator
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.Validator;

                    /**
                     * Verifies a Validator message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Validator message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Validator
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.Validator;

                    /**
                     * Creates a plain object from a Validator message. Also converts values to other types if specified.
                     * @param message Validator
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Validator to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetBlockByHeightRequest. */
                interface IGetBlockByHeightRequest {

                    /** GetBlockByHeightRequest height */
                    height?: (Long|null);
                }

                /** Represents a GetBlockByHeightRequest. */
                class GetBlockByHeightRequest implements IGetBlockByHeightRequest {

                    /**
                     * Constructs a new GetBlockByHeightRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest);

                    /** GetBlockByHeightRequest height. */
                    public height: Long;

                    /**
                     * Encodes the specified GetBlockByHeightRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest.verify|verify} messages.
                     * @param message GetBlockByHeightRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetBlockByHeightRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest.verify|verify} messages.
                     * @param message GetBlockByHeightRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetBlockByHeightRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetBlockByHeightRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetBlockByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest;

                    /**
                     * Decodes a GetBlockByHeightRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetBlockByHeightRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest;

                    /**
                     * Verifies a GetBlockByHeightRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetBlockByHeightRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetBlockByHeightRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest;

                    /**
                     * Creates a plain object from a GetBlockByHeightRequest message. Also converts values to other types if specified.
                     * @param message GetBlockByHeightRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetBlockByHeightRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetBlockByHeightResponse. */
                interface IGetBlockByHeightResponse {

                    /** GetBlockByHeightResponse block_id */
                    block_id?: (tendermint.types.IBlockID|null);

                    /** GetBlockByHeightResponse block */
                    block?: (tendermint.types.IBlock|null);
                }

                /** Represents a GetBlockByHeightResponse. */
                class GetBlockByHeightResponse implements IGetBlockByHeightResponse {

                    /**
                     * Constructs a new GetBlockByHeightResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetBlockByHeightResponse);

                    /** GetBlockByHeightResponse block_id. */
                    public block_id?: (tendermint.types.IBlockID|null);

                    /** GetBlockByHeightResponse block. */
                    public block?: (tendermint.types.IBlock|null);

                    /**
                     * Encodes the specified GetBlockByHeightResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.verify|verify} messages.
                     * @param message GetBlockByHeightResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetBlockByHeightResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetBlockByHeightResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.verify|verify} messages.
                     * @param message GetBlockByHeightResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetBlockByHeightResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetBlockByHeightResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetBlockByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse;

                    /**
                     * Decodes a GetBlockByHeightResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetBlockByHeightResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse;

                    /**
                     * Verifies a GetBlockByHeightResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetBlockByHeightResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetBlockByHeightResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse;

                    /**
                     * Creates a plain object from a GetBlockByHeightResponse message. Also converts values to other types if specified.
                     * @param message GetBlockByHeightResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetBlockByHeightResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetLatestBlockRequest. */
                interface IGetLatestBlockRequest {
                }

                /** Represents a GetLatestBlockRequest. */
                class GetLatestBlockRequest implements IGetLatestBlockRequest {

                    /**
                     * Constructs a new GetLatestBlockRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest);

                    /**
                     * Encodes the specified GetLatestBlockRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockRequest.verify|verify} messages.
                     * @param message GetLatestBlockRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetLatestBlockRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockRequest.verify|verify} messages.
                     * @param message GetLatestBlockRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetLatestBlockRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestBlockRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetLatestBlockRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetLatestBlockRequest;

                    /**
                     * Decodes a GetLatestBlockRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetLatestBlockRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetLatestBlockRequest;

                    /**
                     * Verifies a GetLatestBlockRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetLatestBlockRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetLatestBlockRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetLatestBlockRequest;

                    /**
                     * Creates a plain object from a GetLatestBlockRequest message. Also converts values to other types if specified.
                     * @param message GetLatestBlockRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetLatestBlockRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetLatestBlockRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetLatestBlockResponse. */
                interface IGetLatestBlockResponse {

                    /** GetLatestBlockResponse block_id */
                    block_id?: (tendermint.types.IBlockID|null);

                    /** GetLatestBlockResponse block */
                    block?: (tendermint.types.IBlock|null);
                }

                /** Represents a GetLatestBlockResponse. */
                class GetLatestBlockResponse implements IGetLatestBlockResponse {

                    /**
                     * Constructs a new GetLatestBlockResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetLatestBlockResponse);

                    /** GetLatestBlockResponse block_id. */
                    public block_id?: (tendermint.types.IBlockID|null);

                    /** GetLatestBlockResponse block. */
                    public block?: (tendermint.types.IBlock|null);

                    /**
                     * Encodes the specified GetLatestBlockResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.verify|verify} messages.
                     * @param message GetLatestBlockResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetLatestBlockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetLatestBlockResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.verify|verify} messages.
                     * @param message GetLatestBlockResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetLatestBlockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetLatestBlockResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetLatestBlockResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetLatestBlockResponse;

                    /**
                     * Decodes a GetLatestBlockResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetLatestBlockResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetLatestBlockResponse;

                    /**
                     * Verifies a GetLatestBlockResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetLatestBlockResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetLatestBlockResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetLatestBlockResponse;

                    /**
                     * Creates a plain object from a GetLatestBlockResponse message. Also converts values to other types if specified.
                     * @param message GetLatestBlockResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetLatestBlockResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetLatestBlockResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetSyncingRequest. */
                interface IGetSyncingRequest {
                }

                /** Represents a GetSyncingRequest. */
                class GetSyncingRequest implements IGetSyncingRequest {

                    /**
                     * Constructs a new GetSyncingRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetSyncingRequest);

                    /**
                     * Encodes the specified GetSyncingRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingRequest.verify|verify} messages.
                     * @param message GetSyncingRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetSyncingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetSyncingRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingRequest.verify|verify} messages.
                     * @param message GetSyncingRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetSyncingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetSyncingRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetSyncingRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetSyncingRequest;

                    /**
                     * Decodes a GetSyncingRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetSyncingRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetSyncingRequest;

                    /**
                     * Verifies a GetSyncingRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetSyncingRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetSyncingRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetSyncingRequest;

                    /**
                     * Creates a plain object from a GetSyncingRequest message. Also converts values to other types if specified.
                     * @param message GetSyncingRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetSyncingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetSyncingRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetSyncingResponse. */
                interface IGetSyncingResponse {

                    /** GetSyncingResponse syncing */
                    syncing?: (boolean|null);
                }

                /** Represents a GetSyncingResponse. */
                class GetSyncingResponse implements IGetSyncingResponse {

                    /**
                     * Constructs a new GetSyncingResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetSyncingResponse);

                    /** GetSyncingResponse syncing. */
                    public syncing: boolean;

                    /**
                     * Encodes the specified GetSyncingResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingResponse.verify|verify} messages.
                     * @param message GetSyncingResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetSyncingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetSyncingResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetSyncingResponse.verify|verify} messages.
                     * @param message GetSyncingResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetSyncingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetSyncingResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetSyncingResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetSyncingResponse;

                    /**
                     * Decodes a GetSyncingResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetSyncingResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetSyncingResponse;

                    /**
                     * Verifies a GetSyncingResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetSyncingResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetSyncingResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetSyncingResponse;

                    /**
                     * Creates a plain object from a GetSyncingResponse message. Also converts values to other types if specified.
                     * @param message GetSyncingResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetSyncingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetSyncingResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetNodeInfoRequest. */
                interface IGetNodeInfoRequest {
                }

                /** Represents a GetNodeInfoRequest. */
                class GetNodeInfoRequest implements IGetNodeInfoRequest {

                    /**
                     * Constructs a new GetNodeInfoRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest);

                    /**
                     * Encodes the specified GetNodeInfoRequest message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoRequest.verify|verify} messages.
                     * @param message GetNodeInfoRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetNodeInfoRequest message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoRequest.verify|verify} messages.
                     * @param message GetNodeInfoRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetNodeInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetNodeInfoRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetNodeInfoRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetNodeInfoRequest;

                    /**
                     * Decodes a GetNodeInfoRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetNodeInfoRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetNodeInfoRequest;

                    /**
                     * Verifies a GetNodeInfoRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetNodeInfoRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetNodeInfoRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetNodeInfoRequest;

                    /**
                     * Creates a plain object from a GetNodeInfoRequest message. Also converts values to other types if specified.
                     * @param message GetNodeInfoRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetNodeInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetNodeInfoRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GetNodeInfoResponse. */
                interface IGetNodeInfoResponse {

                    /** GetNodeInfoResponse default_node_info */
                    default_node_info?: (tendermint.p2p.IDefaultNodeInfo|null);

                    /** GetNodeInfoResponse application_version */
                    application_version?: (cosmos.base.tendermint.v1beta1.IVersionInfo|null);
                }

                /** Represents a GetNodeInfoResponse. */
                class GetNodeInfoResponse implements IGetNodeInfoResponse {

                    /**
                     * Constructs a new GetNodeInfoResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IGetNodeInfoResponse);

                    /** GetNodeInfoResponse default_node_info. */
                    public default_node_info?: (tendermint.p2p.IDefaultNodeInfo|null);

                    /** GetNodeInfoResponse application_version. */
                    public application_version?: (cosmos.base.tendermint.v1beta1.IVersionInfo|null);

                    /**
                     * Encodes the specified GetNodeInfoResponse message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.verify|verify} messages.
                     * @param message GetNodeInfoResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IGetNodeInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GetNodeInfoResponse message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.verify|verify} messages.
                     * @param message GetNodeInfoResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IGetNodeInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GetNodeInfoResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GetNodeInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.GetNodeInfoResponse;

                    /**
                     * Decodes a GetNodeInfoResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GetNodeInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.GetNodeInfoResponse;

                    /**
                     * Verifies a GetNodeInfoResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GetNodeInfoResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GetNodeInfoResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.GetNodeInfoResponse;

                    /**
                     * Creates a plain object from a GetNodeInfoResponse message. Also converts values to other types if specified.
                     * @param message GetNodeInfoResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.GetNodeInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GetNodeInfoResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a VersionInfo. */
                interface IVersionInfo {

                    /** VersionInfo name */
                    name?: (string|null);

                    /** VersionInfo app_name */
                    app_name?: (string|null);

                    /** VersionInfo version */
                    version?: (string|null);

                    /** VersionInfo git_commit */
                    git_commit?: (string|null);

                    /** VersionInfo build_tags */
                    build_tags?: (string|null);

                    /** VersionInfo go_version */
                    go_version?: (string|null);

                    /** VersionInfo build_deps */
                    build_deps?: (cosmos.base.tendermint.v1beta1.IModule[]|null);
                }

                /** Represents a VersionInfo. */
                class VersionInfo implements IVersionInfo {

                    /**
                     * Constructs a new VersionInfo.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IVersionInfo);

                    /** VersionInfo name. */
                    public name: string;

                    /** VersionInfo app_name. */
                    public app_name: string;

                    /** VersionInfo version. */
                    public version: string;

                    /** VersionInfo git_commit. */
                    public git_commit: string;

                    /** VersionInfo build_tags. */
                    public build_tags: string;

                    /** VersionInfo go_version. */
                    public go_version: string;

                    /** VersionInfo build_deps. */
                    public build_deps: cosmos.base.tendermint.v1beta1.IModule[];

                    /**
                     * Encodes the specified VersionInfo message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.VersionInfo.verify|verify} messages.
                     * @param message VersionInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IVersionInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified VersionInfo message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.VersionInfo.verify|verify} messages.
                     * @param message VersionInfo message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IVersionInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a VersionInfo message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns VersionInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.VersionInfo;

                    /**
                     * Decodes a VersionInfo message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns VersionInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.VersionInfo;

                    /**
                     * Verifies a VersionInfo message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a VersionInfo message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns VersionInfo
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.VersionInfo;

                    /**
                     * Creates a plain object from a VersionInfo message. Also converts values to other types if specified.
                     * @param message VersionInfo
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.VersionInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this VersionInfo to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Module. */
                interface IModule {

                    /** Module path */
                    path?: (string|null);

                    /** Module version */
                    version?: (string|null);

                    /** Module sum */
                    sum?: (string|null);
                }

                /** Represents a Module. */
                class Module implements IModule {

                    /**
                     * Constructs a new Module.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.tendermint.v1beta1.IModule);

                    /** Module path. */
                    public path: string;

                    /** Module version. */
                    public version: string;

                    /** Module sum. */
                    public sum: string;

                    /**
                     * Encodes the specified Module message. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Module.verify|verify} messages.
                     * @param message Module message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.tendermint.v1beta1.IModule, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Module message, length delimited. Does not implicitly {@link cosmos.base.tendermint.v1beta1.Module.verify|verify} messages.
                     * @param message Module message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.tendermint.v1beta1.IModule, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Module message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Module
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.tendermint.v1beta1.Module;

                    /**
                     * Decodes a Module message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Module
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.tendermint.v1beta1.Module;

                    /**
                     * Verifies a Module message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Module message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Module
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.tendermint.v1beta1.Module;

                    /**
                     * Creates a plain object from a Module message. Also converts values to other types if specified.
                     * @param message Module
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.tendermint.v1beta1.Module, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Module to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Coin. */
            interface ICoin {

                /** Coin denom */
                denom?: (string|null);

                /** Coin amount */
                amount?: (string|null);
            }

            /** Represents a Coin. */
            class Coin implements ICoin {

                /**
                 * Constructs a new Coin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.ICoin);

                /** Coin denom. */
                public denom: string;

                /** Coin amount. */
                public amount: string;

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.Coin;

                /**
                 * Decodes a Coin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.Coin;

                /**
                 * Verifies a Coin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Coin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.Coin;

                /**
                 * Creates a plain object from a Coin message. Also converts values to other types if specified.
                 * @param message Coin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.Coin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Coin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecCoin. */
            interface IDecCoin {

                /** DecCoin denom */
                denom?: (string|null);

                /** DecCoin amount */
                amount?: (string|null);
            }

            /** Represents a DecCoin. */
            class DecCoin implements IDecCoin {

                /**
                 * Constructs a new DecCoin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecCoin);

                /** DecCoin denom. */
                public denom: string;

                /** DecCoin amount. */
                public amount: string;

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecCoin;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecCoin;

                /**
                 * Verifies a DecCoin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecCoin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecCoin;

                /**
                 * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                 * @param message DecCoin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecCoin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecCoin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an IntProto. */
            interface IIntProto {

                /** IntProto int */
                int?: (string|null);
            }

            /** Represents an IntProto. */
            class IntProto implements IIntProto {

                /**
                 * Constructs a new IntProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IIntProto);

                /** IntProto int. */
                public int: string;

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.IntProto;

                /**
                 * Decodes an IntProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.IntProto;

                /**
                 * Verifies an IntProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IntProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.IntProto;

                /**
                 * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                 * @param message IntProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.IntProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IntProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecProto. */
            interface IDecProto {

                /** DecProto dec */
                dec?: (string|null);
            }

            /** Represents a DecProto. */
            class DecProto implements IDecProto {

                /**
                 * Constructs a new DecProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecProto);

                /** DecProto dec. */
                public dec: string;

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecProto;

                /**
                 * Decodes a DecProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecProto;

                /**
                 * Verifies a DecProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecProto;

                /**
                 * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                 * @param message DecProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace capability. */
    namespace capability {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisOwners. */
            interface IGenesisOwners {

                /** GenesisOwners index */
                index?: (Long|null);

                /** GenesisOwners index_owners */
                index_owners?: (cosmos.capability.v1beta1.ICapabilityOwners|null);
            }

            /** Represents a GenesisOwners. */
            class GenesisOwners implements IGenesisOwners {

                /**
                 * Constructs a new GenesisOwners.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.capability.v1beta1.IGenesisOwners);

                /** GenesisOwners index. */
                public index: Long;

                /** GenesisOwners index_owners. */
                public index_owners?: (cosmos.capability.v1beta1.ICapabilityOwners|null);

                /**
                 * Encodes the specified GenesisOwners message. Does not implicitly {@link cosmos.capability.v1beta1.GenesisOwners.verify|verify} messages.
                 * @param message GenesisOwners message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.capability.v1beta1.IGenesisOwners, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisOwners message, length delimited. Does not implicitly {@link cosmos.capability.v1beta1.GenesisOwners.verify|verify} messages.
                 * @param message GenesisOwners message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.capability.v1beta1.IGenesisOwners, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisOwners message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.capability.v1beta1.GenesisOwners;

                /**
                 * Decodes a GenesisOwners message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.capability.v1beta1.GenesisOwners;

                /**
                 * Verifies a GenesisOwners message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisOwners message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisOwners
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.capability.v1beta1.GenesisOwners;

                /**
                 * Creates a plain object from a GenesisOwners message. Also converts values to other types if specified.
                 * @param message GenesisOwners
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.capability.v1beta1.GenesisOwners, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisOwners to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState index */
                index?: (Long|null);

                /** GenesisState owners */
                owners?: (cosmos.capability.v1beta1.IGenesisOwners[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.capability.v1beta1.IGenesisState);

                /** GenesisState index. */
                public index: Long;

                /** GenesisState owners. */
                public owners: cosmos.capability.v1beta1.IGenesisOwners[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.capability.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.capability.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.capability.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.capability.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.capability.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.capability.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.capability.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.capability.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Capability. */
            interface ICapability {

                /** Capability index */
                index?: (Long|null);
            }

            /** Represents a Capability. */
            class Capability implements ICapability {

                /**
                 * Constructs a new Capability.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.capability.v1beta1.ICapability);

                /** Capability index. */
                public index: Long;

                /**
                 * Encodes the specified Capability message. Does not implicitly {@link cosmos.capability.v1beta1.Capability.verify|verify} messages.
                 * @param message Capability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.capability.v1beta1.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Capability message, length delimited. Does not implicitly {@link cosmos.capability.v1beta1.Capability.verify|verify} messages.
                 * @param message Capability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.capability.v1beta1.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Capability message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Capability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.capability.v1beta1.Capability;

                /**
                 * Decodes a Capability message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Capability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.capability.v1beta1.Capability;

                /**
                 * Verifies a Capability message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Capability message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Capability
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.capability.v1beta1.Capability;

                /**
                 * Creates a plain object from a Capability message. Also converts values to other types if specified.
                 * @param message Capability
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.capability.v1beta1.Capability, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Capability to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Owner. */
            interface IOwner {

                /** Owner module */
                module?: (string|null);

                /** Owner name */
                name?: (string|null);
            }

            /** Represents an Owner. */
            class Owner implements IOwner {

                /**
                 * Constructs a new Owner.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.capability.v1beta1.IOwner);

                /** Owner module. */
                public module: string;

                /** Owner name. */
                public name: string;

                /**
                 * Encodes the specified Owner message. Does not implicitly {@link cosmos.capability.v1beta1.Owner.verify|verify} messages.
                 * @param message Owner message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.capability.v1beta1.IOwner, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Owner message, length delimited. Does not implicitly {@link cosmos.capability.v1beta1.Owner.verify|verify} messages.
                 * @param message Owner message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.capability.v1beta1.IOwner, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Owner message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Owner
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.capability.v1beta1.Owner;

                /**
                 * Decodes an Owner message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Owner
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.capability.v1beta1.Owner;

                /**
                 * Verifies an Owner message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Owner message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Owner
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.capability.v1beta1.Owner;

                /**
                 * Creates a plain object from an Owner message. Also converts values to other types if specified.
                 * @param message Owner
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.capability.v1beta1.Owner, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Owner to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CapabilityOwners. */
            interface ICapabilityOwners {

                /** CapabilityOwners owners */
                owners?: (cosmos.capability.v1beta1.IOwner[]|null);
            }

            /** Represents a CapabilityOwners. */
            class CapabilityOwners implements ICapabilityOwners {

                /**
                 * Constructs a new CapabilityOwners.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.capability.v1beta1.ICapabilityOwners);

                /** CapabilityOwners owners. */
                public owners: cosmos.capability.v1beta1.IOwner[];

                /**
                 * Encodes the specified CapabilityOwners message. Does not implicitly {@link cosmos.capability.v1beta1.CapabilityOwners.verify|verify} messages.
                 * @param message CapabilityOwners message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.capability.v1beta1.ICapabilityOwners, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CapabilityOwners message, length delimited. Does not implicitly {@link cosmos.capability.v1beta1.CapabilityOwners.verify|verify} messages.
                 * @param message CapabilityOwners message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.capability.v1beta1.ICapabilityOwners, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CapabilityOwners message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CapabilityOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.capability.v1beta1.CapabilityOwners;

                /**
                 * Decodes a CapabilityOwners message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CapabilityOwners
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.capability.v1beta1.CapabilityOwners;

                /**
                 * Verifies a CapabilityOwners message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CapabilityOwners message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CapabilityOwners
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.capability.v1beta1.CapabilityOwners;

                /**
                 * Creates a plain object from a CapabilityOwners message. Also converts values to other types if specified.
                 * @param message CapabilityOwners
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.capability.v1beta1.CapabilityOwners, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CapabilityOwners to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace crisis. */
    namespace crisis {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState constant_fee */
                constant_fee?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crisis.v1beta1.IGenesisState);

                /** GenesisState constant_fee. */
                public constant_fee?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.crisis.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crisis.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.crisis.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crisis.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crisis.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crisis.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crisis.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crisis.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls VerifyInvariant.
                 * @param request MsgVerifyInvariant message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgVerifyInvariantResponse
                 */
                public verifyInvariant(request: cosmos.crisis.v1beta1.IMsgVerifyInvariant, callback: cosmos.crisis.v1beta1.Msg.VerifyInvariantCallback): void;

                /**
                 * Calls VerifyInvariant.
                 * @param request MsgVerifyInvariant message or plain object
                 * @returns Promise
                 */
                public verifyInvariant(request: cosmos.crisis.v1beta1.IMsgVerifyInvariant): Promise<cosmos.crisis.v1beta1.MsgVerifyInvariantResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.crisis.v1beta1.Msg#verifyInvariant}.
                 * @param error Error, if any
                 * @param [response] MsgVerifyInvariantResponse
                 */
                type VerifyInvariantCallback = (error: (Error|null), response?: cosmos.crisis.v1beta1.MsgVerifyInvariantResponse) => void;
            }

            /** Properties of a MsgVerifyInvariant. */
            interface IMsgVerifyInvariant {

                /** MsgVerifyInvariant sender */
                sender?: (string|null);

                /** MsgVerifyInvariant invariant_module_name */
                invariant_module_name?: (string|null);

                /** MsgVerifyInvariant invariant_route */
                invariant_route?: (string|null);
            }

            /** Represents a MsgVerifyInvariant. */
            class MsgVerifyInvariant implements IMsgVerifyInvariant {

                /**
                 * Constructs a new MsgVerifyInvariant.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crisis.v1beta1.IMsgVerifyInvariant);

                /** MsgVerifyInvariant sender. */
                public sender: string;

                /** MsgVerifyInvariant invariant_module_name. */
                public invariant_module_name: string;

                /** MsgVerifyInvariant invariant_route. */
                public invariant_route: string;

                /**
                 * Encodes the specified MsgVerifyInvariant message. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariant.verify|verify} messages.
                 * @param message MsgVerifyInvariant message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crisis.v1beta1.IMsgVerifyInvariant, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgVerifyInvariant message, length delimited. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariant.verify|verify} messages.
                 * @param message MsgVerifyInvariant message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crisis.v1beta1.IMsgVerifyInvariant, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVerifyInvariant message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgVerifyInvariant
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crisis.v1beta1.MsgVerifyInvariant;

                /**
                 * Decodes a MsgVerifyInvariant message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgVerifyInvariant
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crisis.v1beta1.MsgVerifyInvariant;

                /**
                 * Verifies a MsgVerifyInvariant message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgVerifyInvariant message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgVerifyInvariant
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crisis.v1beta1.MsgVerifyInvariant;

                /**
                 * Creates a plain object from a MsgVerifyInvariant message. Also converts values to other types if specified.
                 * @param message MsgVerifyInvariant
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crisis.v1beta1.MsgVerifyInvariant, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgVerifyInvariant to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgVerifyInvariantResponse. */
            interface IMsgVerifyInvariantResponse {
            }

            /** Represents a MsgVerifyInvariantResponse. */
            class MsgVerifyInvariantResponse implements IMsgVerifyInvariantResponse {

                /**
                 * Constructs a new MsgVerifyInvariantResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crisis.v1beta1.IMsgVerifyInvariantResponse);

                /**
                 * Encodes the specified MsgVerifyInvariantResponse message. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariantResponse.verify|verify} messages.
                 * @param message MsgVerifyInvariantResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crisis.v1beta1.IMsgVerifyInvariantResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgVerifyInvariantResponse message, length delimited. Does not implicitly {@link cosmos.crisis.v1beta1.MsgVerifyInvariantResponse.verify|verify} messages.
                 * @param message MsgVerifyInvariantResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crisis.v1beta1.IMsgVerifyInvariantResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVerifyInvariantResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgVerifyInvariantResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crisis.v1beta1.MsgVerifyInvariantResponse;

                /**
                 * Decodes a MsgVerifyInvariantResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgVerifyInvariantResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crisis.v1beta1.MsgVerifyInvariantResponse;

                /**
                 * Verifies a MsgVerifyInvariantResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgVerifyInvariantResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgVerifyInvariantResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crisis.v1beta1.MsgVerifyInvariantResponse;

                /**
                 * Creates a plain object from a MsgVerifyInvariantResponse message. Also converts values to other types if specified.
                 * @param message MsgVerifyInvariantResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crisis.v1beta1.MsgVerifyInvariantResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgVerifyInvariantResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Namespace ed25519. */
        namespace ed25519 {

            /** Properties of a PubKey. */
            interface IPubKey {

                /** PubKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PubKey. */
            class PubKey implements IPubKey {

                /**
                 * Constructs a new PubKey.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crypto.ed25519.IPubKey);

                /** PubKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PubKey message. Does not implicitly {@link cosmos.crypto.ed25519.PubKey.verify|verify} messages.
                 * @param message PubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crypto.ed25519.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PubKey message, length delimited. Does not implicitly {@link cosmos.crypto.ed25519.PubKey.verify|verify} messages.
                 * @param message PubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crypto.ed25519.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PubKey message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.ed25519.PubKey;

                /**
                 * Decodes a PubKey message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.ed25519.PubKey;

                /**
                 * Verifies a PubKey message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PubKey message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PubKey
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crypto.ed25519.PubKey;

                /**
                 * Creates a plain object from a PubKey message. Also converts values to other types if specified.
                 * @param message PubKey
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crypto.ed25519.PubKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PubKey to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PrivKey. */
            interface IPrivKey {

                /** PrivKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PrivKey. */
            class PrivKey implements IPrivKey {

                /**
                 * Constructs a new PrivKey.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crypto.ed25519.IPrivKey);

                /** PrivKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PrivKey message. Does not implicitly {@link cosmos.crypto.ed25519.PrivKey.verify|verify} messages.
                 * @param message PrivKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crypto.ed25519.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivKey message, length delimited. Does not implicitly {@link cosmos.crypto.ed25519.PrivKey.verify|verify} messages.
                 * @param message PrivKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crypto.ed25519.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.ed25519.PrivKey;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.ed25519.PrivKey;

                /**
                 * Verifies a PrivKey message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivKey message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivKey
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crypto.ed25519.PrivKey;

                /**
                 * Creates a plain object from a PrivKey message. Also converts values to other types if specified.
                 * @param message PrivKey
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crypto.ed25519.PrivKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivKey to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace multisig. */
        namespace multisig {

            /** Properties of a LegacyAminoPubKey. */
            interface ILegacyAminoPubKey {

                /** LegacyAminoPubKey threshold */
                threshold?: (number|null);

                /** LegacyAminoPubKey public_keys */
                public_keys?: (google.protobuf.IAny[]|null);
            }

            /** Represents a LegacyAminoPubKey. */
            class LegacyAminoPubKey implements ILegacyAminoPubKey {

                /**
                 * Constructs a new LegacyAminoPubKey.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crypto.multisig.ILegacyAminoPubKey);

                /** LegacyAminoPubKey threshold. */
                public threshold: number;

                /** LegacyAminoPubKey public_keys. */
                public public_keys: google.protobuf.IAny[];

                /**
                 * Encodes the specified LegacyAminoPubKey message. Does not implicitly {@link cosmos.crypto.multisig.LegacyAminoPubKey.verify|verify} messages.
                 * @param message LegacyAminoPubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crypto.multisig.ILegacyAminoPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LegacyAminoPubKey message, length delimited. Does not implicitly {@link cosmos.crypto.multisig.LegacyAminoPubKey.verify|verify} messages.
                 * @param message LegacyAminoPubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crypto.multisig.ILegacyAminoPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LegacyAminoPubKey message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LegacyAminoPubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.multisig.LegacyAminoPubKey;

                /**
                 * Decodes a LegacyAminoPubKey message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LegacyAminoPubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.multisig.LegacyAminoPubKey;

                /**
                 * Verifies a LegacyAminoPubKey message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LegacyAminoPubKey message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LegacyAminoPubKey
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crypto.multisig.LegacyAminoPubKey;

                /**
                 * Creates a plain object from a LegacyAminoPubKey message. Also converts values to other types if specified.
                 * @param message LegacyAminoPubKey
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crypto.multisig.LegacyAminoPubKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LegacyAminoPubKey to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a MultiSignature. */
                interface IMultiSignature {

                    /** MultiSignature signatures */
                    signatures?: (Uint8Array[]|null);
                }

                /** Represents a MultiSignature. */
                class MultiSignature implements IMultiSignature {

                    /**
                     * Constructs a new MultiSignature.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.crypto.multisig.v1beta1.IMultiSignature);

                    /** MultiSignature signatures. */
                    public signatures: Uint8Array[];

                    /**
                     * Encodes the specified MultiSignature message. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.MultiSignature.verify|verify} messages.
                     * @param message MultiSignature message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.crypto.multisig.v1beta1.IMultiSignature, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MultiSignature message, length delimited. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.MultiSignature.verify|verify} messages.
                     * @param message MultiSignature message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.crypto.multisig.v1beta1.IMultiSignature, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MultiSignature message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MultiSignature
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.multisig.v1beta1.MultiSignature;

                    /**
                     * Decodes a MultiSignature message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MultiSignature
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.multisig.v1beta1.MultiSignature;

                    /**
                     * Verifies a MultiSignature message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MultiSignature message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MultiSignature
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.crypto.multisig.v1beta1.MultiSignature;

                    /**
                     * Creates a plain object from a MultiSignature message. Also converts values to other types if specified.
                     * @param message MultiSignature
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.crypto.multisig.v1beta1.MultiSignature, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MultiSignature to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a CompactBitArray. */
                interface ICompactBitArray {

                    /** CompactBitArray extra_bits_stored */
                    extra_bits_stored?: (number|null);

                    /** CompactBitArray elems */
                    elems?: (Uint8Array|null);
                }

                /** Represents a CompactBitArray. */
                class CompactBitArray implements ICompactBitArray {

                    /**
                     * Constructs a new CompactBitArray.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.crypto.multisig.v1beta1.ICompactBitArray);

                    /** CompactBitArray extra_bits_stored. */
                    public extra_bits_stored: number;

                    /** CompactBitArray elems. */
                    public elems: Uint8Array;

                    /**
                     * Encodes the specified CompactBitArray message. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.CompactBitArray.verify|verify} messages.
                     * @param message CompactBitArray message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.crypto.multisig.v1beta1.ICompactBitArray, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified CompactBitArray message, length delimited. Does not implicitly {@link cosmos.crypto.multisig.v1beta1.CompactBitArray.verify|verify} messages.
                     * @param message CompactBitArray message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.crypto.multisig.v1beta1.ICompactBitArray, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CompactBitArray message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns CompactBitArray
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.multisig.v1beta1.CompactBitArray;

                    /**
                     * Decodes a CompactBitArray message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns CompactBitArray
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.multisig.v1beta1.CompactBitArray;

                    /**
                     * Verifies a CompactBitArray message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a CompactBitArray message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns CompactBitArray
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.crypto.multisig.v1beta1.CompactBitArray;

                    /**
                     * Creates a plain object from a CompactBitArray message. Also converts values to other types if specified.
                     * @param message CompactBitArray
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.crypto.multisig.v1beta1.CompactBitArray, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this CompactBitArray to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace secp256k1. */
        namespace secp256k1 {

            /** Properties of a PubKey. */
            interface IPubKey {

                /** PubKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PubKey. */
            class PubKey implements IPubKey {

                /**
                 * Constructs a new PubKey.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crypto.secp256k1.IPubKey);

                /** PubKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PubKey message. Does not implicitly {@link cosmos.crypto.secp256k1.PubKey.verify|verify} messages.
                 * @param message PubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crypto.secp256k1.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PubKey message, length delimited. Does not implicitly {@link cosmos.crypto.secp256k1.PubKey.verify|verify} messages.
                 * @param message PubKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crypto.secp256k1.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PubKey message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.secp256k1.PubKey;

                /**
                 * Decodes a PubKey message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PubKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.secp256k1.PubKey;

                /**
                 * Verifies a PubKey message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PubKey message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PubKey
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crypto.secp256k1.PubKey;

                /**
                 * Creates a plain object from a PubKey message. Also converts values to other types if specified.
                 * @param message PubKey
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crypto.secp256k1.PubKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PubKey to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PrivKey. */
            interface IPrivKey {

                /** PrivKey key */
                key?: (Uint8Array|null);
            }

            /** Represents a PrivKey. */
            class PrivKey implements IPrivKey {

                /**
                 * Constructs a new PrivKey.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.crypto.secp256k1.IPrivKey);

                /** PrivKey key. */
                public key: Uint8Array;

                /**
                 * Encodes the specified PrivKey message. Does not implicitly {@link cosmos.crypto.secp256k1.PrivKey.verify|verify} messages.
                 * @param message PrivKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.crypto.secp256k1.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivKey message, length delimited. Does not implicitly {@link cosmos.crypto.secp256k1.PrivKey.verify|verify} messages.
                 * @param message PrivKey message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.crypto.secp256k1.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.crypto.secp256k1.PrivKey;

                /**
                 * Decodes a PrivKey message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivKey
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.crypto.secp256k1.PrivKey;

                /**
                 * Verifies a PrivKey message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivKey message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivKey
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.crypto.secp256k1.PrivKey;

                /**
                 * Creates a plain object from a PrivKey message. Also converts values to other types if specified.
                 * @param message PrivKey
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.crypto.secp256k1.PrivKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivKey to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace distribution. */
    namespace distribution {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.distribution.v1beta1.IQueryParamsRequest, callback: cosmos.distribution.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.distribution.v1beta1.IQueryParamsRequest): Promise<cosmos.distribution.v1beta1.QueryParamsResponse>;

                /**
                 * Calls ValidatorOutstandingRewards.
                 * @param request QueryValidatorOutstandingRewardsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorOutstandingRewardsResponse
                 */
                public validatorOutstandingRewards(request: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest, callback: cosmos.distribution.v1beta1.Query.ValidatorOutstandingRewardsCallback): void;

                /**
                 * Calls ValidatorOutstandingRewards.
                 * @param request QueryValidatorOutstandingRewardsRequest message or plain object
                 * @returns Promise
                 */
                public validatorOutstandingRewards(request: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest): Promise<cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse>;

                /**
                 * Calls ValidatorCommission.
                 * @param request QueryValidatorCommissionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorCommissionResponse
                 */
                public validatorCommission(request: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest, callback: cosmos.distribution.v1beta1.Query.ValidatorCommissionCallback): void;

                /**
                 * Calls ValidatorCommission.
                 * @param request QueryValidatorCommissionRequest message or plain object
                 * @returns Promise
                 */
                public validatorCommission(request: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest): Promise<cosmos.distribution.v1beta1.QueryValidatorCommissionResponse>;

                /**
                 * Calls ValidatorSlashes.
                 * @param request QueryValidatorSlashesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorSlashesResponse
                 */
                public validatorSlashes(request: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest, callback: cosmos.distribution.v1beta1.Query.ValidatorSlashesCallback): void;

                /**
                 * Calls ValidatorSlashes.
                 * @param request QueryValidatorSlashesRequest message or plain object
                 * @returns Promise
                 */
                public validatorSlashes(request: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest): Promise<cosmos.distribution.v1beta1.QueryValidatorSlashesResponse>;

                /**
                 * Calls DelegationRewards.
                 * @param request QueryDelegationRewardsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegationRewardsResponse
                 */
                public delegationRewards(request: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest, callback: cosmos.distribution.v1beta1.Query.DelegationRewardsCallback): void;

                /**
                 * Calls DelegationRewards.
                 * @param request QueryDelegationRewardsRequest message or plain object
                 * @returns Promise
                 */
                public delegationRewards(request: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest): Promise<cosmos.distribution.v1beta1.QueryDelegationRewardsResponse>;

                /**
                 * Calls DelegationTotalRewards.
                 * @param request QueryDelegationTotalRewardsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegationTotalRewardsResponse
                 */
                public delegationTotalRewards(request: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest, callback: cosmos.distribution.v1beta1.Query.DelegationTotalRewardsCallback): void;

                /**
                 * Calls DelegationTotalRewards.
                 * @param request QueryDelegationTotalRewardsRequest message or plain object
                 * @returns Promise
                 */
                public delegationTotalRewards(request: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest): Promise<cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse>;

                /**
                 * Calls DelegatorValidators.
                 * @param request QueryDelegatorValidatorsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorValidatorsResponse
                 */
                public delegatorValidators(request: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest, callback: cosmos.distribution.v1beta1.Query.DelegatorValidatorsCallback): void;

                /**
                 * Calls DelegatorValidators.
                 * @param request QueryDelegatorValidatorsRequest message or plain object
                 * @returns Promise
                 */
                public delegatorValidators(request: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest): Promise<cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse>;

                /**
                 * Calls DelegatorWithdrawAddress.
                 * @param request QueryDelegatorWithdrawAddressRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorWithdrawAddressResponse
                 */
                public delegatorWithdrawAddress(request: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest, callback: cosmos.distribution.v1beta1.Query.DelegatorWithdrawAddressCallback): void;

                /**
                 * Calls DelegatorWithdrawAddress.
                 * @param request QueryDelegatorWithdrawAddressRequest message or plain object
                 * @returns Promise
                 */
                public delegatorWithdrawAddress(request: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest): Promise<cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse>;

                /**
                 * Calls CommunityPool.
                 * @param request QueryCommunityPoolRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCommunityPoolResponse
                 */
                public communityPool(request: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest, callback: cosmos.distribution.v1beta1.Query.CommunityPoolCallback): void;

                /**
                 * Calls CommunityPool.
                 * @param request QueryCommunityPoolRequest message or plain object
                 * @returns Promise
                 */
                public communityPool(request: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest): Promise<cosmos.distribution.v1beta1.QueryCommunityPoolResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#validatorOutstandingRewards}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorOutstandingRewardsResponse
                 */
                type ValidatorOutstandingRewardsCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#validatorCommission}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorCommissionResponse
                 */
                type ValidatorCommissionCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryValidatorCommissionResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#validatorSlashes}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorSlashesResponse
                 */
                type ValidatorSlashesCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryValidatorSlashesResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#delegationRewards}.
                 * @param error Error, if any
                 * @param [response] QueryDelegationRewardsResponse
                 */
                type DelegationRewardsCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryDelegationRewardsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#delegationTotalRewards}.
                 * @param error Error, if any
                 * @param [response] QueryDelegationTotalRewardsResponse
                 */
                type DelegationTotalRewardsCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#delegatorValidators}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorValidatorsResponse
                 */
                type DelegatorValidatorsCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#delegatorWithdrawAddress}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorWithdrawAddressResponse
                 */
                type DelegatorWithdrawAddressCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Query#communityPool}.
                 * @param error Error, if any
                 * @param [response] QueryCommunityPoolResponse
                 */
                type CommunityPoolCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.QueryCommunityPoolResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.distribution.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.distribution.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorOutstandingRewardsRequest. */
            interface IQueryValidatorOutstandingRewardsRequest {

                /** QueryValidatorOutstandingRewardsRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryValidatorOutstandingRewardsRequest. */
            class QueryValidatorOutstandingRewardsRequest implements IQueryValidatorOutstandingRewardsRequest {

                /**
                 * Constructs a new QueryValidatorOutstandingRewardsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest);

                /** QueryValidatorOutstandingRewardsRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.verify|verify} messages.
                 * @param message QueryValidatorOutstandingRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.verify|verify} messages.
                 * @param message QueryValidatorOutstandingRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorOutstandingRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorOutstandingRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest;

                /**
                 * Verifies a QueryValidatorOutstandingRewardsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorOutstandingRewardsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorOutstandingRewardsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest;

                /**
                 * Creates a plain object from a QueryValidatorOutstandingRewardsRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorOutstandingRewardsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorOutstandingRewardsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorOutstandingRewardsResponse. */
            interface IQueryValidatorOutstandingRewardsResponse {

                /** QueryValidatorOutstandingRewardsResponse rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewards|null);
            }

            /** Represents a QueryValidatorOutstandingRewardsResponse. */
            class QueryValidatorOutstandingRewardsResponse implements IQueryValidatorOutstandingRewardsResponse {

                /**
                 * Constructs a new QueryValidatorOutstandingRewardsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsResponse);

                /** QueryValidatorOutstandingRewardsResponse rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewards|null);

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.verify|verify} messages.
                 * @param message QueryValidatorOutstandingRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorOutstandingRewardsResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.verify|verify} messages.
                 * @param message QueryValidatorOutstandingRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorOutstandingRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorOutstandingRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse;

                /**
                 * Decodes a QueryValidatorOutstandingRewardsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorOutstandingRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse;

                /**
                 * Verifies a QueryValidatorOutstandingRewardsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorOutstandingRewardsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorOutstandingRewardsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse;

                /**
                 * Creates a plain object from a QueryValidatorOutstandingRewardsResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorOutstandingRewardsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorOutstandingRewardsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorCommissionRequest. */
            interface IQueryValidatorCommissionRequest {

                /** QueryValidatorCommissionRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryValidatorCommissionRequest. */
            class QueryValidatorCommissionRequest implements IQueryValidatorCommissionRequest {

                /**
                 * Constructs a new QueryValidatorCommissionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest);

                /** QueryValidatorCommissionRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryValidatorCommissionRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.verify|verify} messages.
                 * @param message QueryValidatorCommissionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorCommissionRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.verify|verify} messages.
                 * @param message QueryValidatorCommissionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorCommissionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorCommissionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorCommissionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorCommissionRequest;

                /**
                 * Decodes a QueryValidatorCommissionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorCommissionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorCommissionRequest;

                /**
                 * Verifies a QueryValidatorCommissionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorCommissionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorCommissionRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorCommissionRequest;

                /**
                 * Creates a plain object from a QueryValidatorCommissionRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorCommissionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorCommissionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorCommissionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorCommissionResponse. */
            interface IQueryValidatorCommissionResponse {

                /** QueryValidatorCommissionResponse commission */
                commission?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);
            }

            /** Represents a QueryValidatorCommissionResponse. */
            class QueryValidatorCommissionResponse implements IQueryValidatorCommissionResponse {

                /**
                 * Constructs a new QueryValidatorCommissionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorCommissionResponse);

                /** QueryValidatorCommissionResponse commission. */
                public commission?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);

                /**
                 * Encodes the specified QueryValidatorCommissionResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.verify|verify} messages.
                 * @param message QueryValidatorCommissionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorCommissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorCommissionResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.verify|verify} messages.
                 * @param message QueryValidatorCommissionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorCommissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorCommissionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorCommissionResponse;

                /**
                 * Decodes a QueryValidatorCommissionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorCommissionResponse;

                /**
                 * Verifies a QueryValidatorCommissionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorCommissionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorCommissionResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorCommissionResponse;

                /**
                 * Creates a plain object from a QueryValidatorCommissionResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorCommissionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorCommissionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorCommissionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorSlashesRequest. */
            interface IQueryValidatorSlashesRequest {

                /** QueryValidatorSlashesRequest validator_address */
                validator_address?: (string|null);

                /** QueryValidatorSlashesRequest starting_height */
                starting_height?: (Long|null);

                /** QueryValidatorSlashesRequest ending_height */
                ending_height?: (Long|null);

                /** QueryValidatorSlashesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorSlashesRequest. */
            class QueryValidatorSlashesRequest implements IQueryValidatorSlashesRequest {

                /**
                 * Constructs a new QueryValidatorSlashesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest);

                /** QueryValidatorSlashesRequest validator_address. */
                public validator_address: string;

                /** QueryValidatorSlashesRequest starting_height. */
                public starting_height: Long;

                /** QueryValidatorSlashesRequest ending_height. */
                public ending_height: Long;

                /** QueryValidatorSlashesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorSlashesRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.verify|verify} messages.
                 * @param message QueryValidatorSlashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorSlashesRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.verify|verify} messages.
                 * @param message QueryValidatorSlashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorSlashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorSlashesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorSlashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorSlashesRequest;

                /**
                 * Decodes a QueryValidatorSlashesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorSlashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorSlashesRequest;

                /**
                 * Verifies a QueryValidatorSlashesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorSlashesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorSlashesRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorSlashesRequest;

                /**
                 * Creates a plain object from a QueryValidatorSlashesRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorSlashesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorSlashesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorSlashesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorSlashesResponse. */
            interface IQueryValidatorSlashesResponse {

                /** QueryValidatorSlashesResponse slashes */
                slashes?: (cosmos.distribution.v1beta1.IValidatorSlashEvent[]|null);

                /** QueryValidatorSlashesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorSlashesResponse. */
            class QueryValidatorSlashesResponse implements IQueryValidatorSlashesResponse {

                /**
                 * Constructs a new QueryValidatorSlashesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryValidatorSlashesResponse);

                /** QueryValidatorSlashesResponse slashes. */
                public slashes: cosmos.distribution.v1beta1.IValidatorSlashEvent[];

                /** QueryValidatorSlashesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorSlashesResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.verify|verify} messages.
                 * @param message QueryValidatorSlashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryValidatorSlashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorSlashesResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.verify|verify} messages.
                 * @param message QueryValidatorSlashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryValidatorSlashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorSlashesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorSlashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryValidatorSlashesResponse;

                /**
                 * Decodes a QueryValidatorSlashesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorSlashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryValidatorSlashesResponse;

                /**
                 * Verifies a QueryValidatorSlashesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorSlashesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorSlashesResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryValidatorSlashesResponse;

                /**
                 * Creates a plain object from a QueryValidatorSlashesResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorSlashesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryValidatorSlashesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorSlashesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationRewardsRequest. */
            interface IQueryDelegationRewardsRequest {

                /** QueryDelegationRewardsRequest delegator_address */
                delegator_address?: (string|null);

                /** QueryDelegationRewardsRequest validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryDelegationRewardsRequest. */
            class QueryDelegationRewardsRequest implements IQueryDelegationRewardsRequest {

                /**
                 * Constructs a new QueryDelegationRewardsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest);

                /** QueryDelegationRewardsRequest delegator_address. */
                public delegator_address: string;

                /** QueryDelegationRewardsRequest validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryDelegationRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.verify|verify} messages.
                 * @param message QueryDelegationRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationRewardsRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.verify|verify} messages.
                 * @param message QueryDelegationRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegationRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRewardsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegationRewardsRequest;

                /**
                 * Decodes a QueryDelegationRewardsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegationRewardsRequest;

                /**
                 * Verifies a QueryDelegationRewardsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationRewardsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationRewardsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegationRewardsRequest;

                /**
                 * Creates a plain object from a QueryDelegationRewardsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegationRewardsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegationRewardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationRewardsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationRewardsResponse. */
            interface IQueryDelegationRewardsResponse {

                /** QueryDelegationRewardsResponse rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryDelegationRewardsResponse. */
            class QueryDelegationRewardsResponse implements IQueryDelegationRewardsResponse {

                /**
                 * Constructs a new QueryDelegationRewardsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegationRewardsResponse);

                /** QueryDelegationRewardsResponse rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryDelegationRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.verify|verify} messages.
                 * @param message QueryDelegationRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegationRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationRewardsResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.verify|verify} messages.
                 * @param message QueryDelegationRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegationRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRewardsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegationRewardsResponse;

                /**
                 * Decodes a QueryDelegationRewardsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegationRewardsResponse;

                /**
                 * Verifies a QueryDelegationRewardsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationRewardsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationRewardsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegationRewardsResponse;

                /**
                 * Creates a plain object from a QueryDelegationRewardsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegationRewardsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegationRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationRewardsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationTotalRewardsRequest. */
            interface IQueryDelegationTotalRewardsRequest {

                /** QueryDelegationTotalRewardsRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegationTotalRewardsRequest. */
            class QueryDelegationTotalRewardsRequest implements IQueryDelegationTotalRewardsRequest {

                /**
                 * Constructs a new QueryDelegationTotalRewardsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest);

                /** QueryDelegationTotalRewardsRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegationTotalRewardsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.verify|verify} messages.
                 * @param message QueryDelegationTotalRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationTotalRewardsRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.verify|verify} messages.
                 * @param message QueryDelegationTotalRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationTotalRewardsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationTotalRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest;

                /**
                 * Decodes a QueryDelegationTotalRewardsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationTotalRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest;

                /**
                 * Verifies a QueryDelegationTotalRewardsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationTotalRewardsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationTotalRewardsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest;

                /**
                 * Creates a plain object from a QueryDelegationTotalRewardsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegationTotalRewardsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationTotalRewardsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationTotalRewardsResponse. */
            interface IQueryDelegationTotalRewardsResponse {

                /** QueryDelegationTotalRewardsResponse rewards */
                rewards?: (cosmos.distribution.v1beta1.IDelegationDelegatorReward[]|null);

                /** QueryDelegationTotalRewardsResponse total */
                total?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryDelegationTotalRewardsResponse. */
            class QueryDelegationTotalRewardsResponse implements IQueryDelegationTotalRewardsResponse {

                /**
                 * Constructs a new QueryDelegationTotalRewardsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsResponse);

                /** QueryDelegationTotalRewardsResponse rewards. */
                public rewards: cosmos.distribution.v1beta1.IDelegationDelegatorReward[];

                /** QueryDelegationTotalRewardsResponse total. */
                public total: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryDelegationTotalRewardsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.verify|verify} messages.
                 * @param message QueryDelegationTotalRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationTotalRewardsResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.verify|verify} messages.
                 * @param message QueryDelegationTotalRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegationTotalRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationTotalRewardsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationTotalRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse;

                /**
                 * Decodes a QueryDelegationTotalRewardsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationTotalRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse;

                /**
                 * Verifies a QueryDelegationTotalRewardsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationTotalRewardsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationTotalRewardsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse;

                /**
                 * Creates a plain object from a QueryDelegationTotalRewardsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegationTotalRewardsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationTotalRewardsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorsRequest. */
            interface IQueryDelegatorValidatorsRequest {

                /** QueryDelegatorValidatorsRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegatorValidatorsRequest. */
            class QueryDelegatorValidatorsRequest implements IQueryDelegatorValidatorsRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest);

                /** QueryDelegatorValidatorsRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Verifies a QueryDelegatorValidatorsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorsResponse. */
            interface IQueryDelegatorValidatorsResponse {

                /** QueryDelegatorValidatorsResponse validators */
                validators?: (string[]|null);
            }

            /** Represents a QueryDelegatorValidatorsResponse. */
            class QueryDelegatorValidatorsResponse implements IQueryDelegatorValidatorsResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsResponse);

                /** QueryDelegatorValidatorsResponse validators. */
                public validators: string[];

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegatorValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Verifies a QueryDelegatorValidatorsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorWithdrawAddressRequest. */
            interface IQueryDelegatorWithdrawAddressRequest {

                /** QueryDelegatorWithdrawAddressRequest delegator_address */
                delegator_address?: (string|null);
            }

            /** Represents a QueryDelegatorWithdrawAddressRequest. */
            class QueryDelegatorWithdrawAddressRequest implements IQueryDelegatorWithdrawAddressRequest {

                /**
                 * Constructs a new QueryDelegatorWithdrawAddressRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest);

                /** QueryDelegatorWithdrawAddressRequest delegator_address. */
                public delegator_address: string;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.verify|verify} messages.
                 * @param message QueryDelegatorWithdrawAddressRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.verify|verify} messages.
                 * @param message QueryDelegatorWithdrawAddressRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorWithdrawAddressRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorWithdrawAddressRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest;

                /**
                 * Verifies a QueryDelegatorWithdrawAddressRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorWithdrawAddressRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorWithdrawAddressRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest;

                /**
                 * Creates a plain object from a QueryDelegatorWithdrawAddressRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorWithdrawAddressRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorWithdrawAddressRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorWithdrawAddressResponse. */
            interface IQueryDelegatorWithdrawAddressResponse {

                /** QueryDelegatorWithdrawAddressResponse withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a QueryDelegatorWithdrawAddressResponse. */
            class QueryDelegatorWithdrawAddressResponse implements IQueryDelegatorWithdrawAddressResponse {

                /**
                 * Constructs a new QueryDelegatorWithdrawAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressResponse);

                /** QueryDelegatorWithdrawAddressResponse withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.verify|verify} messages.
                 * @param message QueryDelegatorWithdrawAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorWithdrawAddressResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.verify|verify} messages.
                 * @param message QueryDelegatorWithdrawAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryDelegatorWithdrawAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse;

                /**
                 * Decodes a QueryDelegatorWithdrawAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse;

                /**
                 * Verifies a QueryDelegatorWithdrawAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorWithdrawAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorWithdrawAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse;

                /**
                 * Creates a plain object from a QueryDelegatorWithdrawAddressResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorWithdrawAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorWithdrawAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCommunityPoolRequest. */
            interface IQueryCommunityPoolRequest {
            }

            /** Represents a QueryCommunityPoolRequest. */
            class QueryCommunityPoolRequest implements IQueryCommunityPoolRequest {

                /**
                 * Constructs a new QueryCommunityPoolRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest);

                /**
                 * Encodes the specified QueryCommunityPoolRequest message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolRequest.verify|verify} messages.
                 * @param message QueryCommunityPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCommunityPoolRequest message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolRequest.verify|verify} messages.
                 * @param message QueryCommunityPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryCommunityPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCommunityPoolRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCommunityPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryCommunityPoolRequest;

                /**
                 * Decodes a QueryCommunityPoolRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCommunityPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryCommunityPoolRequest;

                /**
                 * Verifies a QueryCommunityPoolRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCommunityPoolRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCommunityPoolRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryCommunityPoolRequest;

                /**
                 * Creates a plain object from a QueryCommunityPoolRequest message. Also converts values to other types if specified.
                 * @param message QueryCommunityPoolRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryCommunityPoolRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCommunityPoolRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCommunityPoolResponse. */
            interface IQueryCommunityPoolResponse {

                /** QueryCommunityPoolResponse pool */
                pool?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a QueryCommunityPoolResponse. */
            class QueryCommunityPoolResponse implements IQueryCommunityPoolResponse {

                /**
                 * Constructs a new QueryCommunityPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IQueryCommunityPoolResponse);

                /** QueryCommunityPoolResponse pool. */
                public pool: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified QueryCommunityPoolResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolResponse.verify|verify} messages.
                 * @param message QueryCommunityPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IQueryCommunityPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCommunityPoolResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.QueryCommunityPoolResponse.verify|verify} messages.
                 * @param message QueryCommunityPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IQueryCommunityPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCommunityPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.QueryCommunityPoolResponse;

                /**
                 * Decodes a QueryCommunityPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.QueryCommunityPoolResponse;

                /**
                 * Verifies a QueryCommunityPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCommunityPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCommunityPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.QueryCommunityPoolResponse;

                /**
                 * Creates a plain object from a QueryCommunityPoolResponse message. Also converts values to other types if specified.
                 * @param message QueryCommunityPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.QueryCommunityPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCommunityPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegatorWithdrawInfo. */
            interface IDelegatorWithdrawInfo {

                /** DelegatorWithdrawInfo delegator_address */
                delegator_address?: (string|null);

                /** DelegatorWithdrawInfo withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a DelegatorWithdrawInfo. */
            class DelegatorWithdrawInfo implements IDelegatorWithdrawInfo {

                /**
                 * Constructs a new DelegatorWithdrawInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo);

                /** DelegatorWithdrawInfo delegator_address. */
                public delegator_address: string;

                /** DelegatorWithdrawInfo withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified DelegatorWithdrawInfo message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorWithdrawInfo.verify|verify} messages.
                 * @param message DelegatorWithdrawInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegatorWithdrawInfo message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorWithdrawInfo.verify|verify} messages.
                 * @param message DelegatorWithdrawInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorWithdrawInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegatorWithdrawInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegatorWithdrawInfo;

                /**
                 * Decodes a DelegatorWithdrawInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegatorWithdrawInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegatorWithdrawInfo;

                /**
                 * Verifies a DelegatorWithdrawInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegatorWithdrawInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegatorWithdrawInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegatorWithdrawInfo;

                /**
                 * Creates a plain object from a DelegatorWithdrawInfo message. Also converts values to other types if specified.
                 * @param message DelegatorWithdrawInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegatorWithdrawInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegatorWithdrawInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorOutstandingRewardsRecord. */
            interface IValidatorOutstandingRewardsRecord {

                /** ValidatorOutstandingRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorOutstandingRewardsRecord outstanding_rewards */
                outstanding_rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorOutstandingRewardsRecord. */
            class ValidatorOutstandingRewardsRecord implements IValidatorOutstandingRewardsRecord {

                /**
                 * Constructs a new ValidatorOutstandingRewardsRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord);

                /** ValidatorOutstandingRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorOutstandingRewardsRecord outstanding_rewards. */
                public outstanding_rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorOutstandingRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.verify|verify} messages.
                 * @param message ValidatorOutstandingRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorOutstandingRewardsRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.verify|verify} messages.
                 * @param message ValidatorOutstandingRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorOutstandingRewardsRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorOutstandingRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord;

                /**
                 * Decodes a ValidatorOutstandingRewardsRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorOutstandingRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord;

                /**
                 * Verifies a ValidatorOutstandingRewardsRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorOutstandingRewardsRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorOutstandingRewardsRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord;

                /**
                 * Creates a plain object from a ValidatorOutstandingRewardsRecord message. Also converts values to other types if specified.
                 * @param message ValidatorOutstandingRewardsRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorOutstandingRewardsRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorAccumulatedCommissionRecord. */
            interface IValidatorAccumulatedCommissionRecord {

                /** ValidatorAccumulatedCommissionRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorAccumulatedCommissionRecord accumulated */
                accumulated?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);
            }

            /** Represents a ValidatorAccumulatedCommissionRecord. */
            class ValidatorAccumulatedCommissionRecord implements IValidatorAccumulatedCommissionRecord {

                /**
                 * Constructs a new ValidatorAccumulatedCommissionRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord);

                /** ValidatorAccumulatedCommissionRecord validator_address. */
                public validator_address: string;

                /** ValidatorAccumulatedCommissionRecord accumulated. */
                public accumulated?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommission|null);

                /**
                 * Encodes the specified ValidatorAccumulatedCommissionRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommissionRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorAccumulatedCommissionRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommissionRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorAccumulatedCommissionRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorAccumulatedCommissionRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord;

                /**
                 * Decodes a ValidatorAccumulatedCommissionRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorAccumulatedCommissionRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord;

                /**
                 * Verifies a ValidatorAccumulatedCommissionRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorAccumulatedCommissionRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorAccumulatedCommissionRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord;

                /**
                 * Creates a plain object from a ValidatorAccumulatedCommissionRecord message. Also converts values to other types if specified.
                 * @param message ValidatorAccumulatedCommissionRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorAccumulatedCommissionRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorHistoricalRewardsRecord. */
            interface IValidatorHistoricalRewardsRecord {

                /** ValidatorHistoricalRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorHistoricalRewardsRecord period */
                period?: (Long|null);

                /** ValidatorHistoricalRewardsRecord rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewards|null);
            }

            /** Represents a ValidatorHistoricalRewardsRecord. */
            class ValidatorHistoricalRewardsRecord implements IValidatorHistoricalRewardsRecord {

                /**
                 * Constructs a new ValidatorHistoricalRewardsRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord);

                /** ValidatorHistoricalRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorHistoricalRewardsRecord period. */
                public period: Long;

                /** ValidatorHistoricalRewardsRecord rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewards|null);

                /**
                 * Encodes the specified ValidatorHistoricalRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.verify|verify} messages.
                 * @param message ValidatorHistoricalRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorHistoricalRewardsRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.verify|verify} messages.
                 * @param message ValidatorHistoricalRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorHistoricalRewardsRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorHistoricalRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord;

                /**
                 * Decodes a ValidatorHistoricalRewardsRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorHistoricalRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord;

                /**
                 * Verifies a ValidatorHistoricalRewardsRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorHistoricalRewardsRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorHistoricalRewardsRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord;

                /**
                 * Creates a plain object from a ValidatorHistoricalRewardsRecord message. Also converts values to other types if specified.
                 * @param message ValidatorHistoricalRewardsRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorHistoricalRewardsRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorCurrentRewardsRecord. */
            interface IValidatorCurrentRewardsRecord {

                /** ValidatorCurrentRewardsRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorCurrentRewardsRecord rewards */
                rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewards|null);
            }

            /** Represents a ValidatorCurrentRewardsRecord. */
            class ValidatorCurrentRewardsRecord implements IValidatorCurrentRewardsRecord {

                /**
                 * Constructs a new ValidatorCurrentRewardsRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord);

                /** ValidatorCurrentRewardsRecord validator_address. */
                public validator_address: string;

                /** ValidatorCurrentRewardsRecord rewards. */
                public rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewards|null);

                /**
                 * Encodes the specified ValidatorCurrentRewardsRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.verify|verify} messages.
                 * @param message ValidatorCurrentRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorCurrentRewardsRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.verify|verify} messages.
                 * @param message ValidatorCurrentRewardsRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorCurrentRewardsRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorCurrentRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord;

                /**
                 * Decodes a ValidatorCurrentRewardsRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorCurrentRewardsRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord;

                /**
                 * Verifies a ValidatorCurrentRewardsRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorCurrentRewardsRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorCurrentRewardsRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord;

                /**
                 * Creates a plain object from a ValidatorCurrentRewardsRecord message. Also converts values to other types if specified.
                 * @param message ValidatorCurrentRewardsRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorCurrentRewardsRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegatorStartingInfoRecord. */
            interface IDelegatorStartingInfoRecord {

                /** DelegatorStartingInfoRecord delegator_address */
                delegator_address?: (string|null);

                /** DelegatorStartingInfoRecord validator_address */
                validator_address?: (string|null);

                /** DelegatorStartingInfoRecord starting_info */
                starting_info?: (cosmos.distribution.v1beta1.IDelegatorStartingInfo|null);
            }

            /** Represents a DelegatorStartingInfoRecord. */
            class DelegatorStartingInfoRecord implements IDelegatorStartingInfoRecord {

                /**
                 * Constructs a new DelegatorStartingInfoRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord);

                /** DelegatorStartingInfoRecord delegator_address. */
                public delegator_address: string;

                /** DelegatorStartingInfoRecord validator_address. */
                public validator_address: string;

                /** DelegatorStartingInfoRecord starting_info. */
                public starting_info?: (cosmos.distribution.v1beta1.IDelegatorStartingInfo|null);

                /**
                 * Encodes the specified DelegatorStartingInfoRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.verify|verify} messages.
                 * @param message DelegatorStartingInfoRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegatorStartingInfoRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.verify|verify} messages.
                 * @param message DelegatorStartingInfoRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorStartingInfoRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegatorStartingInfoRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegatorStartingInfoRecord;

                /**
                 * Decodes a DelegatorStartingInfoRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegatorStartingInfoRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegatorStartingInfoRecord;

                /**
                 * Verifies a DelegatorStartingInfoRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegatorStartingInfoRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegatorStartingInfoRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegatorStartingInfoRecord;

                /**
                 * Creates a plain object from a DelegatorStartingInfoRecord message. Also converts values to other types if specified.
                 * @param message DelegatorStartingInfoRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegatorStartingInfoRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegatorStartingInfoRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSlashEventRecord. */
            interface IValidatorSlashEventRecord {

                /** ValidatorSlashEventRecord validator_address */
                validator_address?: (string|null);

                /** ValidatorSlashEventRecord height */
                height?: (Long|null);

                /** ValidatorSlashEventRecord period */
                period?: (Long|null);

                /** ValidatorSlashEventRecord validator_slash_event */
                validator_slash_event?: (cosmos.distribution.v1beta1.IValidatorSlashEvent|null);
            }

            /** Represents a ValidatorSlashEventRecord. */
            class ValidatorSlashEventRecord implements IValidatorSlashEventRecord {

                /**
                 * Constructs a new ValidatorSlashEventRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorSlashEventRecord);

                /** ValidatorSlashEventRecord validator_address. */
                public validator_address: string;

                /** ValidatorSlashEventRecord height. */
                public height: Long;

                /** ValidatorSlashEventRecord period. */
                public period: Long;

                /** ValidatorSlashEventRecord validator_slash_event. */
                public validator_slash_event?: (cosmos.distribution.v1beta1.IValidatorSlashEvent|null);

                /**
                 * Encodes the specified ValidatorSlashEventRecord message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEventRecord.verify|verify} messages.
                 * @param message ValidatorSlashEventRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorSlashEventRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSlashEventRecord message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEventRecord.verify|verify} messages.
                 * @param message ValidatorSlashEventRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorSlashEventRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEventRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSlashEventRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorSlashEventRecord;

                /**
                 * Decodes a ValidatorSlashEventRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSlashEventRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorSlashEventRecord;

                /**
                 * Verifies a ValidatorSlashEventRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSlashEventRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSlashEventRecord
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorSlashEventRecord;

                /**
                 * Creates a plain object from a ValidatorSlashEventRecord message. Also converts values to other types if specified.
                 * @param message ValidatorSlashEventRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorSlashEventRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSlashEventRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.distribution.v1beta1.IParams|null);

                /** GenesisState fee_pool */
                fee_pool?: (cosmos.distribution.v1beta1.IFeePool|null);

                /** GenesisState delegator_withdraw_infos */
                delegator_withdraw_infos?: (cosmos.distribution.v1beta1.IDelegatorWithdrawInfo[]|null);

                /** GenesisState previous_proposer */
                previous_proposer?: (string|null);

                /** GenesisState outstanding_rewards */
                outstanding_rewards?: (cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord[]|null);

                /** GenesisState validator_accumulated_commissions */
                validator_accumulated_commissions?: (cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord[]|null);

                /** GenesisState validator_historical_rewards */
                validator_historical_rewards?: (cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord[]|null);

                /** GenesisState validator_current_rewards */
                validator_current_rewards?: (cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord[]|null);

                /** GenesisState delegator_starting_infos */
                delegator_starting_infos?: (cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord[]|null);

                /** GenesisState validator_slash_events */
                validator_slash_events?: (cosmos.distribution.v1beta1.IValidatorSlashEventRecord[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.distribution.v1beta1.IParams|null);

                /** GenesisState fee_pool. */
                public fee_pool?: (cosmos.distribution.v1beta1.IFeePool|null);

                /** GenesisState delegator_withdraw_infos. */
                public delegator_withdraw_infos: cosmos.distribution.v1beta1.IDelegatorWithdrawInfo[];

                /** GenesisState previous_proposer. */
                public previous_proposer: string;

                /** GenesisState outstanding_rewards. */
                public outstanding_rewards: cosmos.distribution.v1beta1.IValidatorOutstandingRewardsRecord[];

                /** GenesisState validator_accumulated_commissions. */
                public validator_accumulated_commissions: cosmos.distribution.v1beta1.IValidatorAccumulatedCommissionRecord[];

                /** GenesisState validator_historical_rewards. */
                public validator_historical_rewards: cosmos.distribution.v1beta1.IValidatorHistoricalRewardsRecord[];

                /** GenesisState validator_current_rewards. */
                public validator_current_rewards: cosmos.distribution.v1beta1.IValidatorCurrentRewardsRecord[];

                /** GenesisState delegator_starting_infos. */
                public delegator_starting_infos: cosmos.distribution.v1beta1.IDelegatorStartingInfoRecord[];

                /** GenesisState validator_slash_events. */
                public validator_slash_events: cosmos.distribution.v1beta1.IValidatorSlashEventRecord[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.distribution.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls SetWithdrawAddress.
                 * @param request MsgSetWithdrawAddress message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetWithdrawAddressResponse
                 */
                public setWithdrawAddress(request: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress, callback: cosmos.distribution.v1beta1.Msg.SetWithdrawAddressCallback): void;

                /**
                 * Calls SetWithdrawAddress.
                 * @param request MsgSetWithdrawAddress message or plain object
                 * @returns Promise
                 */
                public setWithdrawAddress(request: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress): Promise<cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse>;

                /**
                 * Calls WithdrawDelegatorReward.
                 * @param request MsgWithdrawDelegatorReward message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgWithdrawDelegatorRewardResponse
                 */
                public withdrawDelegatorReward(request: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward, callback: cosmos.distribution.v1beta1.Msg.WithdrawDelegatorRewardCallback): void;

                /**
                 * Calls WithdrawDelegatorReward.
                 * @param request MsgWithdrawDelegatorReward message or plain object
                 * @returns Promise
                 */
                public withdrawDelegatorReward(request: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward): Promise<cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse>;

                /**
                 * Calls WithdrawValidatorCommission.
                 * @param request MsgWithdrawValidatorCommission message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgWithdrawValidatorCommissionResponse
                 */
                public withdrawValidatorCommission(request: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission, callback: cosmos.distribution.v1beta1.Msg.WithdrawValidatorCommissionCallback): void;

                /**
                 * Calls WithdrawValidatorCommission.
                 * @param request MsgWithdrawValidatorCommission message or plain object
                 * @returns Promise
                 */
                public withdrawValidatorCommission(request: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission): Promise<cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse>;

                /**
                 * Calls FundCommunityPool.
                 * @param request MsgFundCommunityPool message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgFundCommunityPoolResponse
                 */
                public fundCommunityPool(request: cosmos.distribution.v1beta1.IMsgFundCommunityPool, callback: cosmos.distribution.v1beta1.Msg.FundCommunityPoolCallback): void;

                /**
                 * Calls FundCommunityPool.
                 * @param request MsgFundCommunityPool message or plain object
                 * @returns Promise
                 */
                public fundCommunityPool(request: cosmos.distribution.v1beta1.IMsgFundCommunityPool): Promise<cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Msg#setWithdrawAddress}.
                 * @param error Error, if any
                 * @param [response] MsgSetWithdrawAddressResponse
                 */
                type SetWithdrawAddressCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Msg#withdrawDelegatorReward}.
                 * @param error Error, if any
                 * @param [response] MsgWithdrawDelegatorRewardResponse
                 */
                type WithdrawDelegatorRewardCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Msg#withdrawValidatorCommission}.
                 * @param error Error, if any
                 * @param [response] MsgWithdrawValidatorCommissionResponse
                 */
                type WithdrawValidatorCommissionCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse) => void;

                /**
                 * Callback as used by {@link cosmos.distribution.v1beta1.Msg#fundCommunityPool}.
                 * @param error Error, if any
                 * @param [response] MsgFundCommunityPoolResponse
                 */
                type FundCommunityPoolCallback = (error: (Error|null), response?: cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse) => void;
            }

            /** Properties of a MsgSetWithdrawAddress. */
            interface IMsgSetWithdrawAddress {

                /** MsgSetWithdrawAddress delegator_address */
                delegator_address?: (string|null);

                /** MsgSetWithdrawAddress withdraw_address */
                withdraw_address?: (string|null);
            }

            /** Represents a MsgSetWithdrawAddress. */
            class MsgSetWithdrawAddress implements IMsgSetWithdrawAddress {

                /**
                 * Constructs a new MsgSetWithdrawAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress);

                /** MsgSetWithdrawAddress delegator_address. */
                public delegator_address: string;

                /** MsgSetWithdrawAddress withdraw_address. */
                public withdraw_address: string;

                /**
                 * Encodes the specified MsgSetWithdrawAddress message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddress.verify|verify} messages.
                 * @param message MsgSetWithdrawAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetWithdrawAddress message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddress.verify|verify} messages.
                 * @param message MsgSetWithdrawAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgSetWithdrawAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetWithdrawAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetWithdrawAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgSetWithdrawAddress;

                /**
                 * Decodes a MsgSetWithdrawAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetWithdrawAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgSetWithdrawAddress;

                /**
                 * Verifies a MsgSetWithdrawAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetWithdrawAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetWithdrawAddress
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgSetWithdrawAddress;

                /**
                 * Creates a plain object from a MsgSetWithdrawAddress message. Also converts values to other types if specified.
                 * @param message MsgSetWithdrawAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgSetWithdrawAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetWithdrawAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetWithdrawAddressResponse. */
            interface IMsgSetWithdrawAddressResponse {
            }

            /** Represents a MsgSetWithdrawAddressResponse. */
            class MsgSetWithdrawAddressResponse implements IMsgSetWithdrawAddressResponse {

                /**
                 * Constructs a new MsgSetWithdrawAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgSetWithdrawAddressResponse);

                /**
                 * Encodes the specified MsgSetWithdrawAddressResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse.verify|verify} messages.
                 * @param message MsgSetWithdrawAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgSetWithdrawAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetWithdrawAddressResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse.verify|verify} messages.
                 * @param message MsgSetWithdrawAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgSetWithdrawAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetWithdrawAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse;

                /**
                 * Decodes a MsgSetWithdrawAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetWithdrawAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse;

                /**
                 * Verifies a MsgSetWithdrawAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetWithdrawAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetWithdrawAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse;

                /**
                 * Creates a plain object from a MsgSetWithdrawAddressResponse message. Also converts values to other types if specified.
                 * @param message MsgSetWithdrawAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetWithdrawAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawDelegatorReward. */
            interface IMsgWithdrawDelegatorReward {

                /** MsgWithdrawDelegatorReward delegator_address */
                delegator_address?: (string|null);

                /** MsgWithdrawDelegatorReward validator_address */
                validator_address?: (string|null);
            }

            /** Represents a MsgWithdrawDelegatorReward. */
            class MsgWithdrawDelegatorReward implements IMsgWithdrawDelegatorReward {

                /**
                 * Constructs a new MsgWithdrawDelegatorReward.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward);

                /** MsgWithdrawDelegatorReward delegator_address. */
                public delegator_address: string;

                /** MsgWithdrawDelegatorReward validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified MsgWithdrawDelegatorReward message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.verify|verify} messages.
                 * @param message MsgWithdrawDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawDelegatorReward message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.verify|verify} messages.
                 * @param message MsgWithdrawDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawDelegatorReward message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward;

                /**
                 * Decodes a MsgWithdrawDelegatorReward message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward;

                /**
                 * Verifies a MsgWithdrawDelegatorReward message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawDelegatorReward message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawDelegatorReward
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward;

                /**
                 * Creates a plain object from a MsgWithdrawDelegatorReward message. Also converts values to other types if specified.
                 * @param message MsgWithdrawDelegatorReward
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawDelegatorReward to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawDelegatorRewardResponse. */
            interface IMsgWithdrawDelegatorRewardResponse {
            }

            /** Represents a MsgWithdrawDelegatorRewardResponse. */
            class MsgWithdrawDelegatorRewardResponse implements IMsgWithdrawDelegatorRewardResponse {

                /**
                 * Constructs a new MsgWithdrawDelegatorRewardResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorRewardResponse);

                /**
                 * Encodes the specified MsgWithdrawDelegatorRewardResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.verify|verify} messages.
                 * @param message MsgWithdrawDelegatorRewardResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorRewardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawDelegatorRewardResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.verify|verify} messages.
                 * @param message MsgWithdrawDelegatorRewardResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgWithdrawDelegatorRewardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawDelegatorRewardResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawDelegatorRewardResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse;

                /**
                 * Decodes a MsgWithdrawDelegatorRewardResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawDelegatorRewardResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse;

                /**
                 * Verifies a MsgWithdrawDelegatorRewardResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawDelegatorRewardResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawDelegatorRewardResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse;

                /**
                 * Creates a plain object from a MsgWithdrawDelegatorRewardResponse message. Also converts values to other types if specified.
                 * @param message MsgWithdrawDelegatorRewardResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawDelegatorRewardResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawValidatorCommission. */
            interface IMsgWithdrawValidatorCommission {

                /** MsgWithdrawValidatorCommission validator_address */
                validator_address?: (string|null);
            }

            /** Represents a MsgWithdrawValidatorCommission. */
            class MsgWithdrawValidatorCommission implements IMsgWithdrawValidatorCommission {

                /**
                 * Constructs a new MsgWithdrawValidatorCommission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission);

                /** MsgWithdrawValidatorCommission validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified MsgWithdrawValidatorCommission message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.verify|verify} messages.
                 * @param message MsgWithdrawValidatorCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawValidatorCommission message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.verify|verify} messages.
                 * @param message MsgWithdrawValidatorCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawValidatorCommission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawValidatorCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission;

                /**
                 * Decodes a MsgWithdrawValidatorCommission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawValidatorCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission;

                /**
                 * Verifies a MsgWithdrawValidatorCommission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawValidatorCommission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawValidatorCommission
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission;

                /**
                 * Creates a plain object from a MsgWithdrawValidatorCommission message. Also converts values to other types if specified.
                 * @param message MsgWithdrawValidatorCommission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawValidatorCommission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawValidatorCommissionResponse. */
            interface IMsgWithdrawValidatorCommissionResponse {
            }

            /** Represents a MsgWithdrawValidatorCommissionResponse. */
            class MsgWithdrawValidatorCommissionResponse implements IMsgWithdrawValidatorCommissionResponse {

                /**
                 * Constructs a new MsgWithdrawValidatorCommissionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommissionResponse);

                /**
                 * Encodes the specified MsgWithdrawValidatorCommissionResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.verify|verify} messages.
                 * @param message MsgWithdrawValidatorCommissionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawValidatorCommissionResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.verify|verify} messages.
                 * @param message MsgWithdrawValidatorCommissionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgWithdrawValidatorCommissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawValidatorCommissionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse;

                /**
                 * Decodes a MsgWithdrawValidatorCommissionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawValidatorCommissionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse;

                /**
                 * Verifies a MsgWithdrawValidatorCommissionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawValidatorCommissionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawValidatorCommissionResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse;

                /**
                 * Creates a plain object from a MsgWithdrawValidatorCommissionResponse message. Also converts values to other types if specified.
                 * @param message MsgWithdrawValidatorCommissionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawValidatorCommissionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgFundCommunityPool. */
            interface IMsgFundCommunityPool {

                /** MsgFundCommunityPool amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgFundCommunityPool depositor */
                depositor?: (string|null);
            }

            /** Represents a MsgFundCommunityPool. */
            class MsgFundCommunityPool implements IMsgFundCommunityPool {

                /**
                 * Constructs a new MsgFundCommunityPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgFundCommunityPool);

                /** MsgFundCommunityPool amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** MsgFundCommunityPool depositor. */
                public depositor: string;

                /**
                 * Encodes the specified MsgFundCommunityPool message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPool.verify|verify} messages.
                 * @param message MsgFundCommunityPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgFundCommunityPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgFundCommunityPool message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPool.verify|verify} messages.
                 * @param message MsgFundCommunityPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgFundCommunityPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundCommunityPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgFundCommunityPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgFundCommunityPool;

                /**
                 * Decodes a MsgFundCommunityPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgFundCommunityPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgFundCommunityPool;

                /**
                 * Verifies a MsgFundCommunityPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgFundCommunityPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgFundCommunityPool
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgFundCommunityPool;

                /**
                 * Creates a plain object from a MsgFundCommunityPool message. Also converts values to other types if specified.
                 * @param message MsgFundCommunityPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgFundCommunityPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgFundCommunityPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgFundCommunityPoolResponse. */
            interface IMsgFundCommunityPoolResponse {
            }

            /** Represents a MsgFundCommunityPoolResponse. */
            class MsgFundCommunityPoolResponse implements IMsgFundCommunityPoolResponse {

                /**
                 * Constructs a new MsgFundCommunityPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IMsgFundCommunityPoolResponse);

                /**
                 * Encodes the specified MsgFundCommunityPoolResponse message. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse.verify|verify} messages.
                 * @param message MsgFundCommunityPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IMsgFundCommunityPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgFundCommunityPoolResponse message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse.verify|verify} messages.
                 * @param message MsgFundCommunityPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IMsgFundCommunityPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundCommunityPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgFundCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse;

                /**
                 * Decodes a MsgFundCommunityPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgFundCommunityPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse;

                /**
                 * Verifies a MsgFundCommunityPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgFundCommunityPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgFundCommunityPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse;

                /**
                 * Creates a plain object from a MsgFundCommunityPoolResponse message. Also converts values to other types if specified.
                 * @param message MsgFundCommunityPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgFundCommunityPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params community_tax */
                community_tax?: (string|null);

                /** Params base_proposer_reward */
                base_proposer_reward?: (string|null);

                /** Params bonus_proposer_reward */
                bonus_proposer_reward?: (string|null);

                /** Params withdraw_addr_enabled */
                withdraw_addr_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IParams);

                /** Params community_tax. */
                public community_tax: string;

                /** Params base_proposer_reward. */
                public base_proposer_reward: string;

                /** Params bonus_proposer_reward. */
                public bonus_proposer_reward: string;

                /** Params withdraw_addr_enabled. */
                public withdraw_addr_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.distribution.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorHistoricalRewards. */
            interface IValidatorHistoricalRewards {

                /** ValidatorHistoricalRewards cumulative_reward_ratio */
                cumulative_reward_ratio?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorHistoricalRewards reference_count */
                reference_count?: (number|null);
            }

            /** Represents a ValidatorHistoricalRewards. */
            class ValidatorHistoricalRewards implements IValidatorHistoricalRewards {

                /**
                 * Constructs a new ValidatorHistoricalRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorHistoricalRewards);

                /** ValidatorHistoricalRewards cumulative_reward_ratio. */
                public cumulative_reward_ratio: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorHistoricalRewards reference_count. */
                public reference_count: number;

                /**
                 * Encodes the specified ValidatorHistoricalRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewards.verify|verify} messages.
                 * @param message ValidatorHistoricalRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorHistoricalRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewards.verify|verify} messages.
                 * @param message ValidatorHistoricalRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorHistoricalRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorHistoricalRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Decodes a ValidatorHistoricalRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorHistoricalRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Verifies a ValidatorHistoricalRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorHistoricalRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorHistoricalRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Creates a plain object from a ValidatorHistoricalRewards message. Also converts values to other types if specified.
                 * @param message ValidatorHistoricalRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorHistoricalRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorHistoricalRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorCurrentRewards. */
            interface IValidatorCurrentRewards {

                /** ValidatorCurrentRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorCurrentRewards period */
                period?: (Long|null);
            }

            /** Represents a ValidatorCurrentRewards. */
            class ValidatorCurrentRewards implements IValidatorCurrentRewards {

                /**
                 * Constructs a new ValidatorCurrentRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorCurrentRewards);

                /** ValidatorCurrentRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorCurrentRewards period. */
                public period: Long;

                /**
                 * Encodes the specified ValidatorCurrentRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewards.verify|verify} messages.
                 * @param message ValidatorCurrentRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorCurrentRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorCurrentRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewards.verify|verify} messages.
                 * @param message ValidatorCurrentRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorCurrentRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorCurrentRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorCurrentRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Decodes a ValidatorCurrentRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorCurrentRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Verifies a ValidatorCurrentRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorCurrentRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorCurrentRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Creates a plain object from a ValidatorCurrentRewards message. Also converts values to other types if specified.
                 * @param message ValidatorCurrentRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorCurrentRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorCurrentRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorAccumulatedCommission. */
            interface IValidatorAccumulatedCommission {

                /** ValidatorAccumulatedCommission commission */
                commission?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorAccumulatedCommission. */
            class ValidatorAccumulatedCommission implements IValidatorAccumulatedCommission {

                /**
                 * Constructs a new ValidatorAccumulatedCommission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission);

                /** ValidatorAccumulatedCommission commission. */
                public commission: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorAccumulatedCommission message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommission.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorAccumulatedCommission message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommission.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorAccumulatedCommission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorAccumulatedCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Decodes a ValidatorAccumulatedCommission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorAccumulatedCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Verifies a ValidatorAccumulatedCommission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorAccumulatedCommission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorAccumulatedCommission
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Creates a plain object from a ValidatorAccumulatedCommission message. Also converts values to other types if specified.
                 * @param message ValidatorAccumulatedCommission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorAccumulatedCommission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorOutstandingRewards. */
            interface IValidatorOutstandingRewards {

                /** ValidatorOutstandingRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorOutstandingRewards. */
            class ValidatorOutstandingRewards implements IValidatorOutstandingRewards {

                /**
                 * Constructs a new ValidatorOutstandingRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorOutstandingRewards);

                /** ValidatorOutstandingRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorOutstandingRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewards.verify|verify} messages.
                 * @param message ValidatorOutstandingRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorOutstandingRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewards.verify|verify} messages.
                 * @param message ValidatorOutstandingRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorOutstandingRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorOutstandingRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Decodes a ValidatorOutstandingRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorOutstandingRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Verifies a ValidatorOutstandingRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorOutstandingRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorOutstandingRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Creates a plain object from a ValidatorOutstandingRewards message. Also converts values to other types if specified.
                 * @param message ValidatorOutstandingRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorOutstandingRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorOutstandingRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSlashEvent. */
            interface IValidatorSlashEvent {

                /** ValidatorSlashEvent validator_period */
                validator_period?: (Long|null);

                /** ValidatorSlashEvent fraction */
                fraction?: (string|null);
            }

            /** Represents a ValidatorSlashEvent. */
            class ValidatorSlashEvent implements IValidatorSlashEvent {

                /**
                 * Constructs a new ValidatorSlashEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorSlashEvent);

                /** ValidatorSlashEvent validator_period. */
                public validator_period: Long;

                /** ValidatorSlashEvent fraction. */
                public fraction: string;

                /**
                 * Encodes the specified ValidatorSlashEvent message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvent.verify|verify} messages.
                 * @param message ValidatorSlashEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorSlashEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSlashEvent message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvent.verify|verify} messages.
                 * @param message ValidatorSlashEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorSlashEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSlashEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Decodes a ValidatorSlashEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSlashEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Verifies a ValidatorSlashEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSlashEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSlashEvent
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Creates a plain object from a ValidatorSlashEvent message. Also converts values to other types if specified.
                 * @param message ValidatorSlashEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorSlashEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSlashEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSlashEvents. */
            interface IValidatorSlashEvents {

                /** ValidatorSlashEvents validator_slash_events */
                validator_slash_events?: (cosmos.distribution.v1beta1.IValidatorSlashEvent[]|null);
            }

            /** Represents a ValidatorSlashEvents. */
            class ValidatorSlashEvents implements IValidatorSlashEvents {

                /**
                 * Constructs a new ValidatorSlashEvents.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorSlashEvents);

                /** ValidatorSlashEvents validator_slash_events. */
                public validator_slash_events: cosmos.distribution.v1beta1.IValidatorSlashEvent[];

                /**
                 * Encodes the specified ValidatorSlashEvents message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvents.verify|verify} messages.
                 * @param message ValidatorSlashEvents message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorSlashEvents, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSlashEvents message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvents.verify|verify} messages.
                 * @param message ValidatorSlashEvents message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorSlashEvents, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvents message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSlashEvents
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Decodes a ValidatorSlashEvents message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSlashEvents
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Verifies a ValidatorSlashEvents message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSlashEvents message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSlashEvents
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Creates a plain object from a ValidatorSlashEvents message. Also converts values to other types if specified.
                 * @param message ValidatorSlashEvents
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorSlashEvents, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSlashEvents to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeePool. */
            interface IFeePool {

                /** FeePool community_pool */
                community_pool?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a FeePool. */
            class FeePool implements IFeePool {

                /**
                 * Constructs a new FeePool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IFeePool);

                /** FeePool community_pool. */
                public community_pool: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified FeePool message. Does not implicitly {@link cosmos.distribution.v1beta1.FeePool.verify|verify} messages.
                 * @param message FeePool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IFeePool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeePool message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.FeePool.verify|verify} messages.
                 * @param message FeePool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IFeePool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeePool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeePool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Decodes a FeePool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeePool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Verifies a FeePool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeePool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeePool
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Creates a plain object from a FeePool message. Also converts values to other types if specified.
                 * @param message FeePool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.FeePool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeePool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommunityPoolSpendProposal. */
            interface ICommunityPoolSpendProposal {

                /** CommunityPoolSpendProposal title */
                title?: (string|null);

                /** CommunityPoolSpendProposal description */
                description?: (string|null);

                /** CommunityPoolSpendProposal recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposal amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a CommunityPoolSpendProposal. */
            class CommunityPoolSpendProposal implements ICommunityPoolSpendProposal {

                /**
                 * Constructs a new CommunityPoolSpendProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal);

                /** CommunityPoolSpendProposal title. */
                public title: string;

                /** CommunityPoolSpendProposal description. */
                public description: string;

                /** CommunityPoolSpendProposal recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposal amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified CommunityPoolSpendProposal message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposal.verify|verify} messages.
                 * @param message CommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommunityPoolSpendProposal message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposal.verify|verify} messages.
                 * @param message CommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Decodes a CommunityPoolSpendProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Verifies a CommunityPoolSpendProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommunityPoolSpendProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommunityPoolSpendProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Creates a plain object from a CommunityPoolSpendProposal message. Also converts values to other types if specified.
                 * @param message CommunityPoolSpendProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.CommunityPoolSpendProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommunityPoolSpendProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegatorStartingInfo. */
            interface IDelegatorStartingInfo {

                /** DelegatorStartingInfo previous_period */
                previous_period?: (Long|null);

                /** DelegatorStartingInfo stake */
                stake?: (string|null);

                /** DelegatorStartingInfo height */
                height?: (Long|null);
            }

            /** Represents a DelegatorStartingInfo. */
            class DelegatorStartingInfo implements IDelegatorStartingInfo {

                /**
                 * Constructs a new DelegatorStartingInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegatorStartingInfo);

                /** DelegatorStartingInfo previous_period. */
                public previous_period: Long;

                /** DelegatorStartingInfo stake. */
                public stake: string;

                /** DelegatorStartingInfo height. */
                public height: Long;

                /**
                 * Encodes the specified DelegatorStartingInfo message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfo.verify|verify} messages.
                 * @param message DelegatorStartingInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegatorStartingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegatorStartingInfo message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfo.verify|verify} messages.
                 * @param message DelegatorStartingInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegatorStartingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorStartingInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegatorStartingInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Decodes a DelegatorStartingInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegatorStartingInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Verifies a DelegatorStartingInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegatorStartingInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegatorStartingInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Creates a plain object from a DelegatorStartingInfo message. Also converts values to other types if specified.
                 * @param message DelegatorStartingInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegatorStartingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegatorStartingInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegationDelegatorReward. */
            interface IDelegationDelegatorReward {

                /** DelegationDelegatorReward validator_address */
                validator_address?: (string|null);

                /** DelegationDelegatorReward reward */
                reward?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a DelegationDelegatorReward. */
            class DelegationDelegatorReward implements IDelegationDelegatorReward {

                /**
                 * Constructs a new DelegationDelegatorReward.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegationDelegatorReward);

                /** DelegationDelegatorReward validator_address. */
                public validator_address: string;

                /** DelegationDelegatorReward reward. */
                public reward: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified DelegationDelegatorReward message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegationDelegatorReward.verify|verify} messages.
                 * @param message DelegationDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegationDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegationDelegatorReward message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegationDelegatorReward.verify|verify} messages.
                 * @param message DelegationDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegationDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationDelegatorReward message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegationDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Decodes a DelegationDelegatorReward message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegationDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Verifies a DelegationDelegatorReward message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegationDelegatorReward message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegationDelegatorReward
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Creates a plain object from a DelegationDelegatorReward message. Also converts values to other types if specified.
                 * @param message DelegationDelegatorReward
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegationDelegatorReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegationDelegatorReward to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommunityPoolSpendProposalWithDeposit. */
            interface ICommunityPoolSpendProposalWithDeposit {

                /** CommunityPoolSpendProposalWithDeposit title */
                title?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit description */
                description?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit amount */
                amount?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit deposit */
                deposit?: (string|null);
            }

            /** Represents a CommunityPoolSpendProposalWithDeposit. */
            class CommunityPoolSpendProposalWithDeposit implements ICommunityPoolSpendProposalWithDeposit {

                /**
                 * Constructs a new CommunityPoolSpendProposalWithDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit);

                /** CommunityPoolSpendProposalWithDeposit title. */
                public title: string;

                /** CommunityPoolSpendProposalWithDeposit description. */
                public description: string;

                /** CommunityPoolSpendProposalWithDeposit recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposalWithDeposit amount. */
                public amount: string;

                /** CommunityPoolSpendProposalWithDeposit deposit. */
                public deposit: string;

                /**
                 * Encodes the specified CommunityPoolSpendProposalWithDeposit message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.verify|verify} messages.
                 * @param message CommunityPoolSpendProposalWithDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommunityPoolSpendProposalWithDeposit message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.verify|verify} messages.
                 * @param message CommunityPoolSpendProposalWithDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposalWithDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommunityPoolSpendProposalWithDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Decodes a CommunityPoolSpendProposalWithDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommunityPoolSpendProposalWithDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Verifies a CommunityPoolSpendProposalWithDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommunityPoolSpendProposalWithDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommunityPoolSpendProposalWithDeposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Creates a plain object from a CommunityPoolSpendProposalWithDeposit message. Also converts values to other types if specified.
                 * @param message CommunityPoolSpendProposalWithDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommunityPoolSpendProposalWithDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace evidence. */
    namespace evidence {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Evidence.
                 * @param request QueryEvidenceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryEvidenceResponse
                 */
                public evidence(request: cosmos.evidence.v1beta1.IQueryEvidenceRequest, callback: cosmos.evidence.v1beta1.Query.EvidenceCallback): void;

                /**
                 * Calls Evidence.
                 * @param request QueryEvidenceRequest message or plain object
                 * @returns Promise
                 */
                public evidence(request: cosmos.evidence.v1beta1.IQueryEvidenceRequest): Promise<cosmos.evidence.v1beta1.QueryEvidenceResponse>;

                /**
                 * Calls AllEvidence.
                 * @param request QueryAllEvidenceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAllEvidenceResponse
                 */
                public allEvidence(request: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest, callback: cosmos.evidence.v1beta1.Query.AllEvidenceCallback): void;

                /**
                 * Calls AllEvidence.
                 * @param request QueryAllEvidenceRequest message or plain object
                 * @returns Promise
                 */
                public allEvidence(request: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest): Promise<cosmos.evidence.v1beta1.QueryAllEvidenceResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.evidence.v1beta1.Query#evidence}.
                 * @param error Error, if any
                 * @param [response] QueryEvidenceResponse
                 */
                type EvidenceCallback = (error: (Error|null), response?: cosmos.evidence.v1beta1.QueryEvidenceResponse) => void;

                /**
                 * Callback as used by {@link cosmos.evidence.v1beta1.Query#allEvidence}.
                 * @param error Error, if any
                 * @param [response] QueryAllEvidenceResponse
                 */
                type AllEvidenceCallback = (error: (Error|null), response?: cosmos.evidence.v1beta1.QueryAllEvidenceResponse) => void;
            }

            /** Properties of a QueryEvidenceRequest. */
            interface IQueryEvidenceRequest {

                /** QueryEvidenceRequest evidence_hash */
                evidence_hash?: (Uint8Array|null);
            }

            /** Represents a QueryEvidenceRequest. */
            class QueryEvidenceRequest implements IQueryEvidenceRequest {

                /**
                 * Constructs a new QueryEvidenceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IQueryEvidenceRequest);

                /** QueryEvidenceRequest evidence_hash. */
                public evidence_hash: Uint8Array;

                /**
                 * Encodes the specified QueryEvidenceRequest message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceRequest.verify|verify} messages.
                 * @param message QueryEvidenceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IQueryEvidenceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEvidenceRequest message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceRequest.verify|verify} messages.
                 * @param message QueryEvidenceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IQueryEvidenceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEvidenceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.QueryEvidenceRequest;

                /**
                 * Decodes a QueryEvidenceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.QueryEvidenceRequest;

                /**
                 * Verifies a QueryEvidenceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEvidenceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEvidenceRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.QueryEvidenceRequest;

                /**
                 * Creates a plain object from a QueryEvidenceRequest message. Also converts values to other types if specified.
                 * @param message QueryEvidenceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.QueryEvidenceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEvidenceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEvidenceResponse. */
            interface IQueryEvidenceResponse {

                /** QueryEvidenceResponse evidence */
                evidence?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryEvidenceResponse. */
            class QueryEvidenceResponse implements IQueryEvidenceResponse {

                /**
                 * Constructs a new QueryEvidenceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IQueryEvidenceResponse);

                /** QueryEvidenceResponse evidence. */
                public evidence?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceResponse.verify|verify} messages.
                 * @param message QueryEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IQueryEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEvidenceResponse message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.QueryEvidenceResponse.verify|verify} messages.
                 * @param message QueryEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IQueryEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEvidenceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.QueryEvidenceResponse;

                /**
                 * Decodes a QueryEvidenceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.QueryEvidenceResponse;

                /**
                 * Verifies a QueryEvidenceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEvidenceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEvidenceResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.QueryEvidenceResponse;

                /**
                 * Creates a plain object from a QueryEvidenceResponse message. Also converts values to other types if specified.
                 * @param message QueryEvidenceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.QueryEvidenceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEvidenceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAllEvidenceRequest. */
            interface IQueryAllEvidenceRequest {

                /** QueryAllEvidenceRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryAllEvidenceRequest. */
            class QueryAllEvidenceRequest implements IQueryAllEvidenceRequest {

                /**
                 * Constructs a new QueryAllEvidenceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest);

                /** QueryAllEvidenceRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryAllEvidenceRequest message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceRequest.verify|verify} messages.
                 * @param message QueryAllEvidenceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAllEvidenceRequest message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceRequest.verify|verify} messages.
                 * @param message QueryAllEvidenceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IQueryAllEvidenceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllEvidenceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAllEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.QueryAllEvidenceRequest;

                /**
                 * Decodes a QueryAllEvidenceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAllEvidenceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.QueryAllEvidenceRequest;

                /**
                 * Verifies a QueryAllEvidenceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAllEvidenceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAllEvidenceRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.QueryAllEvidenceRequest;

                /**
                 * Creates a plain object from a QueryAllEvidenceRequest message. Also converts values to other types if specified.
                 * @param message QueryAllEvidenceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.QueryAllEvidenceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAllEvidenceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAllEvidenceResponse. */
            interface IQueryAllEvidenceResponse {

                /** QueryAllEvidenceResponse evidence */
                evidence?: (google.protobuf.IAny[]|null);

                /** QueryAllEvidenceResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryAllEvidenceResponse. */
            class QueryAllEvidenceResponse implements IQueryAllEvidenceResponse {

                /**
                 * Constructs a new QueryAllEvidenceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IQueryAllEvidenceResponse);

                /** QueryAllEvidenceResponse evidence. */
                public evidence: google.protobuf.IAny[];

                /** QueryAllEvidenceResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryAllEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceResponse.verify|verify} messages.
                 * @param message QueryAllEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IQueryAllEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAllEvidenceResponse message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.QueryAllEvidenceResponse.verify|verify} messages.
                 * @param message QueryAllEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IQueryAllEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAllEvidenceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAllEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.QueryAllEvidenceResponse;

                /**
                 * Decodes a QueryAllEvidenceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAllEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.QueryAllEvidenceResponse;

                /**
                 * Verifies a QueryAllEvidenceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAllEvidenceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAllEvidenceResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.QueryAllEvidenceResponse;

                /**
                 * Creates a plain object from a QueryAllEvidenceResponse message. Also converts values to other types if specified.
                 * @param message QueryAllEvidenceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.QueryAllEvidenceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAllEvidenceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState evidence */
                evidence?: (google.protobuf.IAny[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IGenesisState);

                /** GenesisState evidence. */
                public evidence: google.protobuf.IAny[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.evidence.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Equivocation. */
            interface IEquivocation {

                /** Equivocation height */
                height?: (Long|null);

                /** Equivocation time */
                time?: (google.protobuf.ITimestamp|null);

                /** Equivocation power */
                power?: (Long|null);

                /** Equivocation consensus_address */
                consensus_address?: (string|null);
            }

            /** Represents an Equivocation. */
            class Equivocation implements IEquivocation {

                /**
                 * Constructs a new Equivocation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IEquivocation);

                /** Equivocation height. */
                public height: Long;

                /** Equivocation time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** Equivocation power. */
                public power: Long;

                /** Equivocation consensus_address. */
                public consensus_address: string;

                /**
                 * Encodes the specified Equivocation message. Does not implicitly {@link cosmos.evidence.v1beta1.Equivocation.verify|verify} messages.
                 * @param message Equivocation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IEquivocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Equivocation message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.Equivocation.verify|verify} messages.
                 * @param message Equivocation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IEquivocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Equivocation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Equivocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.Equivocation;

                /**
                 * Decodes an Equivocation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Equivocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.Equivocation;

                /**
                 * Verifies an Equivocation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Equivocation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Equivocation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.Equivocation;

                /**
                 * Creates a plain object from an Equivocation message. Also converts values to other types if specified.
                 * @param message Equivocation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.Equivocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Equivocation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls SubmitEvidence.
                 * @param request MsgSubmitEvidence message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubmitEvidenceResponse
                 */
                public submitEvidence(request: cosmos.evidence.v1beta1.IMsgSubmitEvidence, callback: cosmos.evidence.v1beta1.Msg.SubmitEvidenceCallback): void;

                /**
                 * Calls SubmitEvidence.
                 * @param request MsgSubmitEvidence message or plain object
                 * @returns Promise
                 */
                public submitEvidence(request: cosmos.evidence.v1beta1.IMsgSubmitEvidence): Promise<cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.evidence.v1beta1.Msg#submitEvidence}.
                 * @param error Error, if any
                 * @param [response] MsgSubmitEvidenceResponse
                 */
                type SubmitEvidenceCallback = (error: (Error|null), response?: cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse) => void;
            }

            /** Properties of a MsgSubmitEvidence. */
            interface IMsgSubmitEvidence {

                /** MsgSubmitEvidence submitter */
                submitter?: (string|null);

                /** MsgSubmitEvidence evidence */
                evidence?: (google.protobuf.IAny|null);
            }

            /** Represents a MsgSubmitEvidence. */
            class MsgSubmitEvidence implements IMsgSubmitEvidence {

                /**
                 * Constructs a new MsgSubmitEvidence.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IMsgSubmitEvidence);

                /** MsgSubmitEvidence submitter. */
                public submitter: string;

                /** MsgSubmitEvidence evidence. */
                public evidence?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified MsgSubmitEvidence message. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidence.verify|verify} messages.
                 * @param message MsgSubmitEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IMsgSubmitEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitEvidence message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidence.verify|verify} messages.
                 * @param message MsgSubmitEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IMsgSubmitEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitEvidence message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.MsgSubmitEvidence;

                /**
                 * Decodes a MsgSubmitEvidence message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.MsgSubmitEvidence;

                /**
                 * Verifies a MsgSubmitEvidence message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitEvidence message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitEvidence
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.MsgSubmitEvidence;

                /**
                 * Creates a plain object from a MsgSubmitEvidence message. Also converts values to other types if specified.
                 * @param message MsgSubmitEvidence
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.MsgSubmitEvidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitEvidence to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitEvidenceResponse. */
            interface IMsgSubmitEvidenceResponse {

                /** MsgSubmitEvidenceResponse hash */
                hash?: (Uint8Array|null);
            }

            /** Represents a MsgSubmitEvidenceResponse. */
            class MsgSubmitEvidenceResponse implements IMsgSubmitEvidenceResponse {

                /**
                 * Constructs a new MsgSubmitEvidenceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.evidence.v1beta1.IMsgSubmitEvidenceResponse);

                /** MsgSubmitEvidenceResponse hash. */
                public hash: Uint8Array;

                /**
                 * Encodes the specified MsgSubmitEvidenceResponse message. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse.verify|verify} messages.
                 * @param message MsgSubmitEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.evidence.v1beta1.IMsgSubmitEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitEvidenceResponse message, length delimited. Does not implicitly {@link cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse.verify|verify} messages.
                 * @param message MsgSubmitEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.evidence.v1beta1.IMsgSubmitEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitEvidenceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse;

                /**
                 * Decodes a MsgSubmitEvidenceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse;

                /**
                 * Verifies a MsgSubmitEvidenceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitEvidenceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitEvidenceResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse;

                /**
                 * Creates a plain object from a MsgSubmitEvidenceResponse message. Also converts values to other types if specified.
                 * @param message MsgSubmitEvidenceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitEvidenceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace genutil. */
    namespace genutil {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState gen_txs */
                gen_txs?: (Uint8Array[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.genutil.v1beta1.IGenesisState);

                /** GenesisState gen_txs. */
                public gen_txs: Uint8Array[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.genutil.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.genutil.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.genutil.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.genutil.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.genutil.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.genutil.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.genutil.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.genutil.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace gov. */
    namespace gov {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Proposal.
                 * @param request QueryProposalRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryProposalResponse
                 */
                public proposal(request: cosmos.gov.v1beta1.IQueryProposalRequest, callback: cosmos.gov.v1beta1.Query.ProposalCallback): void;

                /**
                 * Calls Proposal.
                 * @param request QueryProposalRequest message or plain object
                 * @returns Promise
                 */
                public proposal(request: cosmos.gov.v1beta1.IQueryProposalRequest): Promise<cosmos.gov.v1beta1.QueryProposalResponse>;

                /**
                 * Calls Proposals.
                 * @param request QueryProposalsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryProposalsResponse
                 */
                public proposals(request: cosmos.gov.v1beta1.IQueryProposalsRequest, callback: cosmos.gov.v1beta1.Query.ProposalsCallback): void;

                /**
                 * Calls Proposals.
                 * @param request QueryProposalsRequest message or plain object
                 * @returns Promise
                 */
                public proposals(request: cosmos.gov.v1beta1.IQueryProposalsRequest): Promise<cosmos.gov.v1beta1.QueryProposalsResponse>;

                /**
                 * Calls Vote.
                 * @param request QueryVoteRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryVoteResponse
                 */
                public vote(request: cosmos.gov.v1beta1.IQueryVoteRequest, callback: cosmos.gov.v1beta1.Query.VoteCallback): void;

                /**
                 * Calls Vote.
                 * @param request QueryVoteRequest message or plain object
                 * @returns Promise
                 */
                public vote(request: cosmos.gov.v1beta1.IQueryVoteRequest): Promise<cosmos.gov.v1beta1.QueryVoteResponse>;

                /**
                 * Calls Votes.
                 * @param request QueryVotesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryVotesResponse
                 */
                public votes(request: cosmos.gov.v1beta1.IQueryVotesRequest, callback: cosmos.gov.v1beta1.Query.VotesCallback): void;

                /**
                 * Calls Votes.
                 * @param request QueryVotesRequest message or plain object
                 * @returns Promise
                 */
                public votes(request: cosmos.gov.v1beta1.IQueryVotesRequest): Promise<cosmos.gov.v1beta1.QueryVotesResponse>;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.gov.v1beta1.IQueryParamsRequest, callback: cosmos.gov.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.gov.v1beta1.IQueryParamsRequest): Promise<cosmos.gov.v1beta1.QueryParamsResponse>;

                /**
                 * Calls Deposit.
                 * @param request QueryDepositRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDepositResponse
                 */
                public deposit(request: cosmos.gov.v1beta1.IQueryDepositRequest, callback: cosmos.gov.v1beta1.Query.DepositCallback): void;

                /**
                 * Calls Deposit.
                 * @param request QueryDepositRequest message or plain object
                 * @returns Promise
                 */
                public deposit(request: cosmos.gov.v1beta1.IQueryDepositRequest): Promise<cosmos.gov.v1beta1.QueryDepositResponse>;

                /**
                 * Calls Deposits.
                 * @param request QueryDepositsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDepositsResponse
                 */
                public deposits(request: cosmos.gov.v1beta1.IQueryDepositsRequest, callback: cosmos.gov.v1beta1.Query.DepositsCallback): void;

                /**
                 * Calls Deposits.
                 * @param request QueryDepositsRequest message or plain object
                 * @returns Promise
                 */
                public deposits(request: cosmos.gov.v1beta1.IQueryDepositsRequest): Promise<cosmos.gov.v1beta1.QueryDepositsResponse>;

                /**
                 * Calls TallyResult.
                 * @param request QueryTallyResultRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTallyResultResponse
                 */
                public tallyResult(request: cosmos.gov.v1beta1.IQueryTallyResultRequest, callback: cosmos.gov.v1beta1.Query.TallyResultCallback): void;

                /**
                 * Calls TallyResult.
                 * @param request QueryTallyResultRequest message or plain object
                 * @returns Promise
                 */
                public tallyResult(request: cosmos.gov.v1beta1.IQueryTallyResultRequest): Promise<cosmos.gov.v1beta1.QueryTallyResultResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#proposal}.
                 * @param error Error, if any
                 * @param [response] QueryProposalResponse
                 */
                type ProposalCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryProposalResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#proposals}.
                 * @param error Error, if any
                 * @param [response] QueryProposalsResponse
                 */
                type ProposalsCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryProposalsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#vote}.
                 * @param error Error, if any
                 * @param [response] QueryVoteResponse
                 */
                type VoteCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryVoteResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#votes}.
                 * @param error Error, if any
                 * @param [response] QueryVotesResponse
                 */
                type VotesCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryVotesResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#deposit}.
                 * @param error Error, if any
                 * @param [response] QueryDepositResponse
                 */
                type DepositCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryDepositResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#deposits}.
                 * @param error Error, if any
                 * @param [response] QueryDepositsResponse
                 */
                type DepositsCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryDepositsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Query#tallyResult}.
                 * @param error Error, if any
                 * @param [response] QueryTallyResultResponse
                 */
                type TallyResultCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.QueryTallyResultResponse) => void;
            }

            /** Properties of a QueryProposalRequest. */
            interface IQueryProposalRequest {

                /** QueryProposalRequest proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a QueryProposalRequest. */
            class QueryProposalRequest implements IQueryProposalRequest {

                /**
                 * Constructs a new QueryProposalRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryProposalRequest);

                /** QueryProposalRequest proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified QueryProposalRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalRequest.verify|verify} messages.
                 * @param message QueryProposalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryProposalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProposalRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalRequest.verify|verify} messages.
                 * @param message QueryProposalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryProposalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProposalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryProposalRequest;

                /**
                 * Decodes a QueryProposalRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProposalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryProposalRequest;

                /**
                 * Verifies a QueryProposalRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProposalRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProposalRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryProposalRequest;

                /**
                 * Creates a plain object from a QueryProposalRequest message. Also converts values to other types if specified.
                 * @param message QueryProposalRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryProposalRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProposalRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProposalResponse. */
            interface IQueryProposalResponse {

                /** QueryProposalResponse proposal */
                proposal?: (cosmos.gov.v1beta1.IProposal|null);
            }

            /** Represents a QueryProposalResponse. */
            class QueryProposalResponse implements IQueryProposalResponse {

                /**
                 * Constructs a new QueryProposalResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryProposalResponse);

                /** QueryProposalResponse proposal. */
                public proposal?: (cosmos.gov.v1beta1.IProposal|null);

                /**
                 * Encodes the specified QueryProposalResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalResponse.verify|verify} messages.
                 * @param message QueryProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProposalResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalResponse.verify|verify} messages.
                 * @param message QueryProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryProposalResponse;

                /**
                 * Decodes a QueryProposalResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryProposalResponse;

                /**
                 * Verifies a QueryProposalResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProposalResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProposalResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryProposalResponse;

                /**
                 * Creates a plain object from a QueryProposalResponse message. Also converts values to other types if specified.
                 * @param message QueryProposalResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryProposalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProposalResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProposalsRequest. */
            interface IQueryProposalsRequest {

                /** QueryProposalsRequest proposal_status */
                proposal_status?: (cosmos.gov.v1beta1.ProposalStatus|null);

                /** QueryProposalsRequest voter */
                voter?: (string|null);

                /** QueryProposalsRequest depositor */
                depositor?: (string|null);

                /** QueryProposalsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryProposalsRequest. */
            class QueryProposalsRequest implements IQueryProposalsRequest {

                /**
                 * Constructs a new QueryProposalsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryProposalsRequest);

                /** QueryProposalsRequest proposal_status. */
                public proposal_status: cosmos.gov.v1beta1.ProposalStatus;

                /** QueryProposalsRequest voter. */
                public voter: string;

                /** QueryProposalsRequest depositor. */
                public depositor: string;

                /** QueryProposalsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryProposalsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsRequest.verify|verify} messages.
                 * @param message QueryProposalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryProposalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProposalsRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsRequest.verify|verify} messages.
                 * @param message QueryProposalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryProposalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProposalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryProposalsRequest;

                /**
                 * Decodes a QueryProposalsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProposalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryProposalsRequest;

                /**
                 * Verifies a QueryProposalsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProposalsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProposalsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryProposalsRequest;

                /**
                 * Creates a plain object from a QueryProposalsRequest message. Also converts values to other types if specified.
                 * @param message QueryProposalsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryProposalsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProposalsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProposalsResponse. */
            interface IQueryProposalsResponse {

                /** QueryProposalsResponse proposals */
                proposals?: (cosmos.gov.v1beta1.IProposal[]|null);

                /** QueryProposalsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryProposalsResponse. */
            class QueryProposalsResponse implements IQueryProposalsResponse {

                /**
                 * Constructs a new QueryProposalsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryProposalsResponse);

                /** QueryProposalsResponse proposals. */
                public proposals: cosmos.gov.v1beta1.IProposal[];

                /** QueryProposalsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryProposalsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsResponse.verify|verify} messages.
                 * @param message QueryProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProposalsResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryProposalsResponse.verify|verify} messages.
                 * @param message QueryProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryProposalsResponse;

                /**
                 * Decodes a QueryProposalsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryProposalsResponse;

                /**
                 * Verifies a QueryProposalsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProposalsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProposalsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryProposalsResponse;

                /**
                 * Creates a plain object from a QueryProposalsResponse message. Also converts values to other types if specified.
                 * @param message QueryProposalsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryProposalsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProposalsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryVoteRequest. */
            interface IQueryVoteRequest {

                /** QueryVoteRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryVoteRequest voter */
                voter?: (string|null);
            }

            /** Represents a QueryVoteRequest. */
            class QueryVoteRequest implements IQueryVoteRequest {

                /**
                 * Constructs a new QueryVoteRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryVoteRequest);

                /** QueryVoteRequest proposal_id. */
                public proposal_id: Long;

                /** QueryVoteRequest voter. */
                public voter: string;

                /**
                 * Encodes the specified QueryVoteRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteRequest.verify|verify} messages.
                 * @param message QueryVoteRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryVoteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryVoteRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteRequest.verify|verify} messages.
                 * @param message QueryVoteRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryVoteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVoteRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryVoteRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryVoteRequest;

                /**
                 * Decodes a QueryVoteRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryVoteRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryVoteRequest;

                /**
                 * Verifies a QueryVoteRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryVoteRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryVoteRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryVoteRequest;

                /**
                 * Creates a plain object from a QueryVoteRequest message. Also converts values to other types if specified.
                 * @param message QueryVoteRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryVoteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryVoteRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryVoteResponse. */
            interface IQueryVoteResponse {

                /** QueryVoteResponse vote */
                vote?: (cosmos.gov.v1beta1.IVote|null);
            }

            /** Represents a QueryVoteResponse. */
            class QueryVoteResponse implements IQueryVoteResponse {

                /**
                 * Constructs a new QueryVoteResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryVoteResponse);

                /** QueryVoteResponse vote. */
                public vote?: (cosmos.gov.v1beta1.IVote|null);

                /**
                 * Encodes the specified QueryVoteResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteResponse.verify|verify} messages.
                 * @param message QueryVoteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryVoteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryVoteResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryVoteResponse.verify|verify} messages.
                 * @param message QueryVoteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryVoteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVoteResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryVoteResponse;

                /**
                 * Decodes a QueryVoteResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryVoteResponse;

                /**
                 * Verifies a QueryVoteResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryVoteResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryVoteResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryVoteResponse;

                /**
                 * Creates a plain object from a QueryVoteResponse message. Also converts values to other types if specified.
                 * @param message QueryVoteResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryVoteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryVoteResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryVotesRequest. */
            interface IQueryVotesRequest {

                /** QueryVotesRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryVotesRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryVotesRequest. */
            class QueryVotesRequest implements IQueryVotesRequest {

                /**
                 * Constructs a new QueryVotesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryVotesRequest);

                /** QueryVotesRequest proposal_id. */
                public proposal_id: Long;

                /** QueryVotesRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryVotesRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesRequest.verify|verify} messages.
                 * @param message QueryVotesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryVotesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryVotesRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesRequest.verify|verify} messages.
                 * @param message QueryVotesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryVotesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVotesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryVotesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryVotesRequest;

                /**
                 * Decodes a QueryVotesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryVotesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryVotesRequest;

                /**
                 * Verifies a QueryVotesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryVotesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryVotesRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryVotesRequest;

                /**
                 * Creates a plain object from a QueryVotesRequest message. Also converts values to other types if specified.
                 * @param message QueryVotesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryVotesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryVotesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryVotesResponse. */
            interface IQueryVotesResponse {

                /** QueryVotesResponse votes */
                votes?: (cosmos.gov.v1beta1.IVote[]|null);

                /** QueryVotesResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryVotesResponse. */
            class QueryVotesResponse implements IQueryVotesResponse {

                /**
                 * Constructs a new QueryVotesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryVotesResponse);

                /** QueryVotesResponse votes. */
                public votes: cosmos.gov.v1beta1.IVote[];

                /** QueryVotesResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryVotesResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesResponse.verify|verify} messages.
                 * @param message QueryVotesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryVotesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryVotesResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryVotesResponse.verify|verify} messages.
                 * @param message QueryVotesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryVotesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryVotesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryVotesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryVotesResponse;

                /**
                 * Decodes a QueryVotesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryVotesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryVotesResponse;

                /**
                 * Verifies a QueryVotesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryVotesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryVotesResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryVotesResponse;

                /**
                 * Creates a plain object from a QueryVotesResponse message. Also converts values to other types if specified.
                 * @param message QueryVotesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryVotesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryVotesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {

                /** QueryParamsRequest params_type */
                params_type?: (string|null);
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryParamsRequest);

                /** QueryParamsRequest params_type. */
                public params_type: string;

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse voting_params */
                voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** QueryParamsResponse deposit_params */
                deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** QueryParamsResponse tally_params */
                tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse voting_params. */
                public voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** QueryParamsResponse deposit_params. */
                public deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** QueryParamsResponse tally_params. */
                public tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDepositRequest. */
            interface IQueryDepositRequest {

                /** QueryDepositRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryDepositRequest depositor */
                depositor?: (string|null);
            }

            /** Represents a QueryDepositRequest. */
            class QueryDepositRequest implements IQueryDepositRequest {

                /**
                 * Constructs a new QueryDepositRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryDepositRequest);

                /** QueryDepositRequest proposal_id. */
                public proposal_id: Long;

                /** QueryDepositRequest depositor. */
                public depositor: string;

                /**
                 * Encodes the specified QueryDepositRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositRequest.verify|verify} messages.
                 * @param message QueryDepositRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryDepositRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDepositRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositRequest.verify|verify} messages.
                 * @param message QueryDepositRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryDepositRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDepositRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryDepositRequest;

                /**
                 * Decodes a QueryDepositRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDepositRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryDepositRequest;

                /**
                 * Verifies a QueryDepositRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDepositRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDepositRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryDepositRequest;

                /**
                 * Creates a plain object from a QueryDepositRequest message. Also converts values to other types if specified.
                 * @param message QueryDepositRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryDepositRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDepositRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDepositResponse. */
            interface IQueryDepositResponse {

                /** QueryDepositResponse deposit */
                deposit?: (cosmos.gov.v1beta1.IDeposit|null);
            }

            /** Represents a QueryDepositResponse. */
            class QueryDepositResponse implements IQueryDepositResponse {

                /**
                 * Constructs a new QueryDepositResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryDepositResponse);

                /** QueryDepositResponse deposit. */
                public deposit?: (cosmos.gov.v1beta1.IDeposit|null);

                /**
                 * Encodes the specified QueryDepositResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositResponse.verify|verify} messages.
                 * @param message QueryDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDepositResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositResponse.verify|verify} messages.
                 * @param message QueryDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryDepositResponse;

                /**
                 * Decodes a QueryDepositResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryDepositResponse;

                /**
                 * Verifies a QueryDepositResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDepositResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDepositResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryDepositResponse;

                /**
                 * Creates a plain object from a QueryDepositResponse message. Also converts values to other types if specified.
                 * @param message QueryDepositResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryDepositResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDepositResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDepositsRequest. */
            interface IQueryDepositsRequest {

                /** QueryDepositsRequest proposal_id */
                proposal_id?: (Long|null);

                /** QueryDepositsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDepositsRequest. */
            class QueryDepositsRequest implements IQueryDepositsRequest {

                /**
                 * Constructs a new QueryDepositsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryDepositsRequest);

                /** QueryDepositsRequest proposal_id. */
                public proposal_id: Long;

                /** QueryDepositsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDepositsRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsRequest.verify|verify} messages.
                 * @param message QueryDepositsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryDepositsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDepositsRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsRequest.verify|verify} messages.
                 * @param message QueryDepositsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryDepositsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDepositsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryDepositsRequest;

                /**
                 * Decodes a QueryDepositsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDepositsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryDepositsRequest;

                /**
                 * Verifies a QueryDepositsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDepositsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDepositsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryDepositsRequest;

                /**
                 * Creates a plain object from a QueryDepositsRequest message. Also converts values to other types if specified.
                 * @param message QueryDepositsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryDepositsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDepositsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDepositsResponse. */
            interface IQueryDepositsResponse {

                /** QueryDepositsResponse deposits */
                deposits?: (cosmos.gov.v1beta1.IDeposit[]|null);

                /** QueryDepositsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDepositsResponse. */
            class QueryDepositsResponse implements IQueryDepositsResponse {

                /**
                 * Constructs a new QueryDepositsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryDepositsResponse);

                /** QueryDepositsResponse deposits. */
                public deposits: cosmos.gov.v1beta1.IDeposit[];

                /** QueryDepositsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDepositsResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsResponse.verify|verify} messages.
                 * @param message QueryDepositsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryDepositsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDepositsResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryDepositsResponse.verify|verify} messages.
                 * @param message QueryDepositsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryDepositsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDepositsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDepositsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryDepositsResponse;

                /**
                 * Decodes a QueryDepositsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDepositsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryDepositsResponse;

                /**
                 * Verifies a QueryDepositsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDepositsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDepositsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryDepositsResponse;

                /**
                 * Creates a plain object from a QueryDepositsResponse message. Also converts values to other types if specified.
                 * @param message QueryDepositsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryDepositsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDepositsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTallyResultRequest. */
            interface IQueryTallyResultRequest {

                /** QueryTallyResultRequest proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a QueryTallyResultRequest. */
            class QueryTallyResultRequest implements IQueryTallyResultRequest {

                /**
                 * Constructs a new QueryTallyResultRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryTallyResultRequest);

                /** QueryTallyResultRequest proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified QueryTallyResultRequest message. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultRequest.verify|verify} messages.
                 * @param message QueryTallyResultRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryTallyResultRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTallyResultRequest message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultRequest.verify|verify} messages.
                 * @param message QueryTallyResultRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryTallyResultRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTallyResultRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTallyResultRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryTallyResultRequest;

                /**
                 * Decodes a QueryTallyResultRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTallyResultRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryTallyResultRequest;

                /**
                 * Verifies a QueryTallyResultRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTallyResultRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTallyResultRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryTallyResultRequest;

                /**
                 * Creates a plain object from a QueryTallyResultRequest message. Also converts values to other types if specified.
                 * @param message QueryTallyResultRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryTallyResultRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTallyResultRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTallyResultResponse. */
            interface IQueryTallyResultResponse {

                /** QueryTallyResultResponse tally */
                tally?: (cosmos.gov.v1beta1.ITallyResult|null);
            }

            /** Represents a QueryTallyResultResponse. */
            class QueryTallyResultResponse implements IQueryTallyResultResponse {

                /**
                 * Constructs a new QueryTallyResultResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IQueryTallyResultResponse);

                /** QueryTallyResultResponse tally. */
                public tally?: (cosmos.gov.v1beta1.ITallyResult|null);

                /**
                 * Encodes the specified QueryTallyResultResponse message. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultResponse.verify|verify} messages.
                 * @param message QueryTallyResultResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IQueryTallyResultResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTallyResultResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.QueryTallyResultResponse.verify|verify} messages.
                 * @param message QueryTallyResultResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IQueryTallyResultResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTallyResultResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTallyResultResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.QueryTallyResultResponse;

                /**
                 * Decodes a QueryTallyResultResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTallyResultResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.QueryTallyResultResponse;

                /**
                 * Verifies a QueryTallyResultResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTallyResultResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTallyResultResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.QueryTallyResultResponse;

                /**
                 * Creates a plain object from a QueryTallyResultResponse message. Also converts values to other types if specified.
                 * @param message QueryTallyResultResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.QueryTallyResultResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTallyResultResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState starting_proposal_id */
                starting_proposal_id?: (Long|null);

                /** GenesisState deposits */
                deposits?: (cosmos.gov.v1beta1.IDeposit[]|null);

                /** GenesisState votes */
                votes?: (cosmos.gov.v1beta1.IVote[]|null);

                /** GenesisState proposals */
                proposals?: (cosmos.gov.v1beta1.IProposal[]|null);

                /** GenesisState deposit_params */
                deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** GenesisState voting_params */
                voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** GenesisState tally_params */
                tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IGenesisState);

                /** GenesisState starting_proposal_id. */
                public starting_proposal_id: Long;

                /** GenesisState deposits. */
                public deposits: cosmos.gov.v1beta1.IDeposit[];

                /** GenesisState votes. */
                public votes: cosmos.gov.v1beta1.IVote[];

                /** GenesisState proposals. */
                public proposals: cosmos.gov.v1beta1.IProposal[];

                /** GenesisState deposit_params. */
                public deposit_params?: (cosmos.gov.v1beta1.IDepositParams|null);

                /** GenesisState voting_params. */
                public voting_params?: (cosmos.gov.v1beta1.IVotingParams|null);

                /** GenesisState tally_params. */
                public tally_params?: (cosmos.gov.v1beta1.ITallyParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.gov.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** VoteOption enum. */
            enum VoteOption {
                VOTE_OPTION_UNSPECIFIED = 0,
                VOTE_OPTION_YES = 1,
                VOTE_OPTION_ABSTAIN = 2,
                VOTE_OPTION_NO = 3,
                VOTE_OPTION_NO_WITH_VETO = 4
            }

            /** Properties of a TextProposal. */
            interface ITextProposal {

                /** TextProposal title */
                title?: (string|null);

                /** TextProposal description */
                description?: (string|null);
            }

            /** Represents a TextProposal. */
            class TextProposal implements ITextProposal {

                /**
                 * Constructs a new TextProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITextProposal);

                /** TextProposal title. */
                public title: string;

                /** TextProposal description. */
                public description: string;

                /**
                 * Encodes the specified TextProposal message. Does not implicitly {@link cosmos.gov.v1beta1.TextProposal.verify|verify} messages.
                 * @param message TextProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITextProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TextProposal message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TextProposal.verify|verify} messages.
                 * @param message TextProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITextProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TextProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TextProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Decodes a TextProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TextProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Verifies a TextProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TextProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TextProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Creates a plain object from a TextProposal message. Also converts values to other types if specified.
                 * @param message TextProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TextProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TextProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Deposit. */
            interface IDeposit {

                /** Deposit proposal_id */
                proposal_id?: (Long|null);

                /** Deposit depositor */
                depositor?: (string|null);

                /** Deposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Deposit. */
            class Deposit implements IDeposit {

                /**
                 * Constructs a new Deposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IDeposit);

                /** Deposit proposal_id. */
                public proposal_id: Long;

                /** Deposit depositor. */
                public depositor: string;

                /** Deposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Deposit message. Does not implicitly {@link cosmos.gov.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Deposit message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Deposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Deposit;

                /**
                 * Decodes a Deposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Deposit;

                /**
                 * Verifies a Deposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Deposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Deposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Deposit;

                /**
                 * Creates a plain object from a Deposit message. Also converts values to other types if specified.
                 * @param message Deposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Deposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Deposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Proposal. */
            interface IProposal {

                /** Proposal proposal_id */
                proposal_id?: (Long|null);

                /** Proposal content */
                content?: (google.protobuf.IAny|null);

                /** Proposal status */
                status?: (cosmos.gov.v1beta1.ProposalStatus|null);

                /** Proposal final_tally_result */
                final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time */
                submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time */
                deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit */
                total_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Proposal voting_start_time */
                voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time */
                voting_end_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Proposal. */
            class Proposal implements IProposal {

                /**
                 * Constructs a new Proposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IProposal);

                /** Proposal proposal_id. */
                public proposal_id: Long;

                /** Proposal content. */
                public content?: (google.protobuf.IAny|null);

                /** Proposal status. */
                public status: cosmos.gov.v1beta1.ProposalStatus;

                /** Proposal final_tally_result. */
                public final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time. */
                public submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time. */
                public deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit. */
                public total_deposit: cosmos.base.v1beta1.ICoin[];

                /** Proposal voting_start_time. */
                public voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time. */
                public voting_end_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Proposal message. Does not implicitly {@link cosmos.gov.v1beta1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Proposal message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Proposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Proposal;

                /**
                 * Decodes a Proposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Proposal;

                /**
                 * Verifies a Proposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Proposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Proposal;

                /**
                 * Creates a plain object from a Proposal message. Also converts values to other types if specified.
                 * @param message Proposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Proposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ProposalStatus enum. */
            enum ProposalStatus {
                PROPOSAL_STATUS_UNSPECIFIED = 0,
                PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,
                PROPOSAL_STATUS_VOTING_PERIOD = 2,
                PROPOSAL_STATUS_PASSED = 3,
                PROPOSAL_STATUS_REJECTED = 4,
                PROPOSAL_STATUS_FAILED = 5
            }

            /** Properties of a TallyResult. */
            interface ITallyResult {

                /** TallyResult yes */
                yes?: (string|null);

                /** TallyResult abstain */
                abstain?: (string|null);

                /** TallyResult no */
                no?: (string|null);

                /** TallyResult no_with_veto */
                no_with_veto?: (string|null);
            }

            /** Represents a TallyResult. */
            class TallyResult implements ITallyResult {

                /**
                 * Constructs a new TallyResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITallyResult);

                /** TallyResult yes. */
                public yes: string;

                /** TallyResult abstain. */
                public abstain: string;

                /** TallyResult no. */
                public no: string;

                /** TallyResult no_with_veto. */
                public no_with_veto: string;

                /**
                 * Encodes the specified TallyResult message. Does not implicitly {@link cosmos.gov.v1beta1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyResult message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Verifies a TallyResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyResult
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Creates a plain object from a TallyResult message. Also converts values to other types if specified.
                 * @param message TallyResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TallyResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Vote. */
            interface IVote {

                /** Vote proposal_id */
                proposal_id?: (Long|null);

                /** Vote voter */
                voter?: (string|null);

                /** Vote option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);
            }

            /** Represents a Vote. */
            class Vote implements IVote {

                /**
                 * Constructs a new Vote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IVote);

                /** Vote proposal_id. */
                public proposal_id: Long;

                /** Vote voter. */
                public voter: string;

                /** Vote option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /**
                 * Encodes the specified Vote message. Does not implicitly {@link cosmos.gov.v1beta1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Vote message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Vote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Vote;

                /**
                 * Decodes a Vote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Vote;

                /**
                 * Verifies a Vote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Vote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Vote
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Vote;

                /**
                 * Creates a plain object from a Vote message. Also converts values to other types if specified.
                 * @param message Vote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Vote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DepositParams. */
            interface IDepositParams {

                /** DepositParams min_deposit */
                min_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** DepositParams max_deposit_period */
                max_deposit_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a DepositParams. */
            class DepositParams implements IDepositParams {

                /**
                 * Constructs a new DepositParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IDepositParams);

                /** DepositParams min_deposit. */
                public min_deposit: cosmos.base.v1beta1.ICoin[];

                /** DepositParams max_deposit_period. */
                public max_deposit_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified DepositParams message. Does not implicitly {@link cosmos.gov.v1beta1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DepositParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Verifies a DepositParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DepositParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DepositParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Creates a plain object from a DepositParams message. Also converts values to other types if specified.
                 * @param message DepositParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.DepositParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DepositParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VotingParams. */
            interface IVotingParams {

                /** VotingParams voting_period */
                voting_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a VotingParams. */
            class VotingParams implements IVotingParams {

                /**
                 * Constructs a new VotingParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IVotingParams);

                /** VotingParams voting_period. */
                public voting_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified VotingParams message. Does not implicitly {@link cosmos.gov.v1beta1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VotingParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Verifies a VotingParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VotingParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VotingParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Creates a plain object from a VotingParams message. Also converts values to other types if specified.
                 * @param message VotingParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.VotingParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VotingParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TallyParams. */
            interface ITallyParams {

                /** TallyParams quorum */
                quorum?: (Uint8Array|null);

                /** TallyParams threshold */
                threshold?: (Uint8Array|null);

                /** TallyParams veto_threshold */
                veto_threshold?: (Uint8Array|null);
            }

            /** Represents a TallyParams. */
            class TallyParams implements ITallyParams {

                /**
                 * Constructs a new TallyParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITallyParams);

                /** TallyParams quorum. */
                public quorum: Uint8Array;

                /** TallyParams threshold. */
                public threshold: Uint8Array;

                /** TallyParams veto_threshold. */
                public veto_threshold: Uint8Array;

                /**
                 * Encodes the specified TallyParams message. Does not implicitly {@link cosmos.gov.v1beta1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Verifies a TallyParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Creates a plain object from a TallyParams message. Also converts values to other types if specified.
                 * @param message TallyParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TallyParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls SubmitProposal.
                 * @param request MsgSubmitProposal message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubmitProposalResponse
                 */
                public submitProposal(request: cosmos.gov.v1beta1.IMsgSubmitProposal, callback: cosmos.gov.v1beta1.Msg.SubmitProposalCallback): void;

                /**
                 * Calls SubmitProposal.
                 * @param request MsgSubmitProposal message or plain object
                 * @returns Promise
                 */
                public submitProposal(request: cosmos.gov.v1beta1.IMsgSubmitProposal): Promise<cosmos.gov.v1beta1.MsgSubmitProposalResponse>;

                /**
                 * Calls Vote.
                 * @param request MsgVote message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgVoteResponse
                 */
                public vote(request: cosmos.gov.v1beta1.IMsgVote, callback: cosmos.gov.v1beta1.Msg.VoteCallback): void;

                /**
                 * Calls Vote.
                 * @param request MsgVote message or plain object
                 * @returns Promise
                 */
                public vote(request: cosmos.gov.v1beta1.IMsgVote): Promise<cosmos.gov.v1beta1.MsgVoteResponse>;

                /**
                 * Calls Deposit.
                 * @param request MsgDeposit message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDepositResponse
                 */
                public deposit(request: cosmos.gov.v1beta1.IMsgDeposit, callback: cosmos.gov.v1beta1.Msg.DepositCallback): void;

                /**
                 * Calls Deposit.
                 * @param request MsgDeposit message or plain object
                 * @returns Promise
                 */
                public deposit(request: cosmos.gov.v1beta1.IMsgDeposit): Promise<cosmos.gov.v1beta1.MsgDepositResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Msg#submitProposal}.
                 * @param error Error, if any
                 * @param [response] MsgSubmitProposalResponse
                 */
                type SubmitProposalCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.MsgSubmitProposalResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Msg#vote}.
                 * @param error Error, if any
                 * @param [response] MsgVoteResponse
                 */
                type VoteCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.MsgVoteResponse) => void;

                /**
                 * Callback as used by {@link cosmos.gov.v1beta1.Msg#deposit}.
                 * @param error Error, if any
                 * @param [response] MsgDepositResponse
                 */
                type DepositCallback = (error: (Error|null), response?: cosmos.gov.v1beta1.MsgDepositResponse) => void;
            }

            /** Properties of a MsgSubmitProposal. */
            interface IMsgSubmitProposal {

                /** MsgSubmitProposal content */
                content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposal initial_deposit */
                initial_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgSubmitProposal proposer */
                proposer?: (string|null);
            }

            /** Represents a MsgSubmitProposal. */
            class MsgSubmitProposal implements IMsgSubmitProposal {

                /**
                 * Constructs a new MsgSubmitProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgSubmitProposal);

                /** MsgSubmitProposal content. */
                public content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposal initial_deposit. */
                public initial_deposit: cosmos.base.v1beta1.ICoin[];

                /** MsgSubmitProposal proposer. */
                public proposer: string;

                /**
                 * Encodes the specified MsgSubmitProposal message. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposal.verify|verify} messages.
                 * @param message MsgSubmitProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgSubmitProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposal message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposal.verify|verify} messages.
                 * @param message MsgSubmitProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgSubmitProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgSubmitProposal;

                /**
                 * Decodes a MsgSubmitProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgSubmitProposal;

                /**
                 * Verifies a MsgSubmitProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgSubmitProposal;

                /**
                 * Creates a plain object from a MsgSubmitProposal message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgSubmitProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitProposalResponse. */
            interface IMsgSubmitProposalResponse {

                /** MsgSubmitProposalResponse proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a MsgSubmitProposalResponse. */
            class MsgSubmitProposalResponse implements IMsgSubmitProposalResponse {

                /**
                 * Constructs a new MsgSubmitProposalResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgSubmitProposalResponse);

                /** MsgSubmitProposalResponse proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified MsgSubmitProposalResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposalResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgSubmitProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposalResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgSubmitProposalResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgSubmitProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposalResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgSubmitProposalResponse;

                /**
                 * Decodes a MsgSubmitProposalResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgSubmitProposalResponse;

                /**
                 * Verifies a MsgSubmitProposalResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposalResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposalResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgSubmitProposalResponse;

                /**
                 * Creates a plain object from a MsgSubmitProposalResponse message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposalResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgSubmitProposalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposalResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgVote. */
            interface IMsgVote {

                /** MsgVote proposal_id */
                proposal_id?: (Long|null);

                /** MsgVote voter */
                voter?: (string|null);

                /** MsgVote option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);
            }

            /** Represents a MsgVote. */
            class MsgVote implements IMsgVote {

                /**
                 * Constructs a new MsgVote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgVote);

                /** MsgVote proposal_id. */
                public proposal_id: Long;

                /** MsgVote voter. */
                public voter: string;

                /** MsgVote option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /**
                 * Encodes the specified MsgVote message. Does not implicitly {@link cosmos.gov.v1beta1.MsgVote.verify|verify} messages.
                 * @param message MsgVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgVote message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgVote.verify|verify} messages.
                 * @param message MsgVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgVote;

                /**
                 * Decodes a MsgVote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgVote;

                /**
                 * Verifies a MsgVote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgVote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgVote
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgVote;

                /**
                 * Creates a plain object from a MsgVote message. Also converts values to other types if specified.
                 * @param message MsgVote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgVote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgVote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgVoteResponse. */
            interface IMsgVoteResponse {
            }

            /** Represents a MsgVoteResponse. */
            class MsgVoteResponse implements IMsgVoteResponse {

                /**
                 * Constructs a new MsgVoteResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgVoteResponse);

                /**
                 * Encodes the specified MsgVoteResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgVoteResponse.verify|verify} messages.
                 * @param message MsgVoteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgVoteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgVoteResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgVoteResponse.verify|verify} messages.
                 * @param message MsgVoteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgVoteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgVoteResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgVoteResponse;

                /**
                 * Decodes a MsgVoteResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgVoteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgVoteResponse;

                /**
                 * Verifies a MsgVoteResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgVoteResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgVoteResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgVoteResponse;

                /**
                 * Creates a plain object from a MsgVoteResponse message. Also converts values to other types if specified.
                 * @param message MsgVoteResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgVoteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgVoteResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDeposit. */
            interface IMsgDeposit {

                /** MsgDeposit proposal_id */
                proposal_id?: (Long|null);

                /** MsgDeposit depositor */
                depositor?: (string|null);

                /** MsgDeposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgDeposit. */
            class MsgDeposit implements IMsgDeposit {

                /**
                 * Constructs a new MsgDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgDeposit);

                /** MsgDeposit proposal_id. */
                public proposal_id: Long;

                /** MsgDeposit depositor. */
                public depositor: string;

                /** MsgDeposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgDeposit message. Does not implicitly {@link cosmos.gov.v1beta1.MsgDeposit.verify|verify} messages.
                 * @param message MsgDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeposit message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgDeposit.verify|verify} messages.
                 * @param message MsgDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgDeposit;

                /**
                 * Decodes a MsgDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgDeposit;

                /**
                 * Verifies a MsgDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgDeposit;

                /**
                 * Creates a plain object from a MsgDeposit message. Also converts values to other types if specified.
                 * @param message MsgDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDepositResponse. */
            interface IMsgDepositResponse {
            }

            /** Represents a MsgDepositResponse. */
            class MsgDepositResponse implements IMsgDepositResponse {

                /**
                 * Constructs a new MsgDepositResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IMsgDepositResponse);

                /**
                 * Encodes the specified MsgDepositResponse message. Does not implicitly {@link cosmos.gov.v1beta1.MsgDepositResponse.verify|verify} messages.
                 * @param message MsgDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IMsgDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDepositResponse message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.MsgDepositResponse.verify|verify} messages.
                 * @param message MsgDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IMsgDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDepositResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.MsgDepositResponse;

                /**
                 * Decodes a MsgDepositResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.MsgDepositResponse;

                /**
                 * Verifies a MsgDepositResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDepositResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDepositResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.MsgDepositResponse;

                /**
                 * Creates a plain object from a MsgDepositResponse message. Also converts values to other types if specified.
                 * @param message MsgDepositResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.MsgDepositResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDepositResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace mint. */
    namespace mint {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.mint.v1beta1.IQueryParamsRequest, callback: cosmos.mint.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.mint.v1beta1.IQueryParamsRequest): Promise<cosmos.mint.v1beta1.QueryParamsResponse>;

                /**
                 * Calls Inflation.
                 * @param request QueryInflationRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryInflationResponse
                 */
                public inflation(request: cosmos.mint.v1beta1.IQueryInflationRequest, callback: cosmos.mint.v1beta1.Query.InflationCallback): void;

                /**
                 * Calls Inflation.
                 * @param request QueryInflationRequest message or plain object
                 * @returns Promise
                 */
                public inflation(request: cosmos.mint.v1beta1.IQueryInflationRequest): Promise<cosmos.mint.v1beta1.QueryInflationResponse>;

                /**
                 * Calls AnnualProvisions.
                 * @param request QueryAnnualProvisionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAnnualProvisionsResponse
                 */
                public annualProvisions(request: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest, callback: cosmos.mint.v1beta1.Query.AnnualProvisionsCallback): void;

                /**
                 * Calls AnnualProvisions.
                 * @param request QueryAnnualProvisionsRequest message or plain object
                 * @returns Promise
                 */
                public annualProvisions(request: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest): Promise<cosmos.mint.v1beta1.QueryAnnualProvisionsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.mint.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.mint.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.mint.v1beta1.Query#inflation}.
                 * @param error Error, if any
                 * @param [response] QueryInflationResponse
                 */
                type InflationCallback = (error: (Error|null), response?: cosmos.mint.v1beta1.QueryInflationResponse) => void;

                /**
                 * Callback as used by {@link cosmos.mint.v1beta1.Query#annualProvisions}.
                 * @param error Error, if any
                 * @param [response] QueryAnnualProvisionsResponse
                 */
                type AnnualProvisionsCallback = (error: (Error|null), response?: cosmos.mint.v1beta1.QueryAnnualProvisionsResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.mint.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.mint.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInflationRequest. */
            interface IQueryInflationRequest {
            }

            /** Represents a QueryInflationRequest. */
            class QueryInflationRequest implements IQueryInflationRequest {

                /**
                 * Constructs a new QueryInflationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryInflationRequest);

                /**
                 * Encodes the specified QueryInflationRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationRequest.verify|verify} messages.
                 * @param message QueryInflationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryInflationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInflationRequest message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationRequest.verify|verify} messages.
                 * @param message QueryInflationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryInflationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInflationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInflationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryInflationRequest;

                /**
                 * Decodes a QueryInflationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInflationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryInflationRequest;

                /**
                 * Verifies a QueryInflationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInflationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInflationRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryInflationRequest;

                /**
                 * Creates a plain object from a QueryInflationRequest message. Also converts values to other types if specified.
                 * @param message QueryInflationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryInflationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInflationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInflationResponse. */
            interface IQueryInflationResponse {

                /** QueryInflationResponse inflation */
                inflation?: (Uint8Array|null);
            }

            /** Represents a QueryInflationResponse. */
            class QueryInflationResponse implements IQueryInflationResponse {

                /**
                 * Constructs a new QueryInflationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryInflationResponse);

                /** QueryInflationResponse inflation. */
                public inflation: Uint8Array;

                /**
                 * Encodes the specified QueryInflationResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationResponse.verify|verify} messages.
                 * @param message QueryInflationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryInflationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInflationResponse message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryInflationResponse.verify|verify} messages.
                 * @param message QueryInflationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryInflationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInflationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInflationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryInflationResponse;

                /**
                 * Decodes a QueryInflationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInflationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryInflationResponse;

                /**
                 * Verifies a QueryInflationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInflationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInflationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryInflationResponse;

                /**
                 * Creates a plain object from a QueryInflationResponse message. Also converts values to other types if specified.
                 * @param message QueryInflationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryInflationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInflationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAnnualProvisionsRequest. */
            interface IQueryAnnualProvisionsRequest {
            }

            /** Represents a QueryAnnualProvisionsRequest. */
            class QueryAnnualProvisionsRequest implements IQueryAnnualProvisionsRequest {

                /**
                 * Constructs a new QueryAnnualProvisionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest);

                /**
                 * Encodes the specified QueryAnnualProvisionsRequest message. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsRequest.verify|verify} messages.
                 * @param message QueryAnnualProvisionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAnnualProvisionsRequest message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsRequest.verify|verify} messages.
                 * @param message QueryAnnualProvisionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryAnnualProvisionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAnnualProvisionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAnnualProvisionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryAnnualProvisionsRequest;

                /**
                 * Decodes a QueryAnnualProvisionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAnnualProvisionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryAnnualProvisionsRequest;

                /**
                 * Verifies a QueryAnnualProvisionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAnnualProvisionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAnnualProvisionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryAnnualProvisionsRequest;

                /**
                 * Creates a plain object from a QueryAnnualProvisionsRequest message. Also converts values to other types if specified.
                 * @param message QueryAnnualProvisionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryAnnualProvisionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAnnualProvisionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAnnualProvisionsResponse. */
            interface IQueryAnnualProvisionsResponse {

                /** QueryAnnualProvisionsResponse annual_provisions */
                annual_provisions?: (Uint8Array|null);
            }

            /** Represents a QueryAnnualProvisionsResponse. */
            class QueryAnnualProvisionsResponse implements IQueryAnnualProvisionsResponse {

                /**
                 * Constructs a new QueryAnnualProvisionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IQueryAnnualProvisionsResponse);

                /** QueryAnnualProvisionsResponse annual_provisions. */
                public annual_provisions: Uint8Array;

                /**
                 * Encodes the specified QueryAnnualProvisionsResponse message. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.verify|verify} messages.
                 * @param message QueryAnnualProvisionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IQueryAnnualProvisionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAnnualProvisionsResponse message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.verify|verify} messages.
                 * @param message QueryAnnualProvisionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IQueryAnnualProvisionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAnnualProvisionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAnnualProvisionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.QueryAnnualProvisionsResponse;

                /**
                 * Decodes a QueryAnnualProvisionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAnnualProvisionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.QueryAnnualProvisionsResponse;

                /**
                 * Verifies a QueryAnnualProvisionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAnnualProvisionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAnnualProvisionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.QueryAnnualProvisionsResponse;

                /**
                 * Creates a plain object from a QueryAnnualProvisionsResponse message. Also converts values to other types if specified.
                 * @param message QueryAnnualProvisionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.QueryAnnualProvisionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAnnualProvisionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState minter */
                minter?: (cosmos.mint.v1beta1.IMinter|null);

                /** GenesisState params */
                params?: (cosmos.mint.v1beta1.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IGenesisState);

                /** GenesisState minter. */
                public minter?: (cosmos.mint.v1beta1.IMinter|null);

                /** GenesisState params. */
                public params?: (cosmos.mint.v1beta1.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.mint.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Minter. */
            interface IMinter {

                /** Minter inflation */
                inflation?: (string|null);

                /** Minter annual_provisions */
                annual_provisions?: (string|null);
            }

            /** Represents a Minter. */
            class Minter implements IMinter {

                /**
                 * Constructs a new Minter.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IMinter);

                /** Minter inflation. */
                public inflation: string;

                /** Minter annual_provisions. */
                public annual_provisions: string;

                /**
                 * Encodes the specified Minter message. Does not implicitly {@link cosmos.mint.v1beta1.Minter.verify|verify} messages.
                 * @param message Minter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IMinter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Minter message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.Minter.verify|verify} messages.
                 * @param message Minter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IMinter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Minter message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Minter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.Minter;

                /**
                 * Decodes a Minter message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Minter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.Minter;

                /**
                 * Verifies a Minter message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Minter message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Minter
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.Minter;

                /**
                 * Creates a plain object from a Minter message. Also converts values to other types if specified.
                 * @param message Minter
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.Minter, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Minter to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params mint_denom */
                mint_denom?: (string|null);

                /** Params inflation_rate_change */
                inflation_rate_change?: (string|null);

                /** Params inflation_max */
                inflation_max?: (string|null);

                /** Params inflation_min */
                inflation_min?: (string|null);

                /** Params goal_bonded */
                goal_bonded?: (string|null);

                /** Params blocks_per_year */
                blocks_per_year?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.mint.v1beta1.IParams);

                /** Params mint_denom. */
                public mint_denom: string;

                /** Params inflation_rate_change. */
                public inflation_rate_change: string;

                /** Params inflation_max. */
                public inflation_max: string;

                /** Params inflation_min. */
                public inflation_min: string;

                /** Params goal_bonded. */
                public goal_bonded: string;

                /** Params blocks_per_year. */
                public blocks_per_year: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.mint.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.mint.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.mint.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.mint.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.mint.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.mint.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.mint.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.mint.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace params. */
    namespace params {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a ParameterChangeProposal. */
            interface IParameterChangeProposal {

                /** ParameterChangeProposal title */
                title?: (string|null);

                /** ParameterChangeProposal description */
                description?: (string|null);

                /** ParameterChangeProposal changes */
                changes?: (cosmos.params.v1beta1.IParamChange[]|null);
            }

            /** Represents a ParameterChangeProposal. */
            class ParameterChangeProposal implements IParameterChangeProposal {

                /**
                 * Constructs a new ParameterChangeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.params.v1beta1.IParameterChangeProposal);

                /** ParameterChangeProposal title. */
                public title: string;

                /** ParameterChangeProposal description. */
                public description: string;

                /** ParameterChangeProposal changes. */
                public changes: cosmos.params.v1beta1.IParamChange[];

                /**
                 * Encodes the specified ParameterChangeProposal message. Does not implicitly {@link cosmos.params.v1beta1.ParameterChangeProposal.verify|verify} messages.
                 * @param message ParameterChangeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.params.v1beta1.IParameterChangeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ParameterChangeProposal message, length delimited. Does not implicitly {@link cosmos.params.v1beta1.ParameterChangeProposal.verify|verify} messages.
                 * @param message ParameterChangeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.params.v1beta1.IParameterChangeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParameterChangeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ParameterChangeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.params.v1beta1.ParameterChangeProposal;

                /**
                 * Decodes a ParameterChangeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ParameterChangeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.params.v1beta1.ParameterChangeProposal;

                /**
                 * Verifies a ParameterChangeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ParameterChangeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ParameterChangeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.params.v1beta1.ParameterChangeProposal;

                /**
                 * Creates a plain object from a ParameterChangeProposal message. Also converts values to other types if specified.
                 * @param message ParameterChangeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.params.v1beta1.ParameterChangeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ParameterChangeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ParamChange. */
            interface IParamChange {

                /** ParamChange subspace */
                subspace?: (string|null);

                /** ParamChange key */
                key?: (string|null);

                /** ParamChange value */
                value?: (string|null);
            }

            /** Represents a ParamChange. */
            class ParamChange implements IParamChange {

                /**
                 * Constructs a new ParamChange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.params.v1beta1.IParamChange);

                /** ParamChange subspace. */
                public subspace: string;

                /** ParamChange key. */
                public key: string;

                /** ParamChange value. */
                public value: string;

                /**
                 * Encodes the specified ParamChange message. Does not implicitly {@link cosmos.params.v1beta1.ParamChange.verify|verify} messages.
                 * @param message ParamChange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.params.v1beta1.IParamChange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ParamChange message, length delimited. Does not implicitly {@link cosmos.params.v1beta1.ParamChange.verify|verify} messages.
                 * @param message ParamChange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.params.v1beta1.IParamChange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParamChange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ParamChange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.params.v1beta1.ParamChange;

                /**
                 * Decodes a ParamChange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ParamChange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.params.v1beta1.ParamChange;

                /**
                 * Verifies a ParamChange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ParamChange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ParamChange
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.params.v1beta1.ParamChange;

                /**
                 * Creates a plain object from a ParamChange message. Also converts values to other types if specified.
                 * @param message ParamChange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.params.v1beta1.ParamChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ParamChange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.params.v1beta1.IQueryParamsRequest, callback: cosmos.params.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.params.v1beta1.IQueryParamsRequest): Promise<cosmos.params.v1beta1.QueryParamsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.params.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.params.v1beta1.QueryParamsResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {

                /** QueryParamsRequest subspace */
                subspace?: (string|null);

                /** QueryParamsRequest key */
                key?: (string|null);
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.params.v1beta1.IQueryParamsRequest);

                /** QueryParamsRequest subspace. */
                public subspace: string;

                /** QueryParamsRequest key. */
                public key: string;

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.params.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.params.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.params.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.params.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.params.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.params.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse param */
                param?: (cosmos.params.v1beta1.IParamChange|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.params.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse param. */
                public param?: (cosmos.params.v1beta1.IParamChange|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.params.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.params.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.params.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.params.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.params.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.params.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.params.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace slashing. */
    namespace slashing {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.slashing.v1beta1.IQueryParamsRequest, callback: cosmos.slashing.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.slashing.v1beta1.IQueryParamsRequest): Promise<cosmos.slashing.v1beta1.QueryParamsResponse>;

                /**
                 * Calls SigningInfo.
                 * @param request QuerySigningInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySigningInfoResponse
                 */
                public signingInfo(request: cosmos.slashing.v1beta1.IQuerySigningInfoRequest, callback: cosmos.slashing.v1beta1.Query.SigningInfoCallback): void;

                /**
                 * Calls SigningInfo.
                 * @param request QuerySigningInfoRequest message or plain object
                 * @returns Promise
                 */
                public signingInfo(request: cosmos.slashing.v1beta1.IQuerySigningInfoRequest): Promise<cosmos.slashing.v1beta1.QuerySigningInfoResponse>;

                /**
                 * Calls SigningInfos.
                 * @param request QuerySigningInfosRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySigningInfosResponse
                 */
                public signingInfos(request: cosmos.slashing.v1beta1.IQuerySigningInfosRequest, callback: cosmos.slashing.v1beta1.Query.SigningInfosCallback): void;

                /**
                 * Calls SigningInfos.
                 * @param request QuerySigningInfosRequest message or plain object
                 * @returns Promise
                 */
                public signingInfos(request: cosmos.slashing.v1beta1.IQuerySigningInfosRequest): Promise<cosmos.slashing.v1beta1.QuerySigningInfosResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.slashing.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.slashing.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.slashing.v1beta1.Query#signingInfo}.
                 * @param error Error, if any
                 * @param [response] QuerySigningInfoResponse
                 */
                type SigningInfoCallback = (error: (Error|null), response?: cosmos.slashing.v1beta1.QuerySigningInfoResponse) => void;

                /**
                 * Callback as used by {@link cosmos.slashing.v1beta1.Query#signingInfos}.
                 * @param error Error, if any
                 * @param [response] QuerySigningInfosResponse
                 */
                type SigningInfosCallback = (error: (Error|null), response?: cosmos.slashing.v1beta1.QuerySigningInfosResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.slashing.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.slashing.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySigningInfoRequest. */
            interface IQuerySigningInfoRequest {

                /** QuerySigningInfoRequest cons_address */
                cons_address?: (string|null);
            }

            /** Represents a QuerySigningInfoRequest. */
            class QuerySigningInfoRequest implements IQuerySigningInfoRequest {

                /**
                 * Constructs a new QuerySigningInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQuerySigningInfoRequest);

                /** QuerySigningInfoRequest cons_address. */
                public cons_address: string;

                /**
                 * Encodes the specified QuerySigningInfoRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoRequest.verify|verify} messages.
                 * @param message QuerySigningInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQuerySigningInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySigningInfoRequest message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoRequest.verify|verify} messages.
                 * @param message QuerySigningInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQuerySigningInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySigningInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QuerySigningInfoRequest;

                /**
                 * Decodes a QuerySigningInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySigningInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QuerySigningInfoRequest;

                /**
                 * Verifies a QuerySigningInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySigningInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySigningInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QuerySigningInfoRequest;

                /**
                 * Creates a plain object from a QuerySigningInfoRequest message. Also converts values to other types if specified.
                 * @param message QuerySigningInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QuerySigningInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySigningInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySigningInfoResponse. */
            interface IQuerySigningInfoResponse {

                /** QuerySigningInfoResponse val_signing_info */
                val_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);
            }

            /** Represents a QuerySigningInfoResponse. */
            class QuerySigningInfoResponse implements IQuerySigningInfoResponse {

                /**
                 * Constructs a new QuerySigningInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQuerySigningInfoResponse);

                /** QuerySigningInfoResponse val_signing_info. */
                public val_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);

                /**
                 * Encodes the specified QuerySigningInfoResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoResponse.verify|verify} messages.
                 * @param message QuerySigningInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQuerySigningInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySigningInfoResponse message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfoResponse.verify|verify} messages.
                 * @param message QuerySigningInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQuerySigningInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySigningInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QuerySigningInfoResponse;

                /**
                 * Decodes a QuerySigningInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySigningInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QuerySigningInfoResponse;

                /**
                 * Verifies a QuerySigningInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySigningInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySigningInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QuerySigningInfoResponse;

                /**
                 * Creates a plain object from a QuerySigningInfoResponse message. Also converts values to other types if specified.
                 * @param message QuerySigningInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QuerySigningInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySigningInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySigningInfosRequest. */
            interface IQuerySigningInfosRequest {

                /** QuerySigningInfosRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QuerySigningInfosRequest. */
            class QuerySigningInfosRequest implements IQuerySigningInfosRequest {

                /**
                 * Constructs a new QuerySigningInfosRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQuerySigningInfosRequest);

                /** QuerySigningInfosRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QuerySigningInfosRequest message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosRequest.verify|verify} messages.
                 * @param message QuerySigningInfosRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQuerySigningInfosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySigningInfosRequest message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosRequest.verify|verify} messages.
                 * @param message QuerySigningInfosRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQuerySigningInfosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfosRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySigningInfosRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QuerySigningInfosRequest;

                /**
                 * Decodes a QuerySigningInfosRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySigningInfosRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QuerySigningInfosRequest;

                /**
                 * Verifies a QuerySigningInfosRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySigningInfosRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySigningInfosRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QuerySigningInfosRequest;

                /**
                 * Creates a plain object from a QuerySigningInfosRequest message. Also converts values to other types if specified.
                 * @param message QuerySigningInfosRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QuerySigningInfosRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySigningInfosRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySigningInfosResponse. */
            interface IQuerySigningInfosResponse {

                /** QuerySigningInfosResponse info */
                info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo[]|null);

                /** QuerySigningInfosResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QuerySigningInfosResponse. */
            class QuerySigningInfosResponse implements IQuerySigningInfosResponse {

                /**
                 * Constructs a new QuerySigningInfosResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IQuerySigningInfosResponse);

                /** QuerySigningInfosResponse info. */
                public info: cosmos.slashing.v1beta1.IValidatorSigningInfo[];

                /** QuerySigningInfosResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QuerySigningInfosResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosResponse.verify|verify} messages.
                 * @param message QuerySigningInfosResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IQuerySigningInfosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySigningInfosResponse message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.QuerySigningInfosResponse.verify|verify} messages.
                 * @param message QuerySigningInfosResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IQuerySigningInfosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySigningInfosResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySigningInfosResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.QuerySigningInfosResponse;

                /**
                 * Decodes a QuerySigningInfosResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySigningInfosResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.QuerySigningInfosResponse;

                /**
                 * Verifies a QuerySigningInfosResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySigningInfosResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySigningInfosResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.QuerySigningInfosResponse;

                /**
                 * Creates a plain object from a QuerySigningInfosResponse message. Also converts values to other types if specified.
                 * @param message QuerySigningInfosResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.QuerySigningInfosResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySigningInfosResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.slashing.v1beta1.IParams|null);

                /** GenesisState signing_infos */
                signing_infos?: (cosmos.slashing.v1beta1.ISigningInfo[]|null);

                /** GenesisState missed_blocks */
                missed_blocks?: (cosmos.slashing.v1beta1.IValidatorMissedBlocks[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.slashing.v1beta1.IParams|null);

                /** GenesisState signing_infos. */
                public signing_infos: cosmos.slashing.v1beta1.ISigningInfo[];

                /** GenesisState missed_blocks. */
                public missed_blocks: cosmos.slashing.v1beta1.IValidatorMissedBlocks[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.slashing.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SigningInfo. */
            interface ISigningInfo {

                /** SigningInfo address */
                address?: (string|null);

                /** SigningInfo validator_signing_info */
                validator_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);
            }

            /** Represents a SigningInfo. */
            class SigningInfo implements ISigningInfo {

                /**
                 * Constructs a new SigningInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.ISigningInfo);

                /** SigningInfo address. */
                public address: string;

                /** SigningInfo validator_signing_info. */
                public validator_signing_info?: (cosmos.slashing.v1beta1.IValidatorSigningInfo|null);

                /**
                 * Encodes the specified SigningInfo message. Does not implicitly {@link cosmos.slashing.v1beta1.SigningInfo.verify|verify} messages.
                 * @param message SigningInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.ISigningInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SigningInfo message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.SigningInfo.verify|verify} messages.
                 * @param message SigningInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.ISigningInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SigningInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.SigningInfo;

                /**
                 * Decodes a SigningInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.SigningInfo;

                /**
                 * Verifies a SigningInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SigningInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SigningInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.SigningInfo;

                /**
                 * Creates a plain object from a SigningInfo message. Also converts values to other types if specified.
                 * @param message SigningInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.SigningInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SigningInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorMissedBlocks. */
            interface IValidatorMissedBlocks {

                /** ValidatorMissedBlocks address */
                address?: (string|null);

                /** ValidatorMissedBlocks missed_blocks */
                missed_blocks?: (cosmos.slashing.v1beta1.IMissedBlock[]|null);
            }

            /** Represents a ValidatorMissedBlocks. */
            class ValidatorMissedBlocks implements IValidatorMissedBlocks {

                /**
                 * Constructs a new ValidatorMissedBlocks.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IValidatorMissedBlocks);

                /** ValidatorMissedBlocks address. */
                public address: string;

                /** ValidatorMissedBlocks missed_blocks. */
                public missed_blocks: cosmos.slashing.v1beta1.IMissedBlock[];

                /**
                 * Encodes the specified ValidatorMissedBlocks message. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorMissedBlocks.verify|verify} messages.
                 * @param message ValidatorMissedBlocks message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IValidatorMissedBlocks, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorMissedBlocks message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorMissedBlocks.verify|verify} messages.
                 * @param message ValidatorMissedBlocks message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IValidatorMissedBlocks, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorMissedBlocks message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorMissedBlocks
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.ValidatorMissedBlocks;

                /**
                 * Decodes a ValidatorMissedBlocks message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorMissedBlocks
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.ValidatorMissedBlocks;

                /**
                 * Verifies a ValidatorMissedBlocks message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorMissedBlocks message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorMissedBlocks
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.ValidatorMissedBlocks;

                /**
                 * Creates a plain object from a ValidatorMissedBlocks message. Also converts values to other types if specified.
                 * @param message ValidatorMissedBlocks
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.ValidatorMissedBlocks, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorMissedBlocks to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MissedBlock. */
            interface IMissedBlock {

                /** MissedBlock index */
                index?: (Long|null);

                /** MissedBlock missed */
                missed?: (boolean|null);
            }

            /** Represents a MissedBlock. */
            class MissedBlock implements IMissedBlock {

                /**
                 * Constructs a new MissedBlock.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IMissedBlock);

                /** MissedBlock index. */
                public index: Long;

                /** MissedBlock missed. */
                public missed: boolean;

                /**
                 * Encodes the specified MissedBlock message. Does not implicitly {@link cosmos.slashing.v1beta1.MissedBlock.verify|verify} messages.
                 * @param message MissedBlock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IMissedBlock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MissedBlock message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.MissedBlock.verify|verify} messages.
                 * @param message MissedBlock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IMissedBlock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MissedBlock message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MissedBlock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.MissedBlock;

                /**
                 * Decodes a MissedBlock message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MissedBlock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.MissedBlock;

                /**
                 * Verifies a MissedBlock message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MissedBlock message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MissedBlock
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.MissedBlock;

                /**
                 * Creates a plain object from a MissedBlock message. Also converts values to other types if specified.
                 * @param message MissedBlock
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.MissedBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MissedBlock to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSigningInfo. */
            interface IValidatorSigningInfo {

                /** ValidatorSigningInfo address */
                address?: (string|null);

                /** ValidatorSigningInfo start_height */
                start_height?: (Long|null);

                /** ValidatorSigningInfo index_offset */
                index_offset?: (Long|null);

                /** ValidatorSigningInfo jailed_until */
                jailed_until?: (google.protobuf.ITimestamp|null);

                /** ValidatorSigningInfo tombstoned */
                tombstoned?: (boolean|null);

                /** ValidatorSigningInfo missed_blocks_counter */
                missed_blocks_counter?: (Long|null);
            }

            /** Represents a ValidatorSigningInfo. */
            class ValidatorSigningInfo implements IValidatorSigningInfo {

                /**
                 * Constructs a new ValidatorSigningInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IValidatorSigningInfo);

                /** ValidatorSigningInfo address. */
                public address: string;

                /** ValidatorSigningInfo start_height. */
                public start_height: Long;

                /** ValidatorSigningInfo index_offset. */
                public index_offset: Long;

                /** ValidatorSigningInfo jailed_until. */
                public jailed_until?: (google.protobuf.ITimestamp|null);

                /** ValidatorSigningInfo tombstoned. */
                public tombstoned: boolean;

                /** ValidatorSigningInfo missed_blocks_counter. */
                public missed_blocks_counter: Long;

                /**
                 * Encodes the specified ValidatorSigningInfo message. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorSigningInfo.verify|verify} messages.
                 * @param message ValidatorSigningInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IValidatorSigningInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSigningInfo message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.ValidatorSigningInfo.verify|verify} messages.
                 * @param message ValidatorSigningInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IValidatorSigningInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSigningInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.ValidatorSigningInfo;

                /**
                 * Decodes a ValidatorSigningInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSigningInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.ValidatorSigningInfo;

                /**
                 * Verifies a ValidatorSigningInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSigningInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSigningInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.ValidatorSigningInfo;

                /**
                 * Creates a plain object from a ValidatorSigningInfo message. Also converts values to other types if specified.
                 * @param message ValidatorSigningInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.ValidatorSigningInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSigningInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params signed_blocks_window */
                signed_blocks_window?: (Long|null);

                /** Params min_signed_per_window */
                min_signed_per_window?: (Uint8Array|null);

                /** Params downtime_jail_duration */
                downtime_jail_duration?: (google.protobuf.IDuration|null);

                /** Params slash_fraction_double_sign */
                slash_fraction_double_sign?: (Uint8Array|null);

                /** Params slash_fraction_downtime */
                slash_fraction_downtime?: (Uint8Array|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IParams);

                /** Params signed_blocks_window. */
                public signed_blocks_window: Long;

                /** Params min_signed_per_window. */
                public min_signed_per_window: Uint8Array;

                /** Params downtime_jail_duration. */
                public downtime_jail_duration?: (google.protobuf.IDuration|null);

                /** Params slash_fraction_double_sign. */
                public slash_fraction_double_sign: Uint8Array;

                /** Params slash_fraction_downtime. */
                public slash_fraction_downtime: Uint8Array;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.slashing.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Unjail.
                 * @param request MsgUnjail message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUnjailResponse
                 */
                public unjail(request: cosmos.slashing.v1beta1.IMsgUnjail, callback: cosmos.slashing.v1beta1.Msg.UnjailCallback): void;

                /**
                 * Calls Unjail.
                 * @param request MsgUnjail message or plain object
                 * @returns Promise
                 */
                public unjail(request: cosmos.slashing.v1beta1.IMsgUnjail): Promise<cosmos.slashing.v1beta1.MsgUnjailResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.slashing.v1beta1.Msg#unjail}.
                 * @param error Error, if any
                 * @param [response] MsgUnjailResponse
                 */
                type UnjailCallback = (error: (Error|null), response?: cosmos.slashing.v1beta1.MsgUnjailResponse) => void;
            }

            /** Properties of a MsgUnjail. */
            interface IMsgUnjail {

                /** MsgUnjail validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a MsgUnjail. */
            class MsgUnjail implements IMsgUnjail {

                /**
                 * Constructs a new MsgUnjail.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IMsgUnjail);

                /** MsgUnjail validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified MsgUnjail message. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjail.verify|verify} messages.
                 * @param message MsgUnjail message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IMsgUnjail, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUnjail message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjail.verify|verify} messages.
                 * @param message MsgUnjail message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IMsgUnjail, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnjail message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUnjail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.MsgUnjail;

                /**
                 * Decodes a MsgUnjail message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUnjail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.MsgUnjail;

                /**
                 * Verifies a MsgUnjail message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUnjail message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUnjail
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.MsgUnjail;

                /**
                 * Creates a plain object from a MsgUnjail message. Also converts values to other types if specified.
                 * @param message MsgUnjail
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.MsgUnjail, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUnjail to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUnjailResponse. */
            interface IMsgUnjailResponse {
            }

            /** Represents a MsgUnjailResponse. */
            class MsgUnjailResponse implements IMsgUnjailResponse {

                /**
                 * Constructs a new MsgUnjailResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.slashing.v1beta1.IMsgUnjailResponse);

                /**
                 * Encodes the specified MsgUnjailResponse message. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjailResponse.verify|verify} messages.
                 * @param message MsgUnjailResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.slashing.v1beta1.IMsgUnjailResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUnjailResponse message, length delimited. Does not implicitly {@link cosmos.slashing.v1beta1.MsgUnjailResponse.verify|verify} messages.
                 * @param message MsgUnjailResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.slashing.v1beta1.IMsgUnjailResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnjailResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUnjailResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.slashing.v1beta1.MsgUnjailResponse;

                /**
                 * Decodes a MsgUnjailResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUnjailResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.slashing.v1beta1.MsgUnjailResponse;

                /**
                 * Verifies a MsgUnjailResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUnjailResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUnjailResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.slashing.v1beta1.MsgUnjailResponse;

                /**
                 * Creates a plain object from a MsgUnjailResponse message. Also converts values to other types if specified.
                 * @param message MsgUnjailResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.slashing.v1beta1.MsgUnjailResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUnjailResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace staking. */
    namespace staking {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Validators.
                 * @param request QueryValidatorsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorsResponse
                 */
                public validators(request: cosmos.staking.v1beta1.IQueryValidatorsRequest, callback: cosmos.staking.v1beta1.Query.ValidatorsCallback): void;

                /**
                 * Calls Validators.
                 * @param request QueryValidatorsRequest message or plain object
                 * @returns Promise
                 */
                public validators(request: cosmos.staking.v1beta1.IQueryValidatorsRequest): Promise<cosmos.staking.v1beta1.QueryValidatorsResponse>;

                /**
                 * Calls Validator.
                 * @param request QueryValidatorRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorResponse
                 */
                public validator(request: cosmos.staking.v1beta1.IQueryValidatorRequest, callback: cosmos.staking.v1beta1.Query.ValidatorCallback): void;

                /**
                 * Calls Validator.
                 * @param request QueryValidatorRequest message or plain object
                 * @returns Promise
                 */
                public validator(request: cosmos.staking.v1beta1.IQueryValidatorRequest): Promise<cosmos.staking.v1beta1.QueryValidatorResponse>;

                /**
                 * Calls ValidatorDelegations.
                 * @param request QueryValidatorDelegationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorDelegationsResponse
                 */
                public validatorDelegations(request: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest, callback: cosmos.staking.v1beta1.Query.ValidatorDelegationsCallback): void;

                /**
                 * Calls ValidatorDelegations.
                 * @param request QueryValidatorDelegationsRequest message or plain object
                 * @returns Promise
                 */
                public validatorDelegations(request: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest): Promise<cosmos.staking.v1beta1.QueryValidatorDelegationsResponse>;

                /**
                 * Calls ValidatorUnbondingDelegations.
                 * @param request QueryValidatorUnbondingDelegationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValidatorUnbondingDelegationsResponse
                 */
                public validatorUnbondingDelegations(request: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest, callback: cosmos.staking.v1beta1.Query.ValidatorUnbondingDelegationsCallback): void;

                /**
                 * Calls ValidatorUnbondingDelegations.
                 * @param request QueryValidatorUnbondingDelegationsRequest message or plain object
                 * @returns Promise
                 */
                public validatorUnbondingDelegations(request: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest): Promise<cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse>;

                /**
                 * Calls Delegation.
                 * @param request QueryDelegationRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegationResponse
                 */
                public delegation(request: cosmos.staking.v1beta1.IQueryDelegationRequest, callback: cosmos.staking.v1beta1.Query.DelegationCallback): void;

                /**
                 * Calls Delegation.
                 * @param request QueryDelegationRequest message or plain object
                 * @returns Promise
                 */
                public delegation(request: cosmos.staking.v1beta1.IQueryDelegationRequest): Promise<cosmos.staking.v1beta1.QueryDelegationResponse>;

                /**
                 * Calls UnbondingDelegation.
                 * @param request QueryUnbondingDelegationRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryUnbondingDelegationResponse
                 */
                public unbondingDelegation(request: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest, callback: cosmos.staking.v1beta1.Query.UnbondingDelegationCallback): void;

                /**
                 * Calls UnbondingDelegation.
                 * @param request QueryUnbondingDelegationRequest message or plain object
                 * @returns Promise
                 */
                public unbondingDelegation(request: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest): Promise<cosmos.staking.v1beta1.QueryUnbondingDelegationResponse>;

                /**
                 * Calls DelegatorDelegations.
                 * @param request QueryDelegatorDelegationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorDelegationsResponse
                 */
                public delegatorDelegations(request: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest, callback: cosmos.staking.v1beta1.Query.DelegatorDelegationsCallback): void;

                /**
                 * Calls DelegatorDelegations.
                 * @param request QueryDelegatorDelegationsRequest message or plain object
                 * @returns Promise
                 */
                public delegatorDelegations(request: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest): Promise<cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse>;

                /**
                 * Calls DelegatorUnbondingDelegations.
                 * @param request QueryDelegatorUnbondingDelegationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorUnbondingDelegationsResponse
                 */
                public delegatorUnbondingDelegations(request: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest, callback: cosmos.staking.v1beta1.Query.DelegatorUnbondingDelegationsCallback): void;

                /**
                 * Calls DelegatorUnbondingDelegations.
                 * @param request QueryDelegatorUnbondingDelegationsRequest message or plain object
                 * @returns Promise
                 */
                public delegatorUnbondingDelegations(request: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest): Promise<cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse>;

                /**
                 * Calls Redelegations.
                 * @param request QueryRedelegationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryRedelegationsResponse
                 */
                public redelegations(request: cosmos.staking.v1beta1.IQueryRedelegationsRequest, callback: cosmos.staking.v1beta1.Query.RedelegationsCallback): void;

                /**
                 * Calls Redelegations.
                 * @param request QueryRedelegationsRequest message or plain object
                 * @returns Promise
                 */
                public redelegations(request: cosmos.staking.v1beta1.IQueryRedelegationsRequest): Promise<cosmos.staking.v1beta1.QueryRedelegationsResponse>;

                /**
                 * Calls DelegatorValidators.
                 * @param request QueryDelegatorValidatorsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorValidatorsResponse
                 */
                public delegatorValidators(request: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest, callback: cosmos.staking.v1beta1.Query.DelegatorValidatorsCallback): void;

                /**
                 * Calls DelegatorValidators.
                 * @param request QueryDelegatorValidatorsRequest message or plain object
                 * @returns Promise
                 */
                public delegatorValidators(request: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest): Promise<cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse>;

                /**
                 * Calls DelegatorValidator.
                 * @param request QueryDelegatorValidatorRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegatorValidatorResponse
                 */
                public delegatorValidator(request: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest, callback: cosmos.staking.v1beta1.Query.DelegatorValidatorCallback): void;

                /**
                 * Calls DelegatorValidator.
                 * @param request QueryDelegatorValidatorRequest message or plain object
                 * @returns Promise
                 */
                public delegatorValidator(request: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest): Promise<cosmos.staking.v1beta1.QueryDelegatorValidatorResponse>;

                /**
                 * Calls HistoricalInfo.
                 * @param request QueryHistoricalInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryHistoricalInfoResponse
                 */
                public historicalInfo(request: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest, callback: cosmos.staking.v1beta1.Query.HistoricalInfoCallback): void;

                /**
                 * Calls HistoricalInfo.
                 * @param request QueryHistoricalInfoRequest message or plain object
                 * @returns Promise
                 */
                public historicalInfo(request: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest): Promise<cosmos.staking.v1beta1.QueryHistoricalInfoResponse>;

                /**
                 * Calls Pool.
                 * @param request QueryPoolRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolResponse
                 */
                public pool(request: cosmos.staking.v1beta1.IQueryPoolRequest, callback: cosmos.staking.v1beta1.Query.PoolCallback): void;

                /**
                 * Calls Pool.
                 * @param request QueryPoolRequest message or plain object
                 * @returns Promise
                 */
                public pool(request: cosmos.staking.v1beta1.IQueryPoolRequest): Promise<cosmos.staking.v1beta1.QueryPoolResponse>;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: cosmos.staking.v1beta1.IQueryParamsRequest, callback: cosmos.staking.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: cosmos.staking.v1beta1.IQueryParamsRequest): Promise<cosmos.staking.v1beta1.QueryParamsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#validators}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorsResponse
                 */
                type ValidatorsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryValidatorsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#validator}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorResponse
                 */
                type ValidatorCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryValidatorResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#validatorDelegations}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorDelegationsResponse
                 */
                type ValidatorDelegationsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryValidatorDelegationsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#validatorUnbondingDelegations}.
                 * @param error Error, if any
                 * @param [response] QueryValidatorUnbondingDelegationsResponse
                 */
                type ValidatorUnbondingDelegationsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#delegation}.
                 * @param error Error, if any
                 * @param [response] QueryDelegationResponse
                 */
                type DelegationCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryDelegationResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#unbondingDelegation}.
                 * @param error Error, if any
                 * @param [response] QueryUnbondingDelegationResponse
                 */
                type UnbondingDelegationCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryUnbondingDelegationResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#delegatorDelegations}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorDelegationsResponse
                 */
                type DelegatorDelegationsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#delegatorUnbondingDelegations}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorUnbondingDelegationsResponse
                 */
                type DelegatorUnbondingDelegationsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#redelegations}.
                 * @param error Error, if any
                 * @param [response] QueryRedelegationsResponse
                 */
                type RedelegationsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryRedelegationsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#delegatorValidators}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorValidatorsResponse
                 */
                type DelegatorValidatorsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#delegatorValidator}.
                 * @param error Error, if any
                 * @param [response] QueryDelegatorValidatorResponse
                 */
                type DelegatorValidatorCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryDelegatorValidatorResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#historicalInfo}.
                 * @param error Error, if any
                 * @param [response] QueryHistoricalInfoResponse
                 */
                type HistoricalInfoCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryHistoricalInfoResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#pool}.
                 * @param error Error, if any
                 * @param [response] QueryPoolResponse
                 */
                type PoolCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryPoolResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.QueryParamsResponse) => void;
            }

            /** Properties of a QueryValidatorsRequest. */
            interface IQueryValidatorsRequest {

                /** QueryValidatorsRequest status */
                status?: (string|null);

                /** QueryValidatorsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorsRequest. */
            class QueryValidatorsRequest implements IQueryValidatorsRequest {

                /**
                 * Constructs a new QueryValidatorsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorsRequest);

                /** QueryValidatorsRequest status. */
                public status: string;

                /** QueryValidatorsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsRequest.verify|verify} messages.
                 * @param message QueryValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsRequest.verify|verify} messages.
                 * @param message QueryValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorsRequest;

                /**
                 * Decodes a QueryValidatorsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorsRequest;

                /**
                 * Verifies a QueryValidatorsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorsRequest;

                /**
                 * Creates a plain object from a QueryValidatorsRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorsResponse. */
            interface IQueryValidatorsResponse {

                /** QueryValidatorsResponse validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** QueryValidatorsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorsResponse. */
            class QueryValidatorsResponse implements IQueryValidatorsResponse {

                /**
                 * Constructs a new QueryValidatorsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorsResponse);

                /** QueryValidatorsResponse validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** QueryValidatorsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsResponse.verify|verify} messages.
                 * @param message QueryValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorsResponse.verify|verify} messages.
                 * @param message QueryValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorsResponse;

                /**
                 * Decodes a QueryValidatorsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorsResponse;

                /**
                 * Verifies a QueryValidatorsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorsResponse;

                /**
                 * Creates a plain object from a QueryValidatorsResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorRequest. */
            interface IQueryValidatorRequest {

                /** QueryValidatorRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryValidatorRequest. */
            class QueryValidatorRequest implements IQueryValidatorRequest {

                /**
                 * Constructs a new QueryValidatorRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorRequest);

                /** QueryValidatorRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryValidatorRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorRequest.verify|verify} messages.
                 * @param message QueryValidatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorRequest.verify|verify} messages.
                 * @param message QueryValidatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorRequest;

                /**
                 * Decodes a QueryValidatorRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorRequest;

                /**
                 * Verifies a QueryValidatorRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorRequest;

                /**
                 * Creates a plain object from a QueryValidatorRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorResponse. */
            interface IQueryValidatorResponse {

                /** QueryValidatorResponse validator */
                validator?: (cosmos.staking.v1beta1.IValidator|null);
            }

            /** Represents a QueryValidatorResponse. */
            class QueryValidatorResponse implements IQueryValidatorResponse {

                /**
                 * Constructs a new QueryValidatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorResponse);

                /** QueryValidatorResponse validator. */
                public validator?: (cosmos.staking.v1beta1.IValidator|null);

                /**
                 * Encodes the specified QueryValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorResponse.verify|verify} messages.
                 * @param message QueryValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorResponse.verify|verify} messages.
                 * @param message QueryValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorResponse;

                /**
                 * Decodes a QueryValidatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorResponse;

                /**
                 * Verifies a QueryValidatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorResponse;

                /**
                 * Creates a plain object from a QueryValidatorResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorDelegationsRequest. */
            interface IQueryValidatorDelegationsRequest {

                /** QueryValidatorDelegationsRequest validator_addr */
                validator_addr?: (string|null);

                /** QueryValidatorDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorDelegationsRequest. */
            class QueryValidatorDelegationsRequest implements IQueryValidatorDelegationsRequest {

                /**
                 * Constructs a new QueryValidatorDelegationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest);

                /** QueryValidatorDelegationsRequest validator_addr. */
                public validator_addr: string;

                /** QueryValidatorDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.verify|verify} messages.
                 * @param message QueryValidatorDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorDelegationsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.verify|verify} messages.
                 * @param message QueryValidatorDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorDelegationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorDelegationsRequest;

                /**
                 * Decodes a QueryValidatorDelegationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorDelegationsRequest;

                /**
                 * Verifies a QueryValidatorDelegationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorDelegationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorDelegationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorDelegationsRequest;

                /**
                 * Creates a plain object from a QueryValidatorDelegationsRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorDelegationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorDelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorDelegationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorDelegationsResponse. */
            interface IQueryValidatorDelegationsResponse {

                /** QueryValidatorDelegationsResponse delegation_responses */
                delegation_responses?: (cosmos.staking.v1beta1.IDelegationResponse[]|null);

                /** QueryValidatorDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorDelegationsResponse. */
            class QueryValidatorDelegationsResponse implements IQueryValidatorDelegationsResponse {

                /**
                 * Constructs a new QueryValidatorDelegationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorDelegationsResponse);

                /** QueryValidatorDelegationsResponse delegation_responses. */
                public delegation_responses: cosmos.staking.v1beta1.IDelegationResponse[];

                /** QueryValidatorDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.verify|verify} messages.
                 * @param message QueryValidatorDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorDelegationsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.verify|verify} messages.
                 * @param message QueryValidatorDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorDelegationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorDelegationsResponse;

                /**
                 * Decodes a QueryValidatorDelegationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorDelegationsResponse;

                /**
                 * Verifies a QueryValidatorDelegationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorDelegationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorDelegationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorDelegationsResponse;

                /**
                 * Creates a plain object from a QueryValidatorDelegationsResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorDelegationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorDelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorDelegationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorUnbondingDelegationsRequest. */
            interface IQueryValidatorUnbondingDelegationsRequest {

                /** QueryValidatorUnbondingDelegationsRequest validator_addr */
                validator_addr?: (string|null);

                /** QueryValidatorUnbondingDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryValidatorUnbondingDelegationsRequest. */
            class QueryValidatorUnbondingDelegationsRequest implements IQueryValidatorUnbondingDelegationsRequest {

                /**
                 * Constructs a new QueryValidatorUnbondingDelegationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest);

                /** QueryValidatorUnbondingDelegationsRequest validator_addr. */
                public validator_addr: string;

                /** QueryValidatorUnbondingDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param message QueryValidatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param message QueryValidatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest;

                /**
                 * Verifies a QueryValidatorUnbondingDelegationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorUnbondingDelegationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorUnbondingDelegationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest;

                /**
                 * Creates a plain object from a QueryValidatorUnbondingDelegationsRequest message. Also converts values to other types if specified.
                 * @param message QueryValidatorUnbondingDelegationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorUnbondingDelegationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValidatorUnbondingDelegationsResponse. */
            interface IQueryValidatorUnbondingDelegationsResponse {

                /** QueryValidatorUnbondingDelegationsResponse unbonding_responses */
                unbonding_responses?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** QueryValidatorUnbondingDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryValidatorUnbondingDelegationsResponse. */
            class QueryValidatorUnbondingDelegationsResponse implements IQueryValidatorUnbondingDelegationsResponse {

                /**
                 * Constructs a new QueryValidatorUnbondingDelegationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsResponse);

                /** QueryValidatorUnbondingDelegationsResponse unbonding_responses. */
                public unbonding_responses: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** QueryValidatorUnbondingDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param message QueryValidatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValidatorUnbondingDelegationsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param message QueryValidatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryValidatorUnbondingDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValidatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse;

                /**
                 * Decodes a QueryValidatorUnbondingDelegationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValidatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse;

                /**
                 * Verifies a QueryValidatorUnbondingDelegationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValidatorUnbondingDelegationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValidatorUnbondingDelegationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse;

                /**
                 * Creates a plain object from a QueryValidatorUnbondingDelegationsResponse message. Also converts values to other types if specified.
                 * @param message QueryValidatorUnbondingDelegationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValidatorUnbondingDelegationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationRequest. */
            interface IQueryDelegationRequest {

                /** QueryDelegationRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegationRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryDelegationRequest. */
            class QueryDelegationRequest implements IQueryDelegationRequest {

                /**
                 * Constructs a new QueryDelegationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegationRequest);

                /** QueryDelegationRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegationRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryDelegationRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationRequest.verify|verify} messages.
                 * @param message QueryDelegationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationRequest.verify|verify} messages.
                 * @param message QueryDelegationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegationRequest;

                /**
                 * Decodes a QueryDelegationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegationRequest;

                /**
                 * Verifies a QueryDelegationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegationRequest;

                /**
                 * Creates a plain object from a QueryDelegationRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegationResponse. */
            interface IQueryDelegationResponse {

                /** QueryDelegationResponse delegation_response */
                delegation_response?: (cosmos.staking.v1beta1.IDelegationResponse|null);
            }

            /** Represents a QueryDelegationResponse. */
            class QueryDelegationResponse implements IQueryDelegationResponse {

                /**
                 * Constructs a new QueryDelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegationResponse);

                /** QueryDelegationResponse delegation_response. */
                public delegation_response?: (cosmos.staking.v1beta1.IDelegationResponse|null);

                /**
                 * Encodes the specified QueryDelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationResponse.verify|verify} messages.
                 * @param message QueryDelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegationResponse.verify|verify} messages.
                 * @param message QueryDelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegationResponse;

                /**
                 * Decodes a QueryDelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegationResponse;

                /**
                 * Verifies a QueryDelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegationResponse;

                /**
                 * Creates a plain object from a QueryDelegationResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryUnbondingDelegationRequest. */
            interface IQueryUnbondingDelegationRequest {

                /** QueryUnbondingDelegationRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryUnbondingDelegationRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryUnbondingDelegationRequest. */
            class QueryUnbondingDelegationRequest implements IQueryUnbondingDelegationRequest {

                /**
                 * Constructs a new QueryUnbondingDelegationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest);

                /** QueryUnbondingDelegationRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryUnbondingDelegationRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryUnbondingDelegationRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.verify|verify} messages.
                 * @param message QueryUnbondingDelegationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryUnbondingDelegationRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.verify|verify} messages.
                 * @param message QueryUnbondingDelegationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryUnbondingDelegationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUnbondingDelegationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryUnbondingDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryUnbondingDelegationRequest;

                /**
                 * Decodes a QueryUnbondingDelegationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryUnbondingDelegationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryUnbondingDelegationRequest;

                /**
                 * Verifies a QueryUnbondingDelegationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryUnbondingDelegationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryUnbondingDelegationRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryUnbondingDelegationRequest;

                /**
                 * Creates a plain object from a QueryUnbondingDelegationRequest message. Also converts values to other types if specified.
                 * @param message QueryUnbondingDelegationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryUnbondingDelegationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryUnbondingDelegationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryUnbondingDelegationResponse. */
            interface IQueryUnbondingDelegationResponse {

                /** QueryUnbondingDelegationResponse unbond */
                unbond?: (cosmos.staking.v1beta1.IUnbondingDelegation|null);
            }

            /** Represents a QueryUnbondingDelegationResponse. */
            class QueryUnbondingDelegationResponse implements IQueryUnbondingDelegationResponse {

                /**
                 * Constructs a new QueryUnbondingDelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryUnbondingDelegationResponse);

                /** QueryUnbondingDelegationResponse unbond. */
                public unbond?: (cosmos.staking.v1beta1.IUnbondingDelegation|null);

                /**
                 * Encodes the specified QueryUnbondingDelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.verify|verify} messages.
                 * @param message QueryUnbondingDelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryUnbondingDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryUnbondingDelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.verify|verify} messages.
                 * @param message QueryUnbondingDelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryUnbondingDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUnbondingDelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryUnbondingDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryUnbondingDelegationResponse;

                /**
                 * Decodes a QueryUnbondingDelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryUnbondingDelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryUnbondingDelegationResponse;

                /**
                 * Verifies a QueryUnbondingDelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryUnbondingDelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryUnbondingDelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryUnbondingDelegationResponse;

                /**
                 * Creates a plain object from a QueryUnbondingDelegationResponse message. Also converts values to other types if specified.
                 * @param message QueryUnbondingDelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryUnbondingDelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryUnbondingDelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorDelegationsRequest. */
            interface IQueryDelegatorDelegationsRequest {

                /** QueryDelegatorDelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorDelegationsRequest. */
            class QueryDelegatorDelegationsRequest implements IQueryDelegatorDelegationsRequest {

                /**
                 * Constructs a new QueryDelegatorDelegationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest);

                /** QueryDelegatorDelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.verify|verify} messages.
                 * @param message QueryDelegatorDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorDelegationsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.verify|verify} messages.
                 * @param message QueryDelegatorDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorDelegationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest;

                /**
                 * Decodes a QueryDelegatorDelegationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest;

                /**
                 * Verifies a QueryDelegatorDelegationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorDelegationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorDelegationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest;

                /**
                 * Creates a plain object from a QueryDelegatorDelegationsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorDelegationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorDelegationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorDelegationsResponse. */
            interface IQueryDelegatorDelegationsResponse {

                /** QueryDelegatorDelegationsResponse delegation_responses */
                delegation_responses?: (cosmos.staking.v1beta1.IDelegationResponse[]|null);

                /** QueryDelegatorDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorDelegationsResponse. */
            class QueryDelegatorDelegationsResponse implements IQueryDelegatorDelegationsResponse {

                /**
                 * Constructs a new QueryDelegatorDelegationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorDelegationsResponse);

                /** QueryDelegatorDelegationsResponse delegation_responses. */
                public delegation_responses: cosmos.staking.v1beta1.IDelegationResponse[];

                /** QueryDelegatorDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.verify|verify} messages.
                 * @param message QueryDelegatorDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorDelegationsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.verify|verify} messages.
                 * @param message QueryDelegatorDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorDelegationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse;

                /**
                 * Decodes a QueryDelegatorDelegationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse;

                /**
                 * Verifies a QueryDelegatorDelegationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorDelegationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorDelegationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse;

                /**
                 * Creates a plain object from a QueryDelegatorDelegationsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorDelegationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorDelegationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorUnbondingDelegationsRequest. */
            interface IQueryDelegatorUnbondingDelegationsRequest {

                /** QueryDelegatorUnbondingDelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorUnbondingDelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorUnbondingDelegationsRequest. */
            class QueryDelegatorUnbondingDelegationsRequest implements IQueryDelegatorUnbondingDelegationsRequest {

                /**
                 * Constructs a new QueryDelegatorUnbondingDelegationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest);

                /** QueryDelegatorUnbondingDelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorUnbondingDelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param message QueryDelegatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.verify|verify} messages.
                 * @param message QueryDelegatorUnbondingDelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorUnbondingDelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest;

                /**
                 * Verifies a QueryDelegatorUnbondingDelegationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorUnbondingDelegationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorUnbondingDelegationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest;

                /**
                 * Creates a plain object from a QueryDelegatorUnbondingDelegationsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorUnbondingDelegationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorUnbondingDelegationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorUnbondingDelegationsResponse. */
            interface IQueryDelegatorUnbondingDelegationsResponse {

                /** QueryDelegatorUnbondingDelegationsResponse unbonding_responses */
                unbonding_responses?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** QueryDelegatorUnbondingDelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorUnbondingDelegationsResponse. */
            class QueryDelegatorUnbondingDelegationsResponse implements IQueryDelegatorUnbondingDelegationsResponse {

                /**
                 * Constructs a new QueryDelegatorUnbondingDelegationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsResponse);

                /** QueryDelegatorUnbondingDelegationsResponse unbonding_responses. */
                public unbonding_responses: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** QueryDelegatorUnbondingDelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param message QueryDelegatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorUnbondingDelegationsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.verify|verify} messages.
                 * @param message QueryDelegatorUnbondingDelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorUnbondingDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse;

                /**
                 * Decodes a QueryDelegatorUnbondingDelegationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorUnbondingDelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse;

                /**
                 * Verifies a QueryDelegatorUnbondingDelegationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorUnbondingDelegationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorUnbondingDelegationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse;

                /**
                 * Creates a plain object from a QueryDelegatorUnbondingDelegationsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorUnbondingDelegationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorUnbondingDelegationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryRedelegationsRequest. */
            interface IQueryRedelegationsRequest {

                /** QueryRedelegationsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryRedelegationsRequest src_validator_addr */
                src_validator_addr?: (string|null);

                /** QueryRedelegationsRequest dst_validator_addr */
                dst_validator_addr?: (string|null);

                /** QueryRedelegationsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryRedelegationsRequest. */
            class QueryRedelegationsRequest implements IQueryRedelegationsRequest {

                /**
                 * Constructs a new QueryRedelegationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryRedelegationsRequest);

                /** QueryRedelegationsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryRedelegationsRequest src_validator_addr. */
                public src_validator_addr: string;

                /** QueryRedelegationsRequest dst_validator_addr. */
                public dst_validator_addr: string;

                /** QueryRedelegationsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryRedelegationsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsRequest.verify|verify} messages.
                 * @param message QueryRedelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryRedelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryRedelegationsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsRequest.verify|verify} messages.
                 * @param message QueryRedelegationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryRedelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRedelegationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryRedelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryRedelegationsRequest;

                /**
                 * Decodes a QueryRedelegationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryRedelegationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryRedelegationsRequest;

                /**
                 * Verifies a QueryRedelegationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryRedelegationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryRedelegationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryRedelegationsRequest;

                /**
                 * Creates a plain object from a QueryRedelegationsRequest message. Also converts values to other types if specified.
                 * @param message QueryRedelegationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryRedelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryRedelegationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryRedelegationsResponse. */
            interface IQueryRedelegationsResponse {

                /** QueryRedelegationsResponse redelegation_responses */
                redelegation_responses?: (cosmos.staking.v1beta1.IRedelegationResponse[]|null);

                /** QueryRedelegationsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryRedelegationsResponse. */
            class QueryRedelegationsResponse implements IQueryRedelegationsResponse {

                /**
                 * Constructs a new QueryRedelegationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryRedelegationsResponse);

                /** QueryRedelegationsResponse redelegation_responses. */
                public redelegation_responses: cosmos.staking.v1beta1.IRedelegationResponse[];

                /** QueryRedelegationsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryRedelegationsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsResponse.verify|verify} messages.
                 * @param message QueryRedelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryRedelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryRedelegationsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryRedelegationsResponse.verify|verify} messages.
                 * @param message QueryRedelegationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryRedelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryRedelegationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryRedelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryRedelegationsResponse;

                /**
                 * Decodes a QueryRedelegationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryRedelegationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryRedelegationsResponse;

                /**
                 * Verifies a QueryRedelegationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryRedelegationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryRedelegationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryRedelegationsResponse;

                /**
                 * Creates a plain object from a QueryRedelegationsResponse message. Also converts values to other types if specified.
                 * @param message QueryRedelegationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryRedelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryRedelegationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorsRequest. */
            interface IQueryDelegatorValidatorsRequest {

                /** QueryDelegatorValidatorsRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorValidatorsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryDelegatorValidatorsRequest. */
            class QueryDelegatorValidatorsRequest implements IQueryDelegatorValidatorsRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest);

                /** QueryDelegatorValidatorsRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorValidatorsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Decodes a QueryDelegatorValidatorsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Verifies a QueryDelegatorValidatorsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorsRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorsResponse. */
            interface IQueryDelegatorValidatorsResponse {

                /** QueryDelegatorValidatorsResponse validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** QueryDelegatorValidatorsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryDelegatorValidatorsResponse. */
            class QueryDelegatorValidatorsResponse implements IQueryDelegatorValidatorsResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorValidatorsResponse);

                /** QueryDelegatorValidatorsResponse validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** QueryDelegatorValidatorsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Decodes a QueryDelegatorValidatorsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Verifies a QueryDelegatorValidatorsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorsResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorRequest. */
            interface IQueryDelegatorValidatorRequest {

                /** QueryDelegatorValidatorRequest delegator_addr */
                delegator_addr?: (string|null);

                /** QueryDelegatorValidatorRequest validator_addr */
                validator_addr?: (string|null);
            }

            /** Represents a QueryDelegatorValidatorRequest. */
            class QueryDelegatorValidatorRequest implements IQueryDelegatorValidatorRequest {

                /**
                 * Constructs a new QueryDelegatorValidatorRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest);

                /** QueryDelegatorValidatorRequest delegator_addr. */
                public delegator_addr: string;

                /** QueryDelegatorValidatorRequest validator_addr. */
                public validator_addr: string;

                /**
                 * Encodes the specified QueryDelegatorValidatorRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.verify|verify} messages.
                 * @param message QueryDelegatorValidatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorRequest;

                /**
                 * Decodes a QueryDelegatorValidatorRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorValidatorRequest;

                /**
                 * Verifies a QueryDelegatorValidatorRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorValidatorRequest;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorRequest message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorValidatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegatorValidatorResponse. */
            interface IQueryDelegatorValidatorResponse {

                /** QueryDelegatorValidatorResponse validator */
                validator?: (cosmos.staking.v1beta1.IValidator|null);
            }

            /** Represents a QueryDelegatorValidatorResponse. */
            class QueryDelegatorValidatorResponse implements IQueryDelegatorValidatorResponse {

                /**
                 * Constructs a new QueryDelegatorValidatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryDelegatorValidatorResponse);

                /** QueryDelegatorValidatorResponse validator. */
                public validator?: (cosmos.staking.v1beta1.IValidator|null);

                /**
                 * Encodes the specified QueryDelegatorValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegatorValidatorResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.verify|verify} messages.
                 * @param message QueryDelegatorValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryDelegatorValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegatorValidatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegatorValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryDelegatorValidatorResponse;

                /**
                 * Decodes a QueryDelegatorValidatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegatorValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryDelegatorValidatorResponse;

                /**
                 * Verifies a QueryDelegatorValidatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegatorValidatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegatorValidatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryDelegatorValidatorResponse;

                /**
                 * Creates a plain object from a QueryDelegatorValidatorResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegatorValidatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryDelegatorValidatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegatorValidatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalInfoRequest. */
            interface IQueryHistoricalInfoRequest {

                /** QueryHistoricalInfoRequest height */
                height?: (Long|null);
            }

            /** Represents a QueryHistoricalInfoRequest. */
            class QueryHistoricalInfoRequest implements IQueryHistoricalInfoRequest {

                /**
                 * Constructs a new QueryHistoricalInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest);

                /** QueryHistoricalInfoRequest height. */
                public height: Long;

                /**
                 * Encodes the specified QueryHistoricalInfoRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoRequest.verify|verify} messages.
                 * @param message QueryHistoricalInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalInfoRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoRequest.verify|verify} messages.
                 * @param message QueryHistoricalInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryHistoricalInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryHistoricalInfoRequest;

                /**
                 * Decodes a QueryHistoricalInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryHistoricalInfoRequest;

                /**
                 * Verifies a QueryHistoricalInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryHistoricalInfoRequest;

                /**
                 * Creates a plain object from a QueryHistoricalInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryHistoricalInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryHistoricalInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalInfoResponse. */
            interface IQueryHistoricalInfoResponse {

                /** QueryHistoricalInfoResponse hist */
                hist?: (cosmos.staking.v1beta1.IHistoricalInfo|null);
            }

            /** Represents a QueryHistoricalInfoResponse. */
            class QueryHistoricalInfoResponse implements IQueryHistoricalInfoResponse {

                /**
                 * Constructs a new QueryHistoricalInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryHistoricalInfoResponse);

                /** QueryHistoricalInfoResponse hist. */
                public hist?: (cosmos.staking.v1beta1.IHistoricalInfo|null);

                /**
                 * Encodes the specified QueryHistoricalInfoResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoResponse.verify|verify} messages.
                 * @param message QueryHistoricalInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryHistoricalInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalInfoResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryHistoricalInfoResponse.verify|verify} messages.
                 * @param message QueryHistoricalInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryHistoricalInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryHistoricalInfoResponse;

                /**
                 * Decodes a QueryHistoricalInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryHistoricalInfoResponse;

                /**
                 * Verifies a QueryHistoricalInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryHistoricalInfoResponse;

                /**
                 * Creates a plain object from a QueryHistoricalInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryHistoricalInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryHistoricalInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolRequest. */
            interface IQueryPoolRequest {
            }

            /** Represents a QueryPoolRequest. */
            class QueryPoolRequest implements IQueryPoolRequest {

                /**
                 * Constructs a new QueryPoolRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryPoolRequest);

                /**
                 * Encodes the specified QueryPoolRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolRequest.verify|verify} messages.
                 * @param message QueryPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolRequest.verify|verify} messages.
                 * @param message QueryPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryPoolRequest;

                /**
                 * Decodes a QueryPoolRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryPoolRequest;

                /**
                 * Verifies a QueryPoolRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryPoolRequest;

                /**
                 * Creates a plain object from a QueryPoolRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryPoolRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolResponse. */
            interface IQueryPoolResponse {

                /** QueryPoolResponse pool */
                pool?: (cosmos.staking.v1beta1.IPool|null);
            }

            /** Represents a QueryPoolResponse. */
            class QueryPoolResponse implements IQueryPoolResponse {

                /**
                 * Constructs a new QueryPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryPoolResponse);

                /** QueryPoolResponse pool. */
                public pool?: (cosmos.staking.v1beta1.IPool|null);

                /**
                 * Encodes the specified QueryPoolResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolResponse.verify|verify} messages.
                 * @param message QueryPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryPoolResponse.verify|verify} messages.
                 * @param message QueryPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryPoolResponse;

                /**
                 * Decodes a QueryPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryPoolResponse;

                /**
                 * Verifies a QueryPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryPoolResponse;

                /**
                 * Creates a plain object from a QueryPoolResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (cosmos.staking.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (cosmos.staking.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (cosmos.staking.v1beta1.IParams|null);

                /** GenesisState last_total_power */
                last_total_power?: (Uint8Array|null);

                /** GenesisState last_validator_powers */
                last_validator_powers?: (cosmos.staking.v1beta1.ILastValidatorPower[]|null);

                /** GenesisState validators */
                validators?: (cosmos.staking.v1beta1.IValidator[]|null);

                /** GenesisState delegations */
                delegations?: (cosmos.staking.v1beta1.IDelegation[]|null);

                /** GenesisState unbonding_delegations */
                unbonding_delegations?: (cosmos.staking.v1beta1.IUnbondingDelegation[]|null);

                /** GenesisState redelegations */
                redelegations?: (cosmos.staking.v1beta1.IRedelegation[]|null);

                /** GenesisState exported */
                exported?: (boolean|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (cosmos.staking.v1beta1.IParams|null);

                /** GenesisState last_total_power. */
                public last_total_power: Uint8Array;

                /** GenesisState last_validator_powers. */
                public last_validator_powers: cosmos.staking.v1beta1.ILastValidatorPower[];

                /** GenesisState validators. */
                public validators: cosmos.staking.v1beta1.IValidator[];

                /** GenesisState delegations. */
                public delegations: cosmos.staking.v1beta1.IDelegation[];

                /** GenesisState unbonding_delegations. */
                public unbonding_delegations: cosmos.staking.v1beta1.IUnbondingDelegation[];

                /** GenesisState redelegations. */
                public redelegations: cosmos.staking.v1beta1.IRedelegation[];

                /** GenesisState exported. */
                public exported: boolean;

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.staking.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LastValidatorPower. */
            interface ILastValidatorPower {

                /** LastValidatorPower address */
                address?: (string|null);

                /** LastValidatorPower power */
                power?: (Long|null);
            }

            /** Represents a LastValidatorPower. */
            class LastValidatorPower implements ILastValidatorPower {

                /**
                 * Constructs a new LastValidatorPower.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.ILastValidatorPower);

                /** LastValidatorPower address. */
                public address: string;

                /** LastValidatorPower power. */
                public power: Long;

                /**
                 * Encodes the specified LastValidatorPower message. Does not implicitly {@link cosmos.staking.v1beta1.LastValidatorPower.verify|verify} messages.
                 * @param message LastValidatorPower message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.ILastValidatorPower, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LastValidatorPower message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.LastValidatorPower.verify|verify} messages.
                 * @param message LastValidatorPower message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.ILastValidatorPower, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LastValidatorPower message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LastValidatorPower
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.LastValidatorPower;

                /**
                 * Decodes a LastValidatorPower message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LastValidatorPower
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.LastValidatorPower;

                /**
                 * Verifies a LastValidatorPower message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LastValidatorPower message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LastValidatorPower
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.LastValidatorPower;

                /**
                 * Creates a plain object from a LastValidatorPower message. Also converts values to other types if specified.
                 * @param message LastValidatorPower
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.LastValidatorPower, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LastValidatorPower to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a HistoricalInfo. */
            interface IHistoricalInfo {

                /** HistoricalInfo header */
                header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset */
                valset?: (cosmos.staking.v1beta1.IValidator[]|null);
            }

            /** Represents a HistoricalInfo. */
            class HistoricalInfo implements IHistoricalInfo {

                /**
                 * Constructs a new HistoricalInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IHistoricalInfo);

                /** HistoricalInfo header. */
                public header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset. */
                public valset: cosmos.staking.v1beta1.IValidator[];

                /**
                 * Encodes the specified HistoricalInfo message. Does not implicitly {@link cosmos.staking.v1beta1.HistoricalInfo.verify|verify} messages.
                 * @param message HistoricalInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IHistoricalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HistoricalInfo message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.HistoricalInfo.verify|verify} messages.
                 * @param message HistoricalInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IHistoricalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HistoricalInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HistoricalInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Decodes a HistoricalInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HistoricalInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Verifies a HistoricalInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HistoricalInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HistoricalInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Creates a plain object from a HistoricalInfo message. Also converts values to other types if specified.
                 * @param message HistoricalInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.HistoricalInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HistoricalInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommissionRates. */
            interface ICommissionRates {

                /** CommissionRates rate */
                rate?: (string|null);

                /** CommissionRates max_rate */
                max_rate?: (string|null);

                /** CommissionRates max_change_rate */
                max_change_rate?: (string|null);
            }

            /** Represents a CommissionRates. */
            class CommissionRates implements ICommissionRates {

                /**
                 * Constructs a new CommissionRates.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.ICommissionRates);

                /** CommissionRates rate. */
                public rate: string;

                /** CommissionRates max_rate. */
                public max_rate: string;

                /** CommissionRates max_change_rate. */
                public max_change_rate: string;

                /**
                 * Encodes the specified CommissionRates message. Does not implicitly {@link cosmos.staking.v1beta1.CommissionRates.verify|verify} messages.
                 * @param message CommissionRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.ICommissionRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommissionRates message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.CommissionRates.verify|verify} messages.
                 * @param message CommissionRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.ICommissionRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommissionRates message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommissionRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Decodes a CommissionRates message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommissionRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Verifies a CommissionRates message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommissionRates message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommissionRates
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Creates a plain object from a CommissionRates message. Also converts values to other types if specified.
                 * @param message CommissionRates
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.CommissionRates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommissionRates to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Commission. */
            interface ICommission {

                /** Commission commission_rates */
                commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time */
                update_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Commission. */
            class Commission implements ICommission {

                /**
                 * Constructs a new Commission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.ICommission);

                /** Commission commission_rates. */
                public commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time. */
                public update_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Commission message. Does not implicitly {@link cosmos.staking.v1beta1.Commission.verify|verify} messages.
                 * @param message Commission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.ICommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Commission message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Commission.verify|verify} messages.
                 * @param message Commission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.ICommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Commission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Commission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Commission;

                /**
                 * Decodes a Commission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Commission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Commission;

                /**
                 * Verifies a Commission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Commission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Commission
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Commission;

                /**
                 * Creates a plain object from a Commission message. Also converts values to other types if specified.
                 * @param message Commission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Commission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Commission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Description. */
            interface IDescription {

                /** Description moniker */
                moniker?: (string|null);

                /** Description identity */
                identity?: (string|null);

                /** Description website */
                website?: (string|null);

                /** Description security_contact */
                security_contact?: (string|null);

                /** Description details */
                details?: (string|null);
            }

            /** Represents a Description. */
            class Description implements IDescription {

                /**
                 * Constructs a new Description.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDescription);

                /** Description moniker. */
                public moniker: string;

                /** Description identity. */
                public identity: string;

                /** Description website. */
                public website: string;

                /** Description security_contact. */
                public security_contact: string;

                /** Description details. */
                public details: string;

                /**
                 * Encodes the specified Description message. Does not implicitly {@link cosmos.staking.v1beta1.Description.verify|verify} messages.
                 * @param message Description message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDescription, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Description message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Description.verify|verify} messages.
                 * @param message Description message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDescription, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Description message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Description
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Description;

                /**
                 * Decodes a Description message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Description
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Description;

                /**
                 * Verifies a Description message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Description message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Description
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Description;

                /**
                 * Creates a plain object from a Description message. Also converts values to other types if specified.
                 * @param message Description
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Description, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Description to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Validator. */
            interface IValidator {

                /** Validator operator_address */
                operator_address?: (string|null);

                /** Validator consensus_pubkey */
                consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed */
                jailed?: (boolean|null);

                /** Validator status */
                status?: (cosmos.staking.v1beta1.BondStatus|null);

                /** Validator tokens */
                tokens?: (string|null);

                /** Validator delegator_shares */
                delegator_shares?: (string|null);

                /** Validator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height */
                unbonding_height?: (Long|null);

                /** Validator unbonding_time */
                unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission */
                commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation */
                min_self_delegation?: (string|null);
            }

            /** Represents a Validator. */
            class Validator implements IValidator {

                /**
                 * Constructs a new Validator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IValidator);

                /** Validator operator_address. */
                public operator_address: string;

                /** Validator consensus_pubkey. */
                public consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed. */
                public jailed: boolean;

                /** Validator status. */
                public status: cosmos.staking.v1beta1.BondStatus;

                /** Validator tokens. */
                public tokens: string;

                /** Validator delegator_shares. */
                public delegator_shares: string;

                /** Validator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height. */
                public unbonding_height: Long;

                /** Validator unbonding_time. */
                public unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission. */
                public commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation. */
                public min_self_delegation: string;

                /**
                 * Encodes the specified Validator message. Does not implicitly {@link cosmos.staking.v1beta1.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Validator message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Validator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Validator;

                /**
                 * Decodes a Validator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Validator;

                /**
                 * Verifies a Validator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Validator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Validator
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Validator;

                /**
                 * Creates a plain object from a Validator message. Also converts values to other types if specified.
                 * @param message Validator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Validator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** BondStatus enum. */
            enum BondStatus {
                BOND_STATUS_UNSPECIFIED = 0,
                BOND_STATUS_UNBONDED = 1,
                BOND_STATUS_UNBONDING = 2,
                BOND_STATUS_BONDED = 3
            }

            /** Properties of a ValAddresses. */
            interface IValAddresses {

                /** ValAddresses addresses */
                addresses?: (string[]|null);
            }

            /** Represents a ValAddresses. */
            class ValAddresses implements IValAddresses {

                /**
                 * Constructs a new ValAddresses.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IValAddresses);

                /** ValAddresses addresses. */
                public addresses: string[];

                /**
                 * Encodes the specified ValAddresses message. Does not implicitly {@link cosmos.staking.v1beta1.ValAddresses.verify|verify} messages.
                 * @param message ValAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IValAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValAddresses message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.ValAddresses.verify|verify} messages.
                 * @param message ValAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IValAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValAddresses message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Decodes a ValAddresses message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Verifies a ValAddresses message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValAddresses message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValAddresses
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Creates a plain object from a ValAddresses message. Also converts values to other types if specified.
                 * @param message ValAddresses
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.ValAddresses, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValAddresses to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVPair. */
            interface IDVPair {

                /** DVPair delegator_address */
                delegator_address?: (string|null);

                /** DVPair validator_address */
                validator_address?: (string|null);
            }

            /** Represents a DVPair. */
            class DVPair implements IDVPair {

                /**
                 * Constructs a new DVPair.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVPair);

                /** DVPair delegator_address. */
                public delegator_address: string;

                /** DVPair validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified DVPair message. Does not implicitly {@link cosmos.staking.v1beta1.DVPair.verify|verify} messages.
                 * @param message DVPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVPair message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVPair.verify|verify} messages.
                 * @param message DVPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPair message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVPair;

                /**
                 * Decodes a DVPair message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVPair;

                /**
                 * Verifies a DVPair message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVPair message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVPair
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVPair;

                /**
                 * Creates a plain object from a DVPair message. Also converts values to other types if specified.
                 * @param message DVPair
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVPair, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVPair to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVPairs. */
            interface IDVPairs {

                /** DVPairs pairs */
                pairs?: (cosmos.staking.v1beta1.IDVPair[]|null);
            }

            /** Represents a DVPairs. */
            class DVPairs implements IDVPairs {

                /**
                 * Constructs a new DVPairs.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVPairs);

                /** DVPairs pairs. */
                public pairs: cosmos.staking.v1beta1.IDVPair[];

                /**
                 * Encodes the specified DVPairs message. Does not implicitly {@link cosmos.staking.v1beta1.DVPairs.verify|verify} messages.
                 * @param message DVPairs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVPairs message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVPairs.verify|verify} messages.
                 * @param message DVPairs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPairs message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVPairs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Decodes a DVPairs message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVPairs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Verifies a DVPairs message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVPairs message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVPairs
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Creates a plain object from a DVPairs message. Also converts values to other types if specified.
                 * @param message DVPairs
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVPairs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVPairs to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVVTriplet. */
            interface IDVVTriplet {

                /** DVVTriplet delegator_address */
                delegator_address?: (string|null);

                /** DVVTriplet validator_src_address */
                validator_src_address?: (string|null);

                /** DVVTriplet validator_dst_address */
                validator_dst_address?: (string|null);
            }

            /** Represents a DVVTriplet. */
            class DVVTriplet implements IDVVTriplet {

                /**
                 * Constructs a new DVVTriplet.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVVTriplet);

                /** DVVTriplet delegator_address. */
                public delegator_address: string;

                /** DVVTriplet validator_src_address. */
                public validator_src_address: string;

                /** DVVTriplet validator_dst_address. */
                public validator_dst_address: string;

                /**
                 * Encodes the specified DVVTriplet message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplet.verify|verify} messages.
                 * @param message DVVTriplet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVVTriplet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVVTriplet message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplet.verify|verify} messages.
                 * @param message DVVTriplet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVVTriplet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplet message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVVTriplet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Decodes a DVVTriplet message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVVTriplet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Verifies a DVVTriplet message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVVTriplet message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVVTriplet
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Creates a plain object from a DVVTriplet message. Also converts values to other types if specified.
                 * @param message DVVTriplet
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVVTriplet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVVTriplet to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVVTriplets. */
            interface IDVVTriplets {

                /** DVVTriplets triplets */
                triplets?: (cosmos.staking.v1beta1.IDVVTriplet[]|null);
            }

            /** Represents a DVVTriplets. */
            class DVVTriplets implements IDVVTriplets {

                /**
                 * Constructs a new DVVTriplets.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVVTriplets);

                /** DVVTriplets triplets. */
                public triplets: cosmos.staking.v1beta1.IDVVTriplet[];

                /**
                 * Encodes the specified DVVTriplets message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplets.verify|verify} messages.
                 * @param message DVVTriplets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVVTriplets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVVTriplets message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplets.verify|verify} messages.
                 * @param message DVVTriplets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVVTriplets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplets message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVVTriplets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Decodes a DVVTriplets message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVVTriplets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Verifies a DVVTriplets message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVVTriplets message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVVTriplets
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Creates a plain object from a DVVTriplets message. Also converts values to other types if specified.
                 * @param message DVVTriplets
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVVTriplets, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVVTriplets to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Delegation. */
            interface IDelegation {

                /** Delegation delegator_address */
                delegator_address?: (string|null);

                /** Delegation validator_address */
                validator_address?: (string|null);

                /** Delegation shares */
                shares?: (string|null);
            }

            /** Represents a Delegation. */
            class Delegation implements IDelegation {

                /**
                 * Constructs a new Delegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDelegation);

                /** Delegation delegator_address. */
                public delegator_address: string;

                /** Delegation validator_address. */
                public validator_address: string;

                /** Delegation shares. */
                public shares: string;

                /**
                 * Encodes the specified Delegation message. Does not implicitly {@link cosmos.staking.v1beta1.Delegation.verify|verify} messages.
                 * @param message Delegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Delegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Delegation.verify|verify} messages.
                 * @param message Delegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Delegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Delegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Delegation;

                /**
                 * Decodes a Delegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Delegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Delegation;

                /**
                 * Verifies a Delegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Delegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Delegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Delegation;

                /**
                 * Creates a plain object from a Delegation message. Also converts values to other types if specified.
                 * @param message Delegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Delegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Delegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnbondingDelegation. */
            interface IUnbondingDelegation {

                /** UnbondingDelegation delegator_address */
                delegator_address?: (string|null);

                /** UnbondingDelegation validator_address */
                validator_address?: (string|null);

                /** UnbondingDelegation entries */
                entries?: (cosmos.staking.v1beta1.IUnbondingDelegationEntry[]|null);
            }

            /** Represents an UnbondingDelegation. */
            class UnbondingDelegation implements IUnbondingDelegation {

                /**
                 * Constructs a new UnbondingDelegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IUnbondingDelegation);

                /** UnbondingDelegation delegator_address. */
                public delegator_address: string;

                /** UnbondingDelegation validator_address. */
                public validator_address: string;

                /** UnbondingDelegation entries. */
                public entries: cosmos.staking.v1beta1.IUnbondingDelegationEntry[];

                /**
                 * Encodes the specified UnbondingDelegation message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegation.verify|verify} messages.
                 * @param message UnbondingDelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IUnbondingDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnbondingDelegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegation.verify|verify} messages.
                 * @param message UnbondingDelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IUnbondingDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnbondingDelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Decodes an UnbondingDelegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnbondingDelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Verifies an UnbondingDelegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnbondingDelegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnbondingDelegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Creates a plain object from an UnbondingDelegation message. Also converts values to other types if specified.
                 * @param message UnbondingDelegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.UnbondingDelegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnbondingDelegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnbondingDelegationEntry. */
            interface IUnbondingDelegationEntry {

                /** UnbondingDelegationEntry creation_height */
                creation_height?: (Long|null);

                /** UnbondingDelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** UnbondingDelegationEntry balance */
                balance?: (string|null);
            }

            /** Represents an UnbondingDelegationEntry. */
            class UnbondingDelegationEntry implements IUnbondingDelegationEntry {

                /**
                 * Constructs a new UnbondingDelegationEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IUnbondingDelegationEntry);

                /** UnbondingDelegationEntry creation_height. */
                public creation_height: Long;

                /** UnbondingDelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance. */
                public initial_balance: string;

                /** UnbondingDelegationEntry balance. */
                public balance: string;

                /**
                 * Encodes the specified UnbondingDelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegationEntry.verify|verify} messages.
                 * @param message UnbondingDelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IUnbondingDelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnbondingDelegationEntry message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegationEntry.verify|verify} messages.
                 * @param message UnbondingDelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IUnbondingDelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegationEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnbondingDelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Decodes an UnbondingDelegationEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnbondingDelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Verifies an UnbondingDelegationEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnbondingDelegationEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnbondingDelegationEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Creates a plain object from an UnbondingDelegationEntry message. Also converts values to other types if specified.
                 * @param message UnbondingDelegationEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.UnbondingDelegationEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnbondingDelegationEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationEntry. */
            interface IRedelegationEntry {

                /** RedelegationEntry creation_height */
                creation_height?: (Long|null);

                /** RedelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** RedelegationEntry shares_dst */
                shares_dst?: (string|null);
            }

            /** Represents a RedelegationEntry. */
            class RedelegationEntry implements IRedelegationEntry {

                /**
                 * Constructs a new RedelegationEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationEntry);

                /** RedelegationEntry creation_height. */
                public creation_height: Long;

                /** RedelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance. */
                public initial_balance: string;

                /** RedelegationEntry shares_dst. */
                public shares_dst: string;

                /**
                 * Encodes the specified RedelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntry.verify|verify} messages.
                 * @param message RedelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationEntry message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntry.verify|verify} messages.
                 * @param message RedelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Decodes a RedelegationEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Verifies a RedelegationEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Creates a plain object from a RedelegationEntry message. Also converts values to other types if specified.
                 * @param message RedelegationEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Redelegation. */
            interface IRedelegation {

                /** Redelegation delegator_address */
                delegator_address?: (string|null);

                /** Redelegation validator_src_address */
                validator_src_address?: (string|null);

                /** Redelegation validator_dst_address */
                validator_dst_address?: (string|null);

                /** Redelegation entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntry[]|null);
            }

            /** Represents a Redelegation. */
            class Redelegation implements IRedelegation {

                /**
                 * Constructs a new Redelegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegation);

                /** Redelegation delegator_address. */
                public delegator_address: string;

                /** Redelegation validator_src_address. */
                public validator_src_address: string;

                /** Redelegation validator_dst_address. */
                public validator_dst_address: string;

                /** Redelegation entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntry[];

                /**
                 * Encodes the specified Redelegation message. Does not implicitly {@link cosmos.staking.v1beta1.Redelegation.verify|verify} messages.
                 * @param message Redelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Redelegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Redelegation.verify|verify} messages.
                 * @param message Redelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Redelegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Redelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Decodes a Redelegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Redelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Verifies a Redelegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Redelegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Redelegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Creates a plain object from a Redelegation message. Also converts values to other types if specified.
                 * @param message Redelegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Redelegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Redelegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params unbonding_time */
                unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators */
                max_validators?: (number|null);

                /** Params max_entries */
                max_entries?: (number|null);

                /** Params historical_entries */
                historical_entries?: (number|null);

                /** Params bond_denom */
                bond_denom?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IParams);

                /** Params unbonding_time. */
                public unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators. */
                public max_validators: number;

                /** Params max_entries. */
                public max_entries: number;

                /** Params historical_entries. */
                public historical_entries: number;

                /** Params bond_denom. */
                public bond_denom: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.staking.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegationResponse. */
            interface IDelegationResponse {

                /** DelegationResponse delegation */
                delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance */
                balance?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a DelegationResponse. */
            class DelegationResponse implements IDelegationResponse {

                /**
                 * Constructs a new DelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDelegationResponse);

                /** DelegationResponse delegation. */
                public delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance. */
                public balance?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified DelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.DelegationResponse.verify|verify} messages.
                 * @param message DelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DelegationResponse.verify|verify} messages.
                 * @param message DelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Decodes a DelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Verifies a DelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Creates a plain object from a DelegationResponse message. Also converts values to other types if specified.
                 * @param message DelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationEntryResponse. */
            interface IRedelegationEntryResponse {

                /** RedelegationEntryResponse redelegation_entry */
                redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance */
                balance?: (string|null);
            }

            /** Represents a RedelegationEntryResponse. */
            class RedelegationEntryResponse implements IRedelegationEntryResponse {

                /**
                 * Constructs a new RedelegationEntryResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationEntryResponse);

                /** RedelegationEntryResponse redelegation_entry. */
                public redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance. */
                public balance: string;

                /**
                 * Encodes the specified RedelegationEntryResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntryResponse.verify|verify} messages.
                 * @param message RedelegationEntryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationEntryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationEntryResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntryResponse.verify|verify} messages.
                 * @param message RedelegationEntryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationEntryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntryResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationEntryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Decodes a RedelegationEntryResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationEntryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Verifies a RedelegationEntryResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationEntryResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationEntryResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Creates a plain object from a RedelegationEntryResponse message. Also converts values to other types if specified.
                 * @param message RedelegationEntryResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationEntryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationEntryResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationResponse. */
            interface IRedelegationResponse {

                /** RedelegationResponse redelegation */
                redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntryResponse[]|null);
            }

            /** Represents a RedelegationResponse. */
            class RedelegationResponse implements IRedelegationResponse {

                /**
                 * Constructs a new RedelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationResponse);

                /** RedelegationResponse redelegation. */
                public redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntryResponse[];

                /**
                 * Encodes the specified RedelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationResponse.verify|verify} messages.
                 * @param message RedelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationResponse.verify|verify} messages.
                 * @param message RedelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Decodes a RedelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Verifies a RedelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Creates a plain object from a RedelegationResponse message. Also converts values to other types if specified.
                 * @param message RedelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Pool. */
            interface IPool {

                /** Pool not_bonded_tokens */
                not_bonded_tokens?: (string|null);

                /** Pool bonded_tokens */
                bonded_tokens?: (string|null);
            }

            /** Represents a Pool. */
            class Pool implements IPool {

                /**
                 * Constructs a new Pool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IPool);

                /** Pool not_bonded_tokens. */
                public not_bonded_tokens: string;

                /** Pool bonded_tokens. */
                public bonded_tokens: string;

                /**
                 * Encodes the specified Pool message. Does not implicitly {@link cosmos.staking.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Pool message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Pool;

                /**
                 * Decodes a Pool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Pool;

                /**
                 * Verifies a Pool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pool
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Pool;

                /**
                 * Creates a plain object from a Pool message. Also converts values to other types if specified.
                 * @param message Pool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Pool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateValidator.
                 * @param request MsgCreateValidator message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateValidatorResponse
                 */
                public createValidator(request: cosmos.staking.v1beta1.IMsgCreateValidator, callback: cosmos.staking.v1beta1.Msg.CreateValidatorCallback): void;

                /**
                 * Calls CreateValidator.
                 * @param request MsgCreateValidator message or plain object
                 * @returns Promise
                 */
                public createValidator(request: cosmos.staking.v1beta1.IMsgCreateValidator): Promise<cosmos.staking.v1beta1.MsgCreateValidatorResponse>;

                /**
                 * Calls EditValidator.
                 * @param request MsgEditValidator message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgEditValidatorResponse
                 */
                public editValidator(request: cosmos.staking.v1beta1.IMsgEditValidator, callback: cosmos.staking.v1beta1.Msg.EditValidatorCallback): void;

                /**
                 * Calls EditValidator.
                 * @param request MsgEditValidator message or plain object
                 * @returns Promise
                 */
                public editValidator(request: cosmos.staking.v1beta1.IMsgEditValidator): Promise<cosmos.staking.v1beta1.MsgEditValidatorResponse>;

                /**
                 * Calls Delegate.
                 * @param request MsgDelegate message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDelegateResponse
                 */
                public delegate(request: cosmos.staking.v1beta1.IMsgDelegate, callback: cosmos.staking.v1beta1.Msg.DelegateCallback): void;

                /**
                 * Calls Delegate.
                 * @param request MsgDelegate message or plain object
                 * @returns Promise
                 */
                public delegate(request: cosmos.staking.v1beta1.IMsgDelegate): Promise<cosmos.staking.v1beta1.MsgDelegateResponse>;

                /**
                 * Calls BeginRedelegate.
                 * @param request MsgBeginRedelegate message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBeginRedelegateResponse
                 */
                public beginRedelegate(request: cosmos.staking.v1beta1.IMsgBeginRedelegate, callback: cosmos.staking.v1beta1.Msg.BeginRedelegateCallback): void;

                /**
                 * Calls BeginRedelegate.
                 * @param request MsgBeginRedelegate message or plain object
                 * @returns Promise
                 */
                public beginRedelegate(request: cosmos.staking.v1beta1.IMsgBeginRedelegate): Promise<cosmos.staking.v1beta1.MsgBeginRedelegateResponse>;

                /**
                 * Calls Undelegate.
                 * @param request MsgUndelegate message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUndelegateResponse
                 */
                public undelegate(request: cosmos.staking.v1beta1.IMsgUndelegate, callback: cosmos.staking.v1beta1.Msg.UndelegateCallback): void;

                /**
                 * Calls Undelegate.
                 * @param request MsgUndelegate message or plain object
                 * @returns Promise
                 */
                public undelegate(request: cosmos.staking.v1beta1.IMsgUndelegate): Promise<cosmos.staking.v1beta1.MsgUndelegateResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Msg#createValidator}.
                 * @param error Error, if any
                 * @param [response] MsgCreateValidatorResponse
                 */
                type CreateValidatorCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.MsgCreateValidatorResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Msg#editValidator}.
                 * @param error Error, if any
                 * @param [response] MsgEditValidatorResponse
                 */
                type EditValidatorCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.MsgEditValidatorResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Msg#delegate}.
                 * @param error Error, if any
                 * @param [response] MsgDelegateResponse
                 */
                type DelegateCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.MsgDelegateResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Msg#beginRedelegate}.
                 * @param error Error, if any
                 * @param [response] MsgBeginRedelegateResponse
                 */
                type BeginRedelegateCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.MsgBeginRedelegateResponse) => void;

                /**
                 * Callback as used by {@link cosmos.staking.v1beta1.Msg#undelegate}.
                 * @param error Error, if any
                 * @param [response] MsgUndelegateResponse
                 */
                type UndelegateCallback = (error: (Error|null), response?: cosmos.staking.v1beta1.MsgUndelegateResponse) => void;
            }

            /** Properties of a MsgCreateValidator. */
            interface IMsgCreateValidator {

                /** MsgCreateValidator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgCreateValidator commission */
                commission?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** MsgCreateValidator min_self_delegation */
                min_self_delegation?: (string|null);

                /** MsgCreateValidator delegator_address */
                delegator_address?: (string|null);

                /** MsgCreateValidator validator_address */
                validator_address?: (string|null);

                /** MsgCreateValidator pubkey */
                pubkey?: (google.protobuf.IAny|null);

                /** MsgCreateValidator value */
                value?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgCreateValidator. */
            class MsgCreateValidator implements IMsgCreateValidator {

                /**
                 * Constructs a new MsgCreateValidator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgCreateValidator);

                /** MsgCreateValidator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgCreateValidator commission. */
                public commission?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** MsgCreateValidator min_self_delegation. */
                public min_self_delegation: string;

                /** MsgCreateValidator delegator_address. */
                public delegator_address: string;

                /** MsgCreateValidator validator_address. */
                public validator_address: string;

                /** MsgCreateValidator pubkey. */
                public pubkey?: (google.protobuf.IAny|null);

                /** MsgCreateValidator value. */
                public value?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgCreateValidator message. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidator.verify|verify} messages.
                 * @param message MsgCreateValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgCreateValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateValidator message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidator.verify|verify} messages.
                 * @param message MsgCreateValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgCreateValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateValidator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgCreateValidator;

                /**
                 * Decodes a MsgCreateValidator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgCreateValidator;

                /**
                 * Verifies a MsgCreateValidator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateValidator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateValidator
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgCreateValidator;

                /**
                 * Creates a plain object from a MsgCreateValidator message. Also converts values to other types if specified.
                 * @param message MsgCreateValidator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgCreateValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateValidator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateValidatorResponse. */
            interface IMsgCreateValidatorResponse {
            }

            /** Represents a MsgCreateValidatorResponse. */
            class MsgCreateValidatorResponse implements IMsgCreateValidatorResponse {

                /**
                 * Constructs a new MsgCreateValidatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgCreateValidatorResponse);

                /**
                 * Encodes the specified MsgCreateValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidatorResponse.verify|verify} messages.
                 * @param message MsgCreateValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgCreateValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateValidatorResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgCreateValidatorResponse.verify|verify} messages.
                 * @param message MsgCreateValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgCreateValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateValidatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgCreateValidatorResponse;

                /**
                 * Decodes a MsgCreateValidatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgCreateValidatorResponse;

                /**
                 * Verifies a MsgCreateValidatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateValidatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateValidatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgCreateValidatorResponse;

                /**
                 * Creates a plain object from a MsgCreateValidatorResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateValidatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgCreateValidatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateValidatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditValidator. */
            interface IMsgEditValidator {

                /** MsgEditValidator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgEditValidator validator_address */
                validator_address?: (string|null);

                /** MsgEditValidator commission_rate */
                commission_rate?: (string|null);

                /** MsgEditValidator min_self_delegation */
                min_self_delegation?: (string|null);
            }

            /** Represents a MsgEditValidator. */
            class MsgEditValidator implements IMsgEditValidator {

                /**
                 * Constructs a new MsgEditValidator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgEditValidator);

                /** MsgEditValidator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** MsgEditValidator validator_address. */
                public validator_address: string;

                /** MsgEditValidator commission_rate. */
                public commission_rate: string;

                /** MsgEditValidator min_self_delegation. */
                public min_self_delegation: string;

                /**
                 * Encodes the specified MsgEditValidator message. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidator.verify|verify} messages.
                 * @param message MsgEditValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgEditValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditValidator message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidator.verify|verify} messages.
                 * @param message MsgEditValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgEditValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditValidator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgEditValidator;

                /**
                 * Decodes a MsgEditValidator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgEditValidator;

                /**
                 * Verifies a MsgEditValidator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditValidator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditValidator
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgEditValidator;

                /**
                 * Creates a plain object from a MsgEditValidator message. Also converts values to other types if specified.
                 * @param message MsgEditValidator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgEditValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditValidator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgEditValidatorResponse. */
            interface IMsgEditValidatorResponse {
            }

            /** Represents a MsgEditValidatorResponse. */
            class MsgEditValidatorResponse implements IMsgEditValidatorResponse {

                /**
                 * Constructs a new MsgEditValidatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgEditValidatorResponse);

                /**
                 * Encodes the specified MsgEditValidatorResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidatorResponse.verify|verify} messages.
                 * @param message MsgEditValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgEditValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgEditValidatorResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgEditValidatorResponse.verify|verify} messages.
                 * @param message MsgEditValidatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgEditValidatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgEditValidatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgEditValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgEditValidatorResponse;

                /**
                 * Decodes a MsgEditValidatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgEditValidatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgEditValidatorResponse;

                /**
                 * Verifies a MsgEditValidatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgEditValidatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgEditValidatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgEditValidatorResponse;

                /**
                 * Creates a plain object from a MsgEditValidatorResponse message. Also converts values to other types if specified.
                 * @param message MsgEditValidatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgEditValidatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgEditValidatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDelegate. */
            interface IMsgDelegate {

                /** MsgDelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgDelegate validator_address */
                validator_address?: (string|null);

                /** MsgDelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgDelegate. */
            class MsgDelegate implements IMsgDelegate {

                /**
                 * Constructs a new MsgDelegate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgDelegate);

                /** MsgDelegate delegator_address. */
                public delegator_address: string;

                /** MsgDelegate validator_address. */
                public validator_address: string;

                /** MsgDelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgDelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegate.verify|verify} messages.
                 * @param message MsgDelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDelegate message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegate.verify|verify} messages.
                 * @param message MsgDelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDelegate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgDelegate;

                /**
                 * Decodes a MsgDelegate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgDelegate;

                /**
                 * Verifies a MsgDelegate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDelegate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDelegate
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgDelegate;

                /**
                 * Creates a plain object from a MsgDelegate message. Also converts values to other types if specified.
                 * @param message MsgDelegate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgDelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDelegate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDelegateResponse. */
            interface IMsgDelegateResponse {
            }

            /** Represents a MsgDelegateResponse. */
            class MsgDelegateResponse implements IMsgDelegateResponse {

                /**
                 * Constructs a new MsgDelegateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgDelegateResponse);

                /**
                 * Encodes the specified MsgDelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegateResponse.verify|verify} messages.
                 * @param message MsgDelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDelegateResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgDelegateResponse.verify|verify} messages.
                 * @param message MsgDelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDelegateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgDelegateResponse;

                /**
                 * Decodes a MsgDelegateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgDelegateResponse;

                /**
                 * Verifies a MsgDelegateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDelegateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDelegateResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgDelegateResponse;

                /**
                 * Creates a plain object from a MsgDelegateResponse message. Also converts values to other types if specified.
                 * @param message MsgDelegateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgDelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDelegateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBeginRedelegate. */
            interface IMsgBeginRedelegate {

                /** MsgBeginRedelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgBeginRedelegate validator_src_address */
                validator_src_address?: (string|null);

                /** MsgBeginRedelegate validator_dst_address */
                validator_dst_address?: (string|null);

                /** MsgBeginRedelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgBeginRedelegate. */
            class MsgBeginRedelegate implements IMsgBeginRedelegate {

                /**
                 * Constructs a new MsgBeginRedelegate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgBeginRedelegate);

                /** MsgBeginRedelegate delegator_address. */
                public delegator_address: string;

                /** MsgBeginRedelegate validator_src_address. */
                public validator_src_address: string;

                /** MsgBeginRedelegate validator_dst_address. */
                public validator_dst_address: string;

                /** MsgBeginRedelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgBeginRedelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegate.verify|verify} messages.
                 * @param message MsgBeginRedelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgBeginRedelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBeginRedelegate message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegate.verify|verify} messages.
                 * @param message MsgBeginRedelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgBeginRedelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBeginRedelegate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBeginRedelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgBeginRedelegate;

                /**
                 * Decodes a MsgBeginRedelegate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBeginRedelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgBeginRedelegate;

                /**
                 * Verifies a MsgBeginRedelegate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBeginRedelegate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBeginRedelegate
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgBeginRedelegate;

                /**
                 * Creates a plain object from a MsgBeginRedelegate message. Also converts values to other types if specified.
                 * @param message MsgBeginRedelegate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgBeginRedelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBeginRedelegate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBeginRedelegateResponse. */
            interface IMsgBeginRedelegateResponse {

                /** MsgBeginRedelegateResponse completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a MsgBeginRedelegateResponse. */
            class MsgBeginRedelegateResponse implements IMsgBeginRedelegateResponse {

                /**
                 * Constructs a new MsgBeginRedelegateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgBeginRedelegateResponse);

                /** MsgBeginRedelegateResponse completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified MsgBeginRedelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegateResponse.verify|verify} messages.
                 * @param message MsgBeginRedelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgBeginRedelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBeginRedelegateResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgBeginRedelegateResponse.verify|verify} messages.
                 * @param message MsgBeginRedelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgBeginRedelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBeginRedelegateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBeginRedelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgBeginRedelegateResponse;

                /**
                 * Decodes a MsgBeginRedelegateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBeginRedelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgBeginRedelegateResponse;

                /**
                 * Verifies a MsgBeginRedelegateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBeginRedelegateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBeginRedelegateResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgBeginRedelegateResponse;

                /**
                 * Creates a plain object from a MsgBeginRedelegateResponse message. Also converts values to other types if specified.
                 * @param message MsgBeginRedelegateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgBeginRedelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBeginRedelegateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUndelegate. */
            interface IMsgUndelegate {

                /** MsgUndelegate delegator_address */
                delegator_address?: (string|null);

                /** MsgUndelegate validator_address */
                validator_address?: (string|null);

                /** MsgUndelegate amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgUndelegate. */
            class MsgUndelegate implements IMsgUndelegate {

                /**
                 * Constructs a new MsgUndelegate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgUndelegate);

                /** MsgUndelegate delegator_address. */
                public delegator_address: string;

                /** MsgUndelegate validator_address. */
                public validator_address: string;

                /** MsgUndelegate amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgUndelegate message. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegate.verify|verify} messages.
                 * @param message MsgUndelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgUndelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUndelegate message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegate.verify|verify} messages.
                 * @param message MsgUndelegate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgUndelegate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUndelegate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUndelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgUndelegate;

                /**
                 * Decodes a MsgUndelegate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUndelegate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgUndelegate;

                /**
                 * Verifies a MsgUndelegate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUndelegate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUndelegate
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgUndelegate;

                /**
                 * Creates a plain object from a MsgUndelegate message. Also converts values to other types if specified.
                 * @param message MsgUndelegate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgUndelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUndelegate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUndelegateResponse. */
            interface IMsgUndelegateResponse {

                /** MsgUndelegateResponse completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a MsgUndelegateResponse. */
            class MsgUndelegateResponse implements IMsgUndelegateResponse {

                /**
                 * Constructs a new MsgUndelegateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IMsgUndelegateResponse);

                /** MsgUndelegateResponse completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified MsgUndelegateResponse message. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegateResponse.verify|verify} messages.
                 * @param message MsgUndelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IMsgUndelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUndelegateResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.MsgUndelegateResponse.verify|verify} messages.
                 * @param message MsgUndelegateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IMsgUndelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUndelegateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUndelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.MsgUndelegateResponse;

                /**
                 * Decodes a MsgUndelegateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUndelegateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.MsgUndelegateResponse;

                /**
                 * Verifies a MsgUndelegateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUndelegateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUndelegateResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.MsgUndelegateResponse;

                /**
                 * Creates a plain object from a MsgUndelegateResponse message. Also converts values to other types if specified.
                 * @param message MsgUndelegateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.MsgUndelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUndelegateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace tx. */
    namespace tx {

        /** Namespace signing. */
        namespace signing {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** SignMode enum. */
                enum SignMode {
                    SIGN_MODE_UNSPECIFIED = 0,
                    SIGN_MODE_DIRECT = 1,
                    SIGN_MODE_TEXTUAL = 2,
                    SIGN_MODE_LEGACY_AMINO_JSON = 127
                }

                /** Properties of a SignatureDescriptors. */
                interface ISignatureDescriptors {

                    /** SignatureDescriptors signatures */
                    signatures?: (cosmos.tx.signing.v1beta1.ISignatureDescriptor[]|null);
                }

                /** Represents a SignatureDescriptors. */
                class SignatureDescriptors implements ISignatureDescriptors {

                    /**
                     * Constructs a new SignatureDescriptors.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.tx.signing.v1beta1.ISignatureDescriptors);

                    /** SignatureDescriptors signatures. */
                    public signatures: cosmos.tx.signing.v1beta1.ISignatureDescriptor[];

                    /**
                     * Encodes the specified SignatureDescriptors message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptors.verify|verify} messages.
                     * @param message SignatureDescriptors message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.tx.signing.v1beta1.ISignatureDescriptors, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignatureDescriptors message, length delimited. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptors.verify|verify} messages.
                     * @param message SignatureDescriptors message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.tx.signing.v1beta1.ISignatureDescriptors, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureDescriptors message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignatureDescriptors
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.signing.v1beta1.SignatureDescriptors;

                    /**
                     * Decodes a SignatureDescriptors message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignatureDescriptors
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.signing.v1beta1.SignatureDescriptors;

                    /**
                     * Verifies a SignatureDescriptors message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignatureDescriptors message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignatureDescriptors
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.tx.signing.v1beta1.SignatureDescriptors;

                    /**
                     * Creates a plain object from a SignatureDescriptors message. Also converts values to other types if specified.
                     * @param message SignatureDescriptors
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.tx.signing.v1beta1.SignatureDescriptors, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignatureDescriptors to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignatureDescriptor. */
                interface ISignatureDescriptor {

                    /** SignatureDescriptor public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** SignatureDescriptor data */
                    data?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData|null);

                    /** SignatureDescriptor sequence */
                    sequence?: (Long|null);
                }

                /** Represents a SignatureDescriptor. */
                class SignatureDescriptor implements ISignatureDescriptor {

                    /**
                     * Constructs a new SignatureDescriptor.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.tx.signing.v1beta1.ISignatureDescriptor);

                    /** SignatureDescriptor public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** SignatureDescriptor data. */
                    public data?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData|null);

                    /** SignatureDescriptor sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified SignatureDescriptor message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.verify|verify} messages.
                     * @param message SignatureDescriptor message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.tx.signing.v1beta1.ISignatureDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignatureDescriptor message, length delimited. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.verify|verify} messages.
                     * @param message SignatureDescriptor message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.tx.signing.v1beta1.ISignatureDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureDescriptor message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignatureDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor;

                    /**
                     * Decodes a SignatureDescriptor message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignatureDescriptor
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.signing.v1beta1.SignatureDescriptor;

                    /**
                     * Verifies a SignatureDescriptor message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignatureDescriptor message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignatureDescriptor
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.tx.signing.v1beta1.SignatureDescriptor;

                    /**
                     * Creates a plain object from a SignatureDescriptor message. Also converts values to other types if specified.
                     * @param message SignatureDescriptor
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.tx.signing.v1beta1.SignatureDescriptor, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignatureDescriptor to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                namespace SignatureDescriptor {

                    /** Properties of a Data. */
                    interface IData {

                        /** Data single */
                        single?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle|null);

                        /** Data multi */
                        multi?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti|null);
                    }

                    /** Represents a Data. */
                    class Data implements IData {

                        /**
                         * Constructs a new Data.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData);

                        /** Data single. */
                        public single?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle|null);

                        /** Data multi. */
                        public multi?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti|null);

                        /** Data sum. */
                        public sum?: ("single"|"multi");

                        /**
                         * Encodes the specified Data message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.verify|verify} messages.
                         * @param message Data message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified Data message, length delimited. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.verify|verify} messages.
                         * @param message Data message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a Data message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns Data
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;

                        /**
                         * Decodes a Data message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns Data
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;

                        /**
                         * Verifies a Data message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a Data message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns Data
                         */
                        public static fromObject(object: { [k: string]: any }): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;

                        /**
                         * Creates a plain object from a Data message. Also converts values to other types if specified.
                         * @param message Data
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this Data to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    namespace Data {

                        /** Properties of a Single. */
                        interface ISingle {

                            /** Single mode */
                            mode?: (cosmos.tx.signing.v1beta1.SignMode|null);

                            /** Single signature */
                            signature?: (Uint8Array|null);
                        }

                        /** Represents a Single. */
                        class Single implements ISingle {

                            /**
                             * Constructs a new Single.
                             * @param [properties] Properties to set
                             */
                            constructor(properties?: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle);

                            /** Single mode. */
                            public mode: cosmos.tx.signing.v1beta1.SignMode;

                            /** Single signature. */
                            public signature: Uint8Array;

                            /**
                             * Encodes the specified Single message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.verify|verify} messages.
                             * @param message Single message or plain object to encode
                             * @param [writer] Writer to encode to
                             * @returns Writer
                             */
                            public static encode(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle, writer?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Encodes the specified Single message, length delimited. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.verify|verify} messages.
                             * @param message Single message or plain object to encode
                             * @param [writer] Writer to encode to
                             * @returns Writer
                             */
                            public static encodeDelimited(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.ISingle, writer?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Decodes a Single message from the specified reader or buffer.
                             * @param reader Reader or buffer to decode from
                             * @param [length] Message length if known beforehand
                             * @returns Single
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;

                            /**
                             * Decodes a Single message from the specified reader or buffer, length delimited.
                             * @param reader Reader or buffer to decode from
                             * @returns Single
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;

                            /**
                             * Verifies a Single message.
                             * @param message Plain object to verify
                             * @returns `null` if valid, otherwise the reason why it is not
                             */
                            public static verify(message: { [k: string]: any }): (string|null);

                            /**
                             * Creates a Single message from a plain object. Also converts values to their respective internal types.
                             * @param object Plain object
                             * @returns Single
                             */
                            public static fromObject(object: { [k: string]: any }): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;

                            /**
                             * Creates a plain object from a Single message. Also converts values to other types if specified.
                             * @param message Single
                             * @param [options] Conversion options
                             * @returns Plain object
                             */
                            public static toObject(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, options?: $protobuf.IConversionOptions): { [k: string]: any };

                            /**
                             * Converts this Single to JSON.
                             * @returns JSON object
                             */
                            public toJSON(): { [k: string]: any };
                        }

                        /** Properties of a Multi. */
                        interface IMulti {

                            /** Multi bitarray */
                            bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                            /** Multi signatures */
                            signatures?: (cosmos.tx.signing.v1beta1.SignatureDescriptor.IData[]|null);
                        }

                        /** Represents a Multi. */
                        class Multi implements IMulti {

                            /**
                             * Constructs a new Multi.
                             * @param [properties] Properties to set
                             */
                            constructor(properties?: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti);

                            /** Multi bitarray. */
                            public bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                            /** Multi signatures. */
                            public signatures: cosmos.tx.signing.v1beta1.SignatureDescriptor.IData[];

                            /**
                             * Encodes the specified Multi message. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.verify|verify} messages.
                             * @param message Multi message or plain object to encode
                             * @param [writer] Writer to encode to
                             * @returns Writer
                             */
                            public static encode(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti, writer?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Encodes the specified Multi message, length delimited. Does not implicitly {@link cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.verify|verify} messages.
                             * @param message Multi message or plain object to encode
                             * @param [writer] Writer to encode to
                             * @returns Writer
                             */
                            public static encodeDelimited(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.IMulti, writer?: $protobuf.Writer): $protobuf.Writer;

                            /**
                             * Decodes a Multi message from the specified reader or buffer.
                             * @param reader Reader or buffer to decode from
                             * @param [length] Message length if known beforehand
                             * @returns Multi
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;

                            /**
                             * Decodes a Multi message from the specified reader or buffer, length delimited.
                             * @param reader Reader or buffer to decode from
                             * @returns Multi
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;

                            /**
                             * Verifies a Multi message.
                             * @param message Plain object to verify
                             * @returns `null` if valid, otherwise the reason why it is not
                             */
                            public static verify(message: { [k: string]: any }): (string|null);

                            /**
                             * Creates a Multi message from a plain object. Also converts values to their respective internal types.
                             * @param object Plain object
                             * @returns Multi
                             */
                            public static fromObject(object: { [k: string]: any }): cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;

                            /**
                             * Creates a plain object from a Multi message. Also converts values to other types if specified.
                             * @param message Multi
                             * @param [options] Conversion options
                             * @returns Plain object
                             */
                            public static toObject(message: cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, options?: $protobuf.IConversionOptions): { [k: string]: any };

                            /**
                             * Converts this Multi to JSON.
                             * @returns JSON object
                             */
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }
            }
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Tx. */
            interface ITx {

                /** Tx body */
                body?: (cosmos.tx.v1beta1.ITxBody|null);

                /** Tx auth_info */
                auth_info?: (cosmos.tx.v1beta1.IAuthInfo|null);

                /** Tx signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a Tx. */
            class Tx implements ITx {

                /**
                 * Constructs a new Tx.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ITx);

                /** Tx body. */
                public body?: (cosmos.tx.v1beta1.ITxBody|null);

                /** Tx auth_info. */
                public auth_info?: (cosmos.tx.v1beta1.IAuthInfo|null);

                /** Tx signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified Tx message. Does not implicitly {@link cosmos.tx.v1beta1.Tx.verify|verify} messages.
                 * @param message Tx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ITx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Tx message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.Tx.verify|verify} messages.
                 * @param message Tx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ITx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Tx message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Tx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.Tx;

                /**
                 * Decodes a Tx message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Tx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.Tx;

                /**
                 * Verifies a Tx message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Tx message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Tx
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.Tx;

                /**
                 * Creates a plain object from a Tx message. Also converts values to other types if specified.
                 * @param message Tx
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.Tx, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Tx to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TxRaw. */
            interface ITxRaw {

                /** TxRaw body_bytes */
                body_bytes?: (Uint8Array|null);

                /** TxRaw auth_info_bytes */
                auth_info_bytes?: (Uint8Array|null);

                /** TxRaw signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a TxRaw. */
            class TxRaw implements ITxRaw {

                /**
                 * Constructs a new TxRaw.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ITxRaw);

                /** TxRaw body_bytes. */
                public body_bytes: Uint8Array;

                /** TxRaw auth_info_bytes. */
                public auth_info_bytes: Uint8Array;

                /** TxRaw signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified TxRaw message. Does not implicitly {@link cosmos.tx.v1beta1.TxRaw.verify|verify} messages.
                 * @param message TxRaw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ITxRaw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TxRaw message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.TxRaw.verify|verify} messages.
                 * @param message TxRaw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ITxRaw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxRaw message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TxRaw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.TxRaw;

                /**
                 * Decodes a TxRaw message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TxRaw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.TxRaw;

                /**
                 * Verifies a TxRaw message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TxRaw message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TxRaw
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.TxRaw;

                /**
                 * Creates a plain object from a TxRaw message. Also converts values to other types if specified.
                 * @param message TxRaw
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.TxRaw, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TxRaw to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SignDoc. */
            interface ISignDoc {

                /** SignDoc body_bytes */
                body_bytes?: (Uint8Array|null);

                /** SignDoc auth_info_bytes */
                auth_info_bytes?: (Uint8Array|null);

                /** SignDoc chain_id */
                chain_id?: (string|null);

                /** SignDoc account_number */
                account_number?: (Long|null);
            }

            /** Represents a SignDoc. */
            class SignDoc implements ISignDoc {

                /**
                 * Constructs a new SignDoc.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ISignDoc);

                /** SignDoc body_bytes. */
                public body_bytes: Uint8Array;

                /** SignDoc auth_info_bytes. */
                public auth_info_bytes: Uint8Array;

                /** SignDoc chain_id. */
                public chain_id: string;

                /** SignDoc account_number. */
                public account_number: Long;

                /**
                 * Encodes the specified SignDoc message. Does not implicitly {@link cosmos.tx.v1beta1.SignDoc.verify|verify} messages.
                 * @param message SignDoc message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ISignDoc, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SignDoc message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.SignDoc.verify|verify} messages.
                 * @param message SignDoc message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ISignDoc, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SignDoc message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SignDoc
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.SignDoc;

                /**
                 * Decodes a SignDoc message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SignDoc
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.SignDoc;

                /**
                 * Verifies a SignDoc message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SignDoc message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SignDoc
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.SignDoc;

                /**
                 * Creates a plain object from a SignDoc message. Also converts values to other types if specified.
                 * @param message SignDoc
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.SignDoc, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SignDoc to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TxBody. */
            interface ITxBody {

                /** TxBody messages */
                messages?: (google.protobuf.IAny[]|null);

                /** TxBody memo */
                memo?: (string|null);

                /** TxBody timeout_height */
                timeout_height?: (Long|null);

                /** TxBody extension_options */
                extension_options?: (google.protobuf.IAny[]|null);

                /** TxBody non_critical_extension_options */
                non_critical_extension_options?: (google.protobuf.IAny[]|null);
            }

            /** Represents a TxBody. */
            class TxBody implements ITxBody {

                /**
                 * Constructs a new TxBody.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ITxBody);

                /** TxBody messages. */
                public messages: google.protobuf.IAny[];

                /** TxBody memo. */
                public memo: string;

                /** TxBody timeout_height. */
                public timeout_height: Long;

                /** TxBody extension_options. */
                public extension_options: google.protobuf.IAny[];

                /** TxBody non_critical_extension_options. */
                public non_critical_extension_options: google.protobuf.IAny[];

                /**
                 * Encodes the specified TxBody message. Does not implicitly {@link cosmos.tx.v1beta1.TxBody.verify|verify} messages.
                 * @param message TxBody message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ITxBody, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TxBody message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.TxBody.verify|verify} messages.
                 * @param message TxBody message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ITxBody, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxBody message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TxBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.TxBody;

                /**
                 * Decodes a TxBody message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TxBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.TxBody;

                /**
                 * Verifies a TxBody message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TxBody message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TxBody
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.TxBody;

                /**
                 * Creates a plain object from a TxBody message. Also converts values to other types if specified.
                 * @param message TxBody
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.TxBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TxBody to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AuthInfo. */
            interface IAuthInfo {

                /** AuthInfo signer_infos */
                signer_infos?: (cosmos.tx.v1beta1.ISignerInfo[]|null);

                /** AuthInfo fee */
                fee?: (cosmos.tx.v1beta1.IFee|null);
            }

            /** Represents an AuthInfo. */
            class AuthInfo implements IAuthInfo {

                /**
                 * Constructs a new AuthInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IAuthInfo);

                /** AuthInfo signer_infos. */
                public signer_infos: cosmos.tx.v1beta1.ISignerInfo[];

                /** AuthInfo fee. */
                public fee?: (cosmos.tx.v1beta1.IFee|null);

                /**
                 * Encodes the specified AuthInfo message. Does not implicitly {@link cosmos.tx.v1beta1.AuthInfo.verify|verify} messages.
                 * @param message AuthInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IAuthInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AuthInfo message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.AuthInfo.verify|verify} messages.
                 * @param message AuthInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IAuthInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AuthInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AuthInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.AuthInfo;

                /**
                 * Decodes an AuthInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AuthInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.AuthInfo;

                /**
                 * Verifies an AuthInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AuthInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AuthInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.AuthInfo;

                /**
                 * Creates a plain object from an AuthInfo message. Also converts values to other types if specified.
                 * @param message AuthInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.AuthInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AuthInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SignerInfo. */
            interface ISignerInfo {

                /** SignerInfo public_key */
                public_key?: (google.protobuf.IAny|null);

                /** SignerInfo mode_info */
                mode_info?: (cosmos.tx.v1beta1.IModeInfo|null);

                /** SignerInfo sequence */
                sequence?: (Long|null);
            }

            /** Represents a SignerInfo. */
            class SignerInfo implements ISignerInfo {

                /**
                 * Constructs a new SignerInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ISignerInfo);

                /** SignerInfo public_key. */
                public public_key?: (google.protobuf.IAny|null);

                /** SignerInfo mode_info. */
                public mode_info?: (cosmos.tx.v1beta1.IModeInfo|null);

                /** SignerInfo sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified SignerInfo message. Does not implicitly {@link cosmos.tx.v1beta1.SignerInfo.verify|verify} messages.
                 * @param message SignerInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ISignerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SignerInfo message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.SignerInfo.verify|verify} messages.
                 * @param message SignerInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ISignerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SignerInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SignerInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.SignerInfo;

                /**
                 * Decodes a SignerInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SignerInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.SignerInfo;

                /**
                 * Verifies a SignerInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SignerInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SignerInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.SignerInfo;

                /**
                 * Creates a plain object from a SignerInfo message. Also converts values to other types if specified.
                 * @param message SignerInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.SignerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SignerInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModeInfo. */
            interface IModeInfo {

                /** ModeInfo single */
                single?: (cosmos.tx.v1beta1.ModeInfo.ISingle|null);

                /** ModeInfo multi */
                multi?: (cosmos.tx.v1beta1.ModeInfo.IMulti|null);
            }

            /** Represents a ModeInfo. */
            class ModeInfo implements IModeInfo {

                /**
                 * Constructs a new ModeInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IModeInfo);

                /** ModeInfo single. */
                public single?: (cosmos.tx.v1beta1.ModeInfo.ISingle|null);

                /** ModeInfo multi. */
                public multi?: (cosmos.tx.v1beta1.ModeInfo.IMulti|null);

                /** ModeInfo sum. */
                public sum?: ("single"|"multi");

                /**
                 * Encodes the specified ModeInfo message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.verify|verify} messages.
                 * @param message ModeInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IModeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModeInfo message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.verify|verify} messages.
                 * @param message ModeInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IModeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModeInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.ModeInfo;

                /**
                 * Decodes a ModeInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.ModeInfo;

                /**
                 * Verifies a ModeInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModeInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModeInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.ModeInfo;

                /**
                 * Creates a plain object from a ModeInfo message. Also converts values to other types if specified.
                 * @param message ModeInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.ModeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModeInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace ModeInfo {

                /** Properties of a Single. */
                interface ISingle {

                    /** Single mode */
                    mode?: (cosmos.tx.signing.v1beta1.SignMode|null);
                }

                /** Represents a Single. */
                class Single implements ISingle {

                    /**
                     * Constructs a new Single.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.tx.v1beta1.ModeInfo.ISingle);

                    /** Single mode. */
                    public mode: cosmos.tx.signing.v1beta1.SignMode;

                    /**
                     * Encodes the specified Single message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Single.verify|verify} messages.
                     * @param message Single message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.tx.v1beta1.ModeInfo.ISingle, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Single message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Single.verify|verify} messages.
                     * @param message Single message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.tx.v1beta1.ModeInfo.ISingle, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Single message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Single
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.ModeInfo.Single;

                    /**
                     * Decodes a Single message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Single
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.ModeInfo.Single;

                    /**
                     * Verifies a Single message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Single message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Single
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.ModeInfo.Single;

                    /**
                     * Creates a plain object from a Single message. Also converts values to other types if specified.
                     * @param message Single
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.tx.v1beta1.ModeInfo.Single, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Single to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Multi. */
                interface IMulti {

                    /** Multi bitarray */
                    bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                    /** Multi mode_infos */
                    mode_infos?: (cosmos.tx.v1beta1.IModeInfo[]|null);
                }

                /** Represents a Multi. */
                class Multi implements IMulti {

                    /**
                     * Constructs a new Multi.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.tx.v1beta1.ModeInfo.IMulti);

                    /** Multi bitarray. */
                    public bitarray?: (cosmos.crypto.multisig.v1beta1.ICompactBitArray|null);

                    /** Multi mode_infos. */
                    public mode_infos: cosmos.tx.v1beta1.IModeInfo[];

                    /**
                     * Encodes the specified Multi message. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Multi.verify|verify} messages.
                     * @param message Multi message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.tx.v1beta1.ModeInfo.IMulti, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Multi message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.ModeInfo.Multi.verify|verify} messages.
                     * @param message Multi message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.tx.v1beta1.ModeInfo.IMulti, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Multi message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Multi
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.ModeInfo.Multi;

                    /**
                     * Decodes a Multi message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Multi
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.ModeInfo.Multi;

                    /**
                     * Verifies a Multi message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Multi message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Multi
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.ModeInfo.Multi;

                    /**
                     * Creates a plain object from a Multi message. Also converts values to other types if specified.
                     * @param message Multi
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.tx.v1beta1.ModeInfo.Multi, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Multi to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Properties of a Fee. */
            interface IFee {

                /** Fee amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Fee gas_limit */
                gas_limit?: (Long|null);

                /** Fee payer */
                payer?: (string|null);

                /** Fee granter */
                granter?: (string|null);
            }

            /** Represents a Fee. */
            class Fee implements IFee {

                /**
                 * Constructs a new Fee.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IFee);

                /** Fee amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** Fee gas_limit. */
                public gas_limit: Long;

                /** Fee payer. */
                public payer: string;

                /** Fee granter. */
                public granter: string;

                /**
                 * Encodes the specified Fee message. Does not implicitly {@link cosmos.tx.v1beta1.Fee.verify|verify} messages.
                 * @param message Fee message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IFee, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Fee message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.Fee.verify|verify} messages.
                 * @param message Fee message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IFee, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Fee message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Fee
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.Fee;

                /**
                 * Decodes a Fee message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Fee
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.Fee;

                /**
                 * Verifies a Fee message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Fee message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Fee
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.Fee;

                /**
                 * Creates a plain object from a Fee message. Also converts values to other types if specified.
                 * @param message Fee
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.Fee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Fee to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Service */
            class Service extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Service service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Simulate.
                 * @param request SimulateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and SimulateResponse
                 */
                public simulate(request: cosmos.tx.v1beta1.ISimulateRequest, callback: cosmos.tx.v1beta1.Service.SimulateCallback): void;

                /**
                 * Calls Simulate.
                 * @param request SimulateRequest message or plain object
                 * @returns Promise
                 */
                public simulate(request: cosmos.tx.v1beta1.ISimulateRequest): Promise<cosmos.tx.v1beta1.SimulateResponse>;

                /**
                 * Calls GetTx.
                 * @param request GetTxRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetTxResponse
                 */
                public getTx(request: cosmos.tx.v1beta1.IGetTxRequest, callback: cosmos.tx.v1beta1.Service.GetTxCallback): void;

                /**
                 * Calls GetTx.
                 * @param request GetTxRequest message or plain object
                 * @returns Promise
                 */
                public getTx(request: cosmos.tx.v1beta1.IGetTxRequest): Promise<cosmos.tx.v1beta1.GetTxResponse>;

                /**
                 * Calls BroadcastTx.
                 * @param request BroadcastTxRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and BroadcastTxResponse
                 */
                public broadcastTx(request: cosmos.tx.v1beta1.IBroadcastTxRequest, callback: cosmos.tx.v1beta1.Service.BroadcastTxCallback): void;

                /**
                 * Calls BroadcastTx.
                 * @param request BroadcastTxRequest message or plain object
                 * @returns Promise
                 */
                public broadcastTx(request: cosmos.tx.v1beta1.IBroadcastTxRequest): Promise<cosmos.tx.v1beta1.BroadcastTxResponse>;

                /**
                 * Calls GetTxsEvent.
                 * @param request GetTxsEventRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetTxsEventResponse
                 */
                public getTxsEvent(request: cosmos.tx.v1beta1.IGetTxsEventRequest, callback: cosmos.tx.v1beta1.Service.GetTxsEventCallback): void;

                /**
                 * Calls GetTxsEvent.
                 * @param request GetTxsEventRequest message or plain object
                 * @returns Promise
                 */
                public getTxsEvent(request: cosmos.tx.v1beta1.IGetTxsEventRequest): Promise<cosmos.tx.v1beta1.GetTxsEventResponse>;
            }

            namespace Service {

                /**
                 * Callback as used by {@link cosmos.tx.v1beta1.Service#simulate}.
                 * @param error Error, if any
                 * @param [response] SimulateResponse
                 */
                type SimulateCallback = (error: (Error|null), response?: cosmos.tx.v1beta1.SimulateResponse) => void;

                /**
                 * Callback as used by {@link cosmos.tx.v1beta1.Service#getTx}.
                 * @param error Error, if any
                 * @param [response] GetTxResponse
                 */
                type GetTxCallback = (error: (Error|null), response?: cosmos.tx.v1beta1.GetTxResponse) => void;

                /**
                 * Callback as used by {@link cosmos.tx.v1beta1.Service#broadcastTx}.
                 * @param error Error, if any
                 * @param [response] BroadcastTxResponse
                 */
                type BroadcastTxCallback = (error: (Error|null), response?: cosmos.tx.v1beta1.BroadcastTxResponse) => void;

                /**
                 * Callback as used by {@link cosmos.tx.v1beta1.Service#getTxsEvent}.
                 * @param error Error, if any
                 * @param [response] GetTxsEventResponse
                 */
                type GetTxsEventCallback = (error: (Error|null), response?: cosmos.tx.v1beta1.GetTxsEventResponse) => void;
            }

            /** Properties of a GetTxsEventRequest. */
            interface IGetTxsEventRequest {

                /** GetTxsEventRequest events */
                events?: (string[]|null);

                /** GetTxsEventRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a GetTxsEventRequest. */
            class GetTxsEventRequest implements IGetTxsEventRequest {

                /**
                 * Constructs a new GetTxsEventRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IGetTxsEventRequest);

                /** GetTxsEventRequest events. */
                public events: string[];

                /** GetTxsEventRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified GetTxsEventRequest message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventRequest.verify|verify} messages.
                 * @param message GetTxsEventRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IGetTxsEventRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTxsEventRequest message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventRequest.verify|verify} messages.
                 * @param message GetTxsEventRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IGetTxsEventRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxsEventRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTxsEventRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.GetTxsEventRequest;

                /**
                 * Decodes a GetTxsEventRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTxsEventRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.GetTxsEventRequest;

                /**
                 * Verifies a GetTxsEventRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTxsEventRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTxsEventRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.GetTxsEventRequest;

                /**
                 * Creates a plain object from a GetTxsEventRequest message. Also converts values to other types if specified.
                 * @param message GetTxsEventRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.GetTxsEventRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTxsEventRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GetTxsEventResponse. */
            interface IGetTxsEventResponse {

                /** GetTxsEventResponse txs */
                txs?: (cosmos.tx.v1beta1.ITx[]|null);

                /** GetTxsEventResponse tx_responses */
                tx_responses?: (cosmos.base.abci.v1beta1.ITxResponse[]|null);

                /** GetTxsEventResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a GetTxsEventResponse. */
            class GetTxsEventResponse implements IGetTxsEventResponse {

                /**
                 * Constructs a new GetTxsEventResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IGetTxsEventResponse);

                /** GetTxsEventResponse txs. */
                public txs: cosmos.tx.v1beta1.ITx[];

                /** GetTxsEventResponse tx_responses. */
                public tx_responses: cosmos.base.abci.v1beta1.ITxResponse[];

                /** GetTxsEventResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified GetTxsEventResponse message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventResponse.verify|verify} messages.
                 * @param message GetTxsEventResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IGetTxsEventResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTxsEventResponse message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.GetTxsEventResponse.verify|verify} messages.
                 * @param message GetTxsEventResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IGetTxsEventResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxsEventResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTxsEventResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.GetTxsEventResponse;

                /**
                 * Decodes a GetTxsEventResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTxsEventResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.GetTxsEventResponse;

                /**
                 * Verifies a GetTxsEventResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTxsEventResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTxsEventResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.GetTxsEventResponse;

                /**
                 * Creates a plain object from a GetTxsEventResponse message. Also converts values to other types if specified.
                 * @param message GetTxsEventResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.GetTxsEventResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTxsEventResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BroadcastTxRequest. */
            interface IBroadcastTxRequest {

                /** BroadcastTxRequest tx_bytes */
                tx_bytes?: (Uint8Array|null);

                /** BroadcastTxRequest mode */
                mode?: (cosmos.tx.v1beta1.BroadcastMode|null);
            }

            /** Represents a BroadcastTxRequest. */
            class BroadcastTxRequest implements IBroadcastTxRequest {

                /**
                 * Constructs a new BroadcastTxRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IBroadcastTxRequest);

                /** BroadcastTxRequest tx_bytes. */
                public tx_bytes: Uint8Array;

                /** BroadcastTxRequest mode. */
                public mode: cosmos.tx.v1beta1.BroadcastMode;

                /**
                 * Encodes the specified BroadcastTxRequest message. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxRequest.verify|verify} messages.
                 * @param message BroadcastTxRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IBroadcastTxRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BroadcastTxRequest message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxRequest.verify|verify} messages.
                 * @param message BroadcastTxRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IBroadcastTxRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BroadcastTxRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BroadcastTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.BroadcastTxRequest;

                /**
                 * Decodes a BroadcastTxRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BroadcastTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.BroadcastTxRequest;

                /**
                 * Verifies a BroadcastTxRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BroadcastTxRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BroadcastTxRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.BroadcastTxRequest;

                /**
                 * Creates a plain object from a BroadcastTxRequest message. Also converts values to other types if specified.
                 * @param message BroadcastTxRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.BroadcastTxRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BroadcastTxRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** BroadcastMode enum. */
            enum BroadcastMode {
                BROADCAST_MODE_UNSPECIFIED = 0,
                BROADCAST_MODE_BLOCK = 1,
                BROADCAST_MODE_SYNC = 2,
                BROADCAST_MODE_ASYNC = 3
            }

            /** Properties of a BroadcastTxResponse. */
            interface IBroadcastTxResponse {

                /** BroadcastTxResponse tx_response */
                tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);
            }

            /** Represents a BroadcastTxResponse. */
            class BroadcastTxResponse implements IBroadcastTxResponse {

                /**
                 * Constructs a new BroadcastTxResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IBroadcastTxResponse);

                /** BroadcastTxResponse tx_response. */
                public tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);

                /**
                 * Encodes the specified BroadcastTxResponse message. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxResponse.verify|verify} messages.
                 * @param message BroadcastTxResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IBroadcastTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BroadcastTxResponse message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.BroadcastTxResponse.verify|verify} messages.
                 * @param message BroadcastTxResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IBroadcastTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BroadcastTxResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BroadcastTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.BroadcastTxResponse;

                /**
                 * Decodes a BroadcastTxResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BroadcastTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.BroadcastTxResponse;

                /**
                 * Verifies a BroadcastTxResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BroadcastTxResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BroadcastTxResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.BroadcastTxResponse;

                /**
                 * Creates a plain object from a BroadcastTxResponse message. Also converts values to other types if specified.
                 * @param message BroadcastTxResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.BroadcastTxResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BroadcastTxResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SimulateRequest. */
            interface ISimulateRequest {

                /** SimulateRequest tx */
                tx?: (cosmos.tx.v1beta1.ITx|null);
            }

            /** Represents a SimulateRequest. */
            class SimulateRequest implements ISimulateRequest {

                /**
                 * Constructs a new SimulateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ISimulateRequest);

                /** SimulateRequest tx. */
                public tx?: (cosmos.tx.v1beta1.ITx|null);

                /**
                 * Encodes the specified SimulateRequest message. Does not implicitly {@link cosmos.tx.v1beta1.SimulateRequest.verify|verify} messages.
                 * @param message SimulateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ISimulateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SimulateRequest message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.SimulateRequest.verify|verify} messages.
                 * @param message SimulateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ISimulateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SimulateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SimulateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.SimulateRequest;

                /**
                 * Decodes a SimulateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SimulateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.SimulateRequest;

                /**
                 * Verifies a SimulateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SimulateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SimulateRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.SimulateRequest;

                /**
                 * Creates a plain object from a SimulateRequest message. Also converts values to other types if specified.
                 * @param message SimulateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.SimulateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SimulateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SimulateResponse. */
            interface ISimulateResponse {

                /** SimulateResponse gas_info */
                gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                /** SimulateResponse result */
                result?: (cosmos.base.abci.v1beta1.IResult|null);
            }

            /** Represents a SimulateResponse. */
            class SimulateResponse implements ISimulateResponse {

                /**
                 * Constructs a new SimulateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.ISimulateResponse);

                /** SimulateResponse gas_info. */
                public gas_info?: (cosmos.base.abci.v1beta1.IGasInfo|null);

                /** SimulateResponse result. */
                public result?: (cosmos.base.abci.v1beta1.IResult|null);

                /**
                 * Encodes the specified SimulateResponse message. Does not implicitly {@link cosmos.tx.v1beta1.SimulateResponse.verify|verify} messages.
                 * @param message SimulateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.ISimulateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SimulateResponse message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.SimulateResponse.verify|verify} messages.
                 * @param message SimulateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.ISimulateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SimulateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SimulateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.SimulateResponse;

                /**
                 * Decodes a SimulateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SimulateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.SimulateResponse;

                /**
                 * Verifies a SimulateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SimulateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SimulateResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.SimulateResponse;

                /**
                 * Creates a plain object from a SimulateResponse message. Also converts values to other types if specified.
                 * @param message SimulateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.SimulateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SimulateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GetTxRequest. */
            interface IGetTxRequest {

                /** GetTxRequest hash */
                hash?: (string|null);
            }

            /** Represents a GetTxRequest. */
            class GetTxRequest implements IGetTxRequest {

                /**
                 * Constructs a new GetTxRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IGetTxRequest);

                /** GetTxRequest hash. */
                public hash: string;

                /**
                 * Encodes the specified GetTxRequest message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxRequest.verify|verify} messages.
                 * @param message GetTxRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IGetTxRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTxRequest message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.GetTxRequest.verify|verify} messages.
                 * @param message GetTxRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IGetTxRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.GetTxRequest;

                /**
                 * Decodes a GetTxRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTxRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.GetTxRequest;

                /**
                 * Verifies a GetTxRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTxRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTxRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.GetTxRequest;

                /**
                 * Creates a plain object from a GetTxRequest message. Also converts values to other types if specified.
                 * @param message GetTxRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.GetTxRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTxRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GetTxResponse. */
            interface IGetTxResponse {

                /** GetTxResponse tx */
                tx?: (cosmos.tx.v1beta1.ITx|null);

                /** GetTxResponse tx_response */
                tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);
            }

            /** Represents a GetTxResponse. */
            class GetTxResponse implements IGetTxResponse {

                /**
                 * Constructs a new GetTxResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.tx.v1beta1.IGetTxResponse);

                /** GetTxResponse tx. */
                public tx?: (cosmos.tx.v1beta1.ITx|null);

                /** GetTxResponse tx_response. */
                public tx_response?: (cosmos.base.abci.v1beta1.ITxResponse|null);

                /**
                 * Encodes the specified GetTxResponse message. Does not implicitly {@link cosmos.tx.v1beta1.GetTxResponse.verify|verify} messages.
                 * @param message GetTxResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.tx.v1beta1.IGetTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTxResponse message, length delimited. Does not implicitly {@link cosmos.tx.v1beta1.GetTxResponse.verify|verify} messages.
                 * @param message GetTxResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.tx.v1beta1.IGetTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTxResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.tx.v1beta1.GetTxResponse;

                /**
                 * Decodes a GetTxResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTxResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.tx.v1beta1.GetTxResponse;

                /**
                 * Verifies a GetTxResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTxResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTxResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.tx.v1beta1.GetTxResponse;

                /**
                 * Creates a plain object from a GetTxResponse message. Also converts values to other types if specified.
                 * @param message GetTxResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.tx.v1beta1.GetTxResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTxResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace upgrade. */
    namespace upgrade {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Plan. */
            interface IPlan {

                /** Plan name */
                name?: (string|null);

                /** Plan time */
                time?: (google.protobuf.ITimestamp|null);

                /** Plan height */
                height?: (Long|null);

                /** Plan info */
                info?: (string|null);

                /** Plan upgraded_client_state */
                upgraded_client_state?: (google.protobuf.IAny|null);
            }

            /** Represents a Plan. */
            class Plan implements IPlan {

                /**
                 * Constructs a new Plan.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IPlan);

                /** Plan name. */
                public name: string;

                /** Plan time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** Plan height. */
                public height: Long;

                /** Plan info. */
                public info: string;

                /** Plan upgraded_client_state. */
                public upgraded_client_state?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified Plan message. Does not implicitly {@link cosmos.upgrade.v1beta1.Plan.verify|verify} messages.
                 * @param message Plan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IPlan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Plan message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.Plan.verify|verify} messages.
                 * @param message Plan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IPlan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Plan message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Plan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Decodes a Plan message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Plan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Verifies a Plan message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Plan message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Plan
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Creates a plain object from a Plan message. Also converts values to other types if specified.
                 * @param message Plan
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.Plan, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Plan to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SoftwareUpgradeProposal. */
            interface ISoftwareUpgradeProposal {

                /** SoftwareUpgradeProposal title */
                title?: (string|null);

                /** SoftwareUpgradeProposal description */
                description?: (string|null);

                /** SoftwareUpgradeProposal plan */
                plan?: (cosmos.upgrade.v1beta1.IPlan|null);
            }

            /** Represents a SoftwareUpgradeProposal. */
            class SoftwareUpgradeProposal implements ISoftwareUpgradeProposal {

                /**
                 * Constructs a new SoftwareUpgradeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal);

                /** SoftwareUpgradeProposal title. */
                public title: string;

                /** SoftwareUpgradeProposal description. */
                public description: string;

                /** SoftwareUpgradeProposal plan. */
                public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                /**
                 * Encodes the specified SoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.verify|verify} messages.
                 * @param message SoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SoftwareUpgradeProposal message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.verify|verify} messages.
                 * @param message SoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Decodes a SoftwareUpgradeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Verifies a SoftwareUpgradeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SoftwareUpgradeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SoftwareUpgradeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Creates a plain object from a SoftwareUpgradeProposal message. Also converts values to other types if specified.
                 * @param message SoftwareUpgradeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.SoftwareUpgradeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SoftwareUpgradeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CancelSoftwareUpgradeProposal. */
            interface ICancelSoftwareUpgradeProposal {

                /** CancelSoftwareUpgradeProposal title */
                title?: (string|null);

                /** CancelSoftwareUpgradeProposal description */
                description?: (string|null);
            }

            /** Represents a CancelSoftwareUpgradeProposal. */
            class CancelSoftwareUpgradeProposal implements ICancelSoftwareUpgradeProposal {

                /**
                 * Constructs a new CancelSoftwareUpgradeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal);

                /** CancelSoftwareUpgradeProposal title. */
                public title: string;

                /** CancelSoftwareUpgradeProposal description. */
                public description: string;

                /**
                 * Encodes the specified CancelSoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.verify|verify} messages.
                 * @param message CancelSoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CancelSoftwareUpgradeProposal message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.verify|verify} messages.
                 * @param message CancelSoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CancelSoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CancelSoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Decodes a CancelSoftwareUpgradeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CancelSoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Verifies a CancelSoftwareUpgradeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CancelSoftwareUpgradeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CancelSoftwareUpgradeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Creates a plain object from a CancelSoftwareUpgradeProposal message. Also converts values to other types if specified.
                 * @param message CancelSoftwareUpgradeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CancelSoftwareUpgradeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CurrentPlan.
                 * @param request QueryCurrentPlanRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCurrentPlanResponse
                 */
                public currentPlan(request: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest, callback: cosmos.upgrade.v1beta1.Query.CurrentPlanCallback): void;

                /**
                 * Calls CurrentPlan.
                 * @param request QueryCurrentPlanRequest message or plain object
                 * @returns Promise
                 */
                public currentPlan(request: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest): Promise<cosmos.upgrade.v1beta1.QueryCurrentPlanResponse>;

                /**
                 * Calls AppliedPlan.
                 * @param request QueryAppliedPlanRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAppliedPlanResponse
                 */
                public appliedPlan(request: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest, callback: cosmos.upgrade.v1beta1.Query.AppliedPlanCallback): void;

                /**
                 * Calls AppliedPlan.
                 * @param request QueryAppliedPlanRequest message or plain object
                 * @returns Promise
                 */
                public appliedPlan(request: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest): Promise<cosmos.upgrade.v1beta1.QueryAppliedPlanResponse>;

                /**
                 * Calls UpgradedConsensusState.
                 * @param request QueryUpgradedConsensusStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryUpgradedConsensusStateResponse
                 */
                public upgradedConsensusState(request: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest, callback: cosmos.upgrade.v1beta1.Query.UpgradedConsensusStateCallback): void;

                /**
                 * Calls UpgradedConsensusState.
                 * @param request QueryUpgradedConsensusStateRequest message or plain object
                 * @returns Promise
                 */
                public upgradedConsensusState(request: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest): Promise<cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.upgrade.v1beta1.Query#currentPlan}.
                 * @param error Error, if any
                 * @param [response] QueryCurrentPlanResponse
                 */
                type CurrentPlanCallback = (error: (Error|null), response?: cosmos.upgrade.v1beta1.QueryCurrentPlanResponse) => void;

                /**
                 * Callback as used by {@link cosmos.upgrade.v1beta1.Query#appliedPlan}.
                 * @param error Error, if any
                 * @param [response] QueryAppliedPlanResponse
                 */
                type AppliedPlanCallback = (error: (Error|null), response?: cosmos.upgrade.v1beta1.QueryAppliedPlanResponse) => void;

                /**
                 * Callback as used by {@link cosmos.upgrade.v1beta1.Query#upgradedConsensusState}.
                 * @param error Error, if any
                 * @param [response] QueryUpgradedConsensusStateResponse
                 */
                type UpgradedConsensusStateCallback = (error: (Error|null), response?: cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse) => void;
            }

            /** Properties of a QueryCurrentPlanRequest. */
            interface IQueryCurrentPlanRequest {
            }

            /** Represents a QueryCurrentPlanRequest. */
            class QueryCurrentPlanRequest implements IQueryCurrentPlanRequest {

                /**
                 * Constructs a new QueryCurrentPlanRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest);

                /**
                 * Encodes the specified QueryCurrentPlanRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.verify|verify} messages.
                 * @param message QueryCurrentPlanRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentPlanRequest message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.verify|verify} messages.
                 * @param message QueryCurrentPlanRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryCurrentPlanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentPlanRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryCurrentPlanRequest;

                /**
                 * Decodes a QueryCurrentPlanRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryCurrentPlanRequest;

                /**
                 * Verifies a QueryCurrentPlanRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentPlanRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentPlanRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryCurrentPlanRequest;

                /**
                 * Creates a plain object from a QueryCurrentPlanRequest message. Also converts values to other types if specified.
                 * @param message QueryCurrentPlanRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryCurrentPlanRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentPlanRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentPlanResponse. */
            interface IQueryCurrentPlanResponse {

                /** QueryCurrentPlanResponse plan */
                plan?: (cosmos.upgrade.v1beta1.IPlan|null);
            }

            /** Represents a QueryCurrentPlanResponse. */
            class QueryCurrentPlanResponse implements IQueryCurrentPlanResponse {

                /**
                 * Constructs a new QueryCurrentPlanResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryCurrentPlanResponse);

                /** QueryCurrentPlanResponse plan. */
                public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                /**
                 * Encodes the specified QueryCurrentPlanResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.verify|verify} messages.
                 * @param message QueryCurrentPlanResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryCurrentPlanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentPlanResponse message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.verify|verify} messages.
                 * @param message QueryCurrentPlanResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryCurrentPlanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentPlanResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryCurrentPlanResponse;

                /**
                 * Decodes a QueryCurrentPlanResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryCurrentPlanResponse;

                /**
                 * Verifies a QueryCurrentPlanResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentPlanResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentPlanResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryCurrentPlanResponse;

                /**
                 * Creates a plain object from a QueryCurrentPlanResponse message. Also converts values to other types if specified.
                 * @param message QueryCurrentPlanResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryCurrentPlanResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentPlanResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAppliedPlanRequest. */
            interface IQueryAppliedPlanRequest {

                /** QueryAppliedPlanRequest name */
                name?: (string|null);
            }

            /** Represents a QueryAppliedPlanRequest. */
            class QueryAppliedPlanRequest implements IQueryAppliedPlanRequest {

                /**
                 * Constructs a new QueryAppliedPlanRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest);

                /** QueryAppliedPlanRequest name. */
                public name: string;

                /**
                 * Encodes the specified QueryAppliedPlanRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.verify|verify} messages.
                 * @param message QueryAppliedPlanRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAppliedPlanRequest message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.verify|verify} messages.
                 * @param message QueryAppliedPlanRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryAppliedPlanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAppliedPlanRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAppliedPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryAppliedPlanRequest;

                /**
                 * Decodes a QueryAppliedPlanRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAppliedPlanRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryAppliedPlanRequest;

                /**
                 * Verifies a QueryAppliedPlanRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAppliedPlanRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAppliedPlanRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryAppliedPlanRequest;

                /**
                 * Creates a plain object from a QueryAppliedPlanRequest message. Also converts values to other types if specified.
                 * @param message QueryAppliedPlanRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryAppliedPlanRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAppliedPlanRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAppliedPlanResponse. */
            interface IQueryAppliedPlanResponse {

                /** QueryAppliedPlanResponse height */
                height?: (Long|null);
            }

            /** Represents a QueryAppliedPlanResponse. */
            class QueryAppliedPlanResponse implements IQueryAppliedPlanResponse {

                /**
                 * Constructs a new QueryAppliedPlanResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryAppliedPlanResponse);

                /** QueryAppliedPlanResponse height. */
                public height: Long;

                /**
                 * Encodes the specified QueryAppliedPlanResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.verify|verify} messages.
                 * @param message QueryAppliedPlanResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryAppliedPlanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAppliedPlanResponse message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.verify|verify} messages.
                 * @param message QueryAppliedPlanResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryAppliedPlanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAppliedPlanResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAppliedPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryAppliedPlanResponse;

                /**
                 * Decodes a QueryAppliedPlanResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAppliedPlanResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryAppliedPlanResponse;

                /**
                 * Verifies a QueryAppliedPlanResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAppliedPlanResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAppliedPlanResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryAppliedPlanResponse;

                /**
                 * Creates a plain object from a QueryAppliedPlanResponse message. Also converts values to other types if specified.
                 * @param message QueryAppliedPlanResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryAppliedPlanResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAppliedPlanResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryUpgradedConsensusStateRequest. */
            interface IQueryUpgradedConsensusStateRequest {

                /** QueryUpgradedConsensusStateRequest last_height */
                last_height?: (Long|null);
            }

            /** Represents a QueryUpgradedConsensusStateRequest. */
            class QueryUpgradedConsensusStateRequest implements IQueryUpgradedConsensusStateRequest {

                /**
                 * Constructs a new QueryUpgradedConsensusStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest);

                /** QueryUpgradedConsensusStateRequest last_height. */
                public last_height: Long;

                /**
                 * Encodes the specified QueryUpgradedConsensusStateRequest message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.verify|verify} messages.
                 * @param message QueryUpgradedConsensusStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryUpgradedConsensusStateRequest message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.verify|verify} messages.
                 * @param message QueryUpgradedConsensusStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUpgradedConsensusStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryUpgradedConsensusStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest;

                /**
                 * Decodes a QueryUpgradedConsensusStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryUpgradedConsensusStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest;

                /**
                 * Verifies a QueryUpgradedConsensusStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryUpgradedConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryUpgradedConsensusStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest;

                /**
                 * Creates a plain object from a QueryUpgradedConsensusStateRequest message. Also converts values to other types if specified.
                 * @param message QueryUpgradedConsensusStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryUpgradedConsensusStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryUpgradedConsensusStateResponse. */
            interface IQueryUpgradedConsensusStateResponse {

                /** QueryUpgradedConsensusStateResponse upgraded_consensus_state */
                upgraded_consensus_state?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryUpgradedConsensusStateResponse. */
            class QueryUpgradedConsensusStateResponse implements IQueryUpgradedConsensusStateResponse {

                /**
                 * Constructs a new QueryUpgradedConsensusStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateResponse);

                /** QueryUpgradedConsensusStateResponse upgraded_consensus_state. */
                public upgraded_consensus_state?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryUpgradedConsensusStateResponse message. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.verify|verify} messages.
                 * @param message QueryUpgradedConsensusStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryUpgradedConsensusStateResponse message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.verify|verify} messages.
                 * @param message QueryUpgradedConsensusStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IQueryUpgradedConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryUpgradedConsensusStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryUpgradedConsensusStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse;

                /**
                 * Decodes a QueryUpgradedConsensusStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryUpgradedConsensusStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse;

                /**
                 * Verifies a QueryUpgradedConsensusStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryUpgradedConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryUpgradedConsensusStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse;

                /**
                 * Creates a plain object from a QueryUpgradedConsensusStateResponse message. Also converts values to other types if specified.
                 * @param message QueryUpgradedConsensusStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryUpgradedConsensusStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace vesting. */
    namespace vesting {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a BaseVestingAccount. */
            interface IBaseVestingAccount {

                /** BaseVestingAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** BaseVestingAccount original_vesting */
                original_vesting?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount delegated_free */
                delegated_free?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount delegated_vesting */
                delegated_vesting?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BaseVestingAccount end_time */
                end_time?: (Long|null);
            }

            /** Represents a BaseVestingAccount. */
            class BaseVestingAccount implements IBaseVestingAccount {

                /**
                 * Constructs a new BaseVestingAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IBaseVestingAccount);

                /** BaseVestingAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** BaseVestingAccount original_vesting. */
                public original_vesting: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount delegated_free. */
                public delegated_free: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount delegated_vesting. */
                public delegated_vesting: cosmos.base.v1beta1.ICoin[];

                /** BaseVestingAccount end_time. */
                public end_time: Long;

                /**
                 * Encodes the specified BaseVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.BaseVestingAccount.verify|verify} messages.
                 * @param message BaseVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IBaseVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BaseVestingAccount message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.BaseVestingAccount.verify|verify} messages.
                 * @param message BaseVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IBaseVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseVestingAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BaseVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.BaseVestingAccount;

                /**
                 * Decodes a BaseVestingAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BaseVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.BaseVestingAccount;

                /**
                 * Verifies a BaseVestingAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BaseVestingAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BaseVestingAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.BaseVestingAccount;

                /**
                 * Creates a plain object from a BaseVestingAccount message. Also converts values to other types if specified.
                 * @param message BaseVestingAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.BaseVestingAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BaseVestingAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ContinuousVestingAccount. */
            interface IContinuousVestingAccount {

                /** ContinuousVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** ContinuousVestingAccount start_time */
                start_time?: (Long|null);
            }

            /** Represents a ContinuousVestingAccount. */
            class ContinuousVestingAccount implements IContinuousVestingAccount {

                /**
                 * Constructs a new ContinuousVestingAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IContinuousVestingAccount);

                /** ContinuousVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** ContinuousVestingAccount start_time. */
                public start_time: Long;

                /**
                 * Encodes the specified ContinuousVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.ContinuousVestingAccount.verify|verify} messages.
                 * @param message ContinuousVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IContinuousVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContinuousVestingAccount message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.ContinuousVestingAccount.verify|verify} messages.
                 * @param message ContinuousVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IContinuousVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContinuousVestingAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContinuousVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.ContinuousVestingAccount;

                /**
                 * Decodes a ContinuousVestingAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContinuousVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.ContinuousVestingAccount;

                /**
                 * Verifies a ContinuousVestingAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContinuousVestingAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContinuousVestingAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.ContinuousVestingAccount;

                /**
                 * Creates a plain object from a ContinuousVestingAccount message. Also converts values to other types if specified.
                 * @param message ContinuousVestingAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.ContinuousVestingAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContinuousVestingAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelayedVestingAccount. */
            interface IDelayedVestingAccount {

                /** DelayedVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);
            }

            /** Represents a DelayedVestingAccount. */
            class DelayedVestingAccount implements IDelayedVestingAccount {

                /**
                 * Constructs a new DelayedVestingAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IDelayedVestingAccount);

                /** DelayedVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /**
                 * Encodes the specified DelayedVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.DelayedVestingAccount.verify|verify} messages.
                 * @param message DelayedVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IDelayedVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelayedVestingAccount message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.DelayedVestingAccount.verify|verify} messages.
                 * @param message DelayedVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IDelayedVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelayedVestingAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelayedVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.DelayedVestingAccount;

                /**
                 * Decodes a DelayedVestingAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelayedVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.DelayedVestingAccount;

                /**
                 * Verifies a DelayedVestingAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelayedVestingAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelayedVestingAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.DelayedVestingAccount;

                /**
                 * Creates a plain object from a DelayedVestingAccount message. Also converts values to other types if specified.
                 * @param message DelayedVestingAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.DelayedVestingAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelayedVestingAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Period. */
            interface IPeriod {

                /** Period length */
                length?: (Long|null);

                /** Period amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Period. */
            class Period implements IPeriod {

                /**
                 * Constructs a new Period.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IPeriod);

                /** Period length. */
                public length: Long;

                /** Period amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Period message. Does not implicitly {@link cosmos.vesting.v1beta1.Period.verify|verify} messages.
                 * @param message Period message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Period message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.Period.verify|verify} messages.
                 * @param message Period message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Period message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Period
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.Period;

                /**
                 * Decodes a Period message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Period
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.Period;

                /**
                 * Verifies a Period message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Period message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Period
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.Period;

                /**
                 * Creates a plain object from a Period message. Also converts values to other types if specified.
                 * @param message Period
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.Period, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Period to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PeriodicVestingAccount. */
            interface IPeriodicVestingAccount {

                /** PeriodicVestingAccount base_vesting_account */
                base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** PeriodicVestingAccount start_time */
                start_time?: (Long|null);

                /** PeriodicVestingAccount vesting_periods */
                vesting_periods?: (cosmos.vesting.v1beta1.IPeriod[]|null);
            }

            /** Represents a PeriodicVestingAccount. */
            class PeriodicVestingAccount implements IPeriodicVestingAccount {

                /**
                 * Constructs a new PeriodicVestingAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IPeriodicVestingAccount);

                /** PeriodicVestingAccount base_vesting_account. */
                public base_vesting_account?: (cosmos.vesting.v1beta1.IBaseVestingAccount|null);

                /** PeriodicVestingAccount start_time. */
                public start_time: Long;

                /** PeriodicVestingAccount vesting_periods. */
                public vesting_periods: cosmos.vesting.v1beta1.IPeriod[];

                /**
                 * Encodes the specified PeriodicVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.PeriodicVestingAccount.verify|verify} messages.
                 * @param message PeriodicVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IPeriodicVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PeriodicVestingAccount message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.PeriodicVestingAccount.verify|verify} messages.
                 * @param message PeriodicVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IPeriodicVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PeriodicVestingAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PeriodicVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.PeriodicVestingAccount;

                /**
                 * Decodes a PeriodicVestingAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PeriodicVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.PeriodicVestingAccount;

                /**
                 * Verifies a PeriodicVestingAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PeriodicVestingAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PeriodicVestingAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.PeriodicVestingAccount;

                /**
                 * Creates a plain object from a PeriodicVestingAccount message. Also converts values to other types if specified.
                 * @param message PeriodicVestingAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.PeriodicVestingAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PeriodicVestingAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateVestingAccount.
                 * @param request MsgCreateVestingAccount message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateVestingAccountResponse
                 */
                public createVestingAccount(request: cosmos.vesting.v1beta1.IMsgCreateVestingAccount, callback: cosmos.vesting.v1beta1.Msg.CreateVestingAccountCallback): void;

                /**
                 * Calls CreateVestingAccount.
                 * @param request MsgCreateVestingAccount message or plain object
                 * @returns Promise
                 */
                public createVestingAccount(request: cosmos.vesting.v1beta1.IMsgCreateVestingAccount): Promise<cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.vesting.v1beta1.Msg#createVestingAccount}.
                 * @param error Error, if any
                 * @param [response] MsgCreateVestingAccountResponse
                 */
                type CreateVestingAccountCallback = (error: (Error|null), response?: cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse) => void;
            }

            /** Properties of a MsgCreateVestingAccount. */
            interface IMsgCreateVestingAccount {

                /** MsgCreateVestingAccount from_address */
                from_address?: (string|null);

                /** MsgCreateVestingAccount to_address */
                to_address?: (string|null);

                /** MsgCreateVestingAccount amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** MsgCreateVestingAccount end_time */
                end_time?: (Long|null);

                /** MsgCreateVestingAccount delayed */
                delayed?: (boolean|null);
            }

            /** Represents a MsgCreateVestingAccount. */
            class MsgCreateVestingAccount implements IMsgCreateVestingAccount {

                /**
                 * Constructs a new MsgCreateVestingAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IMsgCreateVestingAccount);

                /** MsgCreateVestingAccount from_address. */
                public from_address: string;

                /** MsgCreateVestingAccount to_address. */
                public to_address: string;

                /** MsgCreateVestingAccount amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** MsgCreateVestingAccount end_time. */
                public end_time: Long;

                /** MsgCreateVestingAccount delayed. */
                public delayed: boolean;

                /**
                 * Encodes the specified MsgCreateVestingAccount message. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccount.verify|verify} messages.
                 * @param message MsgCreateVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IMsgCreateVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateVestingAccount message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccount.verify|verify} messages.
                 * @param message MsgCreateVestingAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IMsgCreateVestingAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateVestingAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.MsgCreateVestingAccount;

                /**
                 * Decodes a MsgCreateVestingAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateVestingAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.MsgCreateVestingAccount;

                /**
                 * Verifies a MsgCreateVestingAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateVestingAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateVestingAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.MsgCreateVestingAccount;

                /**
                 * Creates a plain object from a MsgCreateVestingAccount message. Also converts values to other types if specified.
                 * @param message MsgCreateVestingAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.MsgCreateVestingAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateVestingAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateVestingAccountResponse. */
            interface IMsgCreateVestingAccountResponse {
            }

            /** Represents a MsgCreateVestingAccountResponse. */
            class MsgCreateVestingAccountResponse implements IMsgCreateVestingAccountResponse {

                /**
                 * Constructs a new MsgCreateVestingAccountResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.vesting.v1beta1.IMsgCreateVestingAccountResponse);

                /**
                 * Encodes the specified MsgCreateVestingAccountResponse message. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.verify|verify} messages.
                 * @param message MsgCreateVestingAccountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.vesting.v1beta1.IMsgCreateVestingAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateVestingAccountResponse message, length delimited. Does not implicitly {@link cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.verify|verify} messages.
                 * @param message MsgCreateVestingAccountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.vesting.v1beta1.IMsgCreateVestingAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateVestingAccountResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateVestingAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse;

                /**
                 * Decodes a MsgCreateVestingAccountResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateVestingAccountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse;

                /**
                 * Verifies a MsgCreateVestingAccountResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateVestingAccountResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateVestingAccountResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse;

                /**
                 * Creates a plain object from a MsgCreateVestingAccountResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateVestingAccountResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateVestingAccountResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.Http;

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.Http;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule get. */
            public get: string;

            /** HttpRule put. */
            public put: string;

            /** HttpRule post. */
            public post: string;

            /** HttpRule delete. */
            public delete: string;

            /** HttpRule patch. */
            public patch: string;

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule body. */
            public body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpRule;

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpRule;

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.CustomHttpPattern;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.CustomHttpPattern;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpBody. */
        interface IHttpBody {

            /** HttpBody content_type */
            content_type?: (string|null);

            /** HttpBody data */
            data?: (Uint8Array|null);

            /** HttpBody extensions */
            extensions?: (google.protobuf.IAny[]|null);
        }

        /** Represents a HttpBody. */
        class HttpBody implements IHttpBody {

            /**
             * Constructs a new HttpBody.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpBody);

            /** HttpBody content_type. */
            public content_type: string;

            /** HttpBody data. */
            public data: Uint8Array;

            /** HttpBody extensions. */
            public extensions: google.protobuf.IAny[];

            /**
             * Encodes the specified HttpBody message. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
             * @param message HttpBody message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpBody, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpBody message, length delimited. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
             * @param message HttpBody message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpBody, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpBody message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpBody
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpBody;

            /**
             * Decodes a HttpBody message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpBody
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpBody;

            /**
             * Verifies a HttpBody message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpBody message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpBody
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpBody;

            /**
             * Creates a plain object from a HttpBody message. Also converts values to other types if specified.
             * @param message HttpBody
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpBody to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorSet;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorSet;

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorProto;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorProto;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto;

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldDescriptorProto;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldDescriptorProto;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofDescriptorProto;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofDescriptorProto;

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumDescriptorProto;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumDescriptorProto;

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueDescriptorProto;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueDescriptorProto;

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceDescriptorProto;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceDescriptorProto;

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodDescriptorProto;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodDescriptorProto;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FileOptions .gogoproto.goproto_getters_all */
            ".gogoproto.goproto_getters_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_prefix_all */
            ".gogoproto.goproto_enum_prefix_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_stringer_all */
            ".gogoproto.goproto_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.verbose_equal_all */
            ".gogoproto.verbose_equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.face_all */
            ".gogoproto.face_all"?: (boolean|null);

            /** FileOptions .gogoproto.gostring_all */
            ".gogoproto.gostring_all"?: (boolean|null);

            /** FileOptions .gogoproto.populate_all */
            ".gogoproto.populate_all"?: (boolean|null);

            /** FileOptions .gogoproto.stringer_all */
            ".gogoproto.stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.onlyone_all */
            ".gogoproto.onlyone_all"?: (boolean|null);

            /** FileOptions .gogoproto.equal_all */
            ".gogoproto.equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.description_all */
            ".gogoproto.description_all"?: (boolean|null);

            /** FileOptions .gogoproto.testgen_all */
            ".gogoproto.testgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.benchgen_all */
            ".gogoproto.benchgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.marshaler_all */
            ".gogoproto.marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unmarshaler_all */
            ".gogoproto.unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.stable_marshaler_all */
            ".gogoproto.stable_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.sizer_all */
            ".gogoproto.sizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_stringer_all */
            ".gogoproto.goproto_enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.enum_stringer_all */
            ".gogoproto.enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_marshaler_all */
            ".gogoproto.unsafe_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_unmarshaler_all */
            ".gogoproto.unsafe_unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_extensions_map_all */
            ".gogoproto.goproto_extensions_map_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unrecognized_all */
            ".gogoproto.goproto_unrecognized_all"?: (boolean|null);

            /** FileOptions .gogoproto.gogoproto_import */
            ".gogoproto.gogoproto_import"?: (boolean|null);

            /** FileOptions .gogoproto.protosizer_all */
            ".gogoproto.protosizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.compare_all */
            ".gogoproto.compare_all"?: (boolean|null);

            /** FileOptions .gogoproto.typedecl_all */
            ".gogoproto.typedecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.enumdecl_all */
            ".gogoproto.enumdecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_registration */
            ".gogoproto.goproto_registration"?: (boolean|null);

            /** FileOptions .gogoproto.messagename_all */
            ".gogoproto.messagename_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_sizecache_all */
            ".gogoproto.goproto_sizecache_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unkeyed_all */
            ".gogoproto.goproto_unkeyed_all"?: (boolean|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileOptions;

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileOptions;

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .cosmos_proto.interface_type */
            ".cosmos_proto.interface_type"?: (string|null);

            /** MessageOptions .cosmos_proto.implements_interface */
            ".cosmos_proto.implements_interface"?: (string|null);

            /** MessageOptions .gogoproto.goproto_getters */
            ".gogoproto.goproto_getters"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_stringer */
            ".gogoproto.goproto_stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.verbose_equal */
            ".gogoproto.verbose_equal"?: (boolean|null);

            /** MessageOptions .gogoproto.face */
            ".gogoproto.face"?: (boolean|null);

            /** MessageOptions .gogoproto.gostring */
            ".gogoproto.gostring"?: (boolean|null);

            /** MessageOptions .gogoproto.populate */
            ".gogoproto.populate"?: (boolean|null);

            /** MessageOptions .gogoproto.stringer */
            ".gogoproto.stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.onlyone */
            ".gogoproto.onlyone"?: (boolean|null);

            /** MessageOptions .gogoproto.equal */
            ".gogoproto.equal"?: (boolean|null);

            /** MessageOptions .gogoproto.description */
            ".gogoproto.description"?: (boolean|null);

            /** MessageOptions .gogoproto.testgen */
            ".gogoproto.testgen"?: (boolean|null);

            /** MessageOptions .gogoproto.benchgen */
            ".gogoproto.benchgen"?: (boolean|null);

            /** MessageOptions .gogoproto.marshaler */
            ".gogoproto.marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unmarshaler */
            ".gogoproto.unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.stable_marshaler */
            ".gogoproto.stable_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.sizer */
            ".gogoproto.sizer"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_marshaler */
            ".gogoproto.unsafe_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_unmarshaler */
            ".gogoproto.unsafe_unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_extensions_map */
            ".gogoproto.goproto_extensions_map"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unrecognized */
            ".gogoproto.goproto_unrecognized"?: (boolean|null);

            /** MessageOptions .gogoproto.protosizer */
            ".gogoproto.protosizer"?: (boolean|null);

            /** MessageOptions .gogoproto.compare */
            ".gogoproto.compare"?: (boolean|null);

            /** MessageOptions .gogoproto.typedecl */
            ".gogoproto.typedecl"?: (boolean|null);

            /** MessageOptions .gogoproto.messagename */
            ".gogoproto.messagename"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_sizecache */
            ".gogoproto.goproto_sizecache"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unkeyed */
            ".gogoproto.goproto_unkeyed"?: (boolean|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MessageOptions;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MessageOptions;

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .cosmos_proto.accepts_interface */
            ".cosmos_proto.accepts_interface"?: (string|null);

            /** FieldOptions .gogoproto.nullable */
            ".gogoproto.nullable"?: (boolean|null);

            /** FieldOptions .gogoproto.embed */
            ".gogoproto.embed"?: (boolean|null);

            /** FieldOptions .gogoproto.customtype */
            ".gogoproto.customtype"?: (string|null);

            /** FieldOptions .gogoproto.customname */
            ".gogoproto.customname"?: (string|null);

            /** FieldOptions .gogoproto.jsontag */
            ".gogoproto.jsontag"?: (string|null);

            /** FieldOptions .gogoproto.moretags */
            ".gogoproto.moretags"?: (string|null);

            /** FieldOptions .gogoproto.casttype */
            ".gogoproto.casttype"?: (string|null);

            /** FieldOptions .gogoproto.castkey */
            ".gogoproto.castkey"?: (string|null);

            /** FieldOptions .gogoproto.castvalue */
            ".gogoproto.castvalue"?: (string|null);

            /** FieldOptions .gogoproto.stdtime */
            ".gogoproto.stdtime"?: (boolean|null);

            /** FieldOptions .gogoproto.stdduration */
            ".gogoproto.stdduration"?: (boolean|null);

            /** FieldOptions .gogoproto.wktpointer */
            ".gogoproto.wktpointer"?: (boolean|null);

            /** FieldOptions .gogoproto.castrepeated */
            ".gogoproto.castrepeated"?: (string|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldOptions;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldOptions;

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofOptions;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofOptions;

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumOptions .gogoproto.goproto_enum_prefix */
            ".gogoproto.goproto_enum_prefix"?: (boolean|null);

            /** EnumOptions .gogoproto.goproto_enum_stringer */
            ".gogoproto.goproto_enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_stringer */
            ".gogoproto.enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_customname */
            ".gogoproto.enum_customname"?: (string|null);

            /** EnumOptions .gogoproto.enumdecl */
            ".gogoproto.enumdecl"?: (boolean|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumOptions;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumOptions;

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumValueOptions .gogoproto.enumvalue_customname */
            ".gogoproto.enumvalue_customname"?: (string|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueOptions;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueOptions;

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceOptions;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceOptions;

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodOptions;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodOptions;

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (Long|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (Long|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: Long;

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: Long;

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo;

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo;

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: Long;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (Long|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: Long;

            /** Duration nanos. */
            public nanos: number;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Duration;

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Duration;

            /**
             * Verifies a Duration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Duration
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Duration;

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @param message Duration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Duration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace ibc. */
export namespace ibc {

    /** Namespace applications. */
    namespace applications {

        /** Namespace transfer. */
        namespace transfer {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls DenomTrace.
                     * @param request QueryDenomTraceRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryDenomTraceResponse
                     */
                    public denomTrace(request: ibc.applications.transfer.v1.IQueryDenomTraceRequest, callback: ibc.applications.transfer.v1.Query.DenomTraceCallback): void;

                    /**
                     * Calls DenomTrace.
                     * @param request QueryDenomTraceRequest message or plain object
                     * @returns Promise
                     */
                    public denomTrace(request: ibc.applications.transfer.v1.IQueryDenomTraceRequest): Promise<ibc.applications.transfer.v1.QueryDenomTraceResponse>;

                    /**
                     * Calls DenomTraces.
                     * @param request QueryDenomTracesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryDenomTracesResponse
                     */
                    public denomTraces(request: ibc.applications.transfer.v1.IQueryDenomTracesRequest, callback: ibc.applications.transfer.v1.Query.DenomTracesCallback): void;

                    /**
                     * Calls DenomTraces.
                     * @param request QueryDenomTracesRequest message or plain object
                     * @returns Promise
                     */
                    public denomTraces(request: ibc.applications.transfer.v1.IQueryDenomTracesRequest): Promise<ibc.applications.transfer.v1.QueryDenomTracesResponse>;

                    /**
                     * Calls Params.
                     * @param request QueryParamsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                     */
                    public params(request: ibc.applications.transfer.v1.IQueryParamsRequest, callback: ibc.applications.transfer.v1.Query.ParamsCallback): void;

                    /**
                     * Calls Params.
                     * @param request QueryParamsRequest message or plain object
                     * @returns Promise
                     */
                    public params(request: ibc.applications.transfer.v1.IQueryParamsRequest): Promise<ibc.applications.transfer.v1.QueryParamsResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#denomTrace}.
                     * @param error Error, if any
                     * @param [response] QueryDenomTraceResponse
                     */
                    type DenomTraceCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryDenomTraceResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#denomTraces}.
                     * @param error Error, if any
                     * @param [response] QueryDenomTracesResponse
                     */
                    type DenomTracesCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryDenomTracesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#params}.
                     * @param error Error, if any
                     * @param [response] QueryParamsResponse
                     */
                    type ParamsCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryParamsResponse) => void;
                }

                /** Properties of a QueryDenomTraceRequest. */
                interface IQueryDenomTraceRequest {

                    /** QueryDenomTraceRequest hash */
                    hash?: (string|null);
                }

                /** Represents a QueryDenomTraceRequest. */
                class QueryDenomTraceRequest implements IQueryDenomTraceRequest {

                    /**
                     * Constructs a new QueryDenomTraceRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTraceRequest);

                    /** QueryDenomTraceRequest hash. */
                    public hash: string;

                    /**
                     * Encodes the specified QueryDenomTraceRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceRequest.verify|verify} messages.
                     * @param message QueryDenomTraceRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTraceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTraceRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceRequest.verify|verify} messages.
                     * @param message QueryDenomTraceRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTraceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTraceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Decodes a QueryDenomTraceRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTraceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Verifies a QueryDenomTraceRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTraceRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTraceRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Creates a plain object from a QueryDenomTraceRequest message. Also converts values to other types if specified.
                     * @param message QueryDenomTraceRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTraceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTraceRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTraceResponse. */
                interface IQueryDenomTraceResponse {

                    /** QueryDenomTraceResponse denom_trace */
                    denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);
                }

                /** Represents a QueryDenomTraceResponse. */
                class QueryDenomTraceResponse implements IQueryDenomTraceResponse {

                    /**
                     * Constructs a new QueryDenomTraceResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTraceResponse);

                    /** QueryDenomTraceResponse denom_trace. */
                    public denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);

                    /**
                     * Encodes the specified QueryDenomTraceResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceResponse.verify|verify} messages.
                     * @param message QueryDenomTraceResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTraceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTraceResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceResponse.verify|verify} messages.
                     * @param message QueryDenomTraceResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTraceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTraceResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Decodes a QueryDenomTraceResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTraceResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Verifies a QueryDenomTraceResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTraceResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTraceResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Creates a plain object from a QueryDenomTraceResponse message. Also converts values to other types if specified.
                     * @param message QueryDenomTraceResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTraceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTraceResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTracesRequest. */
                interface IQueryDenomTracesRequest {

                    /** QueryDenomTracesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryDenomTracesRequest. */
                class QueryDenomTracesRequest implements IQueryDenomTracesRequest {

                    /**
                     * Constructs a new QueryDenomTracesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTracesRequest);

                    /** QueryDenomTracesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryDenomTracesRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesRequest.verify|verify} messages.
                     * @param message QueryDenomTracesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTracesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTracesRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesRequest.verify|verify} messages.
                     * @param message QueryDenomTracesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTracesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTracesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Decodes a QueryDenomTracesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTracesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Verifies a QueryDenomTracesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTracesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTracesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Creates a plain object from a QueryDenomTracesRequest message. Also converts values to other types if specified.
                     * @param message QueryDenomTracesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTracesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTracesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTracesResponse. */
                interface IQueryDenomTracesResponse {

                    /** QueryDenomTracesResponse denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** QueryDenomTracesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryDenomTracesResponse. */
                class QueryDenomTracesResponse implements IQueryDenomTracesResponse {

                    /**
                     * Constructs a new QueryDenomTracesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTracesResponse);

                    /** QueryDenomTracesResponse denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** QueryDenomTracesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryDenomTracesResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesResponse.verify|verify} messages.
                     * @param message QueryDenomTracesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTracesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTracesResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesResponse.verify|verify} messages.
                     * @param message QueryDenomTracesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTracesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTracesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Decodes a QueryDenomTracesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTracesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Verifies a QueryDenomTracesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTracesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTracesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Creates a plain object from a QueryDenomTracesResponse message. Also converts values to other types if specified.
                     * @param message QueryDenomTracesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTracesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTracesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryParamsRequest. */
                interface IQueryParamsRequest {
                }

                /** Represents a QueryParamsRequest. */
                class QueryParamsRequest implements IQueryParamsRequest {

                    /**
                     * Constructs a new QueryParamsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryParamsRequest);

                    /**
                     * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsRequest.verify|verify} messages.
                     * @param message QueryParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsRequest.verify|verify} messages.
                     * @param message QueryParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Verifies a QueryParamsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryParamsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                     * @param message QueryParamsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryParamsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryParamsResponse. */
                interface IQueryParamsResponse {

                    /** QueryParamsResponse params */
                    params?: (ibc.applications.transfer.v1.IParams|null);
                }

                /** Represents a QueryParamsResponse. */
                class QueryParamsResponse implements IQueryParamsResponse {

                    /**
                     * Constructs a new QueryParamsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryParamsResponse);

                    /** QueryParamsResponse params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /**
                     * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsResponse.verify|verify} messages.
                     * @param message QueryParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsResponse.verify|verify} messages.
                     * @param message QueryParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Verifies a QueryParamsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryParamsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                     * @param message QueryParamsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryParamsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState port_id */
                    port_id?: (string|null);

                    /** GenesisState denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** GenesisState params */
                    params?: (ibc.applications.transfer.v1.IParams|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IGenesisState);

                    /** GenesisState port_id. */
                    public port_id: string;

                    /** GenesisState denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** GenesisState params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.applications.transfer.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a FungibleTokenPacketData. */
                interface IFungibleTokenPacketData {

                    /** FungibleTokenPacketData denom */
                    denom?: (string|null);

                    /** FungibleTokenPacketData amount */
                    amount?: (Long|null);

                    /** FungibleTokenPacketData sender */
                    sender?: (string|null);

                    /** FungibleTokenPacketData receiver */
                    receiver?: (string|null);
                }

                /** Represents a FungibleTokenPacketData. */
                class FungibleTokenPacketData implements IFungibleTokenPacketData {

                    /**
                     * Constructs a new FungibleTokenPacketData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IFungibleTokenPacketData);

                    /** FungibleTokenPacketData denom. */
                    public denom: string;

                    /** FungibleTokenPacketData amount. */
                    public amount: Long;

                    /** FungibleTokenPacketData sender. */
                    public sender: string;

                    /** FungibleTokenPacketData receiver. */
                    public receiver: string;

                    /**
                     * Encodes the specified FungibleTokenPacketData message. Does not implicitly {@link ibc.applications.transfer.v1.FungibleTokenPacketData.verify|verify} messages.
                     * @param message FungibleTokenPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IFungibleTokenPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified FungibleTokenPacketData message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.FungibleTokenPacketData.verify|verify} messages.
                     * @param message FungibleTokenPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IFungibleTokenPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a FungibleTokenPacketData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns FungibleTokenPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.FungibleTokenPacketData;

                    /**
                     * Decodes a FungibleTokenPacketData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns FungibleTokenPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.FungibleTokenPacketData;

                    /**
                     * Verifies a FungibleTokenPacketData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a FungibleTokenPacketData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns FungibleTokenPacketData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.FungibleTokenPacketData;

                    /**
                     * Creates a plain object from a FungibleTokenPacketData message. Also converts values to other types if specified.
                     * @param message FungibleTokenPacketData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.FungibleTokenPacketData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this FungibleTokenPacketData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a DenomTrace. */
                interface IDenomTrace {

                    /** DenomTrace path */
                    path?: (string|null);

                    /** DenomTrace base_denom */
                    base_denom?: (string|null);
                }

                /** Represents a DenomTrace. */
                class DenomTrace implements IDenomTrace {

                    /**
                     * Constructs a new DenomTrace.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IDenomTrace);

                    /** DenomTrace path. */
                    public path: string;

                    /** DenomTrace base_denom. */
                    public base_denom: string;

                    /**
                     * Encodes the specified DenomTrace message. Does not implicitly {@link ibc.applications.transfer.v1.DenomTrace.verify|verify} messages.
                     * @param message DenomTrace message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IDenomTrace, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified DenomTrace message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.DenomTrace.verify|verify} messages.
                     * @param message DenomTrace message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IDenomTrace, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a DenomTrace message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns DenomTrace
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Decodes a DenomTrace message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns DenomTrace
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Verifies a DenomTrace message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a DenomTrace message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns DenomTrace
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Creates a plain object from a DenomTrace message. Also converts values to other types if specified.
                     * @param message DenomTrace
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.DenomTrace, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this DenomTrace to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params send_enabled */
                    send_enabled?: (boolean|null);

                    /** Params receive_enabled */
                    receive_enabled?: (boolean|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IParams);

                    /** Params send_enabled. */
                    public send_enabled: boolean;

                    /** Params receive_enabled. */
                    public receive_enabled: boolean;

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.applications.transfer.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.Params;

                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.Params;

                    /**
                     * Verifies a Params message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Params
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.Params;

                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @param message Params
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Params to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Transfer.
                     * @param request MsgTransfer message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTransferResponse
                     */
                    public transfer(request: ibc.applications.transfer.v1.IMsgTransfer, callback: ibc.applications.transfer.v1.Msg.TransferCallback): void;

                    /**
                     * Calls Transfer.
                     * @param request MsgTransfer message or plain object
                     * @returns Promise
                     */
                    public transfer(request: ibc.applications.transfer.v1.IMsgTransfer): Promise<ibc.applications.transfer.v1.MsgTransferResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Msg#transfer}.
                     * @param error Error, if any
                     * @param [response] MsgTransferResponse
                     */
                    type TransferCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.MsgTransferResponse) => void;
                }

                /** Properties of a MsgTransfer. */
                interface IMsgTransfer {

                    /** MsgTransfer source_port */
                    source_port?: (string|null);

                    /** MsgTransfer source_channel */
                    source_channel?: (string|null);

                    /** MsgTransfer token */
                    token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender */
                    sender?: (string|null);

                    /** MsgTransfer receiver */
                    receiver?: (string|null);

                    /** MsgTransfer timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp */
                    timeout_timestamp?: (Long|null);
                }

                /** Represents a MsgTransfer. */
                class MsgTransfer implements IMsgTransfer {

                    /**
                     * Constructs a new MsgTransfer.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IMsgTransfer);

                    /** MsgTransfer source_port. */
                    public source_port: string;

                    /** MsgTransfer source_channel. */
                    public source_channel: string;

                    /** MsgTransfer token. */
                    public token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender. */
                    public sender: string;

                    /** MsgTransfer receiver. */
                    public receiver: string;

                    /** MsgTransfer timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /**
                     * Encodes the specified MsgTransfer message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransfer.verify|verify} messages.
                     * @param message MsgTransfer message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IMsgTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTransfer message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransfer.verify|verify} messages.
                     * @param message MsgTransfer message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IMsgTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransfer message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTransfer
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Decodes a MsgTransfer message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTransfer
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Verifies a MsgTransfer message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTransfer message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTransfer
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Creates a plain object from a MsgTransfer message. Also converts values to other types if specified.
                     * @param message MsgTransfer
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.MsgTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTransfer to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTransferResponse. */
                interface IMsgTransferResponse {
                }

                /** Represents a MsgTransferResponse. */
                class MsgTransferResponse implements IMsgTransferResponse {

                    /**
                     * Constructs a new MsgTransferResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IMsgTransferResponse);

                    /**
                     * Encodes the specified MsgTransferResponse message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransferResponse.verify|verify} messages.
                     * @param message MsgTransferResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IMsgTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTransferResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransferResponse.verify|verify} messages.
                     * @param message MsgTransferResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IMsgTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransferResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTransferResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Decodes a MsgTransferResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTransferResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Verifies a MsgTransferResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTransferResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTransferResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Creates a plain object from a MsgTransferResponse message. Also converts values to other types if specified.
                     * @param message MsgTransferResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.MsgTransferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTransferResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace core. */
    namespace core {

        /** Namespace channel. */
        namespace channel {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Channel.
                     * @param request QueryChannelRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelResponse
                     */
                    public channel(request: ibc.core.channel.v1.IQueryChannelRequest, callback: ibc.core.channel.v1.Query.ChannelCallback): void;

                    /**
                     * Calls Channel.
                     * @param request QueryChannelRequest message or plain object
                     * @returns Promise
                     */
                    public channel(request: ibc.core.channel.v1.IQueryChannelRequest): Promise<ibc.core.channel.v1.QueryChannelResponse>;

                    /**
                     * Calls Channels.
                     * @param request QueryChannelsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelsResponse
                     */
                    public channels(request: ibc.core.channel.v1.IQueryChannelsRequest, callback: ibc.core.channel.v1.Query.ChannelsCallback): void;

                    /**
                     * Calls Channels.
                     * @param request QueryChannelsRequest message or plain object
                     * @returns Promise
                     */
                    public channels(request: ibc.core.channel.v1.IQueryChannelsRequest): Promise<ibc.core.channel.v1.QueryChannelsResponse>;

                    /**
                     * Calls ConnectionChannels.
                     * @param request QueryConnectionChannelsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionChannelsResponse
                     */
                    public connectionChannels(request: ibc.core.channel.v1.IQueryConnectionChannelsRequest, callback: ibc.core.channel.v1.Query.ConnectionChannelsCallback): void;

                    /**
                     * Calls ConnectionChannels.
                     * @param request QueryConnectionChannelsRequest message or plain object
                     * @returns Promise
                     */
                    public connectionChannels(request: ibc.core.channel.v1.IQueryConnectionChannelsRequest): Promise<ibc.core.channel.v1.QueryConnectionChannelsResponse>;

                    /**
                     * Calls ChannelClientState.
                     * @param request QueryChannelClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelClientStateResponse
                     */
                    public channelClientState(request: ibc.core.channel.v1.IQueryChannelClientStateRequest, callback: ibc.core.channel.v1.Query.ChannelClientStateCallback): void;

                    /**
                     * Calls ChannelClientState.
                     * @param request QueryChannelClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public channelClientState(request: ibc.core.channel.v1.IQueryChannelClientStateRequest): Promise<ibc.core.channel.v1.QueryChannelClientStateResponse>;

                    /**
                     * Calls ChannelConsensusState.
                     * @param request QueryChannelConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelConsensusStateResponse
                     */
                    public channelConsensusState(request: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, callback: ibc.core.channel.v1.Query.ChannelConsensusStateCallback): void;

                    /**
                     * Calls ChannelConsensusState.
                     * @param request QueryChannelConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public channelConsensusState(request: ibc.core.channel.v1.IQueryChannelConsensusStateRequest): Promise<ibc.core.channel.v1.QueryChannelConsensusStateResponse>;

                    /**
                     * Calls PacketCommitment.
                     * @param request QueryPacketCommitmentRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketCommitmentResponse
                     */
                    public packetCommitment(request: ibc.core.channel.v1.IQueryPacketCommitmentRequest, callback: ibc.core.channel.v1.Query.PacketCommitmentCallback): void;

                    /**
                     * Calls PacketCommitment.
                     * @param request QueryPacketCommitmentRequest message or plain object
                     * @returns Promise
                     */
                    public packetCommitment(request: ibc.core.channel.v1.IQueryPacketCommitmentRequest): Promise<ibc.core.channel.v1.QueryPacketCommitmentResponse>;

                    /**
                     * Calls PacketCommitments.
                     * @param request QueryPacketCommitmentsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketCommitmentsResponse
                     */
                    public packetCommitments(request: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, callback: ibc.core.channel.v1.Query.PacketCommitmentsCallback): void;

                    /**
                     * Calls PacketCommitments.
                     * @param request QueryPacketCommitmentsRequest message or plain object
                     * @returns Promise
                     */
                    public packetCommitments(request: ibc.core.channel.v1.IQueryPacketCommitmentsRequest): Promise<ibc.core.channel.v1.QueryPacketCommitmentsResponse>;

                    /**
                     * Calls PacketReceipt.
                     * @param request QueryPacketReceiptRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketReceiptResponse
                     */
                    public packetReceipt(request: ibc.core.channel.v1.IQueryPacketReceiptRequest, callback: ibc.core.channel.v1.Query.PacketReceiptCallback): void;

                    /**
                     * Calls PacketReceipt.
                     * @param request QueryPacketReceiptRequest message or plain object
                     * @returns Promise
                     */
                    public packetReceipt(request: ibc.core.channel.v1.IQueryPacketReceiptRequest): Promise<ibc.core.channel.v1.QueryPacketReceiptResponse>;

                    /**
                     * Calls PacketAcknowledgement.
                     * @param request QueryPacketAcknowledgementRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketAcknowledgementResponse
                     */
                    public packetAcknowledgement(request: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, callback: ibc.core.channel.v1.Query.PacketAcknowledgementCallback): void;

                    /**
                     * Calls PacketAcknowledgement.
                     * @param request QueryPacketAcknowledgementRequest message or plain object
                     * @returns Promise
                     */
                    public packetAcknowledgement(request: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest): Promise<ibc.core.channel.v1.QueryPacketAcknowledgementResponse>;

                    /**
                     * Calls PacketAcknowledgements.
                     * @param request QueryPacketAcknowledgementsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketAcknowledgementsResponse
                     */
                    public packetAcknowledgements(request: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, callback: ibc.core.channel.v1.Query.PacketAcknowledgementsCallback): void;

                    /**
                     * Calls PacketAcknowledgements.
                     * @param request QueryPacketAcknowledgementsRequest message or plain object
                     * @returns Promise
                     */
                    public packetAcknowledgements(request: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest): Promise<ibc.core.channel.v1.QueryPacketAcknowledgementsResponse>;

                    /**
                     * Calls UnreceivedPackets.
                     * @param request QueryUnreceivedPacketsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUnreceivedPacketsResponse
                     */
                    public unreceivedPackets(request: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, callback: ibc.core.channel.v1.Query.UnreceivedPacketsCallback): void;

                    /**
                     * Calls UnreceivedPackets.
                     * @param request QueryUnreceivedPacketsRequest message or plain object
                     * @returns Promise
                     */
                    public unreceivedPackets(request: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest): Promise<ibc.core.channel.v1.QueryUnreceivedPacketsResponse>;

                    /**
                     * Calls UnreceivedAcks.
                     * @param request QueryUnreceivedAcksRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUnreceivedAcksResponse
                     */
                    public unreceivedAcks(request: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, callback: ibc.core.channel.v1.Query.UnreceivedAcksCallback): void;

                    /**
                     * Calls UnreceivedAcks.
                     * @param request QueryUnreceivedAcksRequest message or plain object
                     * @returns Promise
                     */
                    public unreceivedAcks(request: ibc.core.channel.v1.IQueryUnreceivedAcksRequest): Promise<ibc.core.channel.v1.QueryUnreceivedAcksResponse>;

                    /**
                     * Calls NextSequenceReceive.
                     * @param request QueryNextSequenceReceiveRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryNextSequenceReceiveResponse
                     */
                    public nextSequenceReceive(request: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, callback: ibc.core.channel.v1.Query.NextSequenceReceiveCallback): void;

                    /**
                     * Calls NextSequenceReceive.
                     * @param request QueryNextSequenceReceiveRequest message or plain object
                     * @returns Promise
                     */
                    public nextSequenceReceive(request: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest): Promise<ibc.core.channel.v1.QueryNextSequenceReceiveResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channel}.
                     * @param error Error, if any
                     * @param [response] QueryChannelResponse
                     */
                    type ChannelCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channels}.
                     * @param error Error, if any
                     * @param [response] QueryChannelsResponse
                     */
                    type ChannelsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#connectionChannels}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionChannelsResponse
                     */
                    type ConnectionChannelsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryConnectionChannelsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channelClientState}.
                     * @param error Error, if any
                     * @param [response] QueryChannelClientStateResponse
                     */
                    type ChannelClientStateCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channelConsensusState}.
                     * @param error Error, if any
                     * @param [response] QueryChannelConsensusStateResponse
                     */
                    type ChannelConsensusStateCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelConsensusStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetCommitment}.
                     * @param error Error, if any
                     * @param [response] QueryPacketCommitmentResponse
                     */
                    type PacketCommitmentCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketCommitmentResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetCommitments}.
                     * @param error Error, if any
                     * @param [response] QueryPacketCommitmentsResponse
                     */
                    type PacketCommitmentsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketCommitmentsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetReceipt}.
                     * @param error Error, if any
                     * @param [response] QueryPacketReceiptResponse
                     */
                    type PacketReceiptCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketReceiptResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetAcknowledgement}.
                     * @param error Error, if any
                     * @param [response] QueryPacketAcknowledgementResponse
                     */
                    type PacketAcknowledgementCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketAcknowledgementResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetAcknowledgements}.
                     * @param error Error, if any
                     * @param [response] QueryPacketAcknowledgementsResponse
                     */
                    type PacketAcknowledgementsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketAcknowledgementsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#unreceivedPackets}.
                     * @param error Error, if any
                     * @param [response] QueryUnreceivedPacketsResponse
                     */
                    type UnreceivedPacketsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryUnreceivedPacketsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#unreceivedAcks}.
                     * @param error Error, if any
                     * @param [response] QueryUnreceivedAcksResponse
                     */
                    type UnreceivedAcksCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryUnreceivedAcksResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#nextSequenceReceive}.
                     * @param error Error, if any
                     * @param [response] QueryNextSequenceReceiveResponse
                     */
                    type NextSequenceReceiveCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryNextSequenceReceiveResponse) => void;
                }

                /** Properties of a QueryChannelRequest. */
                interface IQueryChannelRequest {

                    /** QueryChannelRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelRequest. */
                class QueryChannelRequest implements IQueryChannelRequest {

                    /**
                     * Constructs a new QueryChannelRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelRequest);

                    /** QueryChannelRequest port_id. */
                    public port_id: string;

                    /** QueryChannelRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelRequest.verify|verify} messages.
                     * @param message QueryChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelRequest.verify|verify} messages.
                     * @param message QueryChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Decodes a QueryChannelRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Verifies a QueryChannelRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Creates a plain object from a QueryChannelRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelResponse. */
                interface IQueryChannelResponse {

                    /** QueryChannelResponse channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelResponse. */
                class QueryChannelResponse implements IQueryChannelResponse {

                    /**
                     * Constructs a new QueryChannelResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelResponse);

                    /** QueryChannelResponse channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelResponse.verify|verify} messages.
                     * @param message QueryChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelResponse.verify|verify} messages.
                     * @param message QueryChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Decodes a QueryChannelResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Verifies a QueryChannelResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Creates a plain object from a QueryChannelResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelsRequest. */
                interface IQueryChannelsRequest {

                    /** QueryChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryChannelsRequest. */
                class QueryChannelsRequest implements IQueryChannelsRequest {

                    /**
                     * Constructs a new QueryChannelsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelsRequest);

                    /** QueryChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsRequest.verify|verify} messages.
                     * @param message QueryChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsRequest.verify|verify} messages.
                     * @param message QueryChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Decodes a QueryChannelsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Verifies a QueryChannelsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Creates a plain object from a QueryChannelsRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelsResponse. */
                interface IQueryChannelsResponse {

                    /** QueryChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelsResponse. */
                class QueryChannelsResponse implements IQueryChannelsResponse {

                    /**
                     * Constructs a new QueryChannelsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelsResponse);

                    /** QueryChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsResponse.verify|verify} messages.
                     * @param message QueryChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsResponse.verify|verify} messages.
                     * @param message QueryChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Decodes a QueryChannelsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Verifies a QueryChannelsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Creates a plain object from a QueryChannelsResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionChannelsRequest. */
                interface IQueryConnectionChannelsRequest {

                    /** QueryConnectionChannelsRequest connection */
                    connection?: (string|null);

                    /** QueryConnectionChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionChannelsRequest. */
                class QueryConnectionChannelsRequest implements IQueryConnectionChannelsRequest {

                    /**
                     * Constructs a new QueryConnectionChannelsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryConnectionChannelsRequest);

                    /** QueryConnectionChannelsRequest connection. */
                    public connection: string;

                    /** QueryConnectionChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsRequest.verify|verify} messages.
                     * @param message QueryConnectionChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryConnectionChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionChannelsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsRequest.verify|verify} messages.
                     * @param message QueryConnectionChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryConnectionChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Decodes a QueryConnectionChannelsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Verifies a QueryConnectionChannelsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionChannelsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Creates a plain object from a QueryConnectionChannelsRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionChannelsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryConnectionChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionChannelsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionChannelsResponse. */
                interface IQueryConnectionChannelsResponse {

                    /** QueryConnectionChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryConnectionChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionChannelsResponse. */
                class QueryConnectionChannelsResponse implements IQueryConnectionChannelsResponse {

                    /**
                     * Constructs a new QueryConnectionChannelsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryConnectionChannelsResponse);

                    /** QueryConnectionChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryConnectionChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsResponse.verify|verify} messages.
                     * @param message QueryConnectionChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryConnectionChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionChannelsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsResponse.verify|verify} messages.
                     * @param message QueryConnectionChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryConnectionChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Decodes a QueryConnectionChannelsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Verifies a QueryConnectionChannelsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionChannelsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Creates a plain object from a QueryConnectionChannelsResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionChannelsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryConnectionChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionChannelsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelClientStateRequest. */
                interface IQueryChannelClientStateRequest {

                    /** QueryChannelClientStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelClientStateRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelClientStateRequest. */
                class QueryChannelClientStateRequest implements IQueryChannelClientStateRequest {

                    /**
                     * Constructs a new QueryChannelClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelClientStateRequest);

                    /** QueryChannelClientStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelClientStateRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelClientStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateRequest.verify|verify} messages.
                     * @param message QueryChannelClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateRequest.verify|verify} messages.
                     * @param message QueryChannelClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Decodes a QueryChannelClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Verifies a QueryChannelClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Creates a plain object from a QueryChannelClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelClientStateResponse. */
                interface IQueryChannelClientStateResponse {

                    /** QueryChannelClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelClientStateResponse. */
                class QueryChannelClientStateResponse implements IQueryChannelClientStateResponse {

                    /**
                     * Constructs a new QueryChannelClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelClientStateResponse);

                    /** QueryChannelClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelClientStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateResponse.verify|verify} messages.
                     * @param message QueryChannelClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateResponse.verify|verify} messages.
                     * @param message QueryChannelClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Decodes a QueryChannelClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Verifies a QueryChannelClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Creates a plain object from a QueryChannelClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelConsensusStateRequest. */
                interface IQueryChannelConsensusStateRequest {

                    /** QueryChannelConsensusStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelConsensusStateRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryChannelConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryChannelConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryChannelConsensusStateRequest. */
                class QueryChannelConsensusStateRequest implements IQueryChannelConsensusStateRequest {

                    /**
                     * Constructs a new QueryChannelConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelConsensusStateRequest);

                    /** QueryChannelConsensusStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelConsensusStateRequest channel_id. */
                    public channel_id: string;

                    /** QueryChannelConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryChannelConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryChannelConsensusStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateRequest.verify|verify} messages.
                     * @param message QueryChannelConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateRequest.verify|verify} messages.
                     * @param message QueryChannelConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Decodes a QueryChannelConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Verifies a QueryChannelConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryChannelConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelConsensusStateResponse. */
                interface IQueryChannelConsensusStateResponse {

                    /** QueryChannelConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryChannelConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelConsensusStateResponse. */
                class QueryChannelConsensusStateResponse implements IQueryChannelConsensusStateResponse {

                    /**
                     * Constructs a new QueryChannelConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelConsensusStateResponse);

                    /** QueryChannelConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryChannelConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelConsensusStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateResponse.verify|verify} messages.
                     * @param message QueryChannelConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateResponse.verify|verify} messages.
                     * @param message QueryChannelConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Decodes a QueryChannelConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Verifies a QueryChannelConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryChannelConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentRequest. */
                interface IQueryPacketCommitmentRequest {

                    /** QueryPacketCommitmentRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketCommitmentRequest. */
                class QueryPacketCommitmentRequest implements IQueryPacketCommitmentRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentRequest);

                    /** QueryPacketCommitmentRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketCommitmentRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Decodes a QueryPacketCommitmentRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Verifies a QueryPacketCommitmentRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentResponse. */
                interface IQueryPacketCommitmentResponse {

                    /** QueryPacketCommitmentResponse commitment */
                    commitment?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentResponse. */
                class QueryPacketCommitmentResponse implements IQueryPacketCommitmentResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentResponse);

                    /** QueryPacketCommitmentResponse commitment. */
                    public commitment: Uint8Array;

                    /** QueryPacketCommitmentResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketCommitmentResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Decodes a QueryPacketCommitmentResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Verifies a QueryPacketCommitmentResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentsRequest. */
                interface IQueryPacketCommitmentsRequest {

                    /** QueryPacketCommitmentsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryPacketCommitmentsRequest. */
                class QueryPacketCommitmentsRequest implements IQueryPacketCommitmentsRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentsRequest);

                    /** QueryPacketCommitmentsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Decodes a QueryPacketCommitmentsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Verifies a QueryPacketCommitmentsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentsRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentsResponse. */
                interface IQueryPacketCommitmentsResponse {

                    /** QueryPacketCommitmentsResponse commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketCommitmentsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentsResponse. */
                class QueryPacketCommitmentsResponse implements IQueryPacketCommitmentsResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentsResponse);

                    /** QueryPacketCommitmentsResponse commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketCommitmentsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Decodes a QueryPacketCommitmentsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Verifies a QueryPacketCommitmentsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentsResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketReceiptRequest. */
                interface IQueryPacketReceiptRequest {

                    /** QueryPacketReceiptRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketReceiptRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketReceiptRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketReceiptRequest. */
                class QueryPacketReceiptRequest implements IQueryPacketReceiptRequest {

                    /**
                     * Constructs a new QueryPacketReceiptRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketReceiptRequest);

                    /** QueryPacketReceiptRequest port_id. */
                    public port_id: string;

                    /** QueryPacketReceiptRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketReceiptRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketReceiptRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptRequest.verify|verify} messages.
                     * @param message QueryPacketReceiptRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketReceiptRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketReceiptRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptRequest.verify|verify} messages.
                     * @param message QueryPacketReceiptRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketReceiptRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketReceiptRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Decodes a QueryPacketReceiptRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketReceiptRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Verifies a QueryPacketReceiptRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketReceiptRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketReceiptRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Creates a plain object from a QueryPacketReceiptRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketReceiptRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketReceiptRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketReceiptRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketReceiptResponse. */
                interface IQueryPacketReceiptResponse {

                    /** QueryPacketReceiptResponse received */
                    received?: (boolean|null);

                    /** QueryPacketReceiptResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketReceiptResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketReceiptResponse. */
                class QueryPacketReceiptResponse implements IQueryPacketReceiptResponse {

                    /**
                     * Constructs a new QueryPacketReceiptResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketReceiptResponse);

                    /** QueryPacketReceiptResponse received. */
                    public received: boolean;

                    /** QueryPacketReceiptResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketReceiptResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketReceiptResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptResponse.verify|verify} messages.
                     * @param message QueryPacketReceiptResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketReceiptResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketReceiptResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptResponse.verify|verify} messages.
                     * @param message QueryPacketReceiptResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketReceiptResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketReceiptResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Decodes a QueryPacketReceiptResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketReceiptResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Verifies a QueryPacketReceiptResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketReceiptResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketReceiptResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Creates a plain object from a QueryPacketReceiptResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketReceiptResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketReceiptResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketReceiptResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementRequest. */
                interface IQueryPacketAcknowledgementRequest {

                    /** QueryPacketAcknowledgementRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketAcknowledgementRequest. */
                class QueryPacketAcknowledgementRequest implements IQueryPacketAcknowledgementRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest);

                    /** QueryPacketAcknowledgementRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Decodes a QueryPacketAcknowledgementRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Verifies a QueryPacketAcknowledgementRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementResponse. */
                interface IQueryPacketAcknowledgementResponse {

                    /** QueryPacketAcknowledgementResponse acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementResponse. */
                class QueryPacketAcknowledgementResponse implements IQueryPacketAcknowledgementResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse);

                    /** QueryPacketAcknowledgementResponse acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Decodes a QueryPacketAcknowledgementResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Verifies a QueryPacketAcknowledgementResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementsRequest. */
                interface IQueryPacketAcknowledgementsRequest {

                    /** QueryPacketAcknowledgementsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryPacketAcknowledgementsRequest. */
                class QueryPacketAcknowledgementsRequest implements IQueryPacketAcknowledgementsRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest);

                    /** QueryPacketAcknowledgementsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Decodes a QueryPacketAcknowledgementsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Verifies a QueryPacketAcknowledgementsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementsRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementsResponse. */
                interface IQueryPacketAcknowledgementsResponse {

                    /** QueryPacketAcknowledgementsResponse acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketAcknowledgementsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementsResponse. */
                class QueryPacketAcknowledgementsResponse implements IQueryPacketAcknowledgementsResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse);

                    /** QueryPacketAcknowledgementsResponse acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketAcknowledgementsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Decodes a QueryPacketAcknowledgementsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Verifies a QueryPacketAcknowledgementsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementsResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedPacketsRequest. */
                interface IQueryUnreceivedPacketsRequest {

                    /** QueryUnreceivedPacketsRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences */
                    packet_commitment_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedPacketsRequest. */
                class QueryUnreceivedPacketsRequest implements IQueryUnreceivedPacketsRequest {

                    /**
                     * Constructs a new QueryUnreceivedPacketsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest);

                    /** QueryUnreceivedPacketsRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedPacketsRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences. */
                    public packet_commitment_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedPacketsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsRequest.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedPacketsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsRequest.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Decodes a QueryUnreceivedPacketsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Verifies a QueryUnreceivedPacketsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedPacketsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedPacketsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Creates a plain object from a QueryUnreceivedPacketsRequest message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedPacketsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedPacketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedPacketsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedPacketsResponse. */
                interface IQueryUnreceivedPacketsResponse {

                    /** QueryUnreceivedPacketsResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedPacketsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedPacketsResponse. */
                class QueryUnreceivedPacketsResponse implements IQueryUnreceivedPacketsResponse {

                    /**
                     * Constructs a new QueryUnreceivedPacketsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse);

                    /** QueryUnreceivedPacketsResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedPacketsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedPacketsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsResponse.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedPacketsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsResponse.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Decodes a QueryUnreceivedPacketsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Verifies a QueryUnreceivedPacketsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedPacketsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedPacketsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Creates a plain object from a QueryUnreceivedPacketsResponse message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedPacketsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedPacketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedPacketsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedAcksRequest. */
                interface IQueryUnreceivedAcksRequest {

                    /** QueryUnreceivedAcksRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedAcksRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedAcksRequest packet_ack_sequences */
                    packet_ack_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedAcksRequest. */
                class QueryUnreceivedAcksRequest implements IQueryUnreceivedAcksRequest {

                    /**
                     * Constructs a new QueryUnreceivedAcksRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedAcksRequest);

                    /** QueryUnreceivedAcksRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedAcksRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedAcksRequest packet_ack_sequences. */
                    public packet_ack_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedAcksRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksRequest.verify|verify} messages.
                     * @param message QueryUnreceivedAcksRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedAcksRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksRequest.verify|verify} messages.
                     * @param message QueryUnreceivedAcksRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedAcksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Decodes a QueryUnreceivedAcksRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedAcksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Verifies a QueryUnreceivedAcksRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedAcksRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedAcksRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Creates a plain object from a QueryUnreceivedAcksRequest message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedAcksRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedAcksRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedAcksRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedAcksResponse. */
                interface IQueryUnreceivedAcksResponse {

                    /** QueryUnreceivedAcksResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedAcksResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedAcksResponse. */
                class QueryUnreceivedAcksResponse implements IQueryUnreceivedAcksResponse {

                    /**
                     * Constructs a new QueryUnreceivedAcksResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedAcksResponse);

                    /** QueryUnreceivedAcksResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedAcksResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedAcksResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksResponse.verify|verify} messages.
                     * @param message QueryUnreceivedAcksResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedAcksResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedAcksResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksResponse.verify|verify} messages.
                     * @param message QueryUnreceivedAcksResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedAcksResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedAcksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Decodes a QueryUnreceivedAcksResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedAcksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Verifies a QueryUnreceivedAcksResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedAcksResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedAcksResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Creates a plain object from a QueryUnreceivedAcksResponse message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedAcksResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedAcksResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedAcksResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryNextSequenceReceiveRequest. */
                interface IQueryNextSequenceReceiveRequest {

                    /** QueryNextSequenceReceiveRequest port_id */
                    port_id?: (string|null);

                    /** QueryNextSequenceReceiveRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryNextSequenceReceiveRequest. */
                class QueryNextSequenceReceiveRequest implements IQueryNextSequenceReceiveRequest {

                    /**
                     * Constructs a new QueryNextSequenceReceiveRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest);

                    /** QueryNextSequenceReceiveRequest port_id. */
                    public port_id: string;

                    /** QueryNextSequenceReceiveRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveRequest.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveRequest.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Decodes a QueryNextSequenceReceiveRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryNextSequenceReceiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Verifies a QueryNextSequenceReceiveRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryNextSequenceReceiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryNextSequenceReceiveRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Creates a plain object from a QueryNextSequenceReceiveRequest message. Also converts values to other types if specified.
                     * @param message QueryNextSequenceReceiveRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryNextSequenceReceiveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryNextSequenceReceiveRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryNextSequenceReceiveResponse. */
                interface IQueryNextSequenceReceiveResponse {

                    /** QueryNextSequenceReceiveResponse next_sequence_receive */
                    next_sequence_receive?: (Long|null);

                    /** QueryNextSequenceReceiveResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryNextSequenceReceiveResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryNextSequenceReceiveResponse. */
                class QueryNextSequenceReceiveResponse implements IQueryNextSequenceReceiveResponse {

                    /**
                     * Constructs a new QueryNextSequenceReceiveResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse);

                    /** QueryNextSequenceReceiveResponse next_sequence_receive. */
                    public next_sequence_receive: Long;

                    /** QueryNextSequenceReceiveResponse proof. */
                    public proof: Uint8Array;

                    /** QueryNextSequenceReceiveResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryNextSequenceReceiveResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveResponse.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveResponse.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Decodes a QueryNextSequenceReceiveResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryNextSequenceReceiveResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Verifies a QueryNextSequenceReceiveResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryNextSequenceReceiveResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryNextSequenceReceiveResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Creates a plain object from a QueryNextSequenceReceiveResponse message. Also converts values to other types if specified.
                     * @param message QueryNextSequenceReceiveResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryNextSequenceReceiveResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryNextSequenceReceiveResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Channel. */
                interface IChannel {

                    /** Channel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** Channel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** Channel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops */
                    connection_hops?: (string[]|null);

                    /** Channel version */
                    version?: (string|null);
                }

                /** Represents a Channel. */
                class Channel implements IChannel {

                    /**
                     * Constructs a new Channel.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IChannel);

                    /** Channel state. */
                    public state: ibc.core.channel.v1.State;

                    /** Channel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** Channel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops. */
                    public connection_hops: string[];

                    /** Channel version. */
                    public version: string;

                    /**
                     * Encodes the specified Channel message. Does not implicitly {@link ibc.core.channel.v1.Channel.verify|verify} messages.
                     * @param message Channel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Channel message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Channel.verify|verify} messages.
                     * @param message Channel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Channel message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Channel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Channel;

                    /**
                     * Decodes a Channel message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Channel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Channel;

                    /**
                     * Verifies a Channel message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Channel message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Channel
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Channel;

                    /**
                     * Creates a plain object from a Channel message. Also converts values to other types if specified.
                     * @param message Channel
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Channel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Channel to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedChannel. */
                interface IIdentifiedChannel {

                    /** IdentifiedChannel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** IdentifiedChannel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** IdentifiedChannel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops */
                    connection_hops?: (string[]|null);

                    /** IdentifiedChannel version */
                    version?: (string|null);

                    /** IdentifiedChannel port_id */
                    port_id?: (string|null);

                    /** IdentifiedChannel channel_id */
                    channel_id?: (string|null);
                }

                /** Represents an IdentifiedChannel. */
                class IdentifiedChannel implements IIdentifiedChannel {

                    /**
                     * Constructs a new IdentifiedChannel.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IIdentifiedChannel);

                    /** IdentifiedChannel state. */
                    public state: ibc.core.channel.v1.State;

                    /** IdentifiedChannel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** IdentifiedChannel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops. */
                    public connection_hops: string[];

                    /** IdentifiedChannel version. */
                    public version: string;

                    /** IdentifiedChannel port_id. */
                    public port_id: string;

                    /** IdentifiedChannel channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified IdentifiedChannel message. Does not implicitly {@link ibc.core.channel.v1.IdentifiedChannel.verify|verify} messages.
                     * @param message IdentifiedChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IIdentifiedChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedChannel message, length delimited. Does not implicitly {@link ibc.core.channel.v1.IdentifiedChannel.verify|verify} messages.
                     * @param message IdentifiedChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IIdentifiedChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedChannel message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Decodes an IdentifiedChannel message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Verifies an IdentifiedChannel message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedChannel message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedChannel
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Creates a plain object from an IdentifiedChannel message. Also converts values to other types if specified.
                     * @param message IdentifiedChannel
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.IdentifiedChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedChannel to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3,
                    STATE_CLOSED = 4
                }

                /** Order enum. */
                enum Order {
                    ORDER_NONE_UNSPECIFIED = 0,
                    ORDER_UNORDERED = 1,
                    ORDER_ORDERED = 2
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty port_id */
                    port_id?: (string|null);

                    /** Counterparty channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.ICounterparty);

                    /** Counterparty port_id. */
                    public port_id: string;

                    /** Counterparty channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.channel.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Counterparty message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Counterparty;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Counterparty;

                    /**
                     * Verifies a Counterparty message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Counterparty message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Counterparty
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Counterparty;

                    /**
                     * Creates a plain object from a Counterparty message. Also converts values to other types if specified.
                     * @param message Counterparty
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Counterparty, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Counterparty to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Packet. */
                interface IPacket {

                    /** Packet sequence */
                    sequence?: (Long|null);

                    /** Packet source_port */
                    source_port?: (string|null);

                    /** Packet source_channel */
                    source_channel?: (string|null);

                    /** Packet destination_port */
                    destination_port?: (string|null);

                    /** Packet destination_channel */
                    destination_channel?: (string|null);

                    /** Packet data */
                    data?: (Uint8Array|null);

                    /** Packet timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp */
                    timeout_timestamp?: (Long|null);
                }

                /** Represents a Packet. */
                class Packet implements IPacket {

                    /**
                     * Constructs a new Packet.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacket);

                    /** Packet sequence. */
                    public sequence: Long;

                    /** Packet source_port. */
                    public source_port: string;

                    /** Packet source_channel. */
                    public source_channel: string;

                    /** Packet destination_port. */
                    public destination_port: string;

                    /** Packet destination_channel. */
                    public destination_channel: string;

                    /** Packet data. */
                    public data: Uint8Array;

                    /** Packet timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /**
                     * Encodes the specified Packet message. Does not implicitly {@link ibc.core.channel.v1.Packet.verify|verify} messages.
                     * @param message Packet message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Packet message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Packet.verify|verify} messages.
                     * @param message Packet message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Packet message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Packet
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Packet;

                    /**
                     * Decodes a Packet message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Packet
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Packet;

                    /**
                     * Verifies a Packet message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Packet message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Packet
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Packet;

                    /**
                     * Creates a plain object from a Packet message. Also converts values to other types if specified.
                     * @param message Packet
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Packet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Packet to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketState. */
                interface IPacketState {

                    /** PacketState port_id */
                    port_id?: (string|null);

                    /** PacketState channel_id */
                    channel_id?: (string|null);

                    /** PacketState sequence */
                    sequence?: (Long|null);

                    /** PacketState data */
                    data?: (Uint8Array|null);
                }

                /** Represents a PacketState. */
                class PacketState implements IPacketState {

                    /**
                     * Constructs a new PacketState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacketState);

                    /** PacketState port_id. */
                    public port_id: string;

                    /** PacketState channel_id. */
                    public channel_id: string;

                    /** PacketState sequence. */
                    public sequence: Long;

                    /** PacketState data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified PacketState message. Does not implicitly {@link ibc.core.channel.v1.PacketState.verify|verify} messages.
                     * @param message PacketState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacketState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketState message, length delimited. Does not implicitly {@link ibc.core.channel.v1.PacketState.verify|verify} messages.
                     * @param message PacketState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacketState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.PacketState;

                    /**
                     * Decodes a PacketState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.PacketState;

                    /**
                     * Verifies a PacketState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.PacketState;

                    /**
                     * Creates a plain object from a PacketState message. Also converts values to other types if specified.
                     * @param message PacketState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.PacketState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Acknowledgement. */
                interface IAcknowledgement {

                    /** Acknowledgement result */
                    result?: (Uint8Array|null);

                    /** Acknowledgement error */
                    error?: (string|null);
                }

                /** Represents an Acknowledgement. */
                class Acknowledgement implements IAcknowledgement {

                    /**
                     * Constructs a new Acknowledgement.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IAcknowledgement);

                    /** Acknowledgement result. */
                    public result: Uint8Array;

                    /** Acknowledgement error. */
                    public error: string;

                    /** Acknowledgement response. */
                    public response?: ("result"|"error");

                    /**
                     * Encodes the specified Acknowledgement message. Does not implicitly {@link ibc.core.channel.v1.Acknowledgement.verify|verify} messages.
                     * @param message Acknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Acknowledgement message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Acknowledgement.verify|verify} messages.
                     * @param message Acknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Acknowledgement message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Acknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Decodes an Acknowledgement message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Acknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Verifies an Acknowledgement message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Acknowledgement message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Acknowledgement
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Creates a plain object from an Acknowledgement message. Also converts values to other types if specified.
                     * @param message Acknowledgement
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Acknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Acknowledgement to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** GenesisState acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState receipts */
                    receipts?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState send_sequences */
                    send_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState recv_sequences */
                    recv_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState ack_sequences */
                    ack_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState next_channel_sequence */
                    next_channel_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IGenesisState);

                    /** GenesisState channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** GenesisState acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState receipts. */
                    public receipts: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState send_sequences. */
                    public send_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState recv_sequences. */
                    public recv_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState ack_sequences. */
                    public ack_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState next_channel_sequence. */
                    public next_channel_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.channel.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.channel.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketSequence. */
                interface IPacketSequence {

                    /** PacketSequence port_id */
                    port_id?: (string|null);

                    /** PacketSequence channel_id */
                    channel_id?: (string|null);

                    /** PacketSequence sequence */
                    sequence?: (Long|null);
                }

                /** Represents a PacketSequence. */
                class PacketSequence implements IPacketSequence {

                    /**
                     * Constructs a new PacketSequence.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacketSequence);

                    /** PacketSequence port_id. */
                    public port_id: string;

                    /** PacketSequence channel_id. */
                    public channel_id: string;

                    /** PacketSequence sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified PacketSequence message. Does not implicitly {@link ibc.core.channel.v1.PacketSequence.verify|verify} messages.
                     * @param message PacketSequence message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacketSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketSequence message, length delimited. Does not implicitly {@link ibc.core.channel.v1.PacketSequence.verify|verify} messages.
                     * @param message PacketSequence message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacketSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketSequence message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketSequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Decodes a PacketSequence message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketSequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Verifies a PacketSequence message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketSequence message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketSequence
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Creates a plain object from a PacketSequence message. Also converts values to other types if specified.
                     * @param message PacketSequence
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.PacketSequence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketSequence to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ChannelOpenInit.
                     * @param request MsgChannelOpenInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenInitResponse
                     */
                    public channelOpenInit(request: ibc.core.channel.v1.IMsgChannelOpenInit, callback: ibc.core.channel.v1.Msg.ChannelOpenInitCallback): void;

                    /**
                     * Calls ChannelOpenInit.
                     * @param request MsgChannelOpenInit message or plain object
                     * @returns Promise
                     */
                    public channelOpenInit(request: ibc.core.channel.v1.IMsgChannelOpenInit): Promise<ibc.core.channel.v1.MsgChannelOpenInitResponse>;

                    /**
                     * Calls ChannelOpenTry.
                     * @param request MsgChannelOpenTry message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenTryResponse
                     */
                    public channelOpenTry(request: ibc.core.channel.v1.IMsgChannelOpenTry, callback: ibc.core.channel.v1.Msg.ChannelOpenTryCallback): void;

                    /**
                     * Calls ChannelOpenTry.
                     * @param request MsgChannelOpenTry message or plain object
                     * @returns Promise
                     */
                    public channelOpenTry(request: ibc.core.channel.v1.IMsgChannelOpenTry): Promise<ibc.core.channel.v1.MsgChannelOpenTryResponse>;

                    /**
                     * Calls ChannelOpenAck.
                     * @param request MsgChannelOpenAck message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenAckResponse
                     */
                    public channelOpenAck(request: ibc.core.channel.v1.IMsgChannelOpenAck, callback: ibc.core.channel.v1.Msg.ChannelOpenAckCallback): void;

                    /**
                     * Calls ChannelOpenAck.
                     * @param request MsgChannelOpenAck message or plain object
                     * @returns Promise
                     */
                    public channelOpenAck(request: ibc.core.channel.v1.IMsgChannelOpenAck): Promise<ibc.core.channel.v1.MsgChannelOpenAckResponse>;

                    /**
                     * Calls ChannelOpenConfirm.
                     * @param request MsgChannelOpenConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenConfirmResponse
                     */
                    public channelOpenConfirm(request: ibc.core.channel.v1.IMsgChannelOpenConfirm, callback: ibc.core.channel.v1.Msg.ChannelOpenConfirmCallback): void;

                    /**
                     * Calls ChannelOpenConfirm.
                     * @param request MsgChannelOpenConfirm message or plain object
                     * @returns Promise
                     */
                    public channelOpenConfirm(request: ibc.core.channel.v1.IMsgChannelOpenConfirm): Promise<ibc.core.channel.v1.MsgChannelOpenConfirmResponse>;

                    /**
                     * Calls ChannelCloseInit.
                     * @param request MsgChannelCloseInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelCloseInitResponse
                     */
                    public channelCloseInit(request: ibc.core.channel.v1.IMsgChannelCloseInit, callback: ibc.core.channel.v1.Msg.ChannelCloseInitCallback): void;

                    /**
                     * Calls ChannelCloseInit.
                     * @param request MsgChannelCloseInit message or plain object
                     * @returns Promise
                     */
                    public channelCloseInit(request: ibc.core.channel.v1.IMsgChannelCloseInit): Promise<ibc.core.channel.v1.MsgChannelCloseInitResponse>;

                    /**
                     * Calls ChannelCloseConfirm.
                     * @param request MsgChannelCloseConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelCloseConfirmResponse
                     */
                    public channelCloseConfirm(request: ibc.core.channel.v1.IMsgChannelCloseConfirm, callback: ibc.core.channel.v1.Msg.ChannelCloseConfirmCallback): void;

                    /**
                     * Calls ChannelCloseConfirm.
                     * @param request MsgChannelCloseConfirm message or plain object
                     * @returns Promise
                     */
                    public channelCloseConfirm(request: ibc.core.channel.v1.IMsgChannelCloseConfirm): Promise<ibc.core.channel.v1.MsgChannelCloseConfirmResponse>;

                    /**
                     * Calls RecvPacket.
                     * @param request MsgRecvPacket message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgRecvPacketResponse
                     */
                    public recvPacket(request: ibc.core.channel.v1.IMsgRecvPacket, callback: ibc.core.channel.v1.Msg.RecvPacketCallback): void;

                    /**
                     * Calls RecvPacket.
                     * @param request MsgRecvPacket message or plain object
                     * @returns Promise
                     */
                    public recvPacket(request: ibc.core.channel.v1.IMsgRecvPacket): Promise<ibc.core.channel.v1.MsgRecvPacketResponse>;

                    /**
                     * Calls Timeout.
                     * @param request MsgTimeout message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTimeoutResponse
                     */
                    public timeout(request: ibc.core.channel.v1.IMsgTimeout, callback: ibc.core.channel.v1.Msg.TimeoutCallback): void;

                    /**
                     * Calls Timeout.
                     * @param request MsgTimeout message or plain object
                     * @returns Promise
                     */
                    public timeout(request: ibc.core.channel.v1.IMsgTimeout): Promise<ibc.core.channel.v1.MsgTimeoutResponse>;

                    /**
                     * Calls TimeoutOnClose.
                     * @param request MsgTimeoutOnClose message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTimeoutOnCloseResponse
                     */
                    public timeoutOnClose(request: ibc.core.channel.v1.IMsgTimeoutOnClose, callback: ibc.core.channel.v1.Msg.TimeoutOnCloseCallback): void;

                    /**
                     * Calls TimeoutOnClose.
                     * @param request MsgTimeoutOnClose message or plain object
                     * @returns Promise
                     */
                    public timeoutOnClose(request: ibc.core.channel.v1.IMsgTimeoutOnClose): Promise<ibc.core.channel.v1.MsgTimeoutOnCloseResponse>;

                    /**
                     * Calls Acknowledgement.
                     * @param request MsgAcknowledgement message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgAcknowledgementResponse
                     */
                    public acknowledgement(request: ibc.core.channel.v1.IMsgAcknowledgement, callback: ibc.core.channel.v1.Msg.AcknowledgementCallback): void;

                    /**
                     * Calls Acknowledgement.
                     * @param request MsgAcknowledgement message or plain object
                     * @returns Promise
                     */
                    public acknowledgement(request: ibc.core.channel.v1.IMsgAcknowledgement): Promise<ibc.core.channel.v1.MsgAcknowledgementResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenInit}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenInitResponse
                     */
                    type ChannelOpenInitCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenTry}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenTryResponse
                     */
                    type ChannelOpenTryCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenTryResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenAck}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenAckResponse
                     */
                    type ChannelOpenAckCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenAckResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenConfirmResponse
                     */
                    type ChannelOpenConfirmCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenConfirmResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelCloseInit}.
                     * @param error Error, if any
                     * @param [response] MsgChannelCloseInitResponse
                     */
                    type ChannelCloseInitCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelCloseInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelCloseConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgChannelCloseConfirmResponse
                     */
                    type ChannelCloseConfirmCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelCloseConfirmResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#recvPacket}.
                     * @param error Error, if any
                     * @param [response] MsgRecvPacketResponse
                     */
                    type RecvPacketCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgRecvPacketResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#timeout}.
                     * @param error Error, if any
                     * @param [response] MsgTimeoutResponse
                     */
                    type TimeoutCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgTimeoutResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#timeoutOnClose}.
                     * @param error Error, if any
                     * @param [response] MsgTimeoutOnCloseResponse
                     */
                    type TimeoutOnCloseCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgTimeoutOnCloseResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#acknowledgement}.
                     * @param error Error, if any
                     * @param [response] MsgAcknowledgementResponse
                     */
                    type AcknowledgementCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgAcknowledgementResponse) => void;
                }

                /** Properties of a MsgChannelOpenInit. */
                interface IMsgChannelOpenInit {

                    /** MsgChannelOpenInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenInit channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenInit. */
                class MsgChannelOpenInit implements IMsgChannelOpenInit {

                    /**
                     * Constructs a new MsgChannelOpenInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenInit);

                    /** MsgChannelOpenInit port_id. */
                    public port_id: string;

                    /** MsgChannelOpenInit channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInit.verify|verify} messages.
                     * @param message MsgChannelOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenInit message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInit.verify|verify} messages.
                     * @param message MsgChannelOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Decodes a MsgChannelOpenInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Verifies a MsgChannelOpenInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Creates a plain object from a MsgChannelOpenInit message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenInitResponse. */
                interface IMsgChannelOpenInitResponse {
                }

                /** Represents a MsgChannelOpenInitResponse. */
                class MsgChannelOpenInitResponse implements IMsgChannelOpenInitResponse {

                    /**
                     * Constructs a new MsgChannelOpenInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenInitResponse);

                    /**
                     * Encodes the specified MsgChannelOpenInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInitResponse.verify|verify} messages.
                     * @param message MsgChannelOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenInitResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInitResponse.verify|verify} messages.
                     * @param message MsgChannelOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Decodes a MsgChannelOpenInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Verifies a MsgChannelOpenInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenInitResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenTry. */
                interface IMsgChannelOpenTry {

                    /** MsgChannelOpenTry port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenTry previous_channel_id */
                    previous_channel_id?: (string|null);

                    /** MsgChannelOpenTry channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenTry. */
                class MsgChannelOpenTry implements IMsgChannelOpenTry {

                    /**
                     * Constructs a new MsgChannelOpenTry.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenTry);

                    /** MsgChannelOpenTry port_id. */
                    public port_id: string;

                    /** MsgChannelOpenTry previous_channel_id. */
                    public previous_channel_id: string;

                    /** MsgChannelOpenTry channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenTry message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTry.verify|verify} messages.
                     * @param message MsgChannelOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenTry message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTry.verify|verify} messages.
                     * @param message MsgChannelOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTry message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Decodes a MsgChannelOpenTry message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Verifies a MsgChannelOpenTry message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenTry message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenTry
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Creates a plain object from a MsgChannelOpenTry message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenTry
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenTry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenTry to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenTryResponse. */
                interface IMsgChannelOpenTryResponse {
                }

                /** Represents a MsgChannelOpenTryResponse. */
                class MsgChannelOpenTryResponse implements IMsgChannelOpenTryResponse {

                    /**
                     * Constructs a new MsgChannelOpenTryResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenTryResponse);

                    /**
                     * Encodes the specified MsgChannelOpenTryResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTryResponse.verify|verify} messages.
                     * @param message MsgChannelOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenTryResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTryResponse.verify|verify} messages.
                     * @param message MsgChannelOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTryResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Decodes a MsgChannelOpenTryResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Verifies a MsgChannelOpenTryResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenTryResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenTryResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenTryResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenTryResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenTryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenTryResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenAck. */
                interface IMsgChannelOpenAck {

                    /** MsgChannelOpenAck port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenAck channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_channel_id */
                    counterparty_channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgChannelOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenAck. */
                class MsgChannelOpenAck implements IMsgChannelOpenAck {

                    /**
                     * Constructs a new MsgChannelOpenAck.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenAck);

                    /** MsgChannelOpenAck port_id. */
                    public port_id: string;

                    /** MsgChannelOpenAck channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenAck counterparty_channel_id. */
                    public counterparty_channel_id: string;

                    /** MsgChannelOpenAck counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgChannelOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenAck message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAck.verify|verify} messages.
                     * @param message MsgChannelOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenAck message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAck.verify|verify} messages.
                     * @param message MsgChannelOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAck message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Decodes a MsgChannelOpenAck message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Verifies a MsgChannelOpenAck message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenAck message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenAck
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Creates a plain object from a MsgChannelOpenAck message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenAck
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenAck, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenAck to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenAckResponse. */
                interface IMsgChannelOpenAckResponse {
                }

                /** Represents a MsgChannelOpenAckResponse. */
                class MsgChannelOpenAckResponse implements IMsgChannelOpenAckResponse {

                    /**
                     * Constructs a new MsgChannelOpenAckResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenAckResponse);

                    /**
                     * Encodes the specified MsgChannelOpenAckResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAckResponse.verify|verify} messages.
                     * @param message MsgChannelOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenAckResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAckResponse.verify|verify} messages.
                     * @param message MsgChannelOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAckResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Decodes a MsgChannelOpenAckResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Verifies a MsgChannelOpenAckResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenAckResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenAckResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenAckResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenAckResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenAckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenAckResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenConfirm. */
                interface IMsgChannelOpenConfirm {

                    /** MsgChannelOpenConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgChannelOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenConfirm. */
                class MsgChannelOpenConfirm implements IMsgChannelOpenConfirm {

                    /**
                     * Constructs a new MsgChannelOpenConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenConfirm);

                    /** MsgChannelOpenConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelOpenConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgChannelOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirm.verify|verify} messages.
                     * @param message MsgChannelOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenConfirm message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirm.verify|verify} messages.
                     * @param message MsgChannelOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Decodes a MsgChannelOpenConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Verifies a MsgChannelOpenConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Creates a plain object from a MsgChannelOpenConfirm message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenConfirmResponse. */
                interface IMsgChannelOpenConfirmResponse {
                }

                /** Represents a MsgChannelOpenConfirmResponse. */
                class MsgChannelOpenConfirmResponse implements IMsgChannelOpenConfirmResponse {

                    /**
                     * Constructs a new MsgChannelOpenConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelOpenConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Decodes a MsgChannelOpenConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Verifies a MsgChannelOpenConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseInit. */
                interface IMsgChannelCloseInit {

                    /** MsgChannelCloseInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseInit channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseInit. */
                class MsgChannelCloseInit implements IMsgChannelCloseInit {

                    /**
                     * Constructs a new MsgChannelCloseInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseInit);

                    /** MsgChannelCloseInit port_id. */
                    public port_id: string;

                    /** MsgChannelCloseInit channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInit.verify|verify} messages.
                     * @param message MsgChannelCloseInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseInit message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInit.verify|verify} messages.
                     * @param message MsgChannelCloseInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Decodes a MsgChannelCloseInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Verifies a MsgChannelCloseInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Creates a plain object from a MsgChannelCloseInit message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseInitResponse. */
                interface IMsgChannelCloseInitResponse {
                }

                /** Represents a MsgChannelCloseInitResponse. */
                class MsgChannelCloseInitResponse implements IMsgChannelCloseInitResponse {

                    /**
                     * Constructs a new MsgChannelCloseInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseInitResponse);

                    /**
                     * Encodes the specified MsgChannelCloseInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInitResponse.verify|verify} messages.
                     * @param message MsgChannelCloseInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseInitResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInitResponse.verify|verify} messages.
                     * @param message MsgChannelCloseInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Decodes a MsgChannelCloseInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Verifies a MsgChannelCloseInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Creates a plain object from a MsgChannelCloseInitResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseConfirm. */
                interface IMsgChannelCloseConfirm {

                    /** MsgChannelCloseConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseConfirm proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelCloseConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseConfirm. */
                class MsgChannelCloseConfirm implements IMsgChannelCloseConfirm {

                    /**
                     * Constructs a new MsgChannelCloseConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseConfirm);

                    /** MsgChannelCloseConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelCloseConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseConfirm proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelCloseConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirm.verify|verify} messages.
                     * @param message MsgChannelCloseConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseConfirm message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirm.verify|verify} messages.
                     * @param message MsgChannelCloseConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Decodes a MsgChannelCloseConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Verifies a MsgChannelCloseConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Creates a plain object from a MsgChannelCloseConfirm message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseConfirmResponse. */
                interface IMsgChannelCloseConfirmResponse {
                }

                /** Represents a MsgChannelCloseConfirmResponse. */
                class MsgChannelCloseConfirmResponse implements IMsgChannelCloseConfirmResponse {

                    /**
                     * Constructs a new MsgChannelCloseConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelCloseConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelCloseConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelCloseConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Decodes a MsgChannelCloseConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Verifies a MsgChannelCloseConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Creates a plain object from a MsgChannelCloseConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRecvPacket. */
                interface IMsgRecvPacket {

                    /** MsgRecvPacket packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment */
                    proof_commitment?: (Uint8Array|null);

                    /** MsgRecvPacket proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer */
                    signer?: (string|null);
                }

                /** Represents a MsgRecvPacket. */
                class MsgRecvPacket implements IMsgRecvPacket {

                    /**
                     * Constructs a new MsgRecvPacket.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgRecvPacket);

                    /** MsgRecvPacket packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment. */
                    public proof_commitment: Uint8Array;

                    /** MsgRecvPacket proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgRecvPacket message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacket.verify|verify} messages.
                     * @param message MsgRecvPacket message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgRecvPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRecvPacket message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacket.verify|verify} messages.
                     * @param message MsgRecvPacket message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgRecvPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacket message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRecvPacket
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Decodes a MsgRecvPacket message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRecvPacket
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Verifies a MsgRecvPacket message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRecvPacket message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRecvPacket
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Creates a plain object from a MsgRecvPacket message. Also converts values to other types if specified.
                     * @param message MsgRecvPacket
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgRecvPacket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRecvPacket to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRecvPacketResponse. */
                interface IMsgRecvPacketResponse {
                }

                /** Represents a MsgRecvPacketResponse. */
                class MsgRecvPacketResponse implements IMsgRecvPacketResponse {

                    /**
                     * Constructs a new MsgRecvPacketResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgRecvPacketResponse);

                    /**
                     * Encodes the specified MsgRecvPacketResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacketResponse.verify|verify} messages.
                     * @param message MsgRecvPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgRecvPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRecvPacketResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacketResponse.verify|verify} messages.
                     * @param message MsgRecvPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgRecvPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacketResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRecvPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Decodes a MsgRecvPacketResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRecvPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Verifies a MsgRecvPacketResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRecvPacketResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRecvPacketResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Creates a plain object from a MsgRecvPacketResponse message. Also converts values to other types if specified.
                     * @param message MsgRecvPacketResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgRecvPacketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRecvPacketResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeout. */
                interface IMsgTimeout {

                    /** MsgTimeout packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeout proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeout signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeout. */
                class MsgTimeout implements IMsgTimeout {

                    /**
                     * Constructs a new MsgTimeout.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeout);

                    /** MsgTimeout packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeout proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeout signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeout message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeout.verify|verify} messages.
                     * @param message MsgTimeout message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeout message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeout.verify|verify} messages.
                     * @param message MsgTimeout message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeout message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeout
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Decodes a MsgTimeout message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeout
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Verifies a MsgTimeout message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeout message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeout
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Creates a plain object from a MsgTimeout message. Also converts values to other types if specified.
                     * @param message MsgTimeout
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeout, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeout to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutResponse. */
                interface IMsgTimeoutResponse {
                }

                /** Represents a MsgTimeoutResponse. */
                class MsgTimeoutResponse implements IMsgTimeoutResponse {

                    /**
                     * Constructs a new MsgTimeoutResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutResponse);

                    /**
                     * Encodes the specified MsgTimeoutResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutResponse.verify|verify} messages.
                     * @param message MsgTimeoutResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutResponse.verify|verify} messages.
                     * @param message MsgTimeoutResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Decodes a MsgTimeoutResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Verifies a MsgTimeoutResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Creates a plain object from a MsgTimeoutResponse message. Also converts values to other types if specified.
                     * @param message MsgTimeoutResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutOnClose. */
                interface IMsgTimeoutOnClose {

                    /** MsgTimeoutOnClose packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_close */
                    proof_close?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeoutOnClose signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeoutOnClose. */
                class MsgTimeoutOnClose implements IMsgTimeoutOnClose {

                    /**
                     * Constructs a new MsgTimeoutOnClose.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutOnClose);

                    /** MsgTimeoutOnClose packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeoutOnClose proof_close. */
                    public proof_close: Uint8Array;

                    /** MsgTimeoutOnClose proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeoutOnClose signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeoutOnClose message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnClose.verify|verify} messages.
                     * @param message MsgTimeoutOnClose message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutOnClose, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutOnClose message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnClose.verify|verify} messages.
                     * @param message MsgTimeoutOnClose message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutOnClose, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnClose message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutOnClose
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Decodes a MsgTimeoutOnClose message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutOnClose
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Verifies a MsgTimeoutOnClose message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutOnClose message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutOnClose
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Creates a plain object from a MsgTimeoutOnClose message. Also converts values to other types if specified.
                     * @param message MsgTimeoutOnClose
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutOnClose, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutOnClose to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutOnCloseResponse. */
                interface IMsgTimeoutOnCloseResponse {
                }

                /** Represents a MsgTimeoutOnCloseResponse. */
                class MsgTimeoutOnCloseResponse implements IMsgTimeoutOnCloseResponse {

                    /**
                     * Constructs a new MsgTimeoutOnCloseResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse);

                    /**
                     * Encodes the specified MsgTimeoutOnCloseResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnCloseResponse.verify|verify} messages.
                     * @param message MsgTimeoutOnCloseResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutOnCloseResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnCloseResponse.verify|verify} messages.
                     * @param message MsgTimeoutOnCloseResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnCloseResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutOnCloseResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Decodes a MsgTimeoutOnCloseResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutOnCloseResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Verifies a MsgTimeoutOnCloseResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutOnCloseResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutOnCloseResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Creates a plain object from a MsgTimeoutOnCloseResponse message. Also converts values to other types if specified.
                     * @param message MsgTimeoutOnCloseResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutOnCloseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutOnCloseResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgAcknowledgement. */
                interface IMsgAcknowledgement {

                    /** MsgAcknowledgement packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_acked */
                    proof_acked?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer */
                    signer?: (string|null);
                }

                /** Represents a MsgAcknowledgement. */
                class MsgAcknowledgement implements IMsgAcknowledgement {

                    /**
                     * Constructs a new MsgAcknowledgement.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgAcknowledgement);

                    /** MsgAcknowledgement packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** MsgAcknowledgement proof_acked. */
                    public proof_acked: Uint8Array;

                    /** MsgAcknowledgement proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgAcknowledgement message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgement.verify|verify} messages.
                     * @param message MsgAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgAcknowledgement message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgement.verify|verify} messages.
                     * @param message MsgAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgement message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Decodes a MsgAcknowledgement message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Verifies a MsgAcknowledgement message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgAcknowledgement message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgAcknowledgement
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Creates a plain object from a MsgAcknowledgement message. Also converts values to other types if specified.
                     * @param message MsgAcknowledgement
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgAcknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgAcknowledgement to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgAcknowledgementResponse. */
                interface IMsgAcknowledgementResponse {
                }

                /** Represents a MsgAcknowledgementResponse. */
                class MsgAcknowledgementResponse implements IMsgAcknowledgementResponse {

                    /**
                     * Constructs a new MsgAcknowledgementResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgAcknowledgementResponse);

                    /**
                     * Encodes the specified MsgAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgementResponse.verify|verify} messages.
                     * @param message MsgAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgAcknowledgementResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgementResponse.verify|verify} messages.
                     * @param message MsgAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgementResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Decodes a MsgAcknowledgementResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Verifies a MsgAcknowledgementResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgAcknowledgementResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgAcknowledgementResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Creates a plain object from a MsgAcknowledgementResponse message. Also converts values to other types if specified.
                     * @param message MsgAcknowledgementResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgAcknowledgementResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgAcknowledgementResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace client. */
        namespace client {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ClientState.
                     * @param request QueryClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientStateResponse
                     */
                    public clientState(request: ibc.core.client.v1.IQueryClientStateRequest, callback: ibc.core.client.v1.Query.ClientStateCallback): void;

                    /**
                     * Calls ClientState.
                     * @param request QueryClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public clientState(request: ibc.core.client.v1.IQueryClientStateRequest): Promise<ibc.core.client.v1.QueryClientStateResponse>;

                    /**
                     * Calls ClientStates.
                     * @param request QueryClientStatesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientStatesResponse
                     */
                    public clientStates(request: ibc.core.client.v1.IQueryClientStatesRequest, callback: ibc.core.client.v1.Query.ClientStatesCallback): void;

                    /**
                     * Calls ClientStates.
                     * @param request QueryClientStatesRequest message or plain object
                     * @returns Promise
                     */
                    public clientStates(request: ibc.core.client.v1.IQueryClientStatesRequest): Promise<ibc.core.client.v1.QueryClientStatesResponse>;

                    /**
                     * Calls ConsensusState.
                     * @param request QueryConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConsensusStateResponse
                     */
                    public consensusState(request: ibc.core.client.v1.IQueryConsensusStateRequest, callback: ibc.core.client.v1.Query.ConsensusStateCallback): void;

                    /**
                     * Calls ConsensusState.
                     * @param request QueryConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public consensusState(request: ibc.core.client.v1.IQueryConsensusStateRequest): Promise<ibc.core.client.v1.QueryConsensusStateResponse>;

                    /**
                     * Calls ConsensusStates.
                     * @param request QueryConsensusStatesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConsensusStatesResponse
                     */
                    public consensusStates(request: ibc.core.client.v1.IQueryConsensusStatesRequest, callback: ibc.core.client.v1.Query.ConsensusStatesCallback): void;

                    /**
                     * Calls ConsensusStates.
                     * @param request QueryConsensusStatesRequest message or plain object
                     * @returns Promise
                     */
                    public consensusStates(request: ibc.core.client.v1.IQueryConsensusStatesRequest): Promise<ibc.core.client.v1.QueryConsensusStatesResponse>;

                    /**
                     * Calls ClientParams.
                     * @param request QueryClientParamsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientParamsResponse
                     */
                    public clientParams(request: ibc.core.client.v1.IQueryClientParamsRequest, callback: ibc.core.client.v1.Query.ClientParamsCallback): void;

                    /**
                     * Calls ClientParams.
                     * @param request QueryClientParamsRequest message or plain object
                     * @returns Promise
                     */
                    public clientParams(request: ibc.core.client.v1.IQueryClientParamsRequest): Promise<ibc.core.client.v1.QueryClientParamsResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientState}.
                     * @param error Error, if any
                     * @param [response] QueryClientStateResponse
                     */
                    type ClientStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientStates}.
                     * @param error Error, if any
                     * @param [response] QueryClientStatesResponse
                     */
                    type ClientStatesCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientStatesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#consensusState}.
                     * @param error Error, if any
                     * @param [response] QueryConsensusStateResponse
                     */
                    type ConsensusStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryConsensusStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#consensusStates}.
                     * @param error Error, if any
                     * @param [response] QueryConsensusStatesResponse
                     */
                    type ConsensusStatesCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryConsensusStatesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientParams}.
                     * @param error Error, if any
                     * @param [response] QueryClientParamsResponse
                     */
                    type ClientParamsCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientParamsResponse) => void;
                }

                /** Properties of a QueryClientStateRequest. */
                interface IQueryClientStateRequest {

                    /** QueryClientStateRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientStateRequest. */
                class QueryClientStateRequest implements IQueryClientStateRequest {

                    /**
                     * Constructs a new QueryClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStateRequest);

                    /** QueryClientStateRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateRequest.verify|verify} messages.
                     * @param message QueryClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStateRequest.verify|verify} messages.
                     * @param message QueryClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Decodes a QueryClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Verifies a QueryClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Creates a plain object from a QueryClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStateResponse. */
                interface IQueryClientStateResponse {

                    /** QueryClientStateResponse client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientStateResponse. */
                class QueryClientStateResponse implements IQueryClientStateResponse {

                    /**
                     * Constructs a new QueryClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStateResponse);

                    /** QueryClientStateResponse client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateResponse.verify|verify} messages.
                     * @param message QueryClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStateResponse.verify|verify} messages.
                     * @param message QueryClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Decodes a QueryClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Verifies a QueryClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Creates a plain object from a QueryClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatesRequest. */
                interface IQueryClientStatesRequest {

                    /** QueryClientStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryClientStatesRequest. */
                class QueryClientStatesRequest implements IQueryClientStatesRequest {

                    /**
                     * Constructs a new QueryClientStatesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatesRequest);

                    /** QueryClientStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryClientStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesRequest.verify|verify} messages.
                     * @param message QueryClientStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatesRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesRequest.verify|verify} messages.
                     * @param message QueryClientStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Decodes a QueryClientStatesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Verifies a QueryClientStatesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Creates a plain object from a QueryClientStatesRequest message. Also converts values to other types if specified.
                     * @param message QueryClientStatesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatesResponse. */
                interface IQueryClientStatesResponse {

                    /** QueryClientStatesResponse client_states */
                    client_states?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** QueryClientStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryClientStatesResponse. */
                class QueryClientStatesResponse implements IQueryClientStatesResponse {

                    /**
                     * Constructs a new QueryClientStatesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatesResponse);

                    /** QueryClientStatesResponse client_states. */
                    public client_states: ibc.core.client.v1.IIdentifiedClientState[];

                    /** QueryClientStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryClientStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesResponse.verify|verify} messages.
                     * @param message QueryClientStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatesResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesResponse.verify|verify} messages.
                     * @param message QueryClientStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Decodes a QueryClientStatesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Verifies a QueryClientStatesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Creates a plain object from a QueryClientStatesResponse message. Also converts values to other types if specified.
                     * @param message QueryClientStatesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateRequest. */
                interface IQueryConsensusStateRequest {

                    /** QueryConsensusStateRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConsensusStateRequest revision_height */
                    revision_height?: (Long|null);

                    /** QueryConsensusStateRequest latest_height */
                    latest_height?: (boolean|null);
                }

                /** Represents a QueryConsensusStateRequest. */
                class QueryConsensusStateRequest implements IQueryConsensusStateRequest {

                    /**
                     * Constructs a new QueryConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateRequest);

                    /** QueryConsensusStateRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /** QueryConsensusStateRequest latest_height. */
                    public latest_height: boolean;

                    /**
                     * Encodes the specified QueryConsensusStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Decodes a QueryConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Verifies a QueryConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateResponse. */
                interface IQueryConsensusStateResponse {

                    /** QueryConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConsensusStateResponse. */
                class QueryConsensusStateResponse implements IQueryConsensusStateResponse {

                    /**
                     * Constructs a new QueryConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateResponse);

                    /** QueryConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConsensusStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Decodes a QueryConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Verifies a QueryConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStatesRequest. */
                interface IQueryConsensusStatesRequest {

                    /** QueryConsensusStatesRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConsensusStatesRequest. */
                class QueryConsensusStatesRequest implements IQueryConsensusStatesRequest {

                    /**
                     * Constructs a new QueryConsensusStatesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStatesRequest);

                    /** QueryConsensusStatesRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConsensusStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesRequest.verify|verify} messages.
                     * @param message QueryConsensusStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStatesRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesRequest.verify|verify} messages.
                     * @param message QueryConsensusStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Decodes a QueryConsensusStatesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Verifies a QueryConsensusStatesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStatesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStatesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Creates a plain object from a QueryConsensusStatesRequest message. Also converts values to other types if specified.
                     * @param message QueryConsensusStatesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStatesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStatesResponse. */
                interface IQueryConsensusStatesResponse {

                    /** QueryConsensusStatesResponse consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);

                    /** QueryConsensusStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryConsensusStatesResponse. */
                class QueryConsensusStatesResponse implements IQueryConsensusStatesResponse {

                    /**
                     * Constructs a new QueryConsensusStatesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStatesResponse);

                    /** QueryConsensusStatesResponse consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /** QueryConsensusStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryConsensusStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesResponse.verify|verify} messages.
                     * @param message QueryConsensusStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStatesResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesResponse.verify|verify} messages.
                     * @param message QueryConsensusStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Decodes a QueryConsensusStatesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Verifies a QueryConsensusStatesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStatesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStatesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Creates a plain object from a QueryConsensusStatesResponse message. Also converts values to other types if specified.
                     * @param message QueryConsensusStatesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStatesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientParamsRequest. */
                interface IQueryClientParamsRequest {
                }

                /** Represents a QueryClientParamsRequest. */
                class QueryClientParamsRequest implements IQueryClientParamsRequest {

                    /**
                     * Constructs a new QueryClientParamsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientParamsRequest);

                    /**
                     * Encodes the specified QueryClientParamsRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsRequest.verify|verify} messages.
                     * @param message QueryClientParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientParamsRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsRequest.verify|verify} messages.
                     * @param message QueryClientParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Decodes a QueryClientParamsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Verifies a QueryClientParamsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientParamsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientParamsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Creates a plain object from a QueryClientParamsRequest message. Also converts values to other types if specified.
                     * @param message QueryClientParamsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientParamsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientParamsResponse. */
                interface IQueryClientParamsResponse {

                    /** QueryClientParamsResponse params */
                    params?: (ibc.core.client.v1.IParams|null);
                }

                /** Represents a QueryClientParamsResponse. */
                class QueryClientParamsResponse implements IQueryClientParamsResponse {

                    /**
                     * Constructs a new QueryClientParamsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientParamsResponse);

                    /** QueryClientParamsResponse params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /**
                     * Encodes the specified QueryClientParamsResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsResponse.verify|verify} messages.
                     * @param message QueryClientParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientParamsResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsResponse.verify|verify} messages.
                     * @param message QueryClientParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Decodes a QueryClientParamsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Verifies a QueryClientParamsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientParamsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientParamsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Creates a plain object from a QueryClientParamsResponse message. Also converts values to other types if specified.
                     * @param message QueryClientParamsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientParamsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState clients */
                    clients?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** GenesisState clients_consensus */
                    clients_consensus?: (ibc.core.client.v1.IClientConsensusStates[]|null);

                    /** GenesisState clients_metadata */
                    clients_metadata?: (ibc.core.client.v1.IIdentifiedGenesisMetadata[]|null);

                    /** GenesisState params */
                    params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost */
                    create_localhost?: (boolean|null);

                    /** GenesisState next_client_sequence */
                    next_client_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IGenesisState);

                    /** GenesisState clients. */
                    public clients: ibc.core.client.v1.IIdentifiedClientState[];

                    /** GenesisState clients_consensus. */
                    public clients_consensus: ibc.core.client.v1.IClientConsensusStates[];

                    /** GenesisState clients_metadata. */
                    public clients_metadata: ibc.core.client.v1.IIdentifiedGenesisMetadata[];

                    /** GenesisState params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost. */
                    public create_localhost: boolean;

                    /** GenesisState next_client_sequence. */
                    public next_client_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.client.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.client.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisMetadata. */
                interface IGenesisMetadata {

                    /** GenesisMetadata key */
                    key?: (Uint8Array|null);

                    /** GenesisMetadata value */
                    value?: (Uint8Array|null);
                }

                /** Represents a GenesisMetadata. */
                class GenesisMetadata implements IGenesisMetadata {

                    /**
                     * Constructs a new GenesisMetadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IGenesisMetadata);

                    /** GenesisMetadata key. */
                    public key: Uint8Array;

                    /** GenesisMetadata value. */
                    public value: Uint8Array;

                    /**
                     * Encodes the specified GenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.GenesisMetadata.verify|verify} messages.
                     * @param message GenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisMetadata message, length delimited. Does not implicitly {@link ibc.core.client.v1.GenesisMetadata.verify|verify} messages.
                     * @param message GenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisMetadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Decodes a GenesisMetadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Verifies a GenesisMetadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisMetadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisMetadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Creates a plain object from a GenesisMetadata message. Also converts values to other types if specified.
                     * @param message GenesisMetadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.GenesisMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisMetadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedGenesisMetadata. */
                interface IIdentifiedGenesisMetadata {

                    /** IdentifiedGenesisMetadata client_id */
                    client_id?: (string|null);

                    /** IdentifiedGenesisMetadata client_metadata */
                    client_metadata?: (ibc.core.client.v1.IGenesisMetadata[]|null);
                }

                /** Represents an IdentifiedGenesisMetadata. */
                class IdentifiedGenesisMetadata implements IIdentifiedGenesisMetadata {

                    /**
                     * Constructs a new IdentifiedGenesisMetadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IIdentifiedGenesisMetadata);

                    /** IdentifiedGenesisMetadata client_id. */
                    public client_id: string;

                    /** IdentifiedGenesisMetadata client_metadata. */
                    public client_metadata: ibc.core.client.v1.IGenesisMetadata[];

                    /**
                     * Encodes the specified IdentifiedGenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.IdentifiedGenesisMetadata.verify|verify} messages.
                     * @param message IdentifiedGenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IIdentifiedGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedGenesisMetadata message, length delimited. Does not implicitly {@link ibc.core.client.v1.IdentifiedGenesisMetadata.verify|verify} messages.
                     * @param message IdentifiedGenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IIdentifiedGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedGenesisMetadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedGenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Decodes an IdentifiedGenesisMetadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedGenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Verifies an IdentifiedGenesisMetadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedGenesisMetadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedGenesisMetadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Creates a plain object from an IdentifiedGenesisMetadata message. Also converts values to other types if specified.
                     * @param message IdentifiedGenesisMetadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.IdentifiedGenesisMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedGenesisMetadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls CreateClient.
                     * @param request MsgCreateClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgCreateClientResponse
                     */
                    public createClient(request: ibc.core.client.v1.IMsgCreateClient, callback: ibc.core.client.v1.Msg.CreateClientCallback): void;

                    /**
                     * Calls CreateClient.
                     * @param request MsgCreateClient message or plain object
                     * @returns Promise
                     */
                    public createClient(request: ibc.core.client.v1.IMsgCreateClient): Promise<ibc.core.client.v1.MsgCreateClientResponse>;

                    /**
                     * Calls UpdateClient.
                     * @param request MsgUpdateClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgUpdateClientResponse
                     */
                    public updateClient(request: ibc.core.client.v1.IMsgUpdateClient, callback: ibc.core.client.v1.Msg.UpdateClientCallback): void;

                    /**
                     * Calls UpdateClient.
                     * @param request MsgUpdateClient message or plain object
                     * @returns Promise
                     */
                    public updateClient(request: ibc.core.client.v1.IMsgUpdateClient): Promise<ibc.core.client.v1.MsgUpdateClientResponse>;

                    /**
                     * Calls UpgradeClient.
                     * @param request MsgUpgradeClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgUpgradeClientResponse
                     */
                    public upgradeClient(request: ibc.core.client.v1.IMsgUpgradeClient, callback: ibc.core.client.v1.Msg.UpgradeClientCallback): void;

                    /**
                     * Calls UpgradeClient.
                     * @param request MsgUpgradeClient message or plain object
                     * @returns Promise
                     */
                    public upgradeClient(request: ibc.core.client.v1.IMsgUpgradeClient): Promise<ibc.core.client.v1.MsgUpgradeClientResponse>;

                    /**
                     * Calls SubmitMisbehaviour.
                     * @param request MsgSubmitMisbehaviour message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgSubmitMisbehaviourResponse
                     */
                    public submitMisbehaviour(request: ibc.core.client.v1.IMsgSubmitMisbehaviour, callback: ibc.core.client.v1.Msg.SubmitMisbehaviourCallback): void;

                    /**
                     * Calls SubmitMisbehaviour.
                     * @param request MsgSubmitMisbehaviour message or plain object
                     * @returns Promise
                     */
                    public submitMisbehaviour(request: ibc.core.client.v1.IMsgSubmitMisbehaviour): Promise<ibc.core.client.v1.MsgSubmitMisbehaviourResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#createClient}.
                     * @param error Error, if any
                     * @param [response] MsgCreateClientResponse
                     */
                    type CreateClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgCreateClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#updateClient}.
                     * @param error Error, if any
                     * @param [response] MsgUpdateClientResponse
                     */
                    type UpdateClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgUpdateClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#upgradeClient}.
                     * @param error Error, if any
                     * @param [response] MsgUpgradeClientResponse
                     */
                    type UpgradeClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgUpgradeClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#submitMisbehaviour}.
                     * @param error Error, if any
                     * @param [response] MsgSubmitMisbehaviourResponse
                     */
                    type SubmitMisbehaviourCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgSubmitMisbehaviourResponse) => void;
                }

                /** Properties of a MsgCreateClient. */
                interface IMsgCreateClient {

                    /** MsgCreateClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgCreateClient. */
                class MsgCreateClient implements IMsgCreateClient {

                    /**
                     * Constructs a new MsgCreateClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgCreateClient);

                    /** MsgCreateClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgCreateClient message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClient.verify|verify} messages.
                     * @param message MsgCreateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgCreateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgCreateClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgCreateClient.verify|verify} messages.
                     * @param message MsgCreateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgCreateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgCreateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Decodes a MsgCreateClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgCreateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Verifies a MsgCreateClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgCreateClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgCreateClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Creates a plain object from a MsgCreateClient message. Also converts values to other types if specified.
                     * @param message MsgCreateClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgCreateClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgCreateClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgCreateClientResponse. */
                interface IMsgCreateClientResponse {
                }

                /** Represents a MsgCreateClientResponse. */
                class MsgCreateClientResponse implements IMsgCreateClientResponse {

                    /**
                     * Constructs a new MsgCreateClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgCreateClientResponse);

                    /**
                     * Encodes the specified MsgCreateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClientResponse.verify|verify} messages.
                     * @param message MsgCreateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgCreateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgCreateClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgCreateClientResponse.verify|verify} messages.
                     * @param message MsgCreateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgCreateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgCreateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Decodes a MsgCreateClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgCreateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Verifies a MsgCreateClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgCreateClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgCreateClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Creates a plain object from a MsgCreateClientResponse message. Also converts values to other types if specified.
                     * @param message MsgCreateClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgCreateClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgCreateClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpdateClient. */
                interface IMsgUpdateClient {

                    /** MsgUpdateClient client_id */
                    client_id?: (string|null);

                    /** MsgUpdateClient header */
                    header?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpdateClient. */
                class MsgUpdateClient implements IMsgUpdateClient {

                    /**
                     * Constructs a new MsgUpdateClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpdateClient);

                    /** MsgUpdateClient client_id. */
                    public client_id: string;

                    /** MsgUpdateClient header. */
                    public header?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpdateClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClient.verify|verify} messages.
                     * @param message MsgUpdateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpdateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpdateClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClient.verify|verify} messages.
                     * @param message MsgUpdateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpdateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpdateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Decodes a MsgUpdateClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpdateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Verifies a MsgUpdateClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpdateClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpdateClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Creates a plain object from a MsgUpdateClient message. Also converts values to other types if specified.
                     * @param message MsgUpdateClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpdateClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpdateClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpdateClientResponse. */
                interface IMsgUpdateClientResponse {
                }

                /** Represents a MsgUpdateClientResponse. */
                class MsgUpdateClientResponse implements IMsgUpdateClientResponse {

                    /**
                     * Constructs a new MsgUpdateClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpdateClientResponse);

                    /**
                     * Encodes the specified MsgUpdateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClientResponse.verify|verify} messages.
                     * @param message MsgUpdateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpdateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpdateClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClientResponse.verify|verify} messages.
                     * @param message MsgUpdateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpdateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpdateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Decodes a MsgUpdateClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpdateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Verifies a MsgUpdateClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpdateClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpdateClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Creates a plain object from a MsgUpdateClientResponse message. Also converts values to other types if specified.
                     * @param message MsgUpdateClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpdateClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpdateClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpgradeClient. */
                interface IMsgUpgradeClient {

                    /** MsgUpgradeClient client_id */
                    client_id?: (string|null);

                    /** MsgUpgradeClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client */
                    proof_upgrade_client?: (Uint8Array|null);

                    /** MsgUpgradeClient proof_upgrade_consensus_state */
                    proof_upgrade_consensus_state?: (Uint8Array|null);

                    /** MsgUpgradeClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpgradeClient. */
                class MsgUpgradeClient implements IMsgUpgradeClient {

                    /**
                     * Constructs a new MsgUpgradeClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpgradeClient);

                    /** MsgUpgradeClient client_id. */
                    public client_id: string;

                    /** MsgUpgradeClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client. */
                    public proof_upgrade_client: Uint8Array;

                    /** MsgUpgradeClient proof_upgrade_consensus_state. */
                    public proof_upgrade_consensus_state: Uint8Array;

                    /** MsgUpgradeClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpgradeClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClient.verify|verify} messages.
                     * @param message MsgUpgradeClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpgradeClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpgradeClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClient.verify|verify} messages.
                     * @param message MsgUpgradeClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpgradeClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpgradeClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Decodes a MsgUpgradeClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpgradeClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Verifies a MsgUpgradeClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpgradeClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpgradeClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Creates a plain object from a MsgUpgradeClient message. Also converts values to other types if specified.
                     * @param message MsgUpgradeClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpgradeClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpgradeClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpgradeClientResponse. */
                interface IMsgUpgradeClientResponse {
                }

                /** Represents a MsgUpgradeClientResponse. */
                class MsgUpgradeClientResponse implements IMsgUpgradeClientResponse {

                    /**
                     * Constructs a new MsgUpgradeClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpgradeClientResponse);

                    /**
                     * Encodes the specified MsgUpgradeClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClientResponse.verify|verify} messages.
                     * @param message MsgUpgradeClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpgradeClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpgradeClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClientResponse.verify|verify} messages.
                     * @param message MsgUpgradeClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpgradeClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpgradeClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Decodes a MsgUpgradeClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpgradeClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Verifies a MsgUpgradeClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpgradeClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpgradeClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Creates a plain object from a MsgUpgradeClientResponse message. Also converts values to other types if specified.
                     * @param message MsgUpgradeClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpgradeClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpgradeClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgSubmitMisbehaviour. */
                interface IMsgSubmitMisbehaviour {

                    /** MsgSubmitMisbehaviour client_id */
                    client_id?: (string|null);

                    /** MsgSubmitMisbehaviour misbehaviour */
                    misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer */
                    signer?: (string|null);
                }

                /** Represents a MsgSubmitMisbehaviour. */
                class MsgSubmitMisbehaviour implements IMsgSubmitMisbehaviour {

                    /**
                     * Constructs a new MsgSubmitMisbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgSubmitMisbehaviour);

                    /** MsgSubmitMisbehaviour client_id. */
                    public client_id: string;

                    /** MsgSubmitMisbehaviour misbehaviour. */
                    public misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviour message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviour.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgSubmitMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviour message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviour.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgSubmitMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Decodes a MsgSubmitMisbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgSubmitMisbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Verifies a MsgSubmitMisbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgSubmitMisbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgSubmitMisbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Creates a plain object from a MsgSubmitMisbehaviour message. Also converts values to other types if specified.
                     * @param message MsgSubmitMisbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgSubmitMisbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgSubmitMisbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgSubmitMisbehaviourResponse. */
                interface IMsgSubmitMisbehaviourResponse {
                }

                /** Represents a MsgSubmitMisbehaviourResponse. */
                class MsgSubmitMisbehaviourResponse implements IMsgSubmitMisbehaviourResponse {

                    /**
                     * Constructs a new MsgSubmitMisbehaviourResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse);

                    /**
                     * Encodes the specified MsgSubmitMisbehaviourResponse message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviourResponse.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviourResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviourResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviourResponse.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviourResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviourResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviourResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Decodes a MsgSubmitMisbehaviourResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgSubmitMisbehaviourResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Verifies a MsgSubmitMisbehaviourResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgSubmitMisbehaviourResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgSubmitMisbehaviourResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Creates a plain object from a MsgSubmitMisbehaviourResponse message. Also converts values to other types if specified.
                     * @param message MsgSubmitMisbehaviourResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgSubmitMisbehaviourResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgSubmitMisbehaviourResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedClientState. */
                interface IIdentifiedClientState {

                    /** IdentifiedClientState client_id */
                    client_id?: (string|null);

                    /** IdentifiedClientState client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents an IdentifiedClientState. */
                class IdentifiedClientState implements IIdentifiedClientState {

                    /**
                     * Constructs a new IdentifiedClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IIdentifiedClientState);

                    /** IdentifiedClientState client_id. */
                    public client_id: string;

                    /** IdentifiedClientState client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified IdentifiedClientState message. Does not implicitly {@link ibc.core.client.v1.IdentifiedClientState.verify|verify} messages.
                     * @param message IdentifiedClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IIdentifiedClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedClientState message, length delimited. Does not implicitly {@link ibc.core.client.v1.IdentifiedClientState.verify|verify} messages.
                     * @param message IdentifiedClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IIdentifiedClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Decodes an IdentifiedClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Verifies an IdentifiedClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Creates a plain object from an IdentifiedClientState message. Also converts values to other types if specified.
                     * @param message IdentifiedClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.IdentifiedClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusStateWithHeight. */
                interface IConsensusStateWithHeight {

                    /** ConsensusStateWithHeight height */
                    height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateWithHeight. */
                class ConsensusStateWithHeight implements IConsensusStateWithHeight {

                    /**
                     * Constructs a new ConsensusStateWithHeight.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IConsensusStateWithHeight);

                    /** ConsensusStateWithHeight height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateWithHeight message. Does not implicitly {@link ibc.core.client.v1.ConsensusStateWithHeight.verify|verify} messages.
                     * @param message ConsensusStateWithHeight message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IConsensusStateWithHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusStateWithHeight message, length delimited. Does not implicitly {@link ibc.core.client.v1.ConsensusStateWithHeight.verify|verify} messages.
                     * @param message ConsensusStateWithHeight message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IConsensusStateWithHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateWithHeight message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusStateWithHeight
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Decodes a ConsensusStateWithHeight message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusStateWithHeight
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Verifies a ConsensusStateWithHeight message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusStateWithHeight message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusStateWithHeight
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Creates a plain object from a ConsensusStateWithHeight message. Also converts values to other types if specified.
                     * @param message ConsensusStateWithHeight
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ConsensusStateWithHeight, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusStateWithHeight to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientConsensusStates. */
                interface IClientConsensusStates {

                    /** ClientConsensusStates client_id */
                    client_id?: (string|null);

                    /** ClientConsensusStates consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);
                }

                /** Represents a ClientConsensusStates. */
                class ClientConsensusStates implements IClientConsensusStates {

                    /**
                     * Constructs a new ClientConsensusStates.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IClientConsensusStates);

                    /** ClientConsensusStates client_id. */
                    public client_id: string;

                    /** ClientConsensusStates consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /**
                     * Encodes the specified ClientConsensusStates message. Does not implicitly {@link ibc.core.client.v1.ClientConsensusStates.verify|verify} messages.
                     * @param message ClientConsensusStates message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IClientConsensusStates, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientConsensusStates message, length delimited. Does not implicitly {@link ibc.core.client.v1.ClientConsensusStates.verify|verify} messages.
                     * @param message ClientConsensusStates message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IClientConsensusStates, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientConsensusStates message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientConsensusStates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Decodes a ClientConsensusStates message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientConsensusStates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Verifies a ClientConsensusStates message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientConsensusStates message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientConsensusStates
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Creates a plain object from a ClientConsensusStates message. Also converts values to other types if specified.
                     * @param message ClientConsensusStates
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ClientConsensusStates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientConsensusStates to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientUpdateProposal. */
                interface IClientUpdateProposal {

                    /** ClientUpdateProposal title */
                    title?: (string|null);

                    /** ClientUpdateProposal description */
                    description?: (string|null);

                    /** ClientUpdateProposal client_id */
                    client_id?: (string|null);

                    /** ClientUpdateProposal header */
                    header?: (google.protobuf.IAny|null);
                }

                /** Represents a ClientUpdateProposal. */
                class ClientUpdateProposal implements IClientUpdateProposal {

                    /**
                     * Constructs a new ClientUpdateProposal.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IClientUpdateProposal);

                    /** ClientUpdateProposal title. */
                    public title: string;

                    /** ClientUpdateProposal description. */
                    public description: string;

                    /** ClientUpdateProposal client_id. */
                    public client_id: string;

                    /** ClientUpdateProposal header. */
                    public header?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ClientUpdateProposal message. Does not implicitly {@link ibc.core.client.v1.ClientUpdateProposal.verify|verify} messages.
                     * @param message ClientUpdateProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IClientUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientUpdateProposal message, length delimited. Does not implicitly {@link ibc.core.client.v1.ClientUpdateProposal.verify|verify} messages.
                     * @param message ClientUpdateProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IClientUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientUpdateProposal message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientUpdateProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Decodes a ClientUpdateProposal message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientUpdateProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Verifies a ClientUpdateProposal message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientUpdateProposal message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientUpdateProposal
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Creates a plain object from a ClientUpdateProposal message. Also converts values to other types if specified.
                     * @param message ClientUpdateProposal
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ClientUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientUpdateProposal to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Height. */
                interface IHeight {

                    /** Height revision_number */
                    revision_number?: (Long|null);

                    /** Height revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents an Height. */
                class Height implements IHeight {

                    /**
                     * Constructs a new Height.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IHeight);

                    /** Height revision_number. */
                    public revision_number: Long;

                    /** Height revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified Height message. Does not implicitly {@link ibc.core.client.v1.Height.verify|verify} messages.
                     * @param message Height message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Height message, length delimited. Does not implicitly {@link ibc.core.client.v1.Height.verify|verify} messages.
                     * @param message Height message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Height message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Height
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.Height;

                    /**
                     * Decodes an Height message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Height
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.Height;

                    /**
                     * Verifies an Height message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Height message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Height
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.Height;

                    /**
                     * Creates a plain object from an Height message. Also converts values to other types if specified.
                     * @param message Height
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.Height, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Height to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params allowed_clients */
                    allowed_clients?: (string[]|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IParams);

                    /** Params allowed_clients. */
                    public allowed_clients: string[];

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.core.client.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.core.client.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.Params;

                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.Params;

                    /**
                     * Verifies a Params message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Params
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.Params;

                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @param message Params
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Params to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace commitment. */
        namespace commitment {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a MerkleRoot. */
                interface IMerkleRoot {

                    /** MerkleRoot hash */
                    hash?: (Uint8Array|null);
                }

                /** Represents a MerkleRoot. */
                class MerkleRoot implements IMerkleRoot {

                    /**
                     * Constructs a new MerkleRoot.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerkleRoot);

                    /** MerkleRoot hash. */
                    public hash: Uint8Array;

                    /**
                     * Encodes the specified MerkleRoot message. Does not implicitly {@link ibc.core.commitment.v1.MerkleRoot.verify|verify} messages.
                     * @param message MerkleRoot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerkleRoot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerkleRoot message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerkleRoot.verify|verify} messages.
                     * @param message MerkleRoot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerkleRoot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleRoot message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerkleRoot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Decodes a MerkleRoot message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerkleRoot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Verifies a MerkleRoot message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerkleRoot message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerkleRoot
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Creates a plain object from a MerkleRoot message. Also converts values to other types if specified.
                     * @param message MerkleRoot
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerkleRoot, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerkleRoot to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerklePrefix. */
                interface IMerklePrefix {

                    /** MerklePrefix key_prefix */
                    key_prefix?: (Uint8Array|null);
                }

                /** Represents a MerklePrefix. */
                class MerklePrefix implements IMerklePrefix {

                    /**
                     * Constructs a new MerklePrefix.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerklePrefix);

                    /** MerklePrefix key_prefix. */
                    public key_prefix: Uint8Array;

                    /**
                     * Encodes the specified MerklePrefix message. Does not implicitly {@link ibc.core.commitment.v1.MerklePrefix.verify|verify} messages.
                     * @param message MerklePrefix message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerklePrefix, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerklePrefix message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerklePrefix.verify|verify} messages.
                     * @param message MerklePrefix message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerklePrefix, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePrefix message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerklePrefix
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Decodes a MerklePrefix message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerklePrefix
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Verifies a MerklePrefix message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerklePrefix message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerklePrefix
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Creates a plain object from a MerklePrefix message. Also converts values to other types if specified.
                     * @param message MerklePrefix
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerklePrefix, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerklePrefix to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerklePath. */
                interface IMerklePath {

                    /** MerklePath key_path */
                    key_path?: (string[]|null);
                }

                /** Represents a MerklePath. */
                class MerklePath implements IMerklePath {

                    /**
                     * Constructs a new MerklePath.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerklePath);

                    /** MerklePath key_path. */
                    public key_path: string[];

                    /**
                     * Encodes the specified MerklePath message. Does not implicitly {@link ibc.core.commitment.v1.MerklePath.verify|verify} messages.
                     * @param message MerklePath message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerklePath, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerklePath message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerklePath.verify|verify} messages.
                     * @param message MerklePath message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerklePath, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePath message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerklePath
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Decodes a MerklePath message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerklePath
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Verifies a MerklePath message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerklePath message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerklePath
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Creates a plain object from a MerklePath message. Also converts values to other types if specified.
                     * @param message MerklePath
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerklePath, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerklePath to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerkleProof. */
                interface IMerkleProof {

                    /** MerkleProof proofs */
                    proofs?: (ics23.ICommitmentProof[]|null);
                }

                /** Represents a MerkleProof. */
                class MerkleProof implements IMerkleProof {

                    /**
                     * Constructs a new MerkleProof.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerkleProof);

                    /** MerkleProof proofs. */
                    public proofs: ics23.ICommitmentProof[];

                    /**
                     * Encodes the specified MerkleProof message. Does not implicitly {@link ibc.core.commitment.v1.MerkleProof.verify|verify} messages.
                     * @param message MerkleProof message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerkleProof, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerkleProof message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerkleProof.verify|verify} messages.
                     * @param message MerkleProof message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerkleProof, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleProof message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerkleProof
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Decodes a MerkleProof message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerkleProof
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Verifies a MerkleProof message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerkleProof message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerkleProof
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Creates a plain object from a MerkleProof message. Also converts values to other types if specified.
                     * @param message MerkleProof
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerkleProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerkleProof to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace connection. */
        namespace connection {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Connection.
                     * @param request QueryConnectionRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionResponse
                     */
                    public connection(request: ibc.core.connection.v1.IQueryConnectionRequest, callback: ibc.core.connection.v1.Query.ConnectionCallback): void;

                    /**
                     * Calls Connection.
                     * @param request QueryConnectionRequest message or plain object
                     * @returns Promise
                     */
                    public connection(request: ibc.core.connection.v1.IQueryConnectionRequest): Promise<ibc.core.connection.v1.QueryConnectionResponse>;

                    /**
                     * Calls Connections.
                     * @param request QueryConnectionsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionsResponse
                     */
                    public connections(request: ibc.core.connection.v1.IQueryConnectionsRequest, callback: ibc.core.connection.v1.Query.ConnectionsCallback): void;

                    /**
                     * Calls Connections.
                     * @param request QueryConnectionsRequest message or plain object
                     * @returns Promise
                     */
                    public connections(request: ibc.core.connection.v1.IQueryConnectionsRequest): Promise<ibc.core.connection.v1.QueryConnectionsResponse>;

                    /**
                     * Calls ClientConnections.
                     * @param request QueryClientConnectionsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientConnectionsResponse
                     */
                    public clientConnections(request: ibc.core.connection.v1.IQueryClientConnectionsRequest, callback: ibc.core.connection.v1.Query.ClientConnectionsCallback): void;

                    /**
                     * Calls ClientConnections.
                     * @param request QueryClientConnectionsRequest message or plain object
                     * @returns Promise
                     */
                    public clientConnections(request: ibc.core.connection.v1.IQueryClientConnectionsRequest): Promise<ibc.core.connection.v1.QueryClientConnectionsResponse>;

                    /**
                     * Calls ConnectionClientState.
                     * @param request QueryConnectionClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionClientStateResponse
                     */
                    public connectionClientState(request: ibc.core.connection.v1.IQueryConnectionClientStateRequest, callback: ibc.core.connection.v1.Query.ConnectionClientStateCallback): void;

                    /**
                     * Calls ConnectionClientState.
                     * @param request QueryConnectionClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public connectionClientState(request: ibc.core.connection.v1.IQueryConnectionClientStateRequest): Promise<ibc.core.connection.v1.QueryConnectionClientStateResponse>;

                    /**
                     * Calls ConnectionConsensusState.
                     * @param request QueryConnectionConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionConsensusStateResponse
                     */
                    public connectionConsensusState(request: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, callback: ibc.core.connection.v1.Query.ConnectionConsensusStateCallback): void;

                    /**
                     * Calls ConnectionConsensusState.
                     * @param request QueryConnectionConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public connectionConsensusState(request: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest): Promise<ibc.core.connection.v1.QueryConnectionConsensusStateResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connection}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionResponse
                     */
                    type ConnectionCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connections}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionsResponse
                     */
                    type ConnectionsCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#clientConnections}.
                     * @param error Error, if any
                     * @param [response] QueryClientConnectionsResponse
                     */
                    type ClientConnectionsCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryClientConnectionsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connectionClientState}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionClientStateResponse
                     */
                    type ConnectionClientStateCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connectionConsensusState}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionConsensusStateResponse
                     */
                    type ConnectionConsensusStateCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionConsensusStateResponse) => void;
                }

                /** Properties of a QueryConnectionRequest. */
                interface IQueryConnectionRequest {

                    /** QueryConnectionRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionRequest. */
                class QueryConnectionRequest implements IQueryConnectionRequest {

                    /**
                     * Constructs a new QueryConnectionRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionRequest);

                    /** QueryConnectionRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionRequest.verify|verify} messages.
                     * @param message QueryConnectionRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionRequest.verify|verify} messages.
                     * @param message QueryConnectionRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Decodes a QueryConnectionRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Verifies a QueryConnectionRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Creates a plain object from a QueryConnectionRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionResponse. */
                interface IQueryConnectionResponse {

                    /** QueryConnectionResponse connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionResponse. */
                class QueryConnectionResponse implements IQueryConnectionResponse {

                    /**
                     * Constructs a new QueryConnectionResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionResponse);

                    /** QueryConnectionResponse connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionResponse.verify|verify} messages.
                     * @param message QueryConnectionResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionResponse.verify|verify} messages.
                     * @param message QueryConnectionResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Decodes a QueryConnectionResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Verifies a QueryConnectionResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Creates a plain object from a QueryConnectionResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionsRequest. */
                interface IQueryConnectionsRequest {

                    /** QueryConnectionsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionsRequest. */
                class QueryConnectionsRequest implements IQueryConnectionsRequest {

                    /**
                     * Constructs a new QueryConnectionsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionsRequest);

                    /** QueryConnectionsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsRequest.verify|verify} messages.
                     * @param message QueryConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionsRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsRequest.verify|verify} messages.
                     * @param message QueryConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Decodes a QueryConnectionsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Verifies a QueryConnectionsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Creates a plain object from a QueryConnectionsRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionsResponse. */
                interface IQueryConnectionsResponse {

                    /** QueryConnectionsResponse connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** QueryConnectionsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionsResponse. */
                class QueryConnectionsResponse implements IQueryConnectionsResponse {

                    /**
                     * Constructs a new QueryConnectionsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionsResponse);

                    /** QueryConnectionsResponse connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** QueryConnectionsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsResponse.verify|verify} messages.
                     * @param message QueryConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionsResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsResponse.verify|verify} messages.
                     * @param message QueryConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Decodes a QueryConnectionsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Verifies a QueryConnectionsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Creates a plain object from a QueryConnectionsResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientConnectionsRequest. */
                interface IQueryClientConnectionsRequest {

                    /** QueryClientConnectionsRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientConnectionsRequest. */
                class QueryClientConnectionsRequest implements IQueryClientConnectionsRequest {

                    /**
                     * Constructs a new QueryClientConnectionsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryClientConnectionsRequest);

                    /** QueryClientConnectionsRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsRequest.verify|verify} messages.
                     * @param message QueryClientConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryClientConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientConnectionsRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsRequest.verify|verify} messages.
                     * @param message QueryClientConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryClientConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Decodes a QueryClientConnectionsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Verifies a QueryClientConnectionsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientConnectionsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Creates a plain object from a QueryClientConnectionsRequest message. Also converts values to other types if specified.
                     * @param message QueryClientConnectionsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryClientConnectionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientConnectionsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientConnectionsResponse. */
                interface IQueryClientConnectionsResponse {

                    /** QueryClientConnectionsResponse connection_paths */
                    connection_paths?: (string[]|null);

                    /** QueryClientConnectionsResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientConnectionsResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientConnectionsResponse. */
                class QueryClientConnectionsResponse implements IQueryClientConnectionsResponse {

                    /**
                     * Constructs a new QueryClientConnectionsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryClientConnectionsResponse);

                    /** QueryClientConnectionsResponse connection_paths. */
                    public connection_paths: string[];

                    /** QueryClientConnectionsResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientConnectionsResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsResponse.verify|verify} messages.
                     * @param message QueryClientConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryClientConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientConnectionsResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsResponse.verify|verify} messages.
                     * @param message QueryClientConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryClientConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Decodes a QueryClientConnectionsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Verifies a QueryClientConnectionsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientConnectionsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Creates a plain object from a QueryClientConnectionsResponse message. Also converts values to other types if specified.
                     * @param message QueryClientConnectionsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryClientConnectionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientConnectionsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionClientStateRequest. */
                interface IQueryConnectionClientStateRequest {

                    /** QueryConnectionClientStateRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionClientStateRequest. */
                class QueryConnectionClientStateRequest implements IQueryConnectionClientStateRequest {

                    /**
                     * Constructs a new QueryConnectionClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionClientStateRequest);

                    /** QueryConnectionClientStateRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionClientStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateRequest.verify|verify} messages.
                     * @param message QueryConnectionClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateRequest.verify|verify} messages.
                     * @param message QueryConnectionClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Decodes a QueryConnectionClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Verifies a QueryConnectionClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Creates a plain object from a QueryConnectionClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionClientStateResponse. */
                interface IQueryConnectionClientStateResponse {

                    /** QueryConnectionClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionClientStateResponse. */
                class QueryConnectionClientStateResponse implements IQueryConnectionClientStateResponse {

                    /**
                     * Constructs a new QueryConnectionClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionClientStateResponse);

                    /** QueryConnectionClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionClientStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateResponse.verify|verify} messages.
                     * @param message QueryConnectionClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateResponse.verify|verify} messages.
                     * @param message QueryConnectionClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Decodes a QueryConnectionClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Verifies a QueryConnectionClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Creates a plain object from a QueryConnectionClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionConsensusStateRequest. */
                interface IQueryConnectionConsensusStateRequest {

                    /** QueryConnectionConsensusStateRequest connection_id */
                    connection_id?: (string|null);

                    /** QueryConnectionConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConnectionConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryConnectionConsensusStateRequest. */
                class QueryConnectionConsensusStateRequest implements IQueryConnectionConsensusStateRequest {

                    /**
                     * Constructs a new QueryConnectionConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest);

                    /** QueryConnectionConsensusStateRequest connection_id. */
                    public connection_id: string;

                    /** QueryConnectionConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConnectionConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Decodes a QueryConnectionConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Verifies a QueryConnectionConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryConnectionConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionConsensusStateResponse. */
                interface IQueryConnectionConsensusStateResponse {

                    /** QueryConnectionConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryConnectionConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionConsensusStateResponse. */
                class QueryConnectionConsensusStateResponse implements IQueryConnectionConsensusStateResponse {

                    /**
                     * Constructs a new QueryConnectionConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse);

                    /** QueryConnectionConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryConnectionConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionConsensusStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Decodes a QueryConnectionConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Verifies a QueryConnectionConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryConnectionConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** GenesisState client_connection_paths */
                    client_connection_paths?: (ibc.core.connection.v1.IConnectionPaths[]|null);

                    /** GenesisState next_connection_sequence */
                    next_connection_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IGenesisState);

                    /** GenesisState connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** GenesisState client_connection_paths. */
                    public client_connection_paths: ibc.core.connection.v1.IConnectionPaths[];

                    /** GenesisState next_connection_sequence. */
                    public next_connection_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.connection.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.connection.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionEnd. */
                interface IConnectionEnd {

                    /** ConnectionEnd client_id */
                    client_id?: (string|null);

                    /** ConnectionEnd versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** ConnectionEnd state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** ConnectionEnd counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents a ConnectionEnd. */
                class ConnectionEnd implements IConnectionEnd {

                    /**
                     * Constructs a new ConnectionEnd.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IConnectionEnd);

                    /** ConnectionEnd client_id. */
                    public client_id: string;

                    /** ConnectionEnd versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** ConnectionEnd state. */
                    public state: ibc.core.connection.v1.State;

                    /** ConnectionEnd counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified ConnectionEnd message. Does not implicitly {@link ibc.core.connection.v1.ConnectionEnd.verify|verify} messages.
                     * @param message ConnectionEnd message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IConnectionEnd, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionEnd message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ConnectionEnd.verify|verify} messages.
                     * @param message ConnectionEnd message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IConnectionEnd, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionEnd message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionEnd
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Decodes a ConnectionEnd message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionEnd
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Verifies a ConnectionEnd message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionEnd message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionEnd
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Creates a plain object from a ConnectionEnd message. Also converts values to other types if specified.
                     * @param message ConnectionEnd
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ConnectionEnd, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionEnd to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedConnection. */
                interface IIdentifiedConnection {

                    /** IdentifiedConnection id */
                    id?: (string|null);

                    /** IdentifiedConnection client_id */
                    client_id?: (string|null);

                    /** IdentifiedConnection versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** IdentifiedConnection state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** IdentifiedConnection counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents an IdentifiedConnection. */
                class IdentifiedConnection implements IIdentifiedConnection {

                    /**
                     * Constructs a new IdentifiedConnection.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IIdentifiedConnection);

                    /** IdentifiedConnection id. */
                    public id: string;

                    /** IdentifiedConnection client_id. */
                    public client_id: string;

                    /** IdentifiedConnection versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** IdentifiedConnection state. */
                    public state: ibc.core.connection.v1.State;

                    /** IdentifiedConnection counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified IdentifiedConnection message. Does not implicitly {@link ibc.core.connection.v1.IdentifiedConnection.verify|verify} messages.
                     * @param message IdentifiedConnection message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IIdentifiedConnection, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedConnection message, length delimited. Does not implicitly {@link ibc.core.connection.v1.IdentifiedConnection.verify|verify} messages.
                     * @param message IdentifiedConnection message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IIdentifiedConnection, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedConnection message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedConnection
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Decodes an IdentifiedConnection message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedConnection
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Verifies an IdentifiedConnection message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedConnection message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedConnection
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Creates a plain object from an IdentifiedConnection message. Also converts values to other types if specified.
                     * @param message IdentifiedConnection
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.IdentifiedConnection, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedConnection to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty client_id */
                    client_id?: (string|null);

                    /** Counterparty connection_id */
                    connection_id?: (string|null);

                    /** Counterparty prefix */
                    prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.ICounterparty);

                    /** Counterparty client_id. */
                    public client_id: string;

                    /** Counterparty connection_id. */
                    public connection_id: string;

                    /** Counterparty prefix. */
                    public prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.connection.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Counterparty message, length delimited. Does not implicitly {@link ibc.core.connection.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.Counterparty;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.Counterparty;

                    /**
                     * Verifies a Counterparty message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Counterparty message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Counterparty
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.Counterparty;

                    /**
                     * Creates a plain object from a Counterparty message. Also converts values to other types if specified.
                     * @param message Counterparty
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.Counterparty, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Counterparty to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientPaths. */
                interface IClientPaths {

                    /** ClientPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ClientPaths. */
                class ClientPaths implements IClientPaths {

                    /**
                     * Constructs a new ClientPaths.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IClientPaths);

                    /** ClientPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ClientPaths message. Does not implicitly {@link ibc.core.connection.v1.ClientPaths.verify|verify} messages.
                     * @param message ClientPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IClientPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientPaths message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ClientPaths.verify|verify} messages.
                     * @param message ClientPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IClientPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientPaths message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Decodes a ClientPaths message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Verifies a ClientPaths message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientPaths message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientPaths
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Creates a plain object from a ClientPaths message. Also converts values to other types if specified.
                     * @param message ClientPaths
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ClientPaths, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientPaths to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionPaths. */
                interface IConnectionPaths {

                    /** ConnectionPaths client_id */
                    client_id?: (string|null);

                    /** ConnectionPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ConnectionPaths. */
                class ConnectionPaths implements IConnectionPaths {

                    /**
                     * Constructs a new ConnectionPaths.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IConnectionPaths);

                    /** ConnectionPaths client_id. */
                    public client_id: string;

                    /** ConnectionPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ConnectionPaths message. Does not implicitly {@link ibc.core.connection.v1.ConnectionPaths.verify|verify} messages.
                     * @param message ConnectionPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IConnectionPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionPaths message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ConnectionPaths.verify|verify} messages.
                     * @param message ConnectionPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IConnectionPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionPaths message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Decodes a ConnectionPaths message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Verifies a ConnectionPaths message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionPaths message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionPaths
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Creates a plain object from a ConnectionPaths message. Also converts values to other types if specified.
                     * @param message ConnectionPaths
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ConnectionPaths, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionPaths to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Version. */
                interface IVersion {

                    /** Version identifier */
                    identifier?: (string|null);

                    /** Version features */
                    features?: (string[]|null);
                }

                /** Represents a Version. */
                class Version implements IVersion {

                    /**
                     * Constructs a new Version.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IVersion);

                    /** Version identifier. */
                    public identifier: string;

                    /** Version features. */
                    public features: string[];

                    /**
                     * Encodes the specified Version message. Does not implicitly {@link ibc.core.connection.v1.Version.verify|verify} messages.
                     * @param message Version message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Version message, length delimited. Does not implicitly {@link ibc.core.connection.v1.Version.verify|verify} messages.
                     * @param message Version message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Version message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Version
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.Version;

                    /**
                     * Decodes a Version message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Version
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.Version;

                    /**
                     * Verifies a Version message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Version message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Version
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.Version;

                    /**
                     * Creates a plain object from a Version message. Also converts values to other types if specified.
                     * @param message Version
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.Version, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Version to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ConnectionOpenInit.
                     * @param request MsgConnectionOpenInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenInitResponse
                     */
                    public connectionOpenInit(request: ibc.core.connection.v1.IMsgConnectionOpenInit, callback: ibc.core.connection.v1.Msg.ConnectionOpenInitCallback): void;

                    /**
                     * Calls ConnectionOpenInit.
                     * @param request MsgConnectionOpenInit message or plain object
                     * @returns Promise
                     */
                    public connectionOpenInit(request: ibc.core.connection.v1.IMsgConnectionOpenInit): Promise<ibc.core.connection.v1.MsgConnectionOpenInitResponse>;

                    /**
                     * Calls ConnectionOpenTry.
                     * @param request MsgConnectionOpenTry message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenTryResponse
                     */
                    public connectionOpenTry(request: ibc.core.connection.v1.IMsgConnectionOpenTry, callback: ibc.core.connection.v1.Msg.ConnectionOpenTryCallback): void;

                    /**
                     * Calls ConnectionOpenTry.
                     * @param request MsgConnectionOpenTry message or plain object
                     * @returns Promise
                     */
                    public connectionOpenTry(request: ibc.core.connection.v1.IMsgConnectionOpenTry): Promise<ibc.core.connection.v1.MsgConnectionOpenTryResponse>;

                    /**
                     * Calls ConnectionOpenAck.
                     * @param request MsgConnectionOpenAck message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenAckResponse
                     */
                    public connectionOpenAck(request: ibc.core.connection.v1.IMsgConnectionOpenAck, callback: ibc.core.connection.v1.Msg.ConnectionOpenAckCallback): void;

                    /**
                     * Calls ConnectionOpenAck.
                     * @param request MsgConnectionOpenAck message or plain object
                     * @returns Promise
                     */
                    public connectionOpenAck(request: ibc.core.connection.v1.IMsgConnectionOpenAck): Promise<ibc.core.connection.v1.MsgConnectionOpenAckResponse>;

                    /**
                     * Calls ConnectionOpenConfirm.
                     * @param request MsgConnectionOpenConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenConfirmResponse
                     */
                    public connectionOpenConfirm(request: ibc.core.connection.v1.IMsgConnectionOpenConfirm, callback: ibc.core.connection.v1.Msg.ConnectionOpenConfirmCallback): void;

                    /**
                     * Calls ConnectionOpenConfirm.
                     * @param request MsgConnectionOpenConfirm message or plain object
                     * @returns Promise
                     */
                    public connectionOpenConfirm(request: ibc.core.connection.v1.IMsgConnectionOpenConfirm): Promise<ibc.core.connection.v1.MsgConnectionOpenConfirmResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenInit}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenInitResponse
                     */
                    type ConnectionOpenInitCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenTry}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenTryResponse
                     */
                    type ConnectionOpenTryCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenTryResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenAck}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenAckResponse
                     */
                    type ConnectionOpenAckCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenAckResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenConfirmResponse
                     */
                    type ConnectionOpenConfirmCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenConfirmResponse) => void;
                }

                /** Properties of a MsgConnectionOpenInit. */
                interface IMsgConnectionOpenInit {

                    /** MsgConnectionOpenInit client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenInit counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenInit. */
                class MsgConnectionOpenInit implements IMsgConnectionOpenInit {

                    /**
                     * Constructs a new MsgConnectionOpenInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenInit);

                    /** MsgConnectionOpenInit client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenInit counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenInit message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInit.verify|verify} messages.
                     * @param message MsgConnectionOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenInit message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInit.verify|verify} messages.
                     * @param message MsgConnectionOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Decodes a MsgConnectionOpenInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Verifies a MsgConnectionOpenInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Creates a plain object from a MsgConnectionOpenInit message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenInitResponse. */
                interface IMsgConnectionOpenInitResponse {
                }

                /** Represents a MsgConnectionOpenInitResponse. */
                class MsgConnectionOpenInitResponse implements IMsgConnectionOpenInitResponse {

                    /**
                     * Constructs a new MsgConnectionOpenInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenInitResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenInitResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInitResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenInitResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInitResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Decodes a MsgConnectionOpenInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Verifies a MsgConnectionOpenInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenInitResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenTry. */
                interface IMsgConnectionOpenTry {

                    /** MsgConnectionOpenTry client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenTry previous_connection_id */
                    previous_connection_id?: (string|null);

                    /** MsgConnectionOpenTry client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenTry counterparty_versions */
                    counterparty_versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** MsgConnectionOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenTry consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenTry. */
                class MsgConnectionOpenTry implements IMsgConnectionOpenTry {

                    /**
                     * Constructs a new MsgConnectionOpenTry.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenTry);

                    /** MsgConnectionOpenTry client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenTry previous_connection_id. */
                    public previous_connection_id: string;

                    /** MsgConnectionOpenTry client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenTry counterparty_versions. */
                    public counterparty_versions: ibc.core.connection.v1.IVersion[];

                    /** MsgConnectionOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgConnectionOpenTry proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenTry proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenTry consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenTry message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTry.verify|verify} messages.
                     * @param message MsgConnectionOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenTry message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTry.verify|verify} messages.
                     * @param message MsgConnectionOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTry message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Decodes a MsgConnectionOpenTry message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Verifies a MsgConnectionOpenTry message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenTry message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenTry
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Creates a plain object from a MsgConnectionOpenTry message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenTry
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenTry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenTry to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenTryResponse. */
                interface IMsgConnectionOpenTryResponse {
                }

                /** Represents a MsgConnectionOpenTryResponse. */
                class MsgConnectionOpenTryResponse implements IMsgConnectionOpenTryResponse {

                    /**
                     * Constructs a new MsgConnectionOpenTryResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenTryResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenTryResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTryResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenTryResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTryResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTryResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Decodes a MsgConnectionOpenTryResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Verifies a MsgConnectionOpenTryResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenTryResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenTryResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenTryResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenTryResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenTryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenTryResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenAck. */
                interface IMsgConnectionOpenAck {

                    /** MsgConnectionOpenAck connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenAck counterparty_connection_id */
                    counterparty_connection_id?: (string|null);

                    /** MsgConnectionOpenAck version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenAck consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenAck. */
                class MsgConnectionOpenAck implements IMsgConnectionOpenAck {

                    /**
                     * Constructs a new MsgConnectionOpenAck.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenAck);

                    /** MsgConnectionOpenAck connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenAck counterparty_connection_id. */
                    public counterparty_connection_id: string;

                    /** MsgConnectionOpenAck version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgConnectionOpenAck proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenAck proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenAck consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenAck message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAck.verify|verify} messages.
                     * @param message MsgConnectionOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenAck message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAck.verify|verify} messages.
                     * @param message MsgConnectionOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAck message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Decodes a MsgConnectionOpenAck message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Verifies a MsgConnectionOpenAck message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenAck message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenAck
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Creates a plain object from a MsgConnectionOpenAck message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenAck
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenAck, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenAck to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenAckResponse. */
                interface IMsgConnectionOpenAckResponse {
                }

                /** Represents a MsgConnectionOpenAckResponse. */
                class MsgConnectionOpenAckResponse implements IMsgConnectionOpenAckResponse {

                    /**
                     * Constructs a new MsgConnectionOpenAckResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenAckResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenAckResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAckResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenAckResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAckResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAckResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Decodes a MsgConnectionOpenAckResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Verifies a MsgConnectionOpenAckResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenAckResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenAckResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenAckResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenAckResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenAckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenAckResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenConfirm. */
                interface IMsgConnectionOpenConfirm {

                    /** MsgConnectionOpenConfirm connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgConnectionOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenConfirm. */
                class MsgConnectionOpenConfirm implements IMsgConnectionOpenConfirm {

                    /**
                     * Constructs a new MsgConnectionOpenConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenConfirm);

                    /** MsgConnectionOpenConfirm connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgConnectionOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirm message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirm.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirm message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirm.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Decodes a MsgConnectionOpenConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Verifies a MsgConnectionOpenConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Creates a plain object from a MsgConnectionOpenConfirm message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenConfirmResponse. */
                interface IMsgConnectionOpenConfirmResponse {
                }

                /** Represents a MsgConnectionOpenConfirmResponse. */
                class MsgConnectionOpenConfirmResponse implements IMsgConnectionOpenConfirmResponse {

                    /**
                     * Constructs a new MsgConnectionOpenConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenConfirmResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Decodes a MsgConnectionOpenConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Verifies a MsgConnectionOpenConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace types. */
        namespace types {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState client_genesis */
                    client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis */
                    connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis */
                    channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.types.v1.IGenesisState);

                    /** GenesisState client_genesis. */
                    public client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis. */
                    public connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis. */
                    public channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.types.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.types.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.types.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.types.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.types.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.types.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.types.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.types.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace lightclients. */
    namespace lightclients {

        /** Namespace localhost. */
        namespace localhost {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState chain_id */
                    chain_id?: (string|null);

                    /** ClientState height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.localhost.v1.IClientState);

                    /** ClientState chain_id. */
                    public chain_id: string;

                    /** ClientState height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.localhost.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.localhost.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.localhost.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.localhost.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.localhost.v1.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.localhost.v1.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.localhost.v1.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.localhost.v1.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace solomachine. */
        namespace solomachine {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState sequence */
                    sequence?: (Long|null);

                    /** ClientState frozen_sequence */
                    frozen_sequence?: (Long|null);

                    /** ClientState consensus_state */
                    consensus_state?: (ibc.lightclients.solomachine.v1.IConsensusState|null);

                    /** ClientState allow_update_after_proposal */
                    allow_update_after_proposal?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IClientState);

                    /** ClientState sequence. */
                    public sequence: Long;

                    /** ClientState frozen_sequence. */
                    public frozen_sequence: Long;

                    /** ClientState consensus_state. */
                    public consensus_state?: (ibc.lightclients.solomachine.v1.IConsensusState|null);

                    /** ClientState allow_update_after_proposal. */
                    public allow_update_after_proposal: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier */
                    diversifier?: (string|null);

                    /** ConsensusState timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IConsensusState);

                    /** ConsensusState public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier. */
                    public diversifier: string;

                    /** ConsensusState timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ConsensusState;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ConsensusState;

                    /**
                     * Verifies a ConsensusState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ConsensusState;

                    /**
                     * Creates a plain object from a ConsensusState message. Also converts values to other types if specified.
                     * @param message ConsensusState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ConsensusState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header sequence */
                    sequence?: (Long|null);

                    /** Header timestamp */
                    timestamp?: (Long|null);

                    /** Header signature */
                    signature?: (Uint8Array|null);

                    /** Header new_public_key */
                    new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IHeader);

                    /** Header sequence. */
                    public sequence: Long;

                    /** Header timestamp. */
                    public timestamp: Long;

                    /** Header signature. */
                    public signature: Uint8Array;

                    /** Header new_public_key. */
                    public new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.solomachine.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Header message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.Header;

                    /**
                     * Decodes a Header message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.Header;

                    /**
                     * Verifies a Header message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Header message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Header
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.Header;

                    /**
                     * Creates a plain object from a Header message. Also converts values to other types if specified.
                     * @param message Header
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Header to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour sequence */
                    sequence?: (Long|null);

                    /** Misbehaviour signature_one */
                    signature_one?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /** Misbehaviour signature_two */
                    signature_two?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour sequence. */
                    public sequence: Long;

                    /** Misbehaviour signature_one. */
                    public signature_one?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /** Misbehaviour signature_two. */
                    public signature_two?: (ibc.lightclients.solomachine.v1.ISignatureAndData|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.solomachine.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Misbehaviour message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.Misbehaviour;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.Misbehaviour;

                    /**
                     * Verifies a Misbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Misbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Misbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.Misbehaviour;

                    /**
                     * Creates a plain object from a Misbehaviour message. Also converts values to other types if specified.
                     * @param message Misbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.Misbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Misbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignatureAndData. */
                interface ISignatureAndData {

                    /** SignatureAndData signature */
                    signature?: (Uint8Array|null);

                    /** SignatureAndData data_type */
                    data_type?: (ibc.lightclients.solomachine.v1.DataType|null);

                    /** SignatureAndData data */
                    data?: (Uint8Array|null);

                    /** SignatureAndData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a SignatureAndData. */
                class SignatureAndData implements ISignatureAndData {

                    /**
                     * Constructs a new SignatureAndData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.ISignatureAndData);

                    /** SignatureAndData signature. */
                    public signature: Uint8Array;

                    /** SignatureAndData data_type. */
                    public data_type: ibc.lightclients.solomachine.v1.DataType;

                    /** SignatureAndData data. */
                    public data: Uint8Array;

                    /** SignatureAndData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified SignatureAndData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignatureAndData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.SignatureAndData;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.SignatureAndData;

                    /**
                     * Verifies a SignatureAndData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignatureAndData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignatureAndData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.SignatureAndData;

                    /**
                     * Creates a plain object from a SignatureAndData message. Also converts values to other types if specified.
                     * @param message SignatureAndData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.SignatureAndData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignatureAndData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a TimestampedSignatureData. */
                interface ITimestampedSignatureData {

                    /** TimestampedSignatureData signature_data */
                    signature_data?: (Uint8Array|null);

                    /** TimestampedSignatureData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a TimestampedSignatureData. */
                class TimestampedSignatureData implements ITimestampedSignatureData {

                    /**
                     * Constructs a new TimestampedSignatureData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.ITimestampedSignatureData);

                    /** TimestampedSignatureData signature_data. */
                    public signature_data: Uint8Array;

                    /** TimestampedSignatureData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified TimestampedSignatureData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TimestampedSignatureData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.TimestampedSignatureData;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.TimestampedSignatureData;

                    /**
                     * Verifies a TimestampedSignatureData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TimestampedSignatureData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TimestampedSignatureData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.TimestampedSignatureData;

                    /**
                     * Creates a plain object from a TimestampedSignatureData message. Also converts values to other types if specified.
                     * @param message TimestampedSignatureData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.TimestampedSignatureData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TimestampedSignatureData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignBytes. */
                interface ISignBytes {

                    /** SignBytes sequence */
                    sequence?: (Long|null);

                    /** SignBytes timestamp */
                    timestamp?: (Long|null);

                    /** SignBytes diversifier */
                    diversifier?: (string|null);

                    /** SignBytes data_type */
                    data_type?: (ibc.lightclients.solomachine.v1.DataType|null);

                    /** SignBytes data */
                    data?: (Uint8Array|null);
                }

                /** Represents a SignBytes. */
                class SignBytes implements ISignBytes {

                    /**
                     * Constructs a new SignBytes.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.ISignBytes);

                    /** SignBytes sequence. */
                    public sequence: Long;

                    /** SignBytes timestamp. */
                    public timestamp: Long;

                    /** SignBytes diversifier. */
                    public diversifier: string;

                    /** SignBytes data_type. */
                    public data_type: ibc.lightclients.solomachine.v1.DataType;

                    /** SignBytes data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified SignBytes message. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignBytes message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.SignBytes;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.SignBytes;

                    /**
                     * Verifies a SignBytes message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignBytes message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignBytes
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.SignBytes;

                    /**
                     * Creates a plain object from a SignBytes message. Also converts values to other types if specified.
                     * @param message SignBytes
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.SignBytes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignBytes to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** DataType enum. */
                enum DataType {
                    DATA_TYPE_UNINITIALIZED_UNSPECIFIED = 0,
                    DATA_TYPE_CLIENT_STATE = 1,
                    DATA_TYPE_CONSENSUS_STATE = 2,
                    DATA_TYPE_CONNECTION_STATE = 3,
                    DATA_TYPE_CHANNEL_STATE = 4,
                    DATA_TYPE_PACKET_COMMITMENT = 5,
                    DATA_TYPE_PACKET_ACKNOWLEDGEMENT = 6,
                    DATA_TYPE_PACKET_RECEIPT_ABSENCE = 7,
                    DATA_TYPE_NEXT_SEQUENCE_RECV = 8,
                    DATA_TYPE_HEADER = 9
                }

                /** Properties of a HeaderData. */
                interface IHeaderData {

                    /** HeaderData new_pub_key */
                    new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a HeaderData. */
                class HeaderData implements IHeaderData {

                    /**
                     * Constructs a new HeaderData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IHeaderData);

                    /** HeaderData new_pub_key. */
                    public new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified HeaderData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified HeaderData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.HeaderData;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.HeaderData;

                    /**
                     * Verifies a HeaderData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a HeaderData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns HeaderData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.HeaderData;

                    /**
                     * Creates a plain object from a HeaderData message. Also converts values to other types if specified.
                     * @param message HeaderData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.HeaderData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this HeaderData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientStateData. */
                interface IClientStateData {

                    /** ClientStateData path */
                    path?: (Uint8Array|null);

                    /** ClientStateData client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ClientStateData. */
                class ClientStateData implements IClientStateData {

                    /**
                     * Constructs a new ClientStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IClientStateData);

                    /** ClientStateData path. */
                    public path: Uint8Array;

                    /** ClientStateData client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ClientStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientStateData.verify|verify} messages.
                     * @param message ClientStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IClientStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ClientStateData.verify|verify} messages.
                     * @param message ClientStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IClientStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ClientStateData;

                    /**
                     * Decodes a ClientStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ClientStateData;

                    /**
                     * Verifies a ClientStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ClientStateData;

                    /**
                     * Creates a plain object from a ClientStateData message. Also converts values to other types if specified.
                     * @param message ClientStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ClientStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusStateData. */
                interface IConsensusStateData {

                    /** ConsensusStateData path */
                    path?: (Uint8Array|null);

                    /** ConsensusStateData consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateData. */
                class ConsensusStateData implements IConsensusStateData {

                    /**
                     * Constructs a new ConsensusStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IConsensusStateData);

                    /** ConsensusStateData path. */
                    public path: Uint8Array;

                    /** ConsensusStateData consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusStateData.verify|verify} messages.
                     * @param message ConsensusStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IConsensusStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConsensusStateData.verify|verify} messages.
                     * @param message ConsensusStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IConsensusStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ConsensusStateData;

                    /**
                     * Decodes a ConsensusStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ConsensusStateData;

                    /**
                     * Verifies a ConsensusStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ConsensusStateData;

                    /**
                     * Creates a plain object from a ConsensusStateData message. Also converts values to other types if specified.
                     * @param message ConsensusStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ConsensusStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionStateData. */
                interface IConnectionStateData {

                    /** ConnectionStateData path */
                    path?: (Uint8Array|null);

                    /** ConnectionStateData connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);
                }

                /** Represents a ConnectionStateData. */
                class ConnectionStateData implements IConnectionStateData {

                    /**
                     * Constructs a new ConnectionStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IConnectionStateData);

                    /** ConnectionStateData path. */
                    public path: Uint8Array;

                    /** ConnectionStateData connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /**
                     * Encodes the specified ConnectionStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConnectionStateData.verify|verify} messages.
                     * @param message ConnectionStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IConnectionStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ConnectionStateData.verify|verify} messages.
                     * @param message ConnectionStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IConnectionStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ConnectionStateData;

                    /**
                     * Decodes a ConnectionStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ConnectionStateData;

                    /**
                     * Verifies a ConnectionStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ConnectionStateData;

                    /**
                     * Creates a plain object from a ConnectionStateData message. Also converts values to other types if specified.
                     * @param message ConnectionStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ConnectionStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ChannelStateData. */
                interface IChannelStateData {

                    /** ChannelStateData path */
                    path?: (Uint8Array|null);

                    /** ChannelStateData channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);
                }

                /** Represents a ChannelStateData. */
                class ChannelStateData implements IChannelStateData {

                    /**
                     * Constructs a new ChannelStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IChannelStateData);

                    /** ChannelStateData path. */
                    public path: Uint8Array;

                    /** ChannelStateData channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /**
                     * Encodes the specified ChannelStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.ChannelStateData.verify|verify} messages.
                     * @param message ChannelStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IChannelStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ChannelStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.ChannelStateData.verify|verify} messages.
                     * @param message ChannelStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IChannelStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ChannelStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ChannelStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.ChannelStateData;

                    /**
                     * Decodes a ChannelStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ChannelStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.ChannelStateData;

                    /**
                     * Verifies a ChannelStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ChannelStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ChannelStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.ChannelStateData;

                    /**
                     * Creates a plain object from a ChannelStateData message. Also converts values to other types if specified.
                     * @param message ChannelStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.ChannelStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ChannelStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketCommitmentData. */
                interface IPacketCommitmentData {

                    /** PacketCommitmentData path */
                    path?: (Uint8Array|null);

                    /** PacketCommitmentData commitment */
                    commitment?: (Uint8Array|null);
                }

                /** Represents a PacketCommitmentData. */
                class PacketCommitmentData implements IPacketCommitmentData {

                    /**
                     * Constructs a new PacketCommitmentData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IPacketCommitmentData);

                    /** PacketCommitmentData path. */
                    public path: Uint8Array;

                    /** PacketCommitmentData commitment. */
                    public commitment: Uint8Array;

                    /**
                     * Encodes the specified PacketCommitmentData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketCommitmentData.verify|verify} messages.
                     * @param message PacketCommitmentData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IPacketCommitmentData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketCommitmentData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketCommitmentData.verify|verify} messages.
                     * @param message PacketCommitmentData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IPacketCommitmentData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketCommitmentData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketCommitmentData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.PacketCommitmentData;

                    /**
                     * Decodes a PacketCommitmentData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketCommitmentData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.PacketCommitmentData;

                    /**
                     * Verifies a PacketCommitmentData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketCommitmentData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketCommitmentData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.PacketCommitmentData;

                    /**
                     * Creates a plain object from a PacketCommitmentData message. Also converts values to other types if specified.
                     * @param message PacketCommitmentData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.PacketCommitmentData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketCommitmentData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketAcknowledgementData. */
                interface IPacketAcknowledgementData {

                    /** PacketAcknowledgementData path */
                    path?: (Uint8Array|null);

                    /** PacketAcknowledgementData acknowledgement */
                    acknowledgement?: (Uint8Array|null);
                }

                /** Represents a PacketAcknowledgementData. */
                class PacketAcknowledgementData implements IPacketAcknowledgementData {

                    /**
                     * Constructs a new PacketAcknowledgementData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IPacketAcknowledgementData);

                    /** PacketAcknowledgementData path. */
                    public path: Uint8Array;

                    /** PacketAcknowledgementData acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /**
                     * Encodes the specified PacketAcknowledgementData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketAcknowledgementData.verify|verify} messages.
                     * @param message PacketAcknowledgementData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IPacketAcknowledgementData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketAcknowledgementData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketAcknowledgementData.verify|verify} messages.
                     * @param message PacketAcknowledgementData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IPacketAcknowledgementData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketAcknowledgementData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketAcknowledgementData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.PacketAcknowledgementData;

                    /**
                     * Decodes a PacketAcknowledgementData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketAcknowledgementData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.PacketAcknowledgementData;

                    /**
                     * Verifies a PacketAcknowledgementData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketAcknowledgementData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketAcknowledgementData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.PacketAcknowledgementData;

                    /**
                     * Creates a plain object from a PacketAcknowledgementData message. Also converts values to other types if specified.
                     * @param message PacketAcknowledgementData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.PacketAcknowledgementData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketAcknowledgementData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketReceiptAbsenceData. */
                interface IPacketReceiptAbsenceData {

                    /** PacketReceiptAbsenceData path */
                    path?: (Uint8Array|null);
                }

                /** Represents a PacketReceiptAbsenceData. */
                class PacketReceiptAbsenceData implements IPacketReceiptAbsenceData {

                    /**
                     * Constructs a new PacketReceiptAbsenceData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.IPacketReceiptAbsenceData);

                    /** PacketReceiptAbsenceData path. */
                    public path: Uint8Array;

                    /**
                     * Encodes the specified PacketReceiptAbsenceData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData.verify|verify} messages.
                     * @param message PacketReceiptAbsenceData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.IPacketReceiptAbsenceData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketReceiptAbsenceData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData.verify|verify} messages.
                     * @param message PacketReceiptAbsenceData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.IPacketReceiptAbsenceData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketReceiptAbsenceData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketReceiptAbsenceData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData;

                    /**
                     * Decodes a PacketReceiptAbsenceData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketReceiptAbsenceData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData;

                    /**
                     * Verifies a PacketReceiptAbsenceData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketReceiptAbsenceData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketReceiptAbsenceData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData;

                    /**
                     * Creates a plain object from a PacketReceiptAbsenceData message. Also converts values to other types if specified.
                     * @param message PacketReceiptAbsenceData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.PacketReceiptAbsenceData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketReceiptAbsenceData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a NextSequenceRecvData. */
                interface INextSequenceRecvData {

                    /** NextSequenceRecvData path */
                    path?: (Uint8Array|null);

                    /** NextSequenceRecvData next_seq_recv */
                    next_seq_recv?: (Long|null);
                }

                /** Represents a NextSequenceRecvData. */
                class NextSequenceRecvData implements INextSequenceRecvData {

                    /**
                     * Constructs a new NextSequenceRecvData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v1.INextSequenceRecvData);

                    /** NextSequenceRecvData path. */
                    public path: Uint8Array;

                    /** NextSequenceRecvData next_seq_recv. */
                    public next_seq_recv: Long;

                    /**
                     * Encodes the specified NextSequenceRecvData message. Does not implicitly {@link ibc.lightclients.solomachine.v1.NextSequenceRecvData.verify|verify} messages.
                     * @param message NextSequenceRecvData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v1.INextSequenceRecvData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified NextSequenceRecvData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v1.NextSequenceRecvData.verify|verify} messages.
                     * @param message NextSequenceRecvData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v1.INextSequenceRecvData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a NextSequenceRecvData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns NextSequenceRecvData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v1.NextSequenceRecvData;

                    /**
                     * Decodes a NextSequenceRecvData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns NextSequenceRecvData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v1.NextSequenceRecvData;

                    /**
                     * Verifies a NextSequenceRecvData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a NextSequenceRecvData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns NextSequenceRecvData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v1.NextSequenceRecvData;

                    /**
                     * Creates a plain object from a NextSequenceRecvData message. Also converts values to other types if specified.
                     * @param message NextSequenceRecvData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v1.NextSequenceRecvData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this NextSequenceRecvData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace tendermint. */
        namespace tendermint {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState chain_id */
                    chain_id?: (string|null);

                    /** ClientState trust_level */
                    trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period */
                    trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period */
                    unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift */
                    max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height */
                    frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height */
                    latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs */
                    proof_specs?: (ics23.IProofSpec[]|null);

                    /** ClientState upgrade_path */
                    upgrade_path?: (string[]|null);

                    /** ClientState allow_update_after_expiry */
                    allow_update_after_expiry?: (boolean|null);

                    /** ClientState allow_update_after_misbehaviour */
                    allow_update_after_misbehaviour?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IClientState);

                    /** ClientState chain_id. */
                    public chain_id: string;

                    /** ClientState trust_level. */
                    public trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period. */
                    public trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period. */
                    public unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift. */
                    public max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height. */
                    public frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height. */
                    public latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs. */
                    public proof_specs: ics23.IProofSpec[];

                    /** ClientState upgrade_path. */
                    public upgrade_path: string[];

                    /** ClientState allow_update_after_expiry. */
                    public allow_update_after_expiry: boolean;

                    /** ClientState allow_update_after_misbehaviour. */
                    public allow_update_after_misbehaviour: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState timestamp */
                    timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root */
                    root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash */
                    next_validators_hash?: (Uint8Array|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IConsensusState);

                    /** ConsensusState timestamp. */
                    public timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root. */
                    public root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash. */
                    public next_validators_hash: Uint8Array;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusState message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Verifies a ConsensusState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Creates a plain object from a ConsensusState message. Also converts values to other types if specified.
                     * @param message ConsensusState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.ConsensusState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour header_1 */
                    header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2 */
                    header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour header_1. */
                    public header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2. */
                    public header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Misbehaviour message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Verifies a Misbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Misbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Misbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Creates a plain object from a Misbehaviour message. Also converts values to other types if specified.
                     * @param message Misbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Misbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Misbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header signed_header */
                    signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set */
                    validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height */
                    trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators */
                    trusted_validators?: (tendermint.types.IValidatorSet|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IHeader);

                    /** Header signed_header. */
                    public signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set. */
                    public validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height. */
                    public trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators. */
                    public trusted_validators?: (tendermint.types.IValidatorSet|null);

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Header message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Decodes a Header message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Verifies a Header message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Header message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Header
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Creates a plain object from a Header message. Also converts values to other types if specified.
                     * @param message Header
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Header to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Fraction. */
                interface IFraction {

                    /** Fraction numerator */
                    numerator?: (Long|null);

                    /** Fraction denominator */
                    denominator?: (Long|null);
                }

                /** Represents a Fraction. */
                class Fraction implements IFraction {

                    /**
                     * Constructs a new Fraction.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IFraction);

                    /** Fraction numerator. */
                    public numerator: Long;

                    /** Fraction denominator. */
                    public denominator: Long;

                    /**
                     * Encodes the specified Fraction message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Fraction.verify|verify} messages.
                     * @param message Fraction message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IFraction, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Fraction message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Fraction.verify|verify} messages.
                     * @param message Fraction message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IFraction, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Fraction message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Fraction
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Decodes a Fraction message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Fraction
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Verifies a Fraction message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Fraction message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Fraction
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Creates a plain object from a Fraction message. Also converts values to other types if specified.
                     * @param message Fraction
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Fraction, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Fraction to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }
}

/** Namespace ics23. */
export namespace ics23 {

    /** HashOp enum. */
    enum HashOp {
        NO_HASH = 0,
        SHA256 = 1,
        SHA512 = 2,
        KECCAK = 3,
        RIPEMD160 = 4,
        BITCOIN = 5
    }

    /**
     * LengthOp defines how to process the key and value of the LeafOp
     * to include length information. After encoding the length with the given
     * algorithm, the length will be prepended to the key and value bytes.
     * (Each one with it's own encoded length)
     */
    enum LengthOp {
        NO_PREFIX = 0,
        VAR_PROTO = 1,
        VAR_RLP = 2,
        FIXED32_BIG = 3,
        FIXED32_LITTLE = 4,
        FIXED64_BIG = 5,
        FIXED64_LITTLE = 6,
        REQUIRE_32_BYTES = 7,
        REQUIRE_64_BYTES = 8
    }

    /** Properties of an ExistenceProof. */
    interface IExistenceProof {

        /** ExistenceProof key */
        key?: (Uint8Array|null);

        /** ExistenceProof value */
        value?: (Uint8Array|null);

        /** ExistenceProof leaf */
        leaf?: (ics23.ILeafOp|null);

        /** ExistenceProof path */
        path?: (ics23.IInnerOp[]|null);
    }

    /**
     * ExistenceProof takes a key and a value and a set of steps to perform on it.
     * The result of peforming all these steps will provide a "root hash", which can
     * be compared to the value in a header.
     *
     * Since it is computationally infeasible to produce a hash collission for any of the used
     * cryptographic hash functions, if someone can provide a series of operations to transform
     * a given key and value into a root hash that matches some trusted root, these key and values
     * must be in the referenced merkle tree.
     *
     * The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
     * which should be controlled by a spec. Eg. with lengthOp as NONE,
     * prefix = FOO, key = BAR, value = CHOICE
     * and
     * prefix = F, key = OOBAR, value = CHOICE
     * would produce the same value.
     *
     * With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
     * in the ProofSpec is valuable to prevent this mutability. And why all trees should
     * length-prefix the data before hashing it.
     */
    class ExistenceProof implements IExistenceProof {

        /**
         * Constructs a new ExistenceProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IExistenceProof);

        /** ExistenceProof key. */
        public key: Uint8Array;

        /** ExistenceProof value. */
        public value: Uint8Array;

        /** ExistenceProof leaf. */
        public leaf?: (ics23.ILeafOp|null);

        /** ExistenceProof path. */
        public path: ics23.IInnerOp[];

        /**
         * Encodes the specified ExistenceProof message. Does not implicitly {@link ics23.ExistenceProof.verify|verify} messages.
         * @param message ExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExistenceProof message, length delimited. Does not implicitly {@link ics23.ExistenceProof.verify|verify} messages.
         * @param message ExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExistenceProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.ExistenceProof;

        /**
         * Decodes an ExistenceProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.ExistenceProof;

        /**
         * Verifies an ExistenceProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExistenceProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExistenceProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.ExistenceProof;

        /**
         * Creates a plain object from an ExistenceProof message. Also converts values to other types if specified.
         * @param message ExistenceProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.ExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExistenceProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NonExistenceProof. */
    interface INonExistenceProof {

        /** NonExistenceProof key */
        key?: (Uint8Array|null);

        /** NonExistenceProof left */
        left?: (ics23.IExistenceProof|null);

        /** NonExistenceProof right */
        right?: (ics23.IExistenceProof|null);
    }

    /** Represents a NonExistenceProof. */
    class NonExistenceProof implements INonExistenceProof {

        /**
         * Constructs a new NonExistenceProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.INonExistenceProof);

        /** NonExistenceProof key. */
        public key: Uint8Array;

        /** NonExistenceProof left. */
        public left?: (ics23.IExistenceProof|null);

        /** NonExistenceProof right. */
        public right?: (ics23.IExistenceProof|null);

        /**
         * Encodes the specified NonExistenceProof message. Does not implicitly {@link ics23.NonExistenceProof.verify|verify} messages.
         * @param message NonExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.INonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NonExistenceProof message, length delimited. Does not implicitly {@link ics23.NonExistenceProof.verify|verify} messages.
         * @param message NonExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.INonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NonExistenceProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.NonExistenceProof;

        /**
         * Decodes a NonExistenceProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.NonExistenceProof;

        /**
         * Verifies a NonExistenceProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NonExistenceProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NonExistenceProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.NonExistenceProof;

        /**
         * Creates a plain object from a NonExistenceProof message. Also converts values to other types if specified.
         * @param message NonExistenceProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.NonExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NonExistenceProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitmentProof. */
    interface ICommitmentProof {

        /** CommitmentProof exist */
        exist?: (ics23.IExistenceProof|null);

        /** CommitmentProof nonexist */
        nonexist?: (ics23.INonExistenceProof|null);

        /** CommitmentProof batch */
        batch?: (ics23.IBatchProof|null);

        /** CommitmentProof compressed */
        compressed?: (ics23.ICompressedBatchProof|null);
    }

    /** Represents a CommitmentProof. */
    class CommitmentProof implements ICommitmentProof {

        /**
         * Constructs a new CommitmentProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ICommitmentProof);

        /** CommitmentProof exist. */
        public exist?: (ics23.IExistenceProof|null);

        /** CommitmentProof nonexist. */
        public nonexist?: (ics23.INonExistenceProof|null);

        /** CommitmentProof batch. */
        public batch?: (ics23.IBatchProof|null);

        /** CommitmentProof compressed. */
        public compressed?: (ics23.ICompressedBatchProof|null);

        /** CommitmentProof proof. */
        public proof?: ("exist"|"nonexist"|"batch"|"compressed");

        /**
         * Encodes the specified CommitmentProof message. Does not implicitly {@link ics23.CommitmentProof.verify|verify} messages.
         * @param message CommitmentProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ICommitmentProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitmentProof message, length delimited. Does not implicitly {@link ics23.CommitmentProof.verify|verify} messages.
         * @param message CommitmentProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ICommitmentProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitmentProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitmentProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.CommitmentProof;

        /**
         * Decodes a CommitmentProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitmentProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.CommitmentProof;

        /**
         * Verifies a CommitmentProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitmentProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitmentProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.CommitmentProof;

        /**
         * Creates a plain object from a CommitmentProof message. Also converts values to other types if specified.
         * @param message CommitmentProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.CommitmentProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitmentProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeafOp. */
    interface ILeafOp {

        /** LeafOp hash */
        hash?: (ics23.HashOp|null);

        /** LeafOp prehash_key */
        prehash_key?: (ics23.HashOp|null);

        /** LeafOp prehash_value */
        prehash_value?: (ics23.HashOp|null);

        /** LeafOp length */
        length?: (ics23.LengthOp|null);

        /** LeafOp prefix */
        prefix?: (Uint8Array|null);
    }

    /**
     * LeafOp represents the raw key-value data we wish to prove, and
     * must be flexible to represent the internal transformation from
     * the original key-value pairs into the basis hash, for many existing
     * merkle trees.
     *
     * key and value are passed in. So that the signature of this operation is:
     * leafOp(key, value) -> output
     *
     * To process this, first prehash the keys and values if needed (ANY means no hash in this case):
     * hkey = prehashKey(key)
     * hvalue = prehashValue(value)
     *
     * Then combine the bytes, and hash it
     * output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
     */
    class LeafOp implements ILeafOp {

        /**
         * Constructs a new LeafOp.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ILeafOp);

        /** LeafOp hash. */
        public hash: ics23.HashOp;

        /** LeafOp prehash_key. */
        public prehash_key: ics23.HashOp;

        /** LeafOp prehash_value. */
        public prehash_value: ics23.HashOp;

        /** LeafOp length. */
        public length: ics23.LengthOp;

        /** LeafOp prefix. */
        public prefix: Uint8Array;

        /**
         * Encodes the specified LeafOp message. Does not implicitly {@link ics23.LeafOp.verify|verify} messages.
         * @param message LeafOp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ILeafOp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeafOp message, length delimited. Does not implicitly {@link ics23.LeafOp.verify|verify} messages.
         * @param message LeafOp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ILeafOp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeafOp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeafOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.LeafOp;

        /**
         * Decodes a LeafOp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeafOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.LeafOp;

        /**
         * Verifies a LeafOp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeafOp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeafOp
         */
        public static fromObject(object: { [k: string]: any }): ics23.LeafOp;

        /**
         * Creates a plain object from a LeafOp message. Also converts values to other types if specified.
         * @param message LeafOp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.LeafOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeafOp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InnerOp. */
    interface IInnerOp {

        /** InnerOp hash */
        hash?: (ics23.HashOp|null);

        /** InnerOp prefix */
        prefix?: (Uint8Array|null);

        /** InnerOp suffix */
        suffix?: (Uint8Array|null);
    }

    /**
     * InnerOp represents a merkle-proof step that is not a leaf.
     * It represents concatenating two children and hashing them to provide the next result.
     *
     * The result of the previous step is passed in, so the signature of this op is:
     * innerOp(child) -> output
     *
     * The result of applying InnerOp should be:
     * output = op.hash(op.prefix || child || op.suffix)
     *
     * where the || operator is concatenation of binary data,
     * and child is the result of hashing all the tree below this step.
     *
     * Any special data, like prepending child with the length, or prepending the entire operation with
     * some value to differentiate from leaf nodes, should be included in prefix and suffix.
     * If either of prefix or suffix is empty, we just treat it as an empty string
     */
    class InnerOp implements IInnerOp {

        /**
         * Constructs a new InnerOp.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IInnerOp);

        /** InnerOp hash. */
        public hash: ics23.HashOp;

        /** InnerOp prefix. */
        public prefix: Uint8Array;

        /** InnerOp suffix. */
        public suffix: Uint8Array;

        /**
         * Encodes the specified InnerOp message. Does not implicitly {@link ics23.InnerOp.verify|verify} messages.
         * @param message InnerOp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IInnerOp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InnerOp message, length delimited. Does not implicitly {@link ics23.InnerOp.verify|verify} messages.
         * @param message InnerOp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IInnerOp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InnerOp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InnerOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.InnerOp;

        /**
         * Decodes an InnerOp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InnerOp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.InnerOp;

        /**
         * Verifies an InnerOp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InnerOp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InnerOp
         */
        public static fromObject(object: { [k: string]: any }): ics23.InnerOp;

        /**
         * Creates a plain object from an InnerOp message. Also converts values to other types if specified.
         * @param message InnerOp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.InnerOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InnerOp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProofSpec. */
    interface IProofSpec {

        /** ProofSpec leaf_spec */
        leaf_spec?: (ics23.ILeafOp|null);

        /** ProofSpec inner_spec */
        inner_spec?: (ics23.IInnerSpec|null);

        /** ProofSpec max_depth */
        max_depth?: (number|null);

        /** ProofSpec min_depth */
        min_depth?: (number|null);
    }

    /**
     * ProofSpec defines what the expected parameters are for a given proof type.
     * This can be stored in the client and used to validate any incoming proofs.
     *
     * verify(ProofSpec, Proof) -> Proof | Error
     *
     * As demonstrated in tests, if we don't fix the algorithm used to calculate the
     * LeafHash for a given tree, there are many possible key-value pairs that can
     * generate a given hash (by interpretting the preimage differently).
     * We need this for proper security, requires client knows a priori what
     * tree format server uses. But not in code, rather a configuration object.
     */
    class ProofSpec implements IProofSpec {

        /**
         * Constructs a new ProofSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IProofSpec);

        /** ProofSpec leaf_spec. */
        public leaf_spec?: (ics23.ILeafOp|null);

        /** ProofSpec inner_spec. */
        public inner_spec?: (ics23.IInnerSpec|null);

        /** ProofSpec max_depth. */
        public max_depth: number;

        /** ProofSpec min_depth. */
        public min_depth: number;

        /**
         * Encodes the specified ProofSpec message. Does not implicitly {@link ics23.ProofSpec.verify|verify} messages.
         * @param message ProofSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IProofSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProofSpec message, length delimited. Does not implicitly {@link ics23.ProofSpec.verify|verify} messages.
         * @param message ProofSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IProofSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProofSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProofSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.ProofSpec;

        /**
         * Decodes a ProofSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProofSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.ProofSpec;

        /**
         * Verifies a ProofSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProofSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProofSpec
         */
        public static fromObject(object: { [k: string]: any }): ics23.ProofSpec;

        /**
         * Creates a plain object from a ProofSpec message. Also converts values to other types if specified.
         * @param message ProofSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.ProofSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProofSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InnerSpec. */
    interface IInnerSpec {

        /** InnerSpec child_order */
        child_order?: (number[]|null);

        /** InnerSpec child_size */
        child_size?: (number|null);

        /** InnerSpec min_prefix_length */
        min_prefix_length?: (number|null);

        /** InnerSpec max_prefix_length */
        max_prefix_length?: (number|null);

        /** InnerSpec empty_child */
        empty_child?: (Uint8Array|null);

        /** InnerSpec hash */
        hash?: (ics23.HashOp|null);
    }

    /** Represents an InnerSpec. */
    class InnerSpec implements IInnerSpec {

        /**
         * Constructs a new InnerSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IInnerSpec);

        /** InnerSpec child_order. */
        public child_order: number[];

        /** InnerSpec child_size. */
        public child_size: number;

        /** InnerSpec min_prefix_length. */
        public min_prefix_length: number;

        /** InnerSpec max_prefix_length. */
        public max_prefix_length: number;

        /** InnerSpec empty_child. */
        public empty_child: Uint8Array;

        /** InnerSpec hash. */
        public hash: ics23.HashOp;

        /**
         * Encodes the specified InnerSpec message. Does not implicitly {@link ics23.InnerSpec.verify|verify} messages.
         * @param message InnerSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IInnerSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InnerSpec message, length delimited. Does not implicitly {@link ics23.InnerSpec.verify|verify} messages.
         * @param message InnerSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IInnerSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InnerSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InnerSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.InnerSpec;

        /**
         * Decodes an InnerSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InnerSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.InnerSpec;

        /**
         * Verifies an InnerSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InnerSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InnerSpec
         */
        public static fromObject(object: { [k: string]: any }): ics23.InnerSpec;

        /**
         * Creates a plain object from an InnerSpec message. Also converts values to other types if specified.
         * @param message InnerSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.InnerSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InnerSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BatchProof. */
    interface IBatchProof {

        /** BatchProof entries */
        entries?: (ics23.IBatchEntry[]|null);
    }

    /** Represents a BatchProof. */
    class BatchProof implements IBatchProof {

        /**
         * Constructs a new BatchProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IBatchProof);

        /** BatchProof entries. */
        public entries: ics23.IBatchEntry[];

        /**
         * Encodes the specified BatchProof message. Does not implicitly {@link ics23.BatchProof.verify|verify} messages.
         * @param message BatchProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BatchProof message, length delimited. Does not implicitly {@link ics23.BatchProof.verify|verify} messages.
         * @param message BatchProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.BatchProof;

        /**
         * Decodes a BatchProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.BatchProof;

        /**
         * Verifies a BatchProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BatchProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BatchProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.BatchProof;

        /**
         * Creates a plain object from a BatchProof message. Also converts values to other types if specified.
         * @param message BatchProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.BatchProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BatchProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BatchEntry. */
    interface IBatchEntry {

        /** BatchEntry exist */
        exist?: (ics23.IExistenceProof|null);

        /** BatchEntry nonexist */
        nonexist?: (ics23.INonExistenceProof|null);
    }

    /** Represents a BatchEntry. */
    class BatchEntry implements IBatchEntry {

        /**
         * Constructs a new BatchEntry.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.IBatchEntry);

        /** BatchEntry exist. */
        public exist?: (ics23.IExistenceProof|null);

        /** BatchEntry nonexist. */
        public nonexist?: (ics23.INonExistenceProof|null);

        /** BatchEntry proof. */
        public proof?: ("exist"|"nonexist");

        /**
         * Encodes the specified BatchEntry message. Does not implicitly {@link ics23.BatchEntry.verify|verify} messages.
         * @param message BatchEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.IBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BatchEntry message, length delimited. Does not implicitly {@link ics23.BatchEntry.verify|verify} messages.
         * @param message BatchEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.IBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchEntry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.BatchEntry;

        /**
         * Decodes a BatchEntry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.BatchEntry;

        /**
         * Verifies a BatchEntry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BatchEntry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BatchEntry
         */
        public static fromObject(object: { [k: string]: any }): ics23.BatchEntry;

        /**
         * Creates a plain object from a BatchEntry message. Also converts values to other types if specified.
         * @param message BatchEntry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.BatchEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BatchEntry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CompressedBatchProof. */
    interface ICompressedBatchProof {

        /** CompressedBatchProof entries */
        entries?: (ics23.ICompressedBatchEntry[]|null);

        /** CompressedBatchProof lookup_inners */
        lookup_inners?: (ics23.IInnerOp[]|null);
    }

    /** Represents a CompressedBatchProof. */
    class CompressedBatchProof implements ICompressedBatchProof {

        /**
         * Constructs a new CompressedBatchProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ICompressedBatchProof);

        /** CompressedBatchProof entries. */
        public entries: ics23.ICompressedBatchEntry[];

        /** CompressedBatchProof lookup_inners. */
        public lookup_inners: ics23.IInnerOp[];

        /**
         * Encodes the specified CompressedBatchProof message. Does not implicitly {@link ics23.CompressedBatchProof.verify|verify} messages.
         * @param message CompressedBatchProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ICompressedBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CompressedBatchProof message, length delimited. Does not implicitly {@link ics23.CompressedBatchProof.verify|verify} messages.
         * @param message CompressedBatchProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ICompressedBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedBatchProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CompressedBatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.CompressedBatchProof;

        /**
         * Decodes a CompressedBatchProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CompressedBatchProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.CompressedBatchProof;

        /**
         * Verifies a CompressedBatchProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CompressedBatchProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CompressedBatchProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.CompressedBatchProof;

        /**
         * Creates a plain object from a CompressedBatchProof message. Also converts values to other types if specified.
         * @param message CompressedBatchProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.CompressedBatchProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CompressedBatchProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CompressedBatchEntry. */
    interface ICompressedBatchEntry {

        /** CompressedBatchEntry exist */
        exist?: (ics23.ICompressedExistenceProof|null);

        /** CompressedBatchEntry nonexist */
        nonexist?: (ics23.ICompressedNonExistenceProof|null);
    }

    /** Represents a CompressedBatchEntry. */
    class CompressedBatchEntry implements ICompressedBatchEntry {

        /**
         * Constructs a new CompressedBatchEntry.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ICompressedBatchEntry);

        /** CompressedBatchEntry exist. */
        public exist?: (ics23.ICompressedExistenceProof|null);

        /** CompressedBatchEntry nonexist. */
        public nonexist?: (ics23.ICompressedNonExistenceProof|null);

        /** CompressedBatchEntry proof. */
        public proof?: ("exist"|"nonexist");

        /**
         * Encodes the specified CompressedBatchEntry message. Does not implicitly {@link ics23.CompressedBatchEntry.verify|verify} messages.
         * @param message CompressedBatchEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ICompressedBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CompressedBatchEntry message, length delimited. Does not implicitly {@link ics23.CompressedBatchEntry.verify|verify} messages.
         * @param message CompressedBatchEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ICompressedBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedBatchEntry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CompressedBatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.CompressedBatchEntry;

        /**
         * Decodes a CompressedBatchEntry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CompressedBatchEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.CompressedBatchEntry;

        /**
         * Verifies a CompressedBatchEntry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CompressedBatchEntry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CompressedBatchEntry
         */
        public static fromObject(object: { [k: string]: any }): ics23.CompressedBatchEntry;

        /**
         * Creates a plain object from a CompressedBatchEntry message. Also converts values to other types if specified.
         * @param message CompressedBatchEntry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.CompressedBatchEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CompressedBatchEntry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CompressedExistenceProof. */
    interface ICompressedExistenceProof {

        /** CompressedExistenceProof key */
        key?: (Uint8Array|null);

        /** CompressedExistenceProof value */
        value?: (Uint8Array|null);

        /** CompressedExistenceProof leaf */
        leaf?: (ics23.ILeafOp|null);

        /** CompressedExistenceProof path */
        path?: (number[]|null);
    }

    /** Represents a CompressedExistenceProof. */
    class CompressedExistenceProof implements ICompressedExistenceProof {

        /**
         * Constructs a new CompressedExistenceProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ICompressedExistenceProof);

        /** CompressedExistenceProof key. */
        public key: Uint8Array;

        /** CompressedExistenceProof value. */
        public value: Uint8Array;

        /** CompressedExistenceProof leaf. */
        public leaf?: (ics23.ILeafOp|null);

        /** CompressedExistenceProof path. */
        public path: number[];

        /**
         * Encodes the specified CompressedExistenceProof message. Does not implicitly {@link ics23.CompressedExistenceProof.verify|verify} messages.
         * @param message CompressedExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ICompressedExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CompressedExistenceProof message, length delimited. Does not implicitly {@link ics23.CompressedExistenceProof.verify|verify} messages.
         * @param message CompressedExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ICompressedExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedExistenceProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CompressedExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.CompressedExistenceProof;

        /**
         * Decodes a CompressedExistenceProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CompressedExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.CompressedExistenceProof;

        /**
         * Verifies a CompressedExistenceProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CompressedExistenceProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CompressedExistenceProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.CompressedExistenceProof;

        /**
         * Creates a plain object from a CompressedExistenceProof message. Also converts values to other types if specified.
         * @param message CompressedExistenceProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.CompressedExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CompressedExistenceProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CompressedNonExistenceProof. */
    interface ICompressedNonExistenceProof {

        /** CompressedNonExistenceProof key */
        key?: (Uint8Array|null);

        /** CompressedNonExistenceProof left */
        left?: (ics23.ICompressedExistenceProof|null);

        /** CompressedNonExistenceProof right */
        right?: (ics23.ICompressedExistenceProof|null);
    }

    /** Represents a CompressedNonExistenceProof. */
    class CompressedNonExistenceProof implements ICompressedNonExistenceProof {

        /**
         * Constructs a new CompressedNonExistenceProof.
         * @param [properties] Properties to set
         */
        constructor(properties?: ics23.ICompressedNonExistenceProof);

        /** CompressedNonExistenceProof key. */
        public key: Uint8Array;

        /** CompressedNonExistenceProof left. */
        public left?: (ics23.ICompressedExistenceProof|null);

        /** CompressedNonExistenceProof right. */
        public right?: (ics23.ICompressedExistenceProof|null);

        /**
         * Encodes the specified CompressedNonExistenceProof message. Does not implicitly {@link ics23.CompressedNonExistenceProof.verify|verify} messages.
         * @param message CompressedNonExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ics23.ICompressedNonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CompressedNonExistenceProof message, length delimited. Does not implicitly {@link ics23.CompressedNonExistenceProof.verify|verify} messages.
         * @param message CompressedNonExistenceProof message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ics23.ICompressedNonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CompressedNonExistenceProof message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CompressedNonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ics23.CompressedNonExistenceProof;

        /**
         * Decodes a CompressedNonExistenceProof message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CompressedNonExistenceProof
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ics23.CompressedNonExistenceProof;

        /**
         * Verifies a CompressedNonExistenceProof message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CompressedNonExistenceProof message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CompressedNonExistenceProof
         */
        public static fromObject(object: { [k: string]: any }): ics23.CompressedNonExistenceProof;

        /**
         * Creates a plain object from a CompressedNonExistenceProof message. Also converts values to other types if specified.
         * @param message CompressedNonExistenceProof
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ics23.CompressedNonExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CompressedNonExistenceProof to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace tendermint. */
export namespace tendermint {

    /** Namespace abci. */
    namespace abci {

        /** Properties of a Request. */
        interface IRequest {

            /** Request echo */
            echo?: (tendermint.abci.IRequestEcho|null);

            /** Request flush */
            flush?: (tendermint.abci.IRequestFlush|null);

            /** Request info */
            info?: (tendermint.abci.IRequestInfo|null);

            /** Request set_option */
            set_option?: (tendermint.abci.IRequestSetOption|null);

            /** Request init_chain */
            init_chain?: (tendermint.abci.IRequestInitChain|null);

            /** Request query */
            query?: (tendermint.abci.IRequestQuery|null);

            /** Request begin_block */
            begin_block?: (tendermint.abci.IRequestBeginBlock|null);

            /** Request check_tx */
            check_tx?: (tendermint.abci.IRequestCheckTx|null);

            /** Request deliver_tx */
            deliver_tx?: (tendermint.abci.IRequestDeliverTx|null);

            /** Request end_block */
            end_block?: (tendermint.abci.IRequestEndBlock|null);

            /** Request commit */
            commit?: (tendermint.abci.IRequestCommit|null);

            /** Request list_snapshots */
            list_snapshots?: (tendermint.abci.IRequestListSnapshots|null);

            /** Request offer_snapshot */
            offer_snapshot?: (tendermint.abci.IRequestOfferSnapshot|null);

            /** Request load_snapshot_chunk */
            load_snapshot_chunk?: (tendermint.abci.IRequestLoadSnapshotChunk|null);

            /** Request apply_snapshot_chunk */
            apply_snapshot_chunk?: (tendermint.abci.IRequestApplySnapshotChunk|null);
        }

        /** Represents a Request. */
        class Request implements IRequest {

            /**
             * Constructs a new Request.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequest);

            /** Request echo. */
            public echo?: (tendermint.abci.IRequestEcho|null);

            /** Request flush. */
            public flush?: (tendermint.abci.IRequestFlush|null);

            /** Request info. */
            public info?: (tendermint.abci.IRequestInfo|null);

            /** Request set_option. */
            public set_option?: (tendermint.abci.IRequestSetOption|null);

            /** Request init_chain. */
            public init_chain?: (tendermint.abci.IRequestInitChain|null);

            /** Request query. */
            public query?: (tendermint.abci.IRequestQuery|null);

            /** Request begin_block. */
            public begin_block?: (tendermint.abci.IRequestBeginBlock|null);

            /** Request check_tx. */
            public check_tx?: (tendermint.abci.IRequestCheckTx|null);

            /** Request deliver_tx. */
            public deliver_tx?: (tendermint.abci.IRequestDeliverTx|null);

            /** Request end_block. */
            public end_block?: (tendermint.abci.IRequestEndBlock|null);

            /** Request commit. */
            public commit?: (tendermint.abci.IRequestCommit|null);

            /** Request list_snapshots. */
            public list_snapshots?: (tendermint.abci.IRequestListSnapshots|null);

            /** Request offer_snapshot. */
            public offer_snapshot?: (tendermint.abci.IRequestOfferSnapshot|null);

            /** Request load_snapshot_chunk. */
            public load_snapshot_chunk?: (tendermint.abci.IRequestLoadSnapshotChunk|null);

            /** Request apply_snapshot_chunk. */
            public apply_snapshot_chunk?: (tendermint.abci.IRequestApplySnapshotChunk|null);

            /** Request value. */
            public value?: ("echo"|"flush"|"info"|"set_option"|"init_chain"|"query"|"begin_block"|"check_tx"|"deliver_tx"|"end_block"|"commit"|"list_snapshots"|"offer_snapshot"|"load_snapshot_chunk"|"apply_snapshot_chunk");

            /**
             * Encodes the specified Request message. Does not implicitly {@link tendermint.abci.Request.verify|verify} messages.
             * @param message Request message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Request message, length delimited. Does not implicitly {@link tendermint.abci.Request.verify|verify} messages.
             * @param message Request message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Request message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Request
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Request;

            /**
             * Decodes a Request message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Request
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Request;

            /**
             * Verifies a Request message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Request message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Request
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Request;

            /**
             * Creates a plain object from a Request message. Also converts values to other types if specified.
             * @param message Request
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Request to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestEcho. */
        interface IRequestEcho {

            /** RequestEcho message */
            message?: (string|null);
        }

        /** Represents a RequestEcho. */
        class RequestEcho implements IRequestEcho {

            /**
             * Constructs a new RequestEcho.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestEcho);

            /** RequestEcho message. */
            public message: string;

            /**
             * Encodes the specified RequestEcho message. Does not implicitly {@link tendermint.abci.RequestEcho.verify|verify} messages.
             * @param message RequestEcho message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestEcho, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestEcho message, length delimited. Does not implicitly {@link tendermint.abci.RequestEcho.verify|verify} messages.
             * @param message RequestEcho message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestEcho, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestEcho message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestEcho;

            /**
             * Decodes a RequestEcho message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestEcho;

            /**
             * Verifies a RequestEcho message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestEcho message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestEcho
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestEcho;

            /**
             * Creates a plain object from a RequestEcho message. Also converts values to other types if specified.
             * @param message RequestEcho
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestEcho, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestEcho to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestFlush. */
        interface IRequestFlush {
        }

        /** Represents a RequestFlush. */
        class RequestFlush implements IRequestFlush {

            /**
             * Constructs a new RequestFlush.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestFlush);

            /**
             * Encodes the specified RequestFlush message. Does not implicitly {@link tendermint.abci.RequestFlush.verify|verify} messages.
             * @param message RequestFlush message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestFlush, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestFlush message, length delimited. Does not implicitly {@link tendermint.abci.RequestFlush.verify|verify} messages.
             * @param message RequestFlush message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestFlush, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestFlush message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestFlush;

            /**
             * Decodes a RequestFlush message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestFlush;

            /**
             * Verifies a RequestFlush message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestFlush message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestFlush
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestFlush;

            /**
             * Creates a plain object from a RequestFlush message. Also converts values to other types if specified.
             * @param message RequestFlush
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestFlush, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestFlush to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestInfo. */
        interface IRequestInfo {

            /** RequestInfo version */
            version?: (string|null);

            /** RequestInfo block_version */
            block_version?: (Long|null);

            /** RequestInfo p2p_version */
            p2p_version?: (Long|null);
        }

        /** Represents a RequestInfo. */
        class RequestInfo implements IRequestInfo {

            /**
             * Constructs a new RequestInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestInfo);

            /** RequestInfo version. */
            public version: string;

            /** RequestInfo block_version. */
            public block_version: Long;

            /** RequestInfo p2p_version. */
            public p2p_version: Long;

            /**
             * Encodes the specified RequestInfo message. Does not implicitly {@link tendermint.abci.RequestInfo.verify|verify} messages.
             * @param message RequestInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestInfo message, length delimited. Does not implicitly {@link tendermint.abci.RequestInfo.verify|verify} messages.
             * @param message RequestInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestInfo;

            /**
             * Decodes a RequestInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestInfo;

            /**
             * Verifies a RequestInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestInfo
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestInfo;

            /**
             * Creates a plain object from a RequestInfo message. Also converts values to other types if specified.
             * @param message RequestInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestSetOption. */
        interface IRequestSetOption {

            /** RequestSetOption key */
            key?: (string|null);

            /** RequestSetOption value */
            value?: (string|null);
        }

        /** Represents a RequestSetOption. */
        class RequestSetOption implements IRequestSetOption {

            /**
             * Constructs a new RequestSetOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestSetOption);

            /** RequestSetOption key. */
            public key: string;

            /** RequestSetOption value. */
            public value: string;

            /**
             * Encodes the specified RequestSetOption message. Does not implicitly {@link tendermint.abci.RequestSetOption.verify|verify} messages.
             * @param message RequestSetOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestSetOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestSetOption message, length delimited. Does not implicitly {@link tendermint.abci.RequestSetOption.verify|verify} messages.
             * @param message RequestSetOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestSetOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestSetOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestSetOption;

            /**
             * Decodes a RequestSetOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestSetOption;

            /**
             * Verifies a RequestSetOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestSetOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestSetOption
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestSetOption;

            /**
             * Creates a plain object from a RequestSetOption message. Also converts values to other types if specified.
             * @param message RequestSetOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestSetOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestSetOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestInitChain. */
        interface IRequestInitChain {

            /** RequestInitChain time */
            time?: (google.protobuf.ITimestamp|null);

            /** RequestInitChain chain_id */
            chain_id?: (string|null);

            /** RequestInitChain consensus_params */
            consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** RequestInitChain validators */
            validators?: (tendermint.abci.IValidatorUpdate[]|null);

            /** RequestInitChain app_state_bytes */
            app_state_bytes?: (Uint8Array|null);

            /** RequestInitChain initial_height */
            initial_height?: (Long|null);
        }

        /** Represents a RequestInitChain. */
        class RequestInitChain implements IRequestInitChain {

            /**
             * Constructs a new RequestInitChain.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestInitChain);

            /** RequestInitChain time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** RequestInitChain chain_id. */
            public chain_id: string;

            /** RequestInitChain consensus_params. */
            public consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** RequestInitChain validators. */
            public validators: tendermint.abci.IValidatorUpdate[];

            /** RequestInitChain app_state_bytes. */
            public app_state_bytes: Uint8Array;

            /** RequestInitChain initial_height. */
            public initial_height: Long;

            /**
             * Encodes the specified RequestInitChain message. Does not implicitly {@link tendermint.abci.RequestInitChain.verify|verify} messages.
             * @param message RequestInitChain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestInitChain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestInitChain message, length delimited. Does not implicitly {@link tendermint.abci.RequestInitChain.verify|verify} messages.
             * @param message RequestInitChain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestInitChain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestInitChain message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestInitChain;

            /**
             * Decodes a RequestInitChain message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestInitChain;

            /**
             * Verifies a RequestInitChain message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestInitChain message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestInitChain
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestInitChain;

            /**
             * Creates a plain object from a RequestInitChain message. Also converts values to other types if specified.
             * @param message RequestInitChain
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestInitChain, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestInitChain to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestQuery. */
        interface IRequestQuery {

            /** RequestQuery data */
            data?: (Uint8Array|null);

            /** RequestQuery path */
            path?: (string|null);

            /** RequestQuery height */
            height?: (Long|null);

            /** RequestQuery prove */
            prove?: (boolean|null);
        }

        /** Represents a RequestQuery. */
        class RequestQuery implements IRequestQuery {

            /**
             * Constructs a new RequestQuery.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestQuery);

            /** RequestQuery data. */
            public data: Uint8Array;

            /** RequestQuery path. */
            public path: string;

            /** RequestQuery height. */
            public height: Long;

            /** RequestQuery prove. */
            public prove: boolean;

            /**
             * Encodes the specified RequestQuery message. Does not implicitly {@link tendermint.abci.RequestQuery.verify|verify} messages.
             * @param message RequestQuery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestQuery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestQuery message, length delimited. Does not implicitly {@link tendermint.abci.RequestQuery.verify|verify} messages.
             * @param message RequestQuery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestQuery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestQuery message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestQuery;

            /**
             * Decodes a RequestQuery message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestQuery;

            /**
             * Verifies a RequestQuery message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestQuery message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestQuery
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestQuery;

            /**
             * Creates a plain object from a RequestQuery message. Also converts values to other types if specified.
             * @param message RequestQuery
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestQuery to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestBeginBlock. */
        interface IRequestBeginBlock {

            /** RequestBeginBlock hash */
            hash?: (Uint8Array|null);

            /** RequestBeginBlock header */
            header?: (tendermint.types.IHeader|null);

            /** RequestBeginBlock last_commit_info */
            last_commit_info?: (tendermint.abci.ILastCommitInfo|null);

            /** RequestBeginBlock byzantine_validators */
            byzantine_validators?: (tendermint.abci.IEvidence[]|null);
        }

        /** Represents a RequestBeginBlock. */
        class RequestBeginBlock implements IRequestBeginBlock {

            /**
             * Constructs a new RequestBeginBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestBeginBlock);

            /** RequestBeginBlock hash. */
            public hash: Uint8Array;

            /** RequestBeginBlock header. */
            public header?: (tendermint.types.IHeader|null);

            /** RequestBeginBlock last_commit_info. */
            public last_commit_info?: (tendermint.abci.ILastCommitInfo|null);

            /** RequestBeginBlock byzantine_validators. */
            public byzantine_validators: tendermint.abci.IEvidence[];

            /**
             * Encodes the specified RequestBeginBlock message. Does not implicitly {@link tendermint.abci.RequestBeginBlock.verify|verify} messages.
             * @param message RequestBeginBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestBeginBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestBeginBlock message, length delimited. Does not implicitly {@link tendermint.abci.RequestBeginBlock.verify|verify} messages.
             * @param message RequestBeginBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestBeginBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestBeginBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestBeginBlock;

            /**
             * Decodes a RequestBeginBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestBeginBlock;

            /**
             * Verifies a RequestBeginBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestBeginBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestBeginBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestBeginBlock;

            /**
             * Creates a plain object from a RequestBeginBlock message. Also converts values to other types if specified.
             * @param message RequestBeginBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestBeginBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestBeginBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** CheckTxType enum. */
        enum CheckTxType {
            NEW = 0,
            RECHECK = 1
        }

        /** Properties of a RequestCheckTx. */
        interface IRequestCheckTx {

            /** RequestCheckTx tx */
            tx?: (Uint8Array|null);

            /** RequestCheckTx type */
            type?: (tendermint.abci.CheckTxType|null);
        }

        /** Represents a RequestCheckTx. */
        class RequestCheckTx implements IRequestCheckTx {

            /**
             * Constructs a new RequestCheckTx.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestCheckTx);

            /** RequestCheckTx tx. */
            public tx: Uint8Array;

            /** RequestCheckTx type. */
            public type: tendermint.abci.CheckTxType;

            /**
             * Encodes the specified RequestCheckTx message. Does not implicitly {@link tendermint.abci.RequestCheckTx.verify|verify} messages.
             * @param message RequestCheckTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestCheckTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestCheckTx message, length delimited. Does not implicitly {@link tendermint.abci.RequestCheckTx.verify|verify} messages.
             * @param message RequestCheckTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestCheckTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestCheckTx message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestCheckTx;

            /**
             * Decodes a RequestCheckTx message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestCheckTx;

            /**
             * Verifies a RequestCheckTx message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestCheckTx message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestCheckTx
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestCheckTx;

            /**
             * Creates a plain object from a RequestCheckTx message. Also converts values to other types if specified.
             * @param message RequestCheckTx
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestCheckTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestCheckTx to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestDeliverTx. */
        interface IRequestDeliverTx {

            /** RequestDeliverTx tx */
            tx?: (Uint8Array|null);
        }

        /** Represents a RequestDeliverTx. */
        class RequestDeliverTx implements IRequestDeliverTx {

            /**
             * Constructs a new RequestDeliverTx.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestDeliverTx);

            /** RequestDeliverTx tx. */
            public tx: Uint8Array;

            /**
             * Encodes the specified RequestDeliverTx message. Does not implicitly {@link tendermint.abci.RequestDeliverTx.verify|verify} messages.
             * @param message RequestDeliverTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestDeliverTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestDeliverTx message, length delimited. Does not implicitly {@link tendermint.abci.RequestDeliverTx.verify|verify} messages.
             * @param message RequestDeliverTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestDeliverTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestDeliverTx message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestDeliverTx;

            /**
             * Decodes a RequestDeliverTx message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestDeliverTx;

            /**
             * Verifies a RequestDeliverTx message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestDeliverTx message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestDeliverTx
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestDeliverTx;

            /**
             * Creates a plain object from a RequestDeliverTx message. Also converts values to other types if specified.
             * @param message RequestDeliverTx
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestDeliverTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestDeliverTx to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestEndBlock. */
        interface IRequestEndBlock {

            /** RequestEndBlock height */
            height?: (Long|null);
        }

        /** Represents a RequestEndBlock. */
        class RequestEndBlock implements IRequestEndBlock {

            /**
             * Constructs a new RequestEndBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestEndBlock);

            /** RequestEndBlock height. */
            public height: Long;

            /**
             * Encodes the specified RequestEndBlock message. Does not implicitly {@link tendermint.abci.RequestEndBlock.verify|verify} messages.
             * @param message RequestEndBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestEndBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestEndBlock message, length delimited. Does not implicitly {@link tendermint.abci.RequestEndBlock.verify|verify} messages.
             * @param message RequestEndBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestEndBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestEndBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestEndBlock;

            /**
             * Decodes a RequestEndBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestEndBlock;

            /**
             * Verifies a RequestEndBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestEndBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestEndBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestEndBlock;

            /**
             * Creates a plain object from a RequestEndBlock message. Also converts values to other types if specified.
             * @param message RequestEndBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestEndBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestEndBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestCommit. */
        interface IRequestCommit {
        }

        /** Represents a RequestCommit. */
        class RequestCommit implements IRequestCommit {

            /**
             * Constructs a new RequestCommit.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestCommit);

            /**
             * Encodes the specified RequestCommit message. Does not implicitly {@link tendermint.abci.RequestCommit.verify|verify} messages.
             * @param message RequestCommit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestCommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestCommit message, length delimited. Does not implicitly {@link tendermint.abci.RequestCommit.verify|verify} messages.
             * @param message RequestCommit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestCommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestCommit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestCommit;

            /**
             * Decodes a RequestCommit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestCommit;

            /**
             * Verifies a RequestCommit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestCommit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestCommit
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestCommit;

            /**
             * Creates a plain object from a RequestCommit message. Also converts values to other types if specified.
             * @param message RequestCommit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestCommit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestListSnapshots. */
        interface IRequestListSnapshots {
        }

        /** Represents a RequestListSnapshots. */
        class RequestListSnapshots implements IRequestListSnapshots {

            /**
             * Constructs a new RequestListSnapshots.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestListSnapshots);

            /**
             * Encodes the specified RequestListSnapshots message. Does not implicitly {@link tendermint.abci.RequestListSnapshots.verify|verify} messages.
             * @param message RequestListSnapshots message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestListSnapshots, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestListSnapshots message, length delimited. Does not implicitly {@link tendermint.abci.RequestListSnapshots.verify|verify} messages.
             * @param message RequestListSnapshots message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestListSnapshots, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestListSnapshots message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestListSnapshots;

            /**
             * Decodes a RequestListSnapshots message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestListSnapshots;

            /**
             * Verifies a RequestListSnapshots message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestListSnapshots message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestListSnapshots
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestListSnapshots;

            /**
             * Creates a plain object from a RequestListSnapshots message. Also converts values to other types if specified.
             * @param message RequestListSnapshots
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestListSnapshots, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestListSnapshots to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestOfferSnapshot. */
        interface IRequestOfferSnapshot {

            /** RequestOfferSnapshot snapshot */
            snapshot?: (tendermint.abci.ISnapshot|null);

            /** RequestOfferSnapshot app_hash */
            app_hash?: (Uint8Array|null);
        }

        /** Represents a RequestOfferSnapshot. */
        class RequestOfferSnapshot implements IRequestOfferSnapshot {

            /**
             * Constructs a new RequestOfferSnapshot.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestOfferSnapshot);

            /** RequestOfferSnapshot snapshot. */
            public snapshot?: (tendermint.abci.ISnapshot|null);

            /** RequestOfferSnapshot app_hash. */
            public app_hash: Uint8Array;

            /**
             * Encodes the specified RequestOfferSnapshot message. Does not implicitly {@link tendermint.abci.RequestOfferSnapshot.verify|verify} messages.
             * @param message RequestOfferSnapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestOfferSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestOfferSnapshot message, length delimited. Does not implicitly {@link tendermint.abci.RequestOfferSnapshot.verify|verify} messages.
             * @param message RequestOfferSnapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestOfferSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestOfferSnapshot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestOfferSnapshot;

            /**
             * Decodes a RequestOfferSnapshot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestOfferSnapshot;

            /**
             * Verifies a RequestOfferSnapshot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestOfferSnapshot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestOfferSnapshot
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestOfferSnapshot;

            /**
             * Creates a plain object from a RequestOfferSnapshot message. Also converts values to other types if specified.
             * @param message RequestOfferSnapshot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestOfferSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestOfferSnapshot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestLoadSnapshotChunk. */
        interface IRequestLoadSnapshotChunk {

            /** RequestLoadSnapshotChunk height */
            height?: (Long|null);

            /** RequestLoadSnapshotChunk format */
            format?: (number|null);

            /** RequestLoadSnapshotChunk chunk */
            chunk?: (number|null);
        }

        /** Represents a RequestLoadSnapshotChunk. */
        class RequestLoadSnapshotChunk implements IRequestLoadSnapshotChunk {

            /**
             * Constructs a new RequestLoadSnapshotChunk.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestLoadSnapshotChunk);

            /** RequestLoadSnapshotChunk height. */
            public height: Long;

            /** RequestLoadSnapshotChunk format. */
            public format: number;

            /** RequestLoadSnapshotChunk chunk. */
            public chunk: number;

            /**
             * Encodes the specified RequestLoadSnapshotChunk message. Does not implicitly {@link tendermint.abci.RequestLoadSnapshotChunk.verify|verify} messages.
             * @param message RequestLoadSnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestLoadSnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestLoadSnapshotChunk message, length delimited. Does not implicitly {@link tendermint.abci.RequestLoadSnapshotChunk.verify|verify} messages.
             * @param message RequestLoadSnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestLoadSnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestLoadSnapshotChunk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestLoadSnapshotChunk;

            /**
             * Decodes a RequestLoadSnapshotChunk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestLoadSnapshotChunk;

            /**
             * Verifies a RequestLoadSnapshotChunk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestLoadSnapshotChunk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestLoadSnapshotChunk
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestLoadSnapshotChunk;

            /**
             * Creates a plain object from a RequestLoadSnapshotChunk message. Also converts values to other types if specified.
             * @param message RequestLoadSnapshotChunk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestLoadSnapshotChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestLoadSnapshotChunk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RequestApplySnapshotChunk. */
        interface IRequestApplySnapshotChunk {

            /** RequestApplySnapshotChunk index */
            index?: (number|null);

            /** RequestApplySnapshotChunk chunk */
            chunk?: (Uint8Array|null);

            /** RequestApplySnapshotChunk sender */
            sender?: (string|null);
        }

        /** Represents a RequestApplySnapshotChunk. */
        class RequestApplySnapshotChunk implements IRequestApplySnapshotChunk {

            /**
             * Constructs a new RequestApplySnapshotChunk.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IRequestApplySnapshotChunk);

            /** RequestApplySnapshotChunk index. */
            public index: number;

            /** RequestApplySnapshotChunk chunk. */
            public chunk: Uint8Array;

            /** RequestApplySnapshotChunk sender. */
            public sender: string;

            /**
             * Encodes the specified RequestApplySnapshotChunk message. Does not implicitly {@link tendermint.abci.RequestApplySnapshotChunk.verify|verify} messages.
             * @param message RequestApplySnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IRequestApplySnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RequestApplySnapshotChunk message, length delimited. Does not implicitly {@link tendermint.abci.RequestApplySnapshotChunk.verify|verify} messages.
             * @param message RequestApplySnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IRequestApplySnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RequestApplySnapshotChunk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RequestApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.RequestApplySnapshotChunk;

            /**
             * Decodes a RequestApplySnapshotChunk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RequestApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.RequestApplySnapshotChunk;

            /**
             * Verifies a RequestApplySnapshotChunk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RequestApplySnapshotChunk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RequestApplySnapshotChunk
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.RequestApplySnapshotChunk;

            /**
             * Creates a plain object from a RequestApplySnapshotChunk message. Also converts values to other types if specified.
             * @param message RequestApplySnapshotChunk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.RequestApplySnapshotChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RequestApplySnapshotChunk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Response. */
        interface IResponse {

            /** Response exception */
            exception?: (tendermint.abci.IResponseException|null);

            /** Response echo */
            echo?: (tendermint.abci.IResponseEcho|null);

            /** Response flush */
            flush?: (tendermint.abci.IResponseFlush|null);

            /** Response info */
            info?: (tendermint.abci.IResponseInfo|null);

            /** Response set_option */
            set_option?: (tendermint.abci.IResponseSetOption|null);

            /** Response init_chain */
            init_chain?: (tendermint.abci.IResponseInitChain|null);

            /** Response query */
            query?: (tendermint.abci.IResponseQuery|null);

            /** Response begin_block */
            begin_block?: (tendermint.abci.IResponseBeginBlock|null);

            /** Response check_tx */
            check_tx?: (tendermint.abci.IResponseCheckTx|null);

            /** Response deliver_tx */
            deliver_tx?: (tendermint.abci.IResponseDeliverTx|null);

            /** Response end_block */
            end_block?: (tendermint.abci.IResponseEndBlock|null);

            /** Response commit */
            commit?: (tendermint.abci.IResponseCommit|null);

            /** Response list_snapshots */
            list_snapshots?: (tendermint.abci.IResponseListSnapshots|null);

            /** Response offer_snapshot */
            offer_snapshot?: (tendermint.abci.IResponseOfferSnapshot|null);

            /** Response load_snapshot_chunk */
            load_snapshot_chunk?: (tendermint.abci.IResponseLoadSnapshotChunk|null);

            /** Response apply_snapshot_chunk */
            apply_snapshot_chunk?: (tendermint.abci.IResponseApplySnapshotChunk|null);
        }

        /** Represents a Response. */
        class Response implements IResponse {

            /**
             * Constructs a new Response.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponse);

            /** Response exception. */
            public exception?: (tendermint.abci.IResponseException|null);

            /** Response echo. */
            public echo?: (tendermint.abci.IResponseEcho|null);

            /** Response flush. */
            public flush?: (tendermint.abci.IResponseFlush|null);

            /** Response info. */
            public info?: (tendermint.abci.IResponseInfo|null);

            /** Response set_option. */
            public set_option?: (tendermint.abci.IResponseSetOption|null);

            /** Response init_chain. */
            public init_chain?: (tendermint.abci.IResponseInitChain|null);

            /** Response query. */
            public query?: (tendermint.abci.IResponseQuery|null);

            /** Response begin_block. */
            public begin_block?: (tendermint.abci.IResponseBeginBlock|null);

            /** Response check_tx. */
            public check_tx?: (tendermint.abci.IResponseCheckTx|null);

            /** Response deliver_tx. */
            public deliver_tx?: (tendermint.abci.IResponseDeliverTx|null);

            /** Response end_block. */
            public end_block?: (tendermint.abci.IResponseEndBlock|null);

            /** Response commit. */
            public commit?: (tendermint.abci.IResponseCommit|null);

            /** Response list_snapshots. */
            public list_snapshots?: (tendermint.abci.IResponseListSnapshots|null);

            /** Response offer_snapshot. */
            public offer_snapshot?: (tendermint.abci.IResponseOfferSnapshot|null);

            /** Response load_snapshot_chunk. */
            public load_snapshot_chunk?: (tendermint.abci.IResponseLoadSnapshotChunk|null);

            /** Response apply_snapshot_chunk. */
            public apply_snapshot_chunk?: (tendermint.abci.IResponseApplySnapshotChunk|null);

            /** Response value. */
            public value?: ("exception"|"echo"|"flush"|"info"|"set_option"|"init_chain"|"query"|"begin_block"|"check_tx"|"deliver_tx"|"end_block"|"commit"|"list_snapshots"|"offer_snapshot"|"load_snapshot_chunk"|"apply_snapshot_chunk");

            /**
             * Encodes the specified Response message. Does not implicitly {@link tendermint.abci.Response.verify|verify} messages.
             * @param message Response message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Response message, length delimited. Does not implicitly {@link tendermint.abci.Response.verify|verify} messages.
             * @param message Response message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Response message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Response
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Response;

            /**
             * Decodes a Response message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Response
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Response;

            /**
             * Verifies a Response message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Response message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Response
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Response;

            /**
             * Creates a plain object from a Response message. Also converts values to other types if specified.
             * @param message Response
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Response to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseException. */
        interface IResponseException {

            /** ResponseException error */
            error?: (string|null);
        }

        /** Represents a ResponseException. */
        class ResponseException implements IResponseException {

            /**
             * Constructs a new ResponseException.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseException);

            /** ResponseException error. */
            public error: string;

            /**
             * Encodes the specified ResponseException message. Does not implicitly {@link tendermint.abci.ResponseException.verify|verify} messages.
             * @param message ResponseException message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseException, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseException message, length delimited. Does not implicitly {@link tendermint.abci.ResponseException.verify|verify} messages.
             * @param message ResponseException message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseException, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseException message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseException
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseException;

            /**
             * Decodes a ResponseException message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseException
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseException;

            /**
             * Verifies a ResponseException message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseException message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseException
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseException;

            /**
             * Creates a plain object from a ResponseException message. Also converts values to other types if specified.
             * @param message ResponseException
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseException, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseException to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseEcho. */
        interface IResponseEcho {

            /** ResponseEcho message */
            message?: (string|null);
        }

        /** Represents a ResponseEcho. */
        class ResponseEcho implements IResponseEcho {

            /**
             * Constructs a new ResponseEcho.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseEcho);

            /** ResponseEcho message. */
            public message: string;

            /**
             * Encodes the specified ResponseEcho message. Does not implicitly {@link tendermint.abci.ResponseEcho.verify|verify} messages.
             * @param message ResponseEcho message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseEcho, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseEcho message, length delimited. Does not implicitly {@link tendermint.abci.ResponseEcho.verify|verify} messages.
             * @param message ResponseEcho message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseEcho, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseEcho message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseEcho;

            /**
             * Decodes a ResponseEcho message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseEcho
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseEcho;

            /**
             * Verifies a ResponseEcho message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseEcho message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseEcho
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseEcho;

            /**
             * Creates a plain object from a ResponseEcho message. Also converts values to other types if specified.
             * @param message ResponseEcho
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseEcho, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseEcho to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseFlush. */
        interface IResponseFlush {
        }

        /** Represents a ResponseFlush. */
        class ResponseFlush implements IResponseFlush {

            /**
             * Constructs a new ResponseFlush.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseFlush);

            /**
             * Encodes the specified ResponseFlush message. Does not implicitly {@link tendermint.abci.ResponseFlush.verify|verify} messages.
             * @param message ResponseFlush message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseFlush, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseFlush message, length delimited. Does not implicitly {@link tendermint.abci.ResponseFlush.verify|verify} messages.
             * @param message ResponseFlush message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseFlush, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseFlush message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseFlush;

            /**
             * Decodes a ResponseFlush message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseFlush
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseFlush;

            /**
             * Verifies a ResponseFlush message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseFlush message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseFlush
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseFlush;

            /**
             * Creates a plain object from a ResponseFlush message. Also converts values to other types if specified.
             * @param message ResponseFlush
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseFlush, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseFlush to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseInfo. */
        interface IResponseInfo {

            /** ResponseInfo data */
            data?: (string|null);

            /** ResponseInfo version */
            version?: (string|null);

            /** ResponseInfo app_version */
            app_version?: (Long|null);

            /** ResponseInfo last_block_height */
            last_block_height?: (Long|null);

            /** ResponseInfo last_block_app_hash */
            last_block_app_hash?: (Uint8Array|null);
        }

        /** Represents a ResponseInfo. */
        class ResponseInfo implements IResponseInfo {

            /**
             * Constructs a new ResponseInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseInfo);

            /** ResponseInfo data. */
            public data: string;

            /** ResponseInfo version. */
            public version: string;

            /** ResponseInfo app_version. */
            public app_version: Long;

            /** ResponseInfo last_block_height. */
            public last_block_height: Long;

            /** ResponseInfo last_block_app_hash. */
            public last_block_app_hash: Uint8Array;

            /**
             * Encodes the specified ResponseInfo message. Does not implicitly {@link tendermint.abci.ResponseInfo.verify|verify} messages.
             * @param message ResponseInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseInfo message, length delimited. Does not implicitly {@link tendermint.abci.ResponseInfo.verify|verify} messages.
             * @param message ResponseInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseInfo;

            /**
             * Decodes a ResponseInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseInfo;

            /**
             * Verifies a ResponseInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseInfo
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseInfo;

            /**
             * Creates a plain object from a ResponseInfo message. Also converts values to other types if specified.
             * @param message ResponseInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseSetOption. */
        interface IResponseSetOption {

            /** ResponseSetOption code */
            code?: (number|null);

            /** ResponseSetOption log */
            log?: (string|null);

            /** ResponseSetOption info */
            info?: (string|null);
        }

        /** Represents a ResponseSetOption. */
        class ResponseSetOption implements IResponseSetOption {

            /**
             * Constructs a new ResponseSetOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseSetOption);

            /** ResponseSetOption code. */
            public code: number;

            /** ResponseSetOption log. */
            public log: string;

            /** ResponseSetOption info. */
            public info: string;

            /**
             * Encodes the specified ResponseSetOption message. Does not implicitly {@link tendermint.abci.ResponseSetOption.verify|verify} messages.
             * @param message ResponseSetOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseSetOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseSetOption message, length delimited. Does not implicitly {@link tendermint.abci.ResponseSetOption.verify|verify} messages.
             * @param message ResponseSetOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseSetOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseSetOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseSetOption;

            /**
             * Decodes a ResponseSetOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseSetOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseSetOption;

            /**
             * Verifies a ResponseSetOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseSetOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseSetOption
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseSetOption;

            /**
             * Creates a plain object from a ResponseSetOption message. Also converts values to other types if specified.
             * @param message ResponseSetOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseSetOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseSetOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseInitChain. */
        interface IResponseInitChain {

            /** ResponseInitChain consensus_params */
            consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** ResponseInitChain validators */
            validators?: (tendermint.abci.IValidatorUpdate[]|null);

            /** ResponseInitChain app_hash */
            app_hash?: (Uint8Array|null);
        }

        /** Represents a ResponseInitChain. */
        class ResponseInitChain implements IResponseInitChain {

            /**
             * Constructs a new ResponseInitChain.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseInitChain);

            /** ResponseInitChain consensus_params. */
            public consensus_params?: (tendermint.abci.IConsensusParams|null);

            /** ResponseInitChain validators. */
            public validators: tendermint.abci.IValidatorUpdate[];

            /** ResponseInitChain app_hash. */
            public app_hash: Uint8Array;

            /**
             * Encodes the specified ResponseInitChain message. Does not implicitly {@link tendermint.abci.ResponseInitChain.verify|verify} messages.
             * @param message ResponseInitChain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseInitChain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseInitChain message, length delimited. Does not implicitly {@link tendermint.abci.ResponseInitChain.verify|verify} messages.
             * @param message ResponseInitChain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseInitChain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseInitChain message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseInitChain;

            /**
             * Decodes a ResponseInitChain message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseInitChain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseInitChain;

            /**
             * Verifies a ResponseInitChain message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseInitChain message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseInitChain
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseInitChain;

            /**
             * Creates a plain object from a ResponseInitChain message. Also converts values to other types if specified.
             * @param message ResponseInitChain
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseInitChain, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseInitChain to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseQuery. */
        interface IResponseQuery {

            /** ResponseQuery code */
            code?: (number|null);

            /** ResponseQuery log */
            log?: (string|null);

            /** ResponseQuery info */
            info?: (string|null);

            /** ResponseQuery index */
            index?: (Long|null);

            /** ResponseQuery key */
            key?: (Uint8Array|null);

            /** ResponseQuery value */
            value?: (Uint8Array|null);

            /** ResponseQuery proof_ops */
            proof_ops?: (tendermint.crypto.IProofOps|null);

            /** ResponseQuery height */
            height?: (Long|null);

            /** ResponseQuery codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseQuery. */
        class ResponseQuery implements IResponseQuery {

            /**
             * Constructs a new ResponseQuery.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseQuery);

            /** ResponseQuery code. */
            public code: number;

            /** ResponseQuery log. */
            public log: string;

            /** ResponseQuery info. */
            public info: string;

            /** ResponseQuery index. */
            public index: Long;

            /** ResponseQuery key. */
            public key: Uint8Array;

            /** ResponseQuery value. */
            public value: Uint8Array;

            /** ResponseQuery proof_ops. */
            public proof_ops?: (tendermint.crypto.IProofOps|null);

            /** ResponseQuery height. */
            public height: Long;

            /** ResponseQuery codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseQuery message. Does not implicitly {@link tendermint.abci.ResponseQuery.verify|verify} messages.
             * @param message ResponseQuery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseQuery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseQuery message, length delimited. Does not implicitly {@link tendermint.abci.ResponseQuery.verify|verify} messages.
             * @param message ResponseQuery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseQuery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseQuery message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseQuery;

            /**
             * Decodes a ResponseQuery message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseQuery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseQuery;

            /**
             * Verifies a ResponseQuery message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseQuery message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseQuery
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseQuery;

            /**
             * Creates a plain object from a ResponseQuery message. Also converts values to other types if specified.
             * @param message ResponseQuery
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseQuery to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseBeginBlock. */
        interface IResponseBeginBlock {

            /** ResponseBeginBlock events */
            events?: (tendermint.abci.IEvent[]|null);
        }

        /** Represents a ResponseBeginBlock. */
        class ResponseBeginBlock implements IResponseBeginBlock {

            /**
             * Constructs a new ResponseBeginBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseBeginBlock);

            /** ResponseBeginBlock events. */
            public events: tendermint.abci.IEvent[];

            /**
             * Encodes the specified ResponseBeginBlock message. Does not implicitly {@link tendermint.abci.ResponseBeginBlock.verify|verify} messages.
             * @param message ResponseBeginBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseBeginBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseBeginBlock message, length delimited. Does not implicitly {@link tendermint.abci.ResponseBeginBlock.verify|verify} messages.
             * @param message ResponseBeginBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseBeginBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseBeginBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseBeginBlock;

            /**
             * Decodes a ResponseBeginBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseBeginBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseBeginBlock;

            /**
             * Verifies a ResponseBeginBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseBeginBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseBeginBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseBeginBlock;

            /**
             * Creates a plain object from a ResponseBeginBlock message. Also converts values to other types if specified.
             * @param message ResponseBeginBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseBeginBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseBeginBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseCheckTx. */
        interface IResponseCheckTx {

            /** ResponseCheckTx code */
            code?: (number|null);

            /** ResponseCheckTx data */
            data?: (Uint8Array|null);

            /** ResponseCheckTx log */
            log?: (string|null);

            /** ResponseCheckTx info */
            info?: (string|null);

            /** ResponseCheckTx gas_wanted */
            gas_wanted?: (Long|null);

            /** ResponseCheckTx gas_used */
            gas_used?: (Long|null);

            /** ResponseCheckTx events */
            events?: (tendermint.abci.IEvent[]|null);

            /** ResponseCheckTx codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseCheckTx. */
        class ResponseCheckTx implements IResponseCheckTx {

            /**
             * Constructs a new ResponseCheckTx.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseCheckTx);

            /** ResponseCheckTx code. */
            public code: number;

            /** ResponseCheckTx data. */
            public data: Uint8Array;

            /** ResponseCheckTx log. */
            public log: string;

            /** ResponseCheckTx info. */
            public info: string;

            /** ResponseCheckTx gas_wanted. */
            public gas_wanted: Long;

            /** ResponseCheckTx gas_used. */
            public gas_used: Long;

            /** ResponseCheckTx events. */
            public events: tendermint.abci.IEvent[];

            /** ResponseCheckTx codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseCheckTx message. Does not implicitly {@link tendermint.abci.ResponseCheckTx.verify|verify} messages.
             * @param message ResponseCheckTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseCheckTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseCheckTx message, length delimited. Does not implicitly {@link tendermint.abci.ResponseCheckTx.verify|verify} messages.
             * @param message ResponseCheckTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseCheckTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseCheckTx message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseCheckTx;

            /**
             * Decodes a ResponseCheckTx message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseCheckTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseCheckTx;

            /**
             * Verifies a ResponseCheckTx message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseCheckTx message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseCheckTx
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseCheckTx;

            /**
             * Creates a plain object from a ResponseCheckTx message. Also converts values to other types if specified.
             * @param message ResponseCheckTx
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseCheckTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseCheckTx to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseDeliverTx. */
        interface IResponseDeliverTx {

            /** ResponseDeliverTx code */
            code?: (number|null);

            /** ResponseDeliverTx data */
            data?: (Uint8Array|null);

            /** ResponseDeliverTx log */
            log?: (string|null);

            /** ResponseDeliverTx info */
            info?: (string|null);

            /** ResponseDeliverTx gas_wanted */
            gas_wanted?: (Long|null);

            /** ResponseDeliverTx gas_used */
            gas_used?: (Long|null);

            /** ResponseDeliverTx events */
            events?: (tendermint.abci.IEvent[]|null);

            /** ResponseDeliverTx codespace */
            codespace?: (string|null);
        }

        /** Represents a ResponseDeliverTx. */
        class ResponseDeliverTx implements IResponseDeliverTx {

            /**
             * Constructs a new ResponseDeliverTx.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseDeliverTx);

            /** ResponseDeliverTx code. */
            public code: number;

            /** ResponseDeliverTx data. */
            public data: Uint8Array;

            /** ResponseDeliverTx log. */
            public log: string;

            /** ResponseDeliverTx info. */
            public info: string;

            /** ResponseDeliverTx gas_wanted. */
            public gas_wanted: Long;

            /** ResponseDeliverTx gas_used. */
            public gas_used: Long;

            /** ResponseDeliverTx events. */
            public events: tendermint.abci.IEvent[];

            /** ResponseDeliverTx codespace. */
            public codespace: string;

            /**
             * Encodes the specified ResponseDeliverTx message. Does not implicitly {@link tendermint.abci.ResponseDeliverTx.verify|verify} messages.
             * @param message ResponseDeliverTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseDeliverTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseDeliverTx message, length delimited. Does not implicitly {@link tendermint.abci.ResponseDeliverTx.verify|verify} messages.
             * @param message ResponseDeliverTx message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseDeliverTx, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseDeliverTx message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseDeliverTx;

            /**
             * Decodes a ResponseDeliverTx message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseDeliverTx
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseDeliverTx;

            /**
             * Verifies a ResponseDeliverTx message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseDeliverTx message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseDeliverTx
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseDeliverTx;

            /**
             * Creates a plain object from a ResponseDeliverTx message. Also converts values to other types if specified.
             * @param message ResponseDeliverTx
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseDeliverTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseDeliverTx to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseEndBlock. */
        interface IResponseEndBlock {

            /** ResponseEndBlock validator_updates */
            validator_updates?: (tendermint.abci.IValidatorUpdate[]|null);

            /** ResponseEndBlock consensus_param_updates */
            consensus_param_updates?: (tendermint.abci.IConsensusParams|null);

            /** ResponseEndBlock events */
            events?: (tendermint.abci.IEvent[]|null);
        }

        /** Represents a ResponseEndBlock. */
        class ResponseEndBlock implements IResponseEndBlock {

            /**
             * Constructs a new ResponseEndBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseEndBlock);

            /** ResponseEndBlock validator_updates. */
            public validator_updates: tendermint.abci.IValidatorUpdate[];

            /** ResponseEndBlock consensus_param_updates. */
            public consensus_param_updates?: (tendermint.abci.IConsensusParams|null);

            /** ResponseEndBlock events. */
            public events: tendermint.abci.IEvent[];

            /**
             * Encodes the specified ResponseEndBlock message. Does not implicitly {@link tendermint.abci.ResponseEndBlock.verify|verify} messages.
             * @param message ResponseEndBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseEndBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseEndBlock message, length delimited. Does not implicitly {@link tendermint.abci.ResponseEndBlock.verify|verify} messages.
             * @param message ResponseEndBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseEndBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseEndBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseEndBlock;

            /**
             * Decodes a ResponseEndBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseEndBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseEndBlock;

            /**
             * Verifies a ResponseEndBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseEndBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseEndBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseEndBlock;

            /**
             * Creates a plain object from a ResponseEndBlock message. Also converts values to other types if specified.
             * @param message ResponseEndBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseEndBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseEndBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseCommit. */
        interface IResponseCommit {

            /** ResponseCommit data */
            data?: (Uint8Array|null);

            /** ResponseCommit retain_height */
            retain_height?: (Long|null);
        }

        /** Represents a ResponseCommit. */
        class ResponseCommit implements IResponseCommit {

            /**
             * Constructs a new ResponseCommit.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseCommit);

            /** ResponseCommit data. */
            public data: Uint8Array;

            /** ResponseCommit retain_height. */
            public retain_height: Long;

            /**
             * Encodes the specified ResponseCommit message. Does not implicitly {@link tendermint.abci.ResponseCommit.verify|verify} messages.
             * @param message ResponseCommit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseCommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseCommit message, length delimited. Does not implicitly {@link tendermint.abci.ResponseCommit.verify|verify} messages.
             * @param message ResponseCommit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseCommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseCommit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseCommit;

            /**
             * Decodes a ResponseCommit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseCommit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseCommit;

            /**
             * Verifies a ResponseCommit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseCommit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseCommit
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseCommit;

            /**
             * Creates a plain object from a ResponseCommit message. Also converts values to other types if specified.
             * @param message ResponseCommit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseCommit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseListSnapshots. */
        interface IResponseListSnapshots {

            /** ResponseListSnapshots snapshots */
            snapshots?: (tendermint.abci.ISnapshot[]|null);
        }

        /** Represents a ResponseListSnapshots. */
        class ResponseListSnapshots implements IResponseListSnapshots {

            /**
             * Constructs a new ResponseListSnapshots.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseListSnapshots);

            /** ResponseListSnapshots snapshots. */
            public snapshots: tendermint.abci.ISnapshot[];

            /**
             * Encodes the specified ResponseListSnapshots message. Does not implicitly {@link tendermint.abci.ResponseListSnapshots.verify|verify} messages.
             * @param message ResponseListSnapshots message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseListSnapshots, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseListSnapshots message, length delimited. Does not implicitly {@link tendermint.abci.ResponseListSnapshots.verify|verify} messages.
             * @param message ResponseListSnapshots message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseListSnapshots, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseListSnapshots message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseListSnapshots;

            /**
             * Decodes a ResponseListSnapshots message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseListSnapshots
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseListSnapshots;

            /**
             * Verifies a ResponseListSnapshots message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseListSnapshots message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseListSnapshots
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseListSnapshots;

            /**
             * Creates a plain object from a ResponseListSnapshots message. Also converts values to other types if specified.
             * @param message ResponseListSnapshots
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseListSnapshots, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseListSnapshots to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseOfferSnapshot. */
        interface IResponseOfferSnapshot {

            /** ResponseOfferSnapshot result */
            result?: (tendermint.abci.ResponseOfferSnapshot.Result|null);
        }

        /** Represents a ResponseOfferSnapshot. */
        class ResponseOfferSnapshot implements IResponseOfferSnapshot {

            /**
             * Constructs a new ResponseOfferSnapshot.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseOfferSnapshot);

            /** ResponseOfferSnapshot result. */
            public result: tendermint.abci.ResponseOfferSnapshot.Result;

            /**
             * Encodes the specified ResponseOfferSnapshot message. Does not implicitly {@link tendermint.abci.ResponseOfferSnapshot.verify|verify} messages.
             * @param message ResponseOfferSnapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseOfferSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseOfferSnapshot message, length delimited. Does not implicitly {@link tendermint.abci.ResponseOfferSnapshot.verify|verify} messages.
             * @param message ResponseOfferSnapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseOfferSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseOfferSnapshot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseOfferSnapshot;

            /**
             * Decodes a ResponseOfferSnapshot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseOfferSnapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseOfferSnapshot;

            /**
             * Verifies a ResponseOfferSnapshot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseOfferSnapshot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseOfferSnapshot
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseOfferSnapshot;

            /**
             * Creates a plain object from a ResponseOfferSnapshot message. Also converts values to other types if specified.
             * @param message ResponseOfferSnapshot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseOfferSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseOfferSnapshot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace ResponseOfferSnapshot {

            /** Result enum. */
            enum Result {
                UNKNOWN = 0,
                ACCEPT = 1,
                ABORT = 2,
                REJECT = 3,
                REJECT_FORMAT = 4,
                REJECT_SENDER = 5
            }
        }

        /** Properties of a ResponseLoadSnapshotChunk. */
        interface IResponseLoadSnapshotChunk {

            /** ResponseLoadSnapshotChunk chunk */
            chunk?: (Uint8Array|null);
        }

        /** Represents a ResponseLoadSnapshotChunk. */
        class ResponseLoadSnapshotChunk implements IResponseLoadSnapshotChunk {

            /**
             * Constructs a new ResponseLoadSnapshotChunk.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseLoadSnapshotChunk);

            /** ResponseLoadSnapshotChunk chunk. */
            public chunk: Uint8Array;

            /**
             * Encodes the specified ResponseLoadSnapshotChunk message. Does not implicitly {@link tendermint.abci.ResponseLoadSnapshotChunk.verify|verify} messages.
             * @param message ResponseLoadSnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseLoadSnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseLoadSnapshotChunk message, length delimited. Does not implicitly {@link tendermint.abci.ResponseLoadSnapshotChunk.verify|verify} messages.
             * @param message ResponseLoadSnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseLoadSnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseLoadSnapshotChunk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseLoadSnapshotChunk;

            /**
             * Decodes a ResponseLoadSnapshotChunk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseLoadSnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseLoadSnapshotChunk;

            /**
             * Verifies a ResponseLoadSnapshotChunk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseLoadSnapshotChunk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseLoadSnapshotChunk
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseLoadSnapshotChunk;

            /**
             * Creates a plain object from a ResponseLoadSnapshotChunk message. Also converts values to other types if specified.
             * @param message ResponseLoadSnapshotChunk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseLoadSnapshotChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseLoadSnapshotChunk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResponseApplySnapshotChunk. */
        interface IResponseApplySnapshotChunk {

            /** ResponseApplySnapshotChunk result */
            result?: (tendermint.abci.ResponseApplySnapshotChunk.Result|null);

            /** ResponseApplySnapshotChunk refetch_chunks */
            refetch_chunks?: (number[]|null);

            /** ResponseApplySnapshotChunk reject_senders */
            reject_senders?: (string[]|null);
        }

        /** Represents a ResponseApplySnapshotChunk. */
        class ResponseApplySnapshotChunk implements IResponseApplySnapshotChunk {

            /**
             * Constructs a new ResponseApplySnapshotChunk.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IResponseApplySnapshotChunk);

            /** ResponseApplySnapshotChunk result. */
            public result: tendermint.abci.ResponseApplySnapshotChunk.Result;

            /** ResponseApplySnapshotChunk refetch_chunks. */
            public refetch_chunks: number[];

            /** ResponseApplySnapshotChunk reject_senders. */
            public reject_senders: string[];

            /**
             * Encodes the specified ResponseApplySnapshotChunk message. Does not implicitly {@link tendermint.abci.ResponseApplySnapshotChunk.verify|verify} messages.
             * @param message ResponseApplySnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IResponseApplySnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResponseApplySnapshotChunk message, length delimited. Does not implicitly {@link tendermint.abci.ResponseApplySnapshotChunk.verify|verify} messages.
             * @param message ResponseApplySnapshotChunk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IResponseApplySnapshotChunk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResponseApplySnapshotChunk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResponseApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ResponseApplySnapshotChunk;

            /**
             * Decodes a ResponseApplySnapshotChunk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResponseApplySnapshotChunk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ResponseApplySnapshotChunk;

            /**
             * Verifies a ResponseApplySnapshotChunk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResponseApplySnapshotChunk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResponseApplySnapshotChunk
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ResponseApplySnapshotChunk;

            /**
             * Creates a plain object from a ResponseApplySnapshotChunk message. Also converts values to other types if specified.
             * @param message ResponseApplySnapshotChunk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ResponseApplySnapshotChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResponseApplySnapshotChunk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace ResponseApplySnapshotChunk {

            /** Result enum. */
            enum Result {
                UNKNOWN = 0,
                ACCEPT = 1,
                ABORT = 2,
                RETRY = 3,
                RETRY_SNAPSHOT = 4,
                REJECT_SNAPSHOT = 5
            }
        }

        /** Properties of a ConsensusParams. */
        interface IConsensusParams {

            /** ConsensusParams block */
            block?: (tendermint.abci.IBlockParams|null);

            /** ConsensusParams evidence */
            evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator */
            validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version */
            version?: (tendermint.types.IVersionParams|null);
        }

        /** Represents a ConsensusParams. */
        class ConsensusParams implements IConsensusParams {

            /**
             * Constructs a new ConsensusParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IConsensusParams);

            /** ConsensusParams block. */
            public block?: (tendermint.abci.IBlockParams|null);

            /** ConsensusParams evidence. */
            public evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator. */
            public validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version. */
            public version?: (tendermint.types.IVersionParams|null);

            /**
             * Encodes the specified ConsensusParams message. Does not implicitly {@link tendermint.abci.ConsensusParams.verify|verify} messages.
             * @param message ConsensusParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IConsensusParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConsensusParams message, length delimited. Does not implicitly {@link tendermint.abci.ConsensusParams.verify|verify} messages.
             * @param message ConsensusParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IConsensusParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ConsensusParams;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ConsensusParams;

            /**
             * Verifies a ConsensusParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConsensusParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConsensusParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ConsensusParams;

            /**
             * Creates a plain object from a ConsensusParams message. Also converts values to other types if specified.
             * @param message ConsensusParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ConsensusParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConsensusParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockParams. */
        interface IBlockParams {

            /** BlockParams max_bytes */
            max_bytes?: (Long|null);

            /** BlockParams max_gas */
            max_gas?: (Long|null);
        }

        /** Represents a BlockParams. */
        class BlockParams implements IBlockParams {

            /**
             * Constructs a new BlockParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IBlockParams);

            /** BlockParams max_bytes. */
            public max_bytes: Long;

            /** BlockParams max_gas. */
            public max_gas: Long;

            /**
             * Encodes the specified BlockParams message. Does not implicitly {@link tendermint.abci.BlockParams.verify|verify} messages.
             * @param message BlockParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IBlockParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockParams message, length delimited. Does not implicitly {@link tendermint.abci.BlockParams.verify|verify} messages.
             * @param message BlockParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IBlockParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.BlockParams;

            /**
             * Decodes a BlockParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.BlockParams;

            /**
             * Verifies a BlockParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.BlockParams;

            /**
             * Creates a plain object from a BlockParams message. Also converts values to other types if specified.
             * @param message BlockParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.BlockParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LastCommitInfo. */
        interface ILastCommitInfo {

            /** LastCommitInfo round */
            round?: (number|null);

            /** LastCommitInfo votes */
            votes?: (tendermint.abci.IVoteInfo[]|null);
        }

        /** Represents a LastCommitInfo. */
        class LastCommitInfo implements ILastCommitInfo {

            /**
             * Constructs a new LastCommitInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.ILastCommitInfo);

            /** LastCommitInfo round. */
            public round: number;

            /** LastCommitInfo votes. */
            public votes: tendermint.abci.IVoteInfo[];

            /**
             * Encodes the specified LastCommitInfo message. Does not implicitly {@link tendermint.abci.LastCommitInfo.verify|verify} messages.
             * @param message LastCommitInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.ILastCommitInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LastCommitInfo message, length delimited. Does not implicitly {@link tendermint.abci.LastCommitInfo.verify|verify} messages.
             * @param message LastCommitInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.ILastCommitInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LastCommitInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LastCommitInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.LastCommitInfo;

            /**
             * Decodes a LastCommitInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LastCommitInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.LastCommitInfo;

            /**
             * Verifies a LastCommitInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LastCommitInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LastCommitInfo
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.LastCommitInfo;

            /**
             * Creates a plain object from a LastCommitInfo message. Also converts values to other types if specified.
             * @param message LastCommitInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.LastCommitInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LastCommitInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Event. */
        interface IEvent {

            /** Event type */
            type?: (string|null);

            /** Event attributes */
            attributes?: (tendermint.abci.IEventAttribute[]|null);
        }

        /** Represents an Event. */
        class Event implements IEvent {

            /**
             * Constructs a new Event.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IEvent);

            /** Event type. */
            public type: string;

            /** Event attributes. */
            public attributes: tendermint.abci.IEventAttribute[];

            /**
             * Encodes the specified Event message. Does not implicitly {@link tendermint.abci.Event.verify|verify} messages.
             * @param message Event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Event message, length delimited. Does not implicitly {@link tendermint.abci.Event.verify|verify} messages.
             * @param message Event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Event message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Event;

            /**
             * Decodes an Event message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Event;

            /**
             * Verifies an Event message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Event message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Event
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Event;

            /**
             * Creates a plain object from an Event message. Also converts values to other types if specified.
             * @param message Event
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Event, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Event to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventAttribute. */
        interface IEventAttribute {

            /** EventAttribute key */
            key?: (Uint8Array|null);

            /** EventAttribute value */
            value?: (Uint8Array|null);

            /** EventAttribute index */
            index?: (boolean|null);
        }

        /** Represents an EventAttribute. */
        class EventAttribute implements IEventAttribute {

            /**
             * Constructs a new EventAttribute.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IEventAttribute);

            /** EventAttribute key. */
            public key: Uint8Array;

            /** EventAttribute value. */
            public value: Uint8Array;

            /** EventAttribute index. */
            public index: boolean;

            /**
             * Encodes the specified EventAttribute message. Does not implicitly {@link tendermint.abci.EventAttribute.verify|verify} messages.
             * @param message EventAttribute message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IEventAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventAttribute message, length delimited. Does not implicitly {@link tendermint.abci.EventAttribute.verify|verify} messages.
             * @param message EventAttribute message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IEventAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventAttribute message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventAttribute
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.EventAttribute;

            /**
             * Decodes an EventAttribute message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventAttribute
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.EventAttribute;

            /**
             * Verifies an EventAttribute message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventAttribute message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventAttribute
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.EventAttribute;

            /**
             * Creates a plain object from an EventAttribute message. Also converts values to other types if specified.
             * @param message EventAttribute
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.EventAttribute, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventAttribute to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TxResult. */
        interface ITxResult {

            /** TxResult height */
            height?: (Long|null);

            /** TxResult index */
            index?: (number|null);

            /** TxResult tx */
            tx?: (Uint8Array|null);

            /** TxResult result */
            result?: (tendermint.abci.IResponseDeliverTx|null);
        }

        /** Represents a TxResult. */
        class TxResult implements ITxResult {

            /**
             * Constructs a new TxResult.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.ITxResult);

            /** TxResult height. */
            public height: Long;

            /** TxResult index. */
            public index: number;

            /** TxResult tx. */
            public tx: Uint8Array;

            /** TxResult result. */
            public result?: (tendermint.abci.IResponseDeliverTx|null);

            /**
             * Encodes the specified TxResult message. Does not implicitly {@link tendermint.abci.TxResult.verify|verify} messages.
             * @param message TxResult message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.ITxResult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TxResult message, length delimited. Does not implicitly {@link tendermint.abci.TxResult.verify|verify} messages.
             * @param message TxResult message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.ITxResult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxResult message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TxResult
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.TxResult;

            /**
             * Decodes a TxResult message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TxResult
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.TxResult;

            /**
             * Verifies a TxResult message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TxResult message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TxResult
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.TxResult;

            /**
             * Creates a plain object from a TxResult message. Also converts values to other types if specified.
             * @param message TxResult
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.TxResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TxResult to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator power */
            power?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator power. */
            public power: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.abci.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Validator message, length delimited. Does not implicitly {@link tendermint.abci.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Validator;

            /**
             * Decodes a Validator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Validator;

            /**
             * Verifies a Validator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Validator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Validator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Validator;

            /**
             * Creates a plain object from a Validator message. Also converts values to other types if specified.
             * @param message Validator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Validator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValidatorUpdate. */
        interface IValidatorUpdate {

            /** ValidatorUpdate pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** ValidatorUpdate power */
            power?: (Long|null);
        }

        /** Represents a ValidatorUpdate. */
        class ValidatorUpdate implements IValidatorUpdate {

            /**
             * Constructs a new ValidatorUpdate.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IValidatorUpdate);

            /** ValidatorUpdate pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** ValidatorUpdate power. */
            public power: Long;

            /**
             * Encodes the specified ValidatorUpdate message. Does not implicitly {@link tendermint.abci.ValidatorUpdate.verify|verify} messages.
             * @param message ValidatorUpdate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IValidatorUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValidatorUpdate message, length delimited. Does not implicitly {@link tendermint.abci.ValidatorUpdate.verify|verify} messages.
             * @param message ValidatorUpdate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IValidatorUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorUpdate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValidatorUpdate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.ValidatorUpdate;

            /**
             * Decodes a ValidatorUpdate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValidatorUpdate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.ValidatorUpdate;

            /**
             * Verifies a ValidatorUpdate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValidatorUpdate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValidatorUpdate
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.ValidatorUpdate;

            /**
             * Creates a plain object from a ValidatorUpdate message. Also converts values to other types if specified.
             * @param message ValidatorUpdate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.ValidatorUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValidatorUpdate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a VoteInfo. */
        interface IVoteInfo {

            /** VoteInfo validator */
            validator?: (tendermint.abci.IValidator|null);

            /** VoteInfo signed_last_block */
            signed_last_block?: (boolean|null);
        }

        /** Represents a VoteInfo. */
        class VoteInfo implements IVoteInfo {

            /**
             * Constructs a new VoteInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IVoteInfo);

            /** VoteInfo validator. */
            public validator?: (tendermint.abci.IValidator|null);

            /** VoteInfo signed_last_block. */
            public signed_last_block: boolean;

            /**
             * Encodes the specified VoteInfo message. Does not implicitly {@link tendermint.abci.VoteInfo.verify|verify} messages.
             * @param message VoteInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IVoteInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VoteInfo message, length delimited. Does not implicitly {@link tendermint.abci.VoteInfo.verify|verify} messages.
             * @param message VoteInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IVoteInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VoteInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VoteInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.VoteInfo;

            /**
             * Decodes a VoteInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VoteInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.VoteInfo;

            /**
             * Verifies a VoteInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VoteInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VoteInfo
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.VoteInfo;

            /**
             * Creates a plain object from a VoteInfo message. Also converts values to other types if specified.
             * @param message VoteInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.VoteInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VoteInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** EvidenceType enum. */
        enum EvidenceType {
            UNKNOWN = 0,
            DUPLICATE_VOTE = 1,
            LIGHT_CLIENT_ATTACK = 2
        }

        /** Properties of an Evidence. */
        interface IEvidence {

            /** Evidence type */
            type?: (tendermint.abci.EvidenceType|null);

            /** Evidence validator */
            validator?: (tendermint.abci.IValidator|null);

            /** Evidence height */
            height?: (Long|null);

            /** Evidence time */
            time?: (google.protobuf.ITimestamp|null);

            /** Evidence total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents an Evidence. */
        class Evidence implements IEvidence {

            /**
             * Constructs a new Evidence.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.IEvidence);

            /** Evidence type. */
            public type: tendermint.abci.EvidenceType;

            /** Evidence validator. */
            public validator?: (tendermint.abci.IValidator|null);

            /** Evidence height. */
            public height: Long;

            /** Evidence time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Evidence total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified Evidence message. Does not implicitly {@link tendermint.abci.Evidence.verify|verify} messages.
             * @param message Evidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.IEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Evidence message, length delimited. Does not implicitly {@link tendermint.abci.Evidence.verify|verify} messages.
             * @param message Evidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.IEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Evidence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Evidence;

            /**
             * Decodes an Evidence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Evidence;

            /**
             * Verifies an Evidence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Evidence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Evidence
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Evidence;

            /**
             * Creates a plain object from an Evidence message. Also converts values to other types if specified.
             * @param message Evidence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Evidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Evidence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Snapshot. */
        interface ISnapshot {

            /** Snapshot height */
            height?: (Long|null);

            /** Snapshot format */
            format?: (number|null);

            /** Snapshot chunks */
            chunks?: (number|null);

            /** Snapshot hash */
            hash?: (Uint8Array|null);

            /** Snapshot metadata */
            metadata?: (Uint8Array|null);
        }

        /** Represents a Snapshot. */
        class Snapshot implements ISnapshot {

            /**
             * Constructs a new Snapshot.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.abci.ISnapshot);

            /** Snapshot height. */
            public height: Long;

            /** Snapshot format. */
            public format: number;

            /** Snapshot chunks. */
            public chunks: number;

            /** Snapshot hash. */
            public hash: Uint8Array;

            /** Snapshot metadata. */
            public metadata: Uint8Array;

            /**
             * Encodes the specified Snapshot message. Does not implicitly {@link tendermint.abci.Snapshot.verify|verify} messages.
             * @param message Snapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.abci.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Snapshot message, length delimited. Does not implicitly {@link tendermint.abci.Snapshot.verify|verify} messages.
             * @param message Snapshot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.abci.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Snapshot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Snapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.abci.Snapshot;

            /**
             * Decodes a Snapshot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Snapshot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.abci.Snapshot;

            /**
             * Verifies a Snapshot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Snapshot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Snapshot
             */
            public static fromObject(object: { [k: string]: any }): tendermint.abci.Snapshot;

            /**
             * Creates a plain object from a Snapshot message. Also converts values to other types if specified.
             * @param message Snapshot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.abci.Snapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Snapshot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a ABCIApplication */
        class ABCIApplication extends $protobuf.rpc.Service {

            /**
             * Constructs a new ABCIApplication service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls Echo.
             * @param request RequestEcho message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseEcho
             */
            public echo(request: tendermint.abci.IRequestEcho, callback: tendermint.abci.ABCIApplication.EchoCallback): void;

            /**
             * Calls Echo.
             * @param request RequestEcho message or plain object
             * @returns Promise
             */
            public echo(request: tendermint.abci.IRequestEcho): Promise<tendermint.abci.ResponseEcho>;

            /**
             * Calls Flush.
             * @param request RequestFlush message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseFlush
             */
            public flush(request: tendermint.abci.IRequestFlush, callback: tendermint.abci.ABCIApplication.FlushCallback): void;

            /**
             * Calls Flush.
             * @param request RequestFlush message or plain object
             * @returns Promise
             */
            public flush(request: tendermint.abci.IRequestFlush): Promise<tendermint.abci.ResponseFlush>;

            /**
             * Calls Info.
             * @param request RequestInfo message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseInfo
             */
            public info(request: tendermint.abci.IRequestInfo, callback: tendermint.abci.ABCIApplication.InfoCallback): void;

            /**
             * Calls Info.
             * @param request RequestInfo message or plain object
             * @returns Promise
             */
            public info(request: tendermint.abci.IRequestInfo): Promise<tendermint.abci.ResponseInfo>;

            /**
             * Calls SetOption.
             * @param request RequestSetOption message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseSetOption
             */
            public setOption(request: tendermint.abci.IRequestSetOption, callback: tendermint.abci.ABCIApplication.SetOptionCallback): void;

            /**
             * Calls SetOption.
             * @param request RequestSetOption message or plain object
             * @returns Promise
             */
            public setOption(request: tendermint.abci.IRequestSetOption): Promise<tendermint.abci.ResponseSetOption>;

            /**
             * Calls DeliverTx.
             * @param request RequestDeliverTx message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseDeliverTx
             */
            public deliverTx(request: tendermint.abci.IRequestDeliverTx, callback: tendermint.abci.ABCIApplication.DeliverTxCallback): void;

            /**
             * Calls DeliverTx.
             * @param request RequestDeliverTx message or plain object
             * @returns Promise
             */
            public deliverTx(request: tendermint.abci.IRequestDeliverTx): Promise<tendermint.abci.ResponseDeliverTx>;

            /**
             * Calls CheckTx.
             * @param request RequestCheckTx message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseCheckTx
             */
            public checkTx(request: tendermint.abci.IRequestCheckTx, callback: tendermint.abci.ABCIApplication.CheckTxCallback): void;

            /**
             * Calls CheckTx.
             * @param request RequestCheckTx message or plain object
             * @returns Promise
             */
            public checkTx(request: tendermint.abci.IRequestCheckTx): Promise<tendermint.abci.ResponseCheckTx>;

            /**
             * Calls Query.
             * @param request RequestQuery message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseQuery
             */
            public query(request: tendermint.abci.IRequestQuery, callback: tendermint.abci.ABCIApplication.QueryCallback): void;

            /**
             * Calls Query.
             * @param request RequestQuery message or plain object
             * @returns Promise
             */
            public query(request: tendermint.abci.IRequestQuery): Promise<tendermint.abci.ResponseQuery>;

            /**
             * Calls Commit.
             * @param request RequestCommit message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseCommit
             */
            public commit(request: tendermint.abci.IRequestCommit, callback: tendermint.abci.ABCIApplication.CommitCallback): void;

            /**
             * Calls Commit.
             * @param request RequestCommit message or plain object
             * @returns Promise
             */
            public commit(request: tendermint.abci.IRequestCommit): Promise<tendermint.abci.ResponseCommit>;

            /**
             * Calls InitChain.
             * @param request RequestInitChain message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseInitChain
             */
            public initChain(request: tendermint.abci.IRequestInitChain, callback: tendermint.abci.ABCIApplication.InitChainCallback): void;

            /**
             * Calls InitChain.
             * @param request RequestInitChain message or plain object
             * @returns Promise
             */
            public initChain(request: tendermint.abci.IRequestInitChain): Promise<tendermint.abci.ResponseInitChain>;

            /**
             * Calls BeginBlock.
             * @param request RequestBeginBlock message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseBeginBlock
             */
            public beginBlock(request: tendermint.abci.IRequestBeginBlock, callback: tendermint.abci.ABCIApplication.BeginBlockCallback): void;

            /**
             * Calls BeginBlock.
             * @param request RequestBeginBlock message or plain object
             * @returns Promise
             */
            public beginBlock(request: tendermint.abci.IRequestBeginBlock): Promise<tendermint.abci.ResponseBeginBlock>;

            /**
             * Calls EndBlock.
             * @param request RequestEndBlock message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseEndBlock
             */
            public endBlock(request: tendermint.abci.IRequestEndBlock, callback: tendermint.abci.ABCIApplication.EndBlockCallback): void;

            /**
             * Calls EndBlock.
             * @param request RequestEndBlock message or plain object
             * @returns Promise
             */
            public endBlock(request: tendermint.abci.IRequestEndBlock): Promise<tendermint.abci.ResponseEndBlock>;

            /**
             * Calls ListSnapshots.
             * @param request RequestListSnapshots message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseListSnapshots
             */
            public listSnapshots(request: tendermint.abci.IRequestListSnapshots, callback: tendermint.abci.ABCIApplication.ListSnapshotsCallback): void;

            /**
             * Calls ListSnapshots.
             * @param request RequestListSnapshots message or plain object
             * @returns Promise
             */
            public listSnapshots(request: tendermint.abci.IRequestListSnapshots): Promise<tendermint.abci.ResponseListSnapshots>;

            /**
             * Calls OfferSnapshot.
             * @param request RequestOfferSnapshot message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseOfferSnapshot
             */
            public offerSnapshot(request: tendermint.abci.IRequestOfferSnapshot, callback: tendermint.abci.ABCIApplication.OfferSnapshotCallback): void;

            /**
             * Calls OfferSnapshot.
             * @param request RequestOfferSnapshot message or plain object
             * @returns Promise
             */
            public offerSnapshot(request: tendermint.abci.IRequestOfferSnapshot): Promise<tendermint.abci.ResponseOfferSnapshot>;

            /**
             * Calls LoadSnapshotChunk.
             * @param request RequestLoadSnapshotChunk message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseLoadSnapshotChunk
             */
            public loadSnapshotChunk(request: tendermint.abci.IRequestLoadSnapshotChunk, callback: tendermint.abci.ABCIApplication.LoadSnapshotChunkCallback): void;

            /**
             * Calls LoadSnapshotChunk.
             * @param request RequestLoadSnapshotChunk message or plain object
             * @returns Promise
             */
            public loadSnapshotChunk(request: tendermint.abci.IRequestLoadSnapshotChunk): Promise<tendermint.abci.ResponseLoadSnapshotChunk>;

            /**
             * Calls ApplySnapshotChunk.
             * @param request RequestApplySnapshotChunk message or plain object
             * @param callback Node-style callback called with the error, if any, and ResponseApplySnapshotChunk
             */
            public applySnapshotChunk(request: tendermint.abci.IRequestApplySnapshotChunk, callback: tendermint.abci.ABCIApplication.ApplySnapshotChunkCallback): void;

            /**
             * Calls ApplySnapshotChunk.
             * @param request RequestApplySnapshotChunk message or plain object
             * @returns Promise
             */
            public applySnapshotChunk(request: tendermint.abci.IRequestApplySnapshotChunk): Promise<tendermint.abci.ResponseApplySnapshotChunk>;
        }

        namespace ABCIApplication {

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#echo}.
             * @param error Error, if any
             * @param [response] ResponseEcho
             */
            type EchoCallback = (error: (Error|null), response?: tendermint.abci.ResponseEcho) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#flush}.
             * @param error Error, if any
             * @param [response] ResponseFlush
             */
            type FlushCallback = (error: (Error|null), response?: tendermint.abci.ResponseFlush) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#info}.
             * @param error Error, if any
             * @param [response] ResponseInfo
             */
            type InfoCallback = (error: (Error|null), response?: tendermint.abci.ResponseInfo) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#setOption}.
             * @param error Error, if any
             * @param [response] ResponseSetOption
             */
            type SetOptionCallback = (error: (Error|null), response?: tendermint.abci.ResponseSetOption) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#deliverTx}.
             * @param error Error, if any
             * @param [response] ResponseDeliverTx
             */
            type DeliverTxCallback = (error: (Error|null), response?: tendermint.abci.ResponseDeliverTx) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#checkTx}.
             * @param error Error, if any
             * @param [response] ResponseCheckTx
             */
            type CheckTxCallback = (error: (Error|null), response?: tendermint.abci.ResponseCheckTx) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#query}.
             * @param error Error, if any
             * @param [response] ResponseQuery
             */
            type QueryCallback = (error: (Error|null), response?: tendermint.abci.ResponseQuery) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#commit}.
             * @param error Error, if any
             * @param [response] ResponseCommit
             */
            type CommitCallback = (error: (Error|null), response?: tendermint.abci.ResponseCommit) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#initChain}.
             * @param error Error, if any
             * @param [response] ResponseInitChain
             */
            type InitChainCallback = (error: (Error|null), response?: tendermint.abci.ResponseInitChain) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#beginBlock}.
             * @param error Error, if any
             * @param [response] ResponseBeginBlock
             */
            type BeginBlockCallback = (error: (Error|null), response?: tendermint.abci.ResponseBeginBlock) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#endBlock}.
             * @param error Error, if any
             * @param [response] ResponseEndBlock
             */
            type EndBlockCallback = (error: (Error|null), response?: tendermint.abci.ResponseEndBlock) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#listSnapshots}.
             * @param error Error, if any
             * @param [response] ResponseListSnapshots
             */
            type ListSnapshotsCallback = (error: (Error|null), response?: tendermint.abci.ResponseListSnapshots) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#offerSnapshot}.
             * @param error Error, if any
             * @param [response] ResponseOfferSnapshot
             */
            type OfferSnapshotCallback = (error: (Error|null), response?: tendermint.abci.ResponseOfferSnapshot) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#loadSnapshotChunk}.
             * @param error Error, if any
             * @param [response] ResponseLoadSnapshotChunk
             */
            type LoadSnapshotChunkCallback = (error: (Error|null), response?: tendermint.abci.ResponseLoadSnapshotChunk) => void;

            /**
             * Callback as used by {@link tendermint.abci.ABCIApplication#applySnapshotChunk}.
             * @param error Error, if any
             * @param [response] ResponseApplySnapshotChunk
             */
            type ApplySnapshotChunkCallback = (error: (Error|null), response?: tendermint.abci.ResponseApplySnapshotChunk) => void;
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Properties of a PublicKey. */
        interface IPublicKey {

            /** PublicKey ed25519 */
            ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1 */
            secp256k1?: (Uint8Array|null);
        }

        /** Represents a PublicKey. */
        class PublicKey implements IPublicKey {

            /**
             * Constructs a new PublicKey.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IPublicKey);

            /** PublicKey ed25519. */
            public ed25519: Uint8Array;

            /** PublicKey secp256k1. */
            public secp256k1: Uint8Array;

            /** PublicKey sum. */
            public sum?: ("ed25519"|"secp256k1");

            /**
             * Encodes the specified PublicKey message. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PublicKey message, length delimited. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PublicKey message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.PublicKey;

            /**
             * Decodes a PublicKey message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.PublicKey;

            /**
             * Verifies a PublicKey message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PublicKey
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.PublicKey;

            /**
             * Creates a plain object from a PublicKey message. Also converts values to other types if specified.
             * @param message PublicKey
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.PublicKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PublicKey to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Proof. */
        interface IProof {

            /** Proof total */
            total?: (Long|null);

            /** Proof index */
            index?: (Long|null);

            /** Proof leaf_hash */
            leaf_hash?: (Uint8Array|null);

            /** Proof aunts */
            aunts?: (Uint8Array[]|null);
        }

        /** Represents a Proof. */
        class Proof implements IProof {

            /**
             * Constructs a new Proof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProof);

            /** Proof total. */
            public total: Long;

            /** Proof index. */
            public index: Long;

            /** Proof leaf_hash. */
            public leaf_hash: Uint8Array;

            /** Proof aunts. */
            public aunts: Uint8Array[];

            /**
             * Encodes the specified Proof message. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proof message, length delimited. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.Proof;

            /**
             * Decodes a Proof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.Proof;

            /**
             * Verifies a Proof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.Proof;

            /**
             * Creates a plain object from a Proof message. Also converts values to other types if specified.
             * @param message Proof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.Proof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValueOp. */
        interface IValueOp {

            /** ValueOp key */
            key?: (Uint8Array|null);

            /** ValueOp proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a ValueOp. */
        class ValueOp implements IValueOp {

            /**
             * Constructs a new ValueOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IValueOp);

            /** ValueOp key. */
            public key: Uint8Array;

            /** ValueOp proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified ValueOp message. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValueOp message, length delimited. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValueOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ValueOp;

            /**
             * Decodes a ValueOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ValueOp;

            /**
             * Verifies a ValueOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValueOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValueOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ValueOp;

            /**
             * Creates a plain object from a ValueOp message. Also converts values to other types if specified.
             * @param message ValueOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ValueOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValueOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DominoOp. */
        interface IDominoOp {

            /** DominoOp key */
            key?: (string|null);

            /** DominoOp input */
            input?: (string|null);

            /** DominoOp output */
            output?: (string|null);
        }

        /** Represents a DominoOp. */
        class DominoOp implements IDominoOp {

            /**
             * Constructs a new DominoOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IDominoOp);

            /** DominoOp key. */
            public key: string;

            /** DominoOp input. */
            public input: string;

            /** DominoOp output. */
            public output: string;

            /**
             * Encodes the specified DominoOp message. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DominoOp message, length delimited. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DominoOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.DominoOp;

            /**
             * Decodes a DominoOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.DominoOp;

            /**
             * Verifies a DominoOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DominoOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DominoOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.DominoOp;

            /**
             * Creates a plain object from a DominoOp message. Also converts values to other types if specified.
             * @param message DominoOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.DominoOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DominoOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOp. */
        interface IProofOp {

            /** ProofOp type */
            type?: (string|null);

            /** ProofOp key */
            key?: (Uint8Array|null);

            /** ProofOp data */
            data?: (Uint8Array|null);
        }

        /** Represents a ProofOp. */
        class ProofOp implements IProofOp {

            /**
             * Constructs a new ProofOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOp);

            /** ProofOp type. */
            public type: string;

            /** ProofOp key. */
            public key: Uint8Array;

            /** ProofOp data. */
            public data: Uint8Array;

            /**
             * Encodes the specified ProofOp message. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOp message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOp;

            /**
             * Decodes a ProofOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOp;

            /**
             * Verifies a ProofOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOp;

            /**
             * Creates a plain object from a ProofOp message. Also converts values to other types if specified.
             * @param message ProofOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOps. */
        interface IProofOps {

            /** ProofOps ops */
            ops?: (tendermint.crypto.IProofOp[]|null);
        }

        /** Represents a ProofOps. */
        class ProofOps implements IProofOps {

            /**
             * Constructs a new ProofOps.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOps);

            /** ProofOps ops. */
            public ops: tendermint.crypto.IProofOp[];

            /**
             * Encodes the specified ProofOps message. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOps message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOps;

            /**
             * Decodes a ProofOps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOps;

            /**
             * Verifies a ProofOps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOps
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOps;

            /**
             * Creates a plain object from a ProofOps message. Also converts values to other types if specified.
             * @param message ProofOps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOps, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace libs. */
    namespace libs {

        /** Namespace bits. */
        namespace bits {

            /** Properties of a BitArray. */
            interface IBitArray {

                /** BitArray bits */
                bits?: (Long|null);

                /** BitArray elems */
                elems?: (Long[]|null);
            }

            /** Represents a BitArray. */
            class BitArray implements IBitArray {

                /**
                 * Constructs a new BitArray.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: tendermint.libs.bits.IBitArray);

                /** BitArray bits. */
                public bits: Long;

                /** BitArray elems. */
                public elems: Long[];

                /**
                 * Encodes the specified BitArray message. Does not implicitly {@link tendermint.libs.bits.BitArray.verify|verify} messages.
                 * @param message BitArray message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: tendermint.libs.bits.IBitArray, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BitArray message, length delimited. Does not implicitly {@link tendermint.libs.bits.BitArray.verify|verify} messages.
                 * @param message BitArray message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: tendermint.libs.bits.IBitArray, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BitArray message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BitArray
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.libs.bits.BitArray;

                /**
                 * Decodes a BitArray message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BitArray
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.libs.bits.BitArray;

                /**
                 * Verifies a BitArray message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BitArray message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BitArray
                 */
                public static fromObject(object: { [k: string]: any }): tendermint.libs.bits.BitArray;

                /**
                 * Creates a plain object from a BitArray message. Also converts values to other types if specified.
                 * @param message BitArray
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: tendermint.libs.bits.BitArray, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BitArray to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace p2p. */
    namespace p2p {

        /** Properties of a NetAddress. */
        interface INetAddress {

            /** NetAddress id */
            id?: (string|null);

            /** NetAddress ip */
            ip?: (string|null);

            /** NetAddress port */
            port?: (number|null);
        }

        /** Represents a NetAddress. */
        class NetAddress implements INetAddress {

            /**
             * Constructs a new NetAddress.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.p2p.INetAddress);

            /** NetAddress id. */
            public id: string;

            /** NetAddress ip. */
            public ip: string;

            /** NetAddress port. */
            public port: number;

            /**
             * Encodes the specified NetAddress message. Does not implicitly {@link tendermint.p2p.NetAddress.verify|verify} messages.
             * @param message NetAddress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.p2p.INetAddress, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NetAddress message, length delimited. Does not implicitly {@link tendermint.p2p.NetAddress.verify|verify} messages.
             * @param message NetAddress message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.p2p.INetAddress, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NetAddress message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NetAddress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.p2p.NetAddress;

            /**
             * Decodes a NetAddress message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NetAddress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.p2p.NetAddress;

            /**
             * Verifies a NetAddress message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NetAddress message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NetAddress
             */
            public static fromObject(object: { [k: string]: any }): tendermint.p2p.NetAddress;

            /**
             * Creates a plain object from a NetAddress message. Also converts values to other types if specified.
             * @param message NetAddress
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.p2p.NetAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NetAddress to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProtocolVersion. */
        interface IProtocolVersion {

            /** ProtocolVersion p2p */
            p2p?: (Long|null);

            /** ProtocolVersion block */
            block?: (Long|null);

            /** ProtocolVersion app */
            app?: (Long|null);
        }

        /** Represents a ProtocolVersion. */
        class ProtocolVersion implements IProtocolVersion {

            /**
             * Constructs a new ProtocolVersion.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.p2p.IProtocolVersion);

            /** ProtocolVersion p2p. */
            public p2p: Long;

            /** ProtocolVersion block. */
            public block: Long;

            /** ProtocolVersion app. */
            public app: Long;

            /**
             * Encodes the specified ProtocolVersion message. Does not implicitly {@link tendermint.p2p.ProtocolVersion.verify|verify} messages.
             * @param message ProtocolVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.p2p.IProtocolVersion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProtocolVersion message, length delimited. Does not implicitly {@link tendermint.p2p.ProtocolVersion.verify|verify} messages.
             * @param message ProtocolVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.p2p.IProtocolVersion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProtocolVersion message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProtocolVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.p2p.ProtocolVersion;

            /**
             * Decodes a ProtocolVersion message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProtocolVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.p2p.ProtocolVersion;

            /**
             * Verifies a ProtocolVersion message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProtocolVersion message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProtocolVersion
             */
            public static fromObject(object: { [k: string]: any }): tendermint.p2p.ProtocolVersion;

            /**
             * Creates a plain object from a ProtocolVersion message. Also converts values to other types if specified.
             * @param message ProtocolVersion
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.p2p.ProtocolVersion, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProtocolVersion to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DefaultNodeInfo. */
        interface IDefaultNodeInfo {

            /** DefaultNodeInfo protocol_version */
            protocol_version?: (tendermint.p2p.IProtocolVersion|null);

            /** DefaultNodeInfo default_node_id */
            default_node_id?: (string|null);

            /** DefaultNodeInfo listen_addr */
            listen_addr?: (string|null);

            /** DefaultNodeInfo network */
            network?: (string|null);

            /** DefaultNodeInfo version */
            version?: (string|null);

            /** DefaultNodeInfo channels */
            channels?: (Uint8Array|null);

            /** DefaultNodeInfo moniker */
            moniker?: (string|null);

            /** DefaultNodeInfo other */
            other?: (tendermint.p2p.IDefaultNodeInfoOther|null);
        }

        /** Represents a DefaultNodeInfo. */
        class DefaultNodeInfo implements IDefaultNodeInfo {

            /**
             * Constructs a new DefaultNodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.p2p.IDefaultNodeInfo);

            /** DefaultNodeInfo protocol_version. */
            public protocol_version?: (tendermint.p2p.IProtocolVersion|null);

            /** DefaultNodeInfo default_node_id. */
            public default_node_id: string;

            /** DefaultNodeInfo listen_addr. */
            public listen_addr: string;

            /** DefaultNodeInfo network. */
            public network: string;

            /** DefaultNodeInfo version. */
            public version: string;

            /** DefaultNodeInfo channels. */
            public channels: Uint8Array;

            /** DefaultNodeInfo moniker. */
            public moniker: string;

            /** DefaultNodeInfo other. */
            public other?: (tendermint.p2p.IDefaultNodeInfoOther|null);

            /**
             * Encodes the specified DefaultNodeInfo message. Does not implicitly {@link tendermint.p2p.DefaultNodeInfo.verify|verify} messages.
             * @param message DefaultNodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.p2p.IDefaultNodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DefaultNodeInfo message, length delimited. Does not implicitly {@link tendermint.p2p.DefaultNodeInfo.verify|verify} messages.
             * @param message DefaultNodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.p2p.IDefaultNodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DefaultNodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DefaultNodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.p2p.DefaultNodeInfo;

            /**
             * Decodes a DefaultNodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DefaultNodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.p2p.DefaultNodeInfo;

            /**
             * Verifies a DefaultNodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DefaultNodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DefaultNodeInfo
             */
            public static fromObject(object: { [k: string]: any }): tendermint.p2p.DefaultNodeInfo;

            /**
             * Creates a plain object from a DefaultNodeInfo message. Also converts values to other types if specified.
             * @param message DefaultNodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.p2p.DefaultNodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DefaultNodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DefaultNodeInfoOther. */
        interface IDefaultNodeInfoOther {

            /** DefaultNodeInfoOther tx_index */
            tx_index?: (string|null);

            /** DefaultNodeInfoOther rpc_address */
            rpc_address?: (string|null);
        }

        /** Represents a DefaultNodeInfoOther. */
        class DefaultNodeInfoOther implements IDefaultNodeInfoOther {

            /**
             * Constructs a new DefaultNodeInfoOther.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.p2p.IDefaultNodeInfoOther);

            /** DefaultNodeInfoOther tx_index. */
            public tx_index: string;

            /** DefaultNodeInfoOther rpc_address. */
            public rpc_address: string;

            /**
             * Encodes the specified DefaultNodeInfoOther message. Does not implicitly {@link tendermint.p2p.DefaultNodeInfoOther.verify|verify} messages.
             * @param message DefaultNodeInfoOther message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.p2p.IDefaultNodeInfoOther, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DefaultNodeInfoOther message, length delimited. Does not implicitly {@link tendermint.p2p.DefaultNodeInfoOther.verify|verify} messages.
             * @param message DefaultNodeInfoOther message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.p2p.IDefaultNodeInfoOther, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DefaultNodeInfoOther message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DefaultNodeInfoOther
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.p2p.DefaultNodeInfoOther;

            /**
             * Decodes a DefaultNodeInfoOther message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DefaultNodeInfoOther
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.p2p.DefaultNodeInfoOther;

            /**
             * Verifies a DefaultNodeInfoOther message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DefaultNodeInfoOther message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DefaultNodeInfoOther
             */
            public static fromObject(object: { [k: string]: any }): tendermint.p2p.DefaultNodeInfoOther;

            /**
             * Creates a plain object from a DefaultNodeInfoOther message. Also converts values to other types if specified.
             * @param message DefaultNodeInfoOther
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.p2p.DefaultNodeInfoOther, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DefaultNodeInfoOther to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace types. */
    namespace types {

        /** Properties of a ConsensusParams. */
        interface IConsensusParams {

            /** ConsensusParams block */
            block?: (tendermint.types.IBlockParams|null);

            /** ConsensusParams evidence */
            evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator */
            validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version */
            version?: (tendermint.types.IVersionParams|null);
        }

        /** Represents a ConsensusParams. */
        class ConsensusParams implements IConsensusParams {

            /**
             * Constructs a new ConsensusParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IConsensusParams);

            /** ConsensusParams block. */
            public block?: (tendermint.types.IBlockParams|null);

            /** ConsensusParams evidence. */
            public evidence?: (tendermint.types.IEvidenceParams|null);

            /** ConsensusParams validator. */
            public validator?: (tendermint.types.IValidatorParams|null);

            /** ConsensusParams version. */
            public version?: (tendermint.types.IVersionParams|null);

            /**
             * Encodes the specified ConsensusParams message. Does not implicitly {@link tendermint.types.ConsensusParams.verify|verify} messages.
             * @param message ConsensusParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IConsensusParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConsensusParams message, length delimited. Does not implicitly {@link tendermint.types.ConsensusParams.verify|verify} messages.
             * @param message ConsensusParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IConsensusParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.ConsensusParams;

            /**
             * Decodes a ConsensusParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConsensusParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.ConsensusParams;

            /**
             * Verifies a ConsensusParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConsensusParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConsensusParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.ConsensusParams;

            /**
             * Creates a plain object from a ConsensusParams message. Also converts values to other types if specified.
             * @param message ConsensusParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.ConsensusParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConsensusParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockParams. */
        interface IBlockParams {

            /** BlockParams max_bytes */
            max_bytes?: (Long|null);

            /** BlockParams max_gas */
            max_gas?: (Long|null);

            /** BlockParams time_iota_ms */
            time_iota_ms?: (Long|null);
        }

        /** Represents a BlockParams. */
        class BlockParams implements IBlockParams {

            /**
             * Constructs a new BlockParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockParams);

            /** BlockParams max_bytes. */
            public max_bytes: Long;

            /** BlockParams max_gas. */
            public max_gas: Long;

            /** BlockParams time_iota_ms. */
            public time_iota_ms: Long;

            /**
             * Encodes the specified BlockParams message. Does not implicitly {@link tendermint.types.BlockParams.verify|verify} messages.
             * @param message BlockParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockParams message, length delimited. Does not implicitly {@link tendermint.types.BlockParams.verify|verify} messages.
             * @param message BlockParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockParams;

            /**
             * Decodes a BlockParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockParams;

            /**
             * Verifies a BlockParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockParams;

            /**
             * Creates a plain object from a BlockParams message. Also converts values to other types if specified.
             * @param message BlockParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EvidenceParams. */
        interface IEvidenceParams {

            /** EvidenceParams max_age_num_blocks */
            max_age_num_blocks?: (Long|null);

            /** EvidenceParams max_age_duration */
            max_age_duration?: (google.protobuf.IDuration|null);

            /** EvidenceParams max_bytes */
            max_bytes?: (Long|null);
        }

        /** Represents an EvidenceParams. */
        class EvidenceParams implements IEvidenceParams {

            /**
             * Constructs a new EvidenceParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IEvidenceParams);

            /** EvidenceParams max_age_num_blocks. */
            public max_age_num_blocks: Long;

            /** EvidenceParams max_age_duration. */
            public max_age_duration?: (google.protobuf.IDuration|null);

            /** EvidenceParams max_bytes. */
            public max_bytes: Long;

            /**
             * Encodes the specified EvidenceParams message. Does not implicitly {@link tendermint.types.EvidenceParams.verify|verify} messages.
             * @param message EvidenceParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IEvidenceParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EvidenceParams message, length delimited. Does not implicitly {@link tendermint.types.EvidenceParams.verify|verify} messages.
             * @param message EvidenceParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IEvidenceParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EvidenceParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EvidenceParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.EvidenceParams;

            /**
             * Decodes an EvidenceParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EvidenceParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.EvidenceParams;

            /**
             * Verifies an EvidenceParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EvidenceParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EvidenceParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.EvidenceParams;

            /**
             * Creates a plain object from an EvidenceParams message. Also converts values to other types if specified.
             * @param message EvidenceParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.EvidenceParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EvidenceParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValidatorParams. */
        interface IValidatorParams {

            /** ValidatorParams pub_key_types */
            pub_key_types?: (string[]|null);
        }

        /** Represents a ValidatorParams. */
        class ValidatorParams implements IValidatorParams {

            /**
             * Constructs a new ValidatorParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidatorParams);

            /** ValidatorParams pub_key_types. */
            public pub_key_types: string[];

            /**
             * Encodes the specified ValidatorParams message. Does not implicitly {@link tendermint.types.ValidatorParams.verify|verify} messages.
             * @param message ValidatorParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidatorParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValidatorParams message, length delimited. Does not implicitly {@link tendermint.types.ValidatorParams.verify|verify} messages.
             * @param message ValidatorParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidatorParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValidatorParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.ValidatorParams;

            /**
             * Decodes a ValidatorParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValidatorParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.ValidatorParams;

            /**
             * Verifies a ValidatorParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValidatorParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValidatorParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.ValidatorParams;

            /**
             * Creates a plain object from a ValidatorParams message. Also converts values to other types if specified.
             * @param message ValidatorParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.ValidatorParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValidatorParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a VersionParams. */
        interface IVersionParams {

            /** VersionParams app_version */
            app_version?: (Long|null);
        }

        /** Represents a VersionParams. */
        class VersionParams implements IVersionParams {

            /**
             * Constructs a new VersionParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IVersionParams);

            /** VersionParams app_version. */
            public app_version: Long;

            /**
             * Encodes the specified VersionParams message. Does not implicitly {@link tendermint.types.VersionParams.verify|verify} messages.
             * @param message VersionParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IVersionParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VersionParams message, length delimited. Does not implicitly {@link tendermint.types.VersionParams.verify|verify} messages.
             * @param message VersionParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IVersionParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VersionParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VersionParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.VersionParams;

            /**
             * Decodes a VersionParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VersionParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.VersionParams;

            /**
             * Verifies a VersionParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VersionParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VersionParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.VersionParams;

            /**
             * Creates a plain object from a VersionParams message. Also converts values to other types if specified.
             * @param message VersionParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.VersionParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VersionParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HashedParams. */
        interface IHashedParams {

            /** HashedParams block_max_bytes */
            block_max_bytes?: (Long|null);

            /** HashedParams block_max_gas */
            block_max_gas?: (Long|null);
        }

        /** Represents a HashedParams. */
        class HashedParams implements IHashedParams {

            /**
             * Constructs a new HashedParams.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IHashedParams);

            /** HashedParams block_max_bytes. */
            public block_max_bytes: Long;

            /** HashedParams block_max_gas. */
            public block_max_gas: Long;

            /**
             * Encodes the specified HashedParams message. Does not implicitly {@link tendermint.types.HashedParams.verify|verify} messages.
             * @param message HashedParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IHashedParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HashedParams message, length delimited. Does not implicitly {@link tendermint.types.HashedParams.verify|verify} messages.
             * @param message HashedParams message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IHashedParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HashedParams message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HashedParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.HashedParams;

            /**
             * Decodes a HashedParams message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HashedParams
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.HashedParams;

            /**
             * Verifies a HashedParams message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HashedParams message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HashedParams
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.HashedParams;

            /**
             * Creates a plain object from a HashedParams message. Also converts values to other types if specified.
             * @param message HashedParams
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.HashedParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HashedParams to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Evidence. */
        interface IEvidence {

            /** Evidence duplicate_vote_evidence */
            duplicate_vote_evidence?: (tendermint.types.IDuplicateVoteEvidence|null);

            /** Evidence light_client_attack_evidence */
            light_client_attack_evidence?: (tendermint.types.ILightClientAttackEvidence|null);
        }

        /** Represents an Evidence. */
        class Evidence implements IEvidence {

            /**
             * Constructs a new Evidence.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IEvidence);

            /** Evidence duplicate_vote_evidence. */
            public duplicate_vote_evidence?: (tendermint.types.IDuplicateVoteEvidence|null);

            /** Evidence light_client_attack_evidence. */
            public light_client_attack_evidence?: (tendermint.types.ILightClientAttackEvidence|null);

            /** Evidence sum. */
            public sum?: ("duplicate_vote_evidence"|"light_client_attack_evidence");

            /**
             * Encodes the specified Evidence message. Does not implicitly {@link tendermint.types.Evidence.verify|verify} messages.
             * @param message Evidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Evidence message, length delimited. Does not implicitly {@link tendermint.types.Evidence.verify|verify} messages.
             * @param message Evidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Evidence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Evidence;

            /**
             * Decodes an Evidence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Evidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Evidence;

            /**
             * Verifies an Evidence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Evidence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Evidence
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Evidence;

            /**
             * Creates a plain object from an Evidence message. Also converts values to other types if specified.
             * @param message Evidence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Evidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Evidence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DuplicateVoteEvidence. */
        interface IDuplicateVoteEvidence {

            /** DuplicateVoteEvidence vote_a */
            vote_a?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence vote_b */
            vote_b?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence total_voting_power */
            total_voting_power?: (Long|null);

            /** DuplicateVoteEvidence validator_power */
            validator_power?: (Long|null);

            /** DuplicateVoteEvidence timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents a DuplicateVoteEvidence. */
        class DuplicateVoteEvidence implements IDuplicateVoteEvidence {

            /**
             * Constructs a new DuplicateVoteEvidence.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IDuplicateVoteEvidence);

            /** DuplicateVoteEvidence vote_a. */
            public vote_a?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence vote_b. */
            public vote_b?: (tendermint.types.IVote|null);

            /** DuplicateVoteEvidence total_voting_power. */
            public total_voting_power: Long;

            /** DuplicateVoteEvidence validator_power. */
            public validator_power: Long;

            /** DuplicateVoteEvidence timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified DuplicateVoteEvidence message. Does not implicitly {@link tendermint.types.DuplicateVoteEvidence.verify|verify} messages.
             * @param message DuplicateVoteEvidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IDuplicateVoteEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DuplicateVoteEvidence message, length delimited. Does not implicitly {@link tendermint.types.DuplicateVoteEvidence.verify|verify} messages.
             * @param message DuplicateVoteEvidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IDuplicateVoteEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DuplicateVoteEvidence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DuplicateVoteEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.DuplicateVoteEvidence;

            /**
             * Decodes a DuplicateVoteEvidence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DuplicateVoteEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.DuplicateVoteEvidence;

            /**
             * Verifies a DuplicateVoteEvidence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DuplicateVoteEvidence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DuplicateVoteEvidence
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.DuplicateVoteEvidence;

            /**
             * Creates a plain object from a DuplicateVoteEvidence message. Also converts values to other types if specified.
             * @param message DuplicateVoteEvidence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.DuplicateVoteEvidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DuplicateVoteEvidence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LightClientAttackEvidence. */
        interface ILightClientAttackEvidence {

            /** LightClientAttackEvidence conflicting_block */
            conflicting_block?: (tendermint.types.ILightBlock|null);

            /** LightClientAttackEvidence common_height */
            common_height?: (Long|null);

            /** LightClientAttackEvidence byzantine_validators */
            byzantine_validators?: (tendermint.types.IValidator[]|null);

            /** LightClientAttackEvidence total_voting_power */
            total_voting_power?: (Long|null);

            /** LightClientAttackEvidence timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents a LightClientAttackEvidence. */
        class LightClientAttackEvidence implements ILightClientAttackEvidence {

            /**
             * Constructs a new LightClientAttackEvidence.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ILightClientAttackEvidence);

            /** LightClientAttackEvidence conflicting_block. */
            public conflicting_block?: (tendermint.types.ILightBlock|null);

            /** LightClientAttackEvidence common_height. */
            public common_height: Long;

            /** LightClientAttackEvidence byzantine_validators. */
            public byzantine_validators: tendermint.types.IValidator[];

            /** LightClientAttackEvidence total_voting_power. */
            public total_voting_power: Long;

            /** LightClientAttackEvidence timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified LightClientAttackEvidence message. Does not implicitly {@link tendermint.types.LightClientAttackEvidence.verify|verify} messages.
             * @param message LightClientAttackEvidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ILightClientAttackEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LightClientAttackEvidence message, length delimited. Does not implicitly {@link tendermint.types.LightClientAttackEvidence.verify|verify} messages.
             * @param message LightClientAttackEvidence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ILightClientAttackEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightClientAttackEvidence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LightClientAttackEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.LightClientAttackEvidence;

            /**
             * Decodes a LightClientAttackEvidence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LightClientAttackEvidence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.LightClientAttackEvidence;

            /**
             * Verifies a LightClientAttackEvidence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LightClientAttackEvidence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LightClientAttackEvidence
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.LightClientAttackEvidence;

            /**
             * Creates a plain object from a LightClientAttackEvidence message. Also converts values to other types if specified.
             * @param message LightClientAttackEvidence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.LightClientAttackEvidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LightClientAttackEvidence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EvidenceList. */
        interface IEvidenceList {

            /** EvidenceList evidence */
            evidence?: (tendermint.types.IEvidence[]|null);
        }

        /** Represents an EvidenceList. */
        class EvidenceList implements IEvidenceList {

            /**
             * Constructs a new EvidenceList.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IEvidenceList);

            /** EvidenceList evidence. */
            public evidence: tendermint.types.IEvidence[];

            /**
             * Encodes the specified EvidenceList message. Does not implicitly {@link tendermint.types.EvidenceList.verify|verify} messages.
             * @param message EvidenceList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IEvidenceList, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EvidenceList message, length delimited. Does not implicitly {@link tendermint.types.EvidenceList.verify|verify} messages.
             * @param message EvidenceList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IEvidenceList, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EvidenceList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EvidenceList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.EvidenceList;

            /**
             * Decodes an EvidenceList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EvidenceList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.EvidenceList;

            /**
             * Verifies an EvidenceList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EvidenceList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EvidenceList
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.EvidenceList;

            /**
             * Creates a plain object from an EvidenceList message. Also converts values to other types if specified.
             * @param message EvidenceList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.EvidenceList, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EvidenceList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Block. */
        interface IBlock {

            /** Block header */
            header?: (tendermint.types.IHeader|null);

            /** Block data */
            data?: (tendermint.types.IData|null);

            /** Block evidence */
            evidence?: (tendermint.types.IEvidenceList|null);

            /** Block last_commit */
            last_commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a Block. */
        class Block implements IBlock {

            /**
             * Constructs a new Block.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlock);

            /** Block header. */
            public header?: (tendermint.types.IHeader|null);

            /** Block data. */
            public data?: (tendermint.types.IData|null);

            /** Block evidence. */
            public evidence?: (tendermint.types.IEvidenceList|null);

            /** Block last_commit. */
            public last_commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified Block message. Does not implicitly {@link tendermint.types.Block.verify|verify} messages.
             * @param message Block message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Block message, length delimited. Does not implicitly {@link tendermint.types.Block.verify|verify} messages.
             * @param message Block message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Block message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Block
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Block;

            /**
             * Decodes a Block message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Block
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Block;

            /**
             * Verifies a Block message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Block message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Block
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Block;

            /**
             * Creates a plain object from a Block message. Also converts values to other types if specified.
             * @param message Block
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Block, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Block to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValidatorSet. */
        interface IValidatorSet {

            /** ValidatorSet validators */
            validators?: (tendermint.types.IValidator[]|null);

            /** ValidatorSet proposer */
            proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents a ValidatorSet. */
        class ValidatorSet implements IValidatorSet {

            /**
             * Constructs a new ValidatorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidatorSet);

            /** ValidatorSet validators. */
            public validators: tendermint.types.IValidator[];

            /** ValidatorSet proposer. */
            public proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified ValidatorSet message. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValidatorSet message, length delimited. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.ValidatorSet;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.ValidatorSet;

            /**
             * Verifies a ValidatorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValidatorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValidatorSet
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.ValidatorSet;

            /**
             * Creates a plain object from a ValidatorSet message. Also converts values to other types if specified.
             * @param message ValidatorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.ValidatorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValidatorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power */
            voting_power?: (Long|null);

            /** Validator proposer_priority */
            proposer_priority?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power. */
            public voting_power: Long;

            /** Validator proposer_priority. */
            public proposer_priority: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Validator message, length delimited. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Validator;

            /**
             * Decodes a Validator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Validator;

            /**
             * Verifies a Validator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Validator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Validator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Validator;

            /**
             * Creates a plain object from a Validator message. Also converts values to other types if specified.
             * @param message Validator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Validator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SimpleValidator. */
        interface ISimpleValidator {

            /** SimpleValidator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power */
            voting_power?: (Long|null);
        }

        /** Represents a SimpleValidator. */
        class SimpleValidator implements ISimpleValidator {

            /**
             * Constructs a new SimpleValidator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISimpleValidator);

            /** SimpleValidator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power. */
            public voting_power: Long;

            /**
             * Encodes the specified SimpleValidator message. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleValidator message, length delimited. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SimpleValidator;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SimpleValidator;

            /**
             * Verifies a SimpleValidator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleValidator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleValidator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SimpleValidator;

            /**
             * Creates a plain object from a SimpleValidator message. Also converts values to other types if specified.
             * @param message SimpleValidator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SimpleValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleValidator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** BlockIDFlag enum. */
        enum BlockIDFlag {
            BLOCK_ID_FLAG_UNKNOWN = 0,
            BLOCK_ID_FLAG_ABSENT = 1,
            BLOCK_ID_FLAG_COMMIT = 2,
            BLOCK_ID_FLAG_NIL = 3
        }

        /** SignedMsgType enum. */
        enum SignedMsgType {
            SIGNED_MSG_TYPE_UNKNOWN = 0,
            SIGNED_MSG_TYPE_PREVOTE = 1,
            SIGNED_MSG_TYPE_PRECOMMIT = 2,
            SIGNED_MSG_TYPE_PROPOSAL = 32
        }

        /** Properties of a PartSetHeader. */
        interface IPartSetHeader {

            /** PartSetHeader total */
            total?: (number|null);

            /** PartSetHeader hash */
            hash?: (Uint8Array|null);
        }

        /** Represents a PartSetHeader. */
        class PartSetHeader implements IPartSetHeader {

            /**
             * Constructs a new PartSetHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPartSetHeader);

            /** PartSetHeader total. */
            public total: number;

            /** PartSetHeader hash. */
            public hash: Uint8Array;

            /**
             * Encodes the specified PartSetHeader message. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PartSetHeader message, length delimited. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.PartSetHeader;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.PartSetHeader;

            /**
             * Verifies a PartSetHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PartSetHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PartSetHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.PartSetHeader;

            /**
             * Creates a plain object from a PartSetHeader message. Also converts values to other types if specified.
             * @param message PartSetHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.PartSetHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PartSetHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Part. */
        interface IPart {

            /** Part index */
            index?: (number|null);

            /** Part bytes */
            bytes?: (Uint8Array|null);

            /** Part proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a Part. */
        class Part implements IPart {

            /**
             * Constructs a new Part.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPart);

            /** Part index. */
            public index: number;

            /** Part bytes. */
            public bytes: Uint8Array;

            /** Part proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified Part message. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Part message, length delimited. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Part message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Part;

            /**
             * Decodes a Part message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Part;

            /**
             * Verifies a Part message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Part message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Part
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Part;

            /**
             * Creates a plain object from a Part message. Also converts values to other types if specified.
             * @param message Part
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Part, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Part to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockID. */
        interface IBlockID {

            /** BlockID hash */
            hash?: (Uint8Array|null);

            /** BlockID part_set_header */
            part_set_header?: (tendermint.types.IPartSetHeader|null);
        }

        /** Represents a BlockID. */
        class BlockID implements IBlockID {

            /**
             * Constructs a new BlockID.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockID);

            /** BlockID hash. */
            public hash: Uint8Array;

            /** BlockID part_set_header. */
            public part_set_header?: (tendermint.types.IPartSetHeader|null);

            /**
             * Encodes the specified BlockID message. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockID message, length delimited. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockID;

            /**
             * Decodes a BlockID message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockID;

            /**
             * Verifies a BlockID message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockID message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockID
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockID;

            /**
             * Creates a plain object from a BlockID message. Also converts values to other types if specified.
             * @param message BlockID
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockID, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockID to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header version */
            version?: (tendermint.version.IConsensus|null);

            /** Header chain_id */
            chain_id?: (string|null);

            /** Header height */
            height?: (Long|null);

            /** Header time */
            time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id */
            last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash */
            last_commit_hash?: (Uint8Array|null);

            /** Header data_hash */
            data_hash?: (Uint8Array|null);

            /** Header validators_hash */
            validators_hash?: (Uint8Array|null);

            /** Header next_validators_hash */
            next_validators_hash?: (Uint8Array|null);

            /** Header consensus_hash */
            consensus_hash?: (Uint8Array|null);

            /** Header app_hash */
            app_hash?: (Uint8Array|null);

            /** Header last_results_hash */
            last_results_hash?: (Uint8Array|null);

            /** Header evidence_hash */
            evidence_hash?: (Uint8Array|null);

            /** Header proposer_address */
            proposer_address?: (Uint8Array|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IHeader);

            /** Header version. */
            public version?: (tendermint.version.IConsensus|null);

            /** Header chain_id. */
            public chain_id: string;

            /** Header height. */
            public height: Long;

            /** Header time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id. */
            public last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash. */
            public last_commit_hash: Uint8Array;

            /** Header data_hash. */
            public data_hash: Uint8Array;

            /** Header validators_hash. */
            public validators_hash: Uint8Array;

            /** Header next_validators_hash. */
            public next_validators_hash: Uint8Array;

            /** Header consensus_hash. */
            public consensus_hash: Uint8Array;

            /** Header app_hash. */
            public app_hash: Uint8Array;

            /** Header last_results_hash. */
            public last_results_hash: Uint8Array;

            /** Header evidence_hash. */
            public evidence_hash: Uint8Array;

            /** Header proposer_address. */
            public proposer_address: Uint8Array;

            /**
             * Encodes the specified Header message. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Header message, length delimited. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Header;

            /**
             * Decodes a Header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Header;

            /**
             * Verifies a Header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Header
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Header;

            /**
             * Creates a plain object from a Header message. Also converts values to other types if specified.
             * @param message Header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Data. */
        interface IData {

            /** Data txs */
            txs?: (Uint8Array[]|null);
        }

        /** Represents a Data. */
        class Data implements IData {

            /**
             * Constructs a new Data.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IData);

            /** Data txs. */
            public txs: Uint8Array[];

            /**
             * Encodes the specified Data message. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Data message, length delimited. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Data;

            /**
             * Decodes a Data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Data;

            /**
             * Verifies a Data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Data
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Data;

            /**
             * Creates a plain object from a Data message. Also converts values to other types if specified.
             * @param message Data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Vote. */
        interface IVote {

            /** Vote type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Vote height */
            height?: (Long|null);

            /** Vote round */
            round?: (number|null);

            /** Vote block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address */
            validator_address?: (Uint8Array|null);

            /** Vote validator_index */
            validator_index?: (number|null);

            /** Vote signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Vote. */
        class Vote implements IVote {

            /**
             * Constructs a new Vote.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IVote);

            /** Vote type. */
            public type: tendermint.types.SignedMsgType;

            /** Vote height. */
            public height: Long;

            /** Vote round. */
            public round: number;

            /** Vote block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address. */
            public validator_address: Uint8Array;

            /** Vote validator_index. */
            public validator_index: number;

            /** Vote signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Vote message. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vote message, length delimited. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vote message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Vote;

            /**
             * Decodes a Vote message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Vote;

            /**
             * Verifies a Vote message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vote message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vote
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Vote;

            /**
             * Creates a plain object from a Vote message. Also converts values to other types if specified.
             * @param message Vote
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vote to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Commit. */
        interface ICommit {

            /** Commit height */
            height?: (Long|null);

            /** Commit round */
            round?: (number|null);

            /** Commit block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures */
            signatures?: (tendermint.types.ICommitSig[]|null);
        }

        /** Represents a Commit. */
        class Commit implements ICommit {

            /**
             * Constructs a new Commit.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommit);

            /** Commit height. */
            public height: Long;

            /** Commit round. */
            public round: number;

            /** Commit block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures. */
            public signatures: tendermint.types.ICommitSig[];

            /**
             * Encodes the specified Commit message. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Commit message, length delimited. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Commit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Commit;

            /**
             * Decodes a Commit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Commit;

            /**
             * Verifies a Commit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Commit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Commit
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Commit;

            /**
             * Creates a plain object from a Commit message. Also converts values to other types if specified.
             * @param message Commit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Commit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Commit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommitSig. */
        interface ICommitSig {

            /** CommitSig block_id_flag */
            block_id_flag?: (tendermint.types.BlockIDFlag|null);

            /** CommitSig validator_address */
            validator_address?: (Uint8Array|null);

            /** CommitSig timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a CommitSig. */
        class CommitSig implements ICommitSig {

            /**
             * Constructs a new CommitSig.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommitSig);

            /** CommitSig block_id_flag. */
            public block_id_flag: tendermint.types.BlockIDFlag;

            /** CommitSig validator_address. */
            public validator_address: Uint8Array;

            /** CommitSig timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified CommitSig message. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommitSig message, length delimited. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommitSig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.CommitSig;

            /**
             * Decodes a CommitSig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.CommitSig;

            /**
             * Verifies a CommitSig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommitSig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommitSig
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.CommitSig;

            /**
             * Creates a plain object from a CommitSig message. Also converts values to other types if specified.
             * @param message CommitSig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.CommitSig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommitSig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Proposal. */
        interface IProposal {

            /** Proposal type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Proposal height */
            height?: (Long|null);

            /** Proposal round */
            round?: (number|null);

            /** Proposal pol_round */
            pol_round?: (number|null);

            /** Proposal block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Proposal. */
        class Proposal implements IProposal {

            /**
             * Constructs a new Proposal.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IProposal);

            /** Proposal type. */
            public type: tendermint.types.SignedMsgType;

            /** Proposal height. */
            public height: Long;

            /** Proposal round. */
            public round: number;

            /** Proposal pol_round. */
            public pol_round: number;

            /** Proposal block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Proposal message. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proposal message, length delimited. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proposal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Proposal;

            /**
             * Decodes a Proposal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Proposal;

            /**
             * Verifies a Proposal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proposal
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Proposal;

            /**
             * Creates a plain object from a Proposal message. Also converts values to other types if specified.
             * @param message Proposal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proposal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SignedHeader. */
        interface ISignedHeader {

            /** SignedHeader header */
            header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit */
            commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a SignedHeader. */
        class SignedHeader implements ISignedHeader {

            /**
             * Constructs a new SignedHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISignedHeader);

            /** SignedHeader header. */
            public header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit. */
            public commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified SignedHeader message. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignedHeader message, length delimited. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SignedHeader;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SignedHeader;

            /**
             * Verifies a SignedHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignedHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignedHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SignedHeader;

            /**
             * Creates a plain object from a SignedHeader message. Also converts values to other types if specified.
             * @param message SignedHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SignedHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignedHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LightBlock. */
        interface ILightBlock {

            /** LightBlock signed_header */
            signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set */
            validator_set?: (tendermint.types.IValidatorSet|null);
        }

        /** Represents a LightBlock. */
        class LightBlock implements ILightBlock {

            /**
             * Constructs a new LightBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ILightBlock);

            /** LightBlock signed_header. */
            public signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set. */
            public validator_set?: (tendermint.types.IValidatorSet|null);

            /**
             * Encodes the specified LightBlock message. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LightBlock message, length delimited. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.LightBlock;

            /**
             * Decodes a LightBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.LightBlock;

            /**
             * Verifies a LightBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LightBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LightBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.LightBlock;

            /**
             * Creates a plain object from a LightBlock message. Also converts values to other types if specified.
             * @param message LightBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.LightBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LightBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockMeta. */
        interface IBlockMeta {

            /** BlockMeta block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size */
            block_size?: (Long|null);

            /** BlockMeta header */
            header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs */
            num_txs?: (Long|null);
        }

        /** Represents a BlockMeta. */
        class BlockMeta implements IBlockMeta {

            /**
             * Constructs a new BlockMeta.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockMeta);

            /** BlockMeta block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size. */
            public block_size: Long;

            /** BlockMeta header. */
            public header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs. */
            public num_txs: Long;

            /**
             * Encodes the specified BlockMeta message. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockMeta message, length delimited. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockMeta;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockMeta;

            /**
             * Verifies a BlockMeta message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockMeta message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockMeta
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockMeta;

            /**
             * Creates a plain object from a BlockMeta message. Also converts values to other types if specified.
             * @param message BlockMeta
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockMeta, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockMeta to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TxProof. */
        interface ITxProof {

            /** TxProof root_hash */
            root_hash?: (Uint8Array|null);

            /** TxProof data */
            data?: (Uint8Array|null);

            /** TxProof proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a TxProof. */
        class TxProof implements ITxProof {

            /**
             * Constructs a new TxProof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ITxProof);

            /** TxProof root_hash. */
            public root_hash: Uint8Array;

            /** TxProof data. */
            public data: Uint8Array;

            /** TxProof proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified TxProof message. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TxProof message, length delimited. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxProof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.TxProof;

            /**
             * Decodes a TxProof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.TxProof;

            /**
             * Verifies a TxProof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TxProof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TxProof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.TxProof;

            /**
             * Creates a plain object from a TxProof message. Also converts values to other types if specified.
             * @param message TxProof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.TxProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TxProof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace version. */
    namespace version {

        /** Properties of an App. */
        interface IApp {

            /** App protocol */
            protocol?: (Long|null);

            /** App software */
            software?: (string|null);
        }

        /** Represents an App. */
        class App implements IApp {

            /**
             * Constructs a new App.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IApp);

            /** App protocol. */
            public protocol: Long;

            /** App software. */
            public software: string;

            /**
             * Encodes the specified App message. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an App message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.App;

            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.App;

            /**
             * Verifies an App message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns App
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.App;

            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @param message App
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.App, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this App to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Consensus. */
        interface IConsensus {

            /** Consensus block */
            block?: (Long|null);

            /** Consensus app */
            app?: (Long|null);
        }

        /** Represents a Consensus. */
        class Consensus implements IConsensus {

            /**
             * Constructs a new Consensus.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IConsensus);

            /** Consensus block. */
            public block: Long;

            /** Consensus app. */
            public app: Long;

            /**
             * Encodes the specified Consensus message. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Consensus message, length delimited. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Consensus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.Consensus;

            /**
             * Decodes a Consensus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.Consensus;

            /**
             * Verifies a Consensus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Consensus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Consensus
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.Consensus;

            /**
             * Creates a plain object from a Consensus message. Also converts values to other types if specified.
             * @param message Consensus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.Consensus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Consensus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
